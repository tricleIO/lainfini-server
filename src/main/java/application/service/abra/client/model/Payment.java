/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Payment
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Payment   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Document_ID")
  private String documentID = null;

  @SerializedName("DocumentType")
  private String documentType = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("PDocument_ID")
  private String pDocumentID = null;

  @SerializedName("PDocumentType")
  private String pDocumentType = null;

  @SerializedName("Row_ID")
  private String rowID = null;

  @SerializedName("LocalAmount")
  private Double localAmount = null;

  @SerializedName("VATDate$DATE")
  private DateTime vATDateDATE = null;

  @SerializedName("TAmountWithoutVAT")
  private Double tAmountWithoutVAT = null;

  @SerializedName("LocalTAmountWithoutVAT")
  private Double localTAmountWithoutVAT = null;

  @SerializedName("TAmount")
  private Double tAmount = null;

  @SerializedName("LocalTAmount")
  private Double localTAmount = null;

  @SerializedName("LocalAmountWithoutVATEET")
  private Double localAmountWithoutVATEET = null;

  @SerializedName("LocalAmountEET")
  private Double localAmountEET = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Payment documentID(String documentID) {
    this.documentID = documentID;
    return this;
  }

   /**
   * Plateb.dokl.; ID objektu Dokument [persistentní položka]
   * @return documentID
  **/
  @ApiModelProperty(example = "null", value = "Plateb.dokl.; ID objektu Dokument [persistentní položka]")
  public String getDocumentID() {
    return documentID;
  }

  public void setDocumentID(String documentID) {
    this.documentID = documentID;
  }

  public Payment documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Typ plateb.dokl. [persistentní položka]
   * @return documentType
  **/
  @ApiModelProperty(example = "null", value = "Typ plateb.dokl. [persistentní položka]")
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }

  public Payment amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Payment pDocumentID(String pDocumentID) {
    this.pDocumentID = pDocumentID;
    return this;
  }

   /**
   * Plac.dokl.; ID objektu Dokument [persistentní položka]
   * @return pDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Plac.dokl.; ID objektu Dokument [persistentní položka]")
  public String getPDocumentID() {
    return pDocumentID;
  }

  public void setPDocumentID(String pDocumentID) {
    this.pDocumentID = pDocumentID;
  }

  public Payment pDocumentType(String pDocumentType) {
    this.pDocumentType = pDocumentType;
    return this;
  }

   /**
   * Typ plac.dokl. [persistentní položka]
   * @return pDocumentType
  **/
  @ApiModelProperty(example = "null", value = "Typ plac.dokl. [persistentní položka]")
  public String getPDocumentType() {
    return pDocumentType;
  }

  public void setPDocumentType(String pDocumentType) {
    this.pDocumentType = pDocumentType;
  }

  public Payment rowID(String rowID) {
    this.rowID = rowID;
    return this;
  }

   /**
   * Řádek plac.dokl.; ID objektu Řádek [persistentní položka]
   * @return rowID
  **/
  @ApiModelProperty(example = "null", value = "Řádek plac.dokl.; ID objektu Řádek [persistentní položka]")
  public String getRowID() {
    return rowID;
  }

  public void setRowID(String rowID) {
    this.rowID = rowID;
  }

  public Payment localAmount(Double localAmount) {
    this.localAmount = localAmount;
    return this;
  }

   /**
   * Částka (lok.) [persistentní položka]
   * @return localAmount
  **/
  @ApiModelProperty(example = "null", value = "Částka (lok.) [persistentní položka]")
  public Double getLocalAmount() {
    return localAmount;
  }

  public void setLocalAmount(Double localAmount) {
    this.localAmount = localAmount;
  }

  public Payment vATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
    return this;
  }

   /**
   * Datum plnění/odpočtu [persistentní položka]
   * @return vATDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum plnění/odpočtu [persistentní položka]")
  public DateTime getVATDateDATE() {
    return vATDateDATE;
  }

  public void setVATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
  }

  public Payment tAmountWithoutVAT(Double tAmountWithoutVAT) {
    this.tAmountWithoutVAT = tAmountWithoutVAT;
    return this;
  }

   /**
   * Bez daně [persistentní položka]
   * @return tAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Bez daně [persistentní položka]")
  public Double getTAmountWithoutVAT() {
    return tAmountWithoutVAT;
  }

  public void setTAmountWithoutVAT(Double tAmountWithoutVAT) {
    this.tAmountWithoutVAT = tAmountWithoutVAT;
  }

  public Payment localTAmountWithoutVAT(Double localTAmountWithoutVAT) {
    this.localTAmountWithoutVAT = localTAmountWithoutVAT;
    return this;
  }

   /**
   * Bez daně lokálně [persistentní položka]
   * @return localTAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Bez daně lokálně [persistentní položka]")
  public Double getLocalTAmountWithoutVAT() {
    return localTAmountWithoutVAT;
  }

  public void setLocalTAmountWithoutVAT(Double localTAmountWithoutVAT) {
    this.localTAmountWithoutVAT = localTAmountWithoutVAT;
  }

  public Payment tAmount(Double tAmount) {
    this.tAmount = tAmount;
    return this;
  }

   /**
   * Celkem [persistentní položka]
   * @return tAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem [persistentní položka]")
  public Double getTAmount() {
    return tAmount;
  }

  public void setTAmount(Double tAmount) {
    this.tAmount = tAmount;
  }

  public Payment localTAmount(Double localTAmount) {
    this.localTAmount = localTAmount;
    return this;
  }

   /**
   * Celkem lokálně [persistentní položka]
   * @return localTAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně [persistentní položka]")
  public Double getLocalTAmount() {
    return localTAmount;
  }

  public void setLocalTAmount(Double localTAmount) {
    this.localTAmount = localTAmount;
  }

  public Payment localAmountWithoutVATEET(Double localAmountWithoutVATEET) {
    this.localAmountWithoutVATEET = localAmountWithoutVATEET;
    return this;
  }

   /**
   * Částka bez daně (lok.) využitá do tržby EET [persistentní položka]
   * @return localAmountWithoutVATEET
  **/
  @ApiModelProperty(example = "null", value = "Částka bez daně (lok.) využitá do tržby EET [persistentní položka]")
  public Double getLocalAmountWithoutVATEET() {
    return localAmountWithoutVATEET;
  }

  public void setLocalAmountWithoutVATEET(Double localAmountWithoutVATEET) {
    this.localAmountWithoutVATEET = localAmountWithoutVATEET;
  }

  public Payment localAmountEET(Double localAmountEET) {
    this.localAmountEET = localAmountEET;
    return this;
  }

   /**
   * Částka (lok.) [persistentní položka]
   * @return localAmountEET
  **/
  @ApiModelProperty(example = "null", value = "Částka (lok.) [persistentní položka]")
  public Double getLocalAmountEET() {
    return localAmountEET;
  }

  public void setLocalAmountEET(Double localAmountEET) {
    this.localAmountEET = localAmountEET;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return Objects.equals(this.displayName, payment.displayName) &&
        Objects.equals(this.ID, payment.ID) &&
        Objects.equals(this.classID, payment.classID) &&
        Objects.equals(this.objVersion, payment.objVersion) &&
        Objects.equals(this.documentID, payment.documentID) &&
        Objects.equals(this.documentType, payment.documentType) &&
        Objects.equals(this.amount, payment.amount) &&
        Objects.equals(this.pDocumentID, payment.pDocumentID) &&
        Objects.equals(this.pDocumentType, payment.pDocumentType) &&
        Objects.equals(this.rowID, payment.rowID) &&
        Objects.equals(this.localAmount, payment.localAmount) &&
        Objects.equals(this.vATDateDATE, payment.vATDateDATE) &&
        Objects.equals(this.tAmountWithoutVAT, payment.tAmountWithoutVAT) &&
        Objects.equals(this.localTAmountWithoutVAT, payment.localTAmountWithoutVAT) &&
        Objects.equals(this.tAmount, payment.tAmount) &&
        Objects.equals(this.localTAmount, payment.localTAmount) &&
        Objects.equals(this.localAmountWithoutVATEET, payment.localAmountWithoutVATEET) &&
        Objects.equals(this.localAmountEET, payment.localAmountEET);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, documentID, documentType, amount, pDocumentID, pDocumentType, rowID, localAmount, vATDateDATE, tAmountWithoutVAT, localTAmountWithoutVAT, tAmount, localTAmount, localAmountWithoutVATEET, localAmountEET);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    documentID: ").append(toIndentedString(documentID)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    pDocumentID: ").append(toIndentedString(pDocumentID)).append("\n");
    sb.append("    pDocumentType: ").append(toIndentedString(pDocumentType)).append("\n");
    sb.append("    rowID: ").append(toIndentedString(rowID)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    vATDateDATE: ").append(toIndentedString(vATDateDATE)).append("\n");
    sb.append("    tAmountWithoutVAT: ").append(toIndentedString(tAmountWithoutVAT)).append("\n");
    sb.append("    localTAmountWithoutVAT: ").append(toIndentedString(localTAmountWithoutVAT)).append("\n");
    sb.append("    tAmount: ").append(toIndentedString(tAmount)).append("\n");
    sb.append("    localTAmount: ").append(toIndentedString(localTAmount)).append("\n");
    sb.append("    localAmountWithoutVATEET: ").append(toIndentedString(localAmountWithoutVATEET)).append("\n");
    sb.append("    localAmountEET: ").append(toIndentedString(localAmountEET)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

