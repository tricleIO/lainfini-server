/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Wikifile
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Wikifile   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("BlobData")
  private byte[] blobData = null;

  @SerializedName("Space_ID")
  private String spaceID = null;

  @SerializedName("Path")
  private String path = null;

  @SerializedName("IsImage")
  private Boolean isImage = null;

  @SerializedName("FileSize")
  private Integer fileSize = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Wikifile blobData(byte[] blobData) {
    this.blobData = blobData;
    return this;
  }

   /**
   * Data [persistentní položka]
   * @return blobData
  **/
  @ApiModelProperty(example = "null", value = "Data [persistentní položka]")
  public byte[] getBlobData() {
    return blobData;
  }

  public void setBlobData(byte[] blobData) {
    this.blobData = blobData;
  }

  public Wikifile spaceID(String spaceID) {
    this.spaceID = spaceID;
    return this;
  }

   /**
   * Prostor; ID objektu Wiki prostor [persistentní položka]
   * @return spaceID
  **/
  @ApiModelProperty(example = "null", value = "Prostor; ID objektu Wiki prostor [persistentní položka]")
  public String getSpaceID() {
    return spaceID;
  }

  public void setSpaceID(String spaceID) {
    this.spaceID = spaceID;
  }

  public Wikifile path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Cesta [persistentní položka]
   * @return path
  **/
  @ApiModelProperty(example = "null", value = "Cesta [persistentní položka]")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Wikifile isImage(Boolean isImage) {
    this.isImage = isImage;
    return this;
  }

   /**
   * Obrázek [persistentní položka]
   * @return isImage
  **/
  @ApiModelProperty(example = "null", value = "Obrázek [persistentní položka]")
  public Boolean getIsImage() {
    return isImage;
  }

  public void setIsImage(Boolean isImage) {
    this.isImage = isImage;
  }

  public Wikifile fileSize(Integer fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Velikost souboru [persistentní položka]
   * @return fileSize
  **/
  @ApiModelProperty(example = "null", value = "Velikost souboru [persistentní položka]")
  public Integer getFileSize() {
    return fileSize;
  }

  public void setFileSize(Integer fileSize) {
    this.fileSize = fileSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wikifile wikifile = (Wikifile) o;
    return Objects.equals(this.displayName, wikifile.displayName) &&
        Objects.equals(this.ID, wikifile.ID) &&
        Objects.equals(this.classID, wikifile.classID) &&
        Objects.equals(this.objVersion, wikifile.objVersion) &&
        Objects.equals(this.blobData, wikifile.blobData) &&
        Objects.equals(this.spaceID, wikifile.spaceID) &&
        Objects.equals(this.path, wikifile.path) &&
        Objects.equals(this.isImage, wikifile.isImage) &&
        Objects.equals(this.fileSize, wikifile.fileSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, blobData, spaceID, path, isImage, fileSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wikifile {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    blobData: ").append(toIndentedString(blobData)).append("\n");
    sb.append("    spaceID: ").append(toIndentedString(spaceID)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    isImage: ").append(toIndentedString(isImage)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

