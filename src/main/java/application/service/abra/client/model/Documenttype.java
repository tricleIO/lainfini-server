/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Documenttype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Documenttype   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("DocQueueCode")
  private String docQueueCode = null;

  @SerializedName("ToAccount")
  private Boolean toAccount = null;

  @SerializedName("SummaryAccounted")
  private Boolean summaryAccounted = null;

  @SerializedName("AccPresetDef")
  private Boolean accPresetDef = null;

  @SerializedName("ThroughBank")
  private Boolean throughBank = null;

  @SerializedName("PaymentKind")
  private Integer paymentKind = null;

  @SerializedName("ReverseAccounting")
  private Boolean reverseAccounting = null;

  @SerializedName("DefaultSummaryAccounted")
  private Boolean defaultSummaryAccounted = null;

  @SerializedName("AccountCode")
  private String accountCode = null;

  @SerializedName("ForceAccounting")
  private Boolean forceAccounting = null;

  @SerializedName("ReverseDepositAccounting")
  private Boolean reverseDepositAccounting = null;

  @SerializedName("CurrencyFromFirm")
  private Boolean currencyFromFirm = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Documenttype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Documenttype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Documenttype docQueueCode(String docQueueCode) {
    this.docQueueCode = docQueueCode;
    return this;
  }

   /**
   * Zkratka [persistentní položka]
   * @return docQueueCode
  **/
  @ApiModelProperty(example = "null", value = "Zkratka [persistentní položka]")
  public String getDocQueueCode() {
    return docQueueCode;
  }

  public void setDocQueueCode(String docQueueCode) {
    this.docQueueCode = docQueueCode;
  }

  public Documenttype toAccount(Boolean toAccount) {
    this.toAccount = toAccount;
    return this;
  }

   /**
   * Účtovat [persistentní položka]
   * @return toAccount
  **/
  @ApiModelProperty(example = "null", value = "Účtovat [persistentní položka]")
  public Boolean getToAccount() {
    return toAccount;
  }

  public void setToAccount(Boolean toAccount) {
    this.toAccount = toAccount;
  }

  public Documenttype summaryAccounted(Boolean summaryAccounted) {
    this.summaryAccounted = summaryAccounted;
    return this;
  }

   /**
   * Způsob účtování [persistentní položka]
   * @return summaryAccounted
  **/
  @ApiModelProperty(example = "null", value = "Způsob účtování [persistentní položka]")
  public Boolean getSummaryAccounted() {
    return summaryAccounted;
  }

  public void setSummaryAccounted(Boolean summaryAccounted) {
    this.summaryAccounted = summaryAccounted;
  }

  public Documenttype accPresetDef(Boolean accPresetDef) {
    this.accPresetDef = accPresetDef;
    return this;
  }

   /**
   * Předkontace [persistentní položka]
   * @return accPresetDef
  **/
  @ApiModelProperty(example = "null", value = "Předkontace [persistentní položka]")
  public Boolean getAccPresetDef() {
    return accPresetDef;
  }

  public void setAccPresetDef(Boolean accPresetDef) {
    this.accPresetDef = accPresetDef;
  }

  public Documenttype throughBank(Boolean throughBank) {
    this.throughBank = throughBank;
    return this;
  }

   /**
   * Bankou [persistentní položka]
   * @return throughBank
  **/
  @ApiModelProperty(example = "null", value = "Bankou [persistentní položka]")
  public Boolean getThroughBank() {
    return throughBank;
  }

  public void setThroughBank(Boolean throughBank) {
    this.throughBank = throughBank;
  }

  public Documenttype paymentKind(Integer paymentKind) {
    this.paymentKind = paymentKind;
    return this;
  }

   /**
   * Typ platby [persistentní položka]
   * @return paymentKind
  **/
  @ApiModelProperty(example = "null", value = "Typ platby [persistentní položka]")
  public Integer getPaymentKind() {
    return paymentKind;
  }

  public void setPaymentKind(Integer paymentKind) {
    this.paymentKind = paymentKind;
  }

  public Documenttype reverseAccounting(Boolean reverseAccounting) {
    this.reverseAccounting = reverseAccounting;
    return this;
  }

   /**
   * Účtovat obráceně [persistentní položka]
   * @return reverseAccounting
  **/
  @ApiModelProperty(example = "null", value = "Účtovat obráceně [persistentní položka]")
  public Boolean getReverseAccounting() {
    return reverseAccounting;
  }

  public void setReverseAccounting(Boolean reverseAccounting) {
    this.reverseAccounting = reverseAccounting;
  }

  public Documenttype defaultSummaryAccounted(Boolean defaultSummaryAccounted) {
    this.defaultSummaryAccounted = defaultSummaryAccounted;
    return this;
  }

   /**
   * Doporučeno účtovat souhrnně [persistentní položka]
   * @return defaultSummaryAccounted
  **/
  @ApiModelProperty(example = "null", value = "Doporučeno účtovat souhrnně [persistentní položka]")
  public Boolean getDefaultSummaryAccounted() {
    return defaultSummaryAccounted;
  }

  public void setDefaultSummaryAccounted(Boolean defaultSummaryAccounted) {
    this.defaultSummaryAccounted = defaultSummaryAccounted;
  }

  public Documenttype accountCode(String accountCode) {
    this.accountCode = accountCode;
    return this;
  }

   /**
   * Účet [persistentní položka]
   * @return accountCode
  **/
  @ApiModelProperty(example = "null", value = "Účet [persistentní položka]")
  public String getAccountCode() {
    return accountCode;
  }

  public void setAccountCode(String accountCode) {
    this.accountCode = accountCode;
  }

  public Documenttype forceAccounting(Boolean forceAccounting) {
    this.forceAccounting = forceAccounting;
    return this;
  }

   /**
   * Přeúčtovávat vždy [persistentní položka]
   * @return forceAccounting
  **/
  @ApiModelProperty(example = "null", value = "Přeúčtovávat vždy [persistentní položka]")
  public Boolean getForceAccounting() {
    return forceAccounting;
  }

  public void setForceAccounting(Boolean forceAccounting) {
    this.forceAccounting = forceAccounting;
  }

  public Documenttype reverseDepositAccounting(Boolean reverseDepositAccounting) {
    this.reverseDepositAccounting = reverseDepositAccounting;
    return this;
  }

   /**
   * Účtovat kladně zálohy [persistentní položka]
   * @return reverseDepositAccounting
  **/
  @ApiModelProperty(example = "null", value = "Účtovat kladně zálohy [persistentní položka]")
  public Boolean getReverseDepositAccounting() {
    return reverseDepositAccounting;
  }

  public void setReverseDepositAccounting(Boolean reverseDepositAccounting) {
    this.reverseDepositAccounting = reverseDepositAccounting;
  }

  public Documenttype currencyFromFirm(Boolean currencyFromFirm) {
    this.currencyFromFirm = currencyFromFirm;
    return this;
  }

   /**
   * Předvyplnění měny z firmy [persistentní položka]
   * @return currencyFromFirm
  **/
  @ApiModelProperty(example = "null", value = "Předvyplnění měny z firmy [persistentní položka]")
  public Boolean getCurrencyFromFirm() {
    return currencyFromFirm;
  }

  public void setCurrencyFromFirm(Boolean currencyFromFirm) {
    this.currencyFromFirm = currencyFromFirm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Documenttype documenttype = (Documenttype) o;
    return Objects.equals(this.displayName, documenttype.displayName) &&
        Objects.equals(this.ID, documenttype.ID) &&
        Objects.equals(this.classID, documenttype.classID) &&
        Objects.equals(this.objVersion, documenttype.objVersion) &&
        Objects.equals(this.code, documenttype.code) &&
        Objects.equals(this.name, documenttype.name) &&
        Objects.equals(this.docQueueCode, documenttype.docQueueCode) &&
        Objects.equals(this.toAccount, documenttype.toAccount) &&
        Objects.equals(this.summaryAccounted, documenttype.summaryAccounted) &&
        Objects.equals(this.accPresetDef, documenttype.accPresetDef) &&
        Objects.equals(this.throughBank, documenttype.throughBank) &&
        Objects.equals(this.paymentKind, documenttype.paymentKind) &&
        Objects.equals(this.reverseAccounting, documenttype.reverseAccounting) &&
        Objects.equals(this.defaultSummaryAccounted, documenttype.defaultSummaryAccounted) &&
        Objects.equals(this.accountCode, documenttype.accountCode) &&
        Objects.equals(this.forceAccounting, documenttype.forceAccounting) &&
        Objects.equals(this.reverseDepositAccounting, documenttype.reverseDepositAccounting) &&
        Objects.equals(this.currencyFromFirm, documenttype.currencyFromFirm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, code, name, docQueueCode, toAccount, summaryAccounted, accPresetDef, throughBank, paymentKind, reverseAccounting, defaultSummaryAccounted, accountCode, forceAccounting, reverseDepositAccounting, currencyFromFirm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Documenttype {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    docQueueCode: ").append(toIndentedString(docQueueCode)).append("\n");
    sb.append("    toAccount: ").append(toIndentedString(toAccount)).append("\n");
    sb.append("    summaryAccounted: ").append(toIndentedString(summaryAccounted)).append("\n");
    sb.append("    accPresetDef: ").append(toIndentedString(accPresetDef)).append("\n");
    sb.append("    throughBank: ").append(toIndentedString(throughBank)).append("\n");
    sb.append("    paymentKind: ").append(toIndentedString(paymentKind)).append("\n");
    sb.append("    reverseAccounting: ").append(toIndentedString(reverseAccounting)).append("\n");
    sb.append("    defaultSummaryAccounted: ").append(toIndentedString(defaultSummaryAccounted)).append("\n");
    sb.append("    accountCode: ").append(toIndentedString(accountCode)).append("\n");
    sb.append("    forceAccounting: ").append(toIndentedString(forceAccounting)).append("\n");
    sb.append("    reverseDepositAccounting: ").append(toIndentedString(reverseDepositAccounting)).append("\n");
    sb.append("    currencyFromFirm: ").append(toIndentedString(currencyFromFirm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

