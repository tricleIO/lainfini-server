/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Gpmnorm
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Gpmnorm   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Gpmnormmaterials> rows = new ArrayList<Gpmnormmaterials>();

  @SerializedName("StoreCard_ID")
  private String storeCardID = null;

  @SerializedName("StoreCardCode")
  private String storeCardCode = null;

  @SerializedName("StoreCardName")
  private String storeCardName = null;

  @SerializedName("QUnit")
  private String qUnit = null;

  @SerializedName("UnitRate")
  private Double unitRate = null;

  @SerializedName("Quantity")
  private Double quantity = null;

  @SerializedName("UnitQuantity")
  private Double unitQuantity = null;

  @SerializedName("WeightInGrams")
  private Double weightInGrams = null;

  @SerializedName("WeightInGrCalculated")
  private Double weightInGrCalculated = null;

  @SerializedName("UnitWeightInGrams")
  private Double unitWeightInGrams = null;

  @SerializedName("UnitWeightInGrCalculated")
  private Double unitWeightInGrCalculated = null;

  @SerializedName("OperationDescription")
  private String operationDescription = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CreatedDate$DATE")
  private DateTime createdDateDATE = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CorrectedDate$DATE")
  private DateTime correctedDateDATE = null;

  @SerializedName("Picture_ID")
  private Gpmnorm pictureID = null;

  @SerializedName("Store_ID")
  private String storeID = null;

  @SerializedName("CalculatedUnitPrice")
  private Double calculatedUnitPrice = null;

  @SerializedName("CalculatedPrice")
  private Double calculatedPrice = null;

  @SerializedName("Pictures")
  private List<Gpmnormpicture> pictures = new ArrayList<Gpmnormpicture>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Gpmnorm rows(List<Gpmnormmaterials> rows) {
    this.rows = rows;
    return this;
  }

  public Gpmnorm addRowsItem(Gpmnormmaterials rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Norma gastrovýroby - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Norma gastrovýroby - řádek [nepersistentní položka]")
  public List<Gpmnormmaterials> getRows() {
    return rows;
  }

  public void setRows(List<Gpmnormmaterials> rows) {
    this.rows = rows;
  }

  public Gpmnorm storeCardID(String storeCardID) {
    this.storeCardID = storeCardID;
    return this;
  }

   /**
   * Skladová karta; ID objektu Skladová karta [persistentní položka]
   * @return storeCardID
  **/
  @ApiModelProperty(example = "null", value = "Skladová karta; ID objektu Skladová karta [persistentní položka]")
  public String getStoreCardID() {
    return storeCardID;
  }

  public void setStoreCardID(String storeCardID) {
    this.storeCardID = storeCardID;
  }

  public Gpmnorm storeCardCode(String storeCardCode) {
    this.storeCardCode = storeCardCode;
    return this;
  }

   /**
   * Skladová karta - kód
   * @return storeCardCode
  **/
  @ApiModelProperty(example = "null", value = "Skladová karta - kód")
  public String getStoreCardCode() {
    return storeCardCode;
  }

  public void setStoreCardCode(String storeCardCode) {
    this.storeCardCode = storeCardCode;
  }

  public Gpmnorm storeCardName(String storeCardName) {
    this.storeCardName = storeCardName;
    return this;
  }

   /**
   * Skladová karta - název
   * @return storeCardName
  **/
  @ApiModelProperty(example = "null", value = "Skladová karta - název")
  public String getStoreCardName() {
    return storeCardName;
  }

  public void setStoreCardName(String storeCardName) {
    this.storeCardName = storeCardName;
  }

  public Gpmnorm qUnit(String qUnit) {
    this.qUnit = qUnit;
    return this;
  }

   /**
   * Jednotka [persistentní položka]
   * @return qUnit
  **/
  @ApiModelProperty(example = "null", value = "Jednotka [persistentní položka]")
  public String getQUnit() {
    return qUnit;
  }

  public void setQUnit(String qUnit) {
    this.qUnit = qUnit;
  }

  public Gpmnorm unitRate(Double unitRate) {
    this.unitRate = unitRate;
    return this;
  }

   /**
   * Vztah
   * @return unitRate
  **/
  @ApiModelProperty(example = "null", value = "Vztah")
  public Double getUnitRate() {
    return unitRate;
  }

  public void setUnitRate(Double unitRate) {
    this.unitRate = unitRate;
  }

  public Gpmnorm quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Počet v jedn.se vzt.1 [persistentní položka]
   * @return quantity
  **/
  @ApiModelProperty(example = "null", value = "Počet v jedn.se vzt.1 [persistentní položka]")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public Gpmnorm unitQuantity(Double unitQuantity) {
    this.unitQuantity = unitQuantity;
    return this;
  }

   /**
   * Počet
   * @return unitQuantity
  **/
  @ApiModelProperty(example = "null", value = "Počet")
  public Double getUnitQuantity() {
    return unitQuantity;
  }

  public void setUnitQuantity(Double unitQuantity) {
    this.unitQuantity = unitQuantity;
  }

  public Gpmnorm weightInGrams(Double weightInGrams) {
    this.weightInGrams = weightInGrams;
    return this;
  }

   /**
   * Celková hmotnost v gramech
   * @return weightInGrams
  **/
  @ApiModelProperty(example = "null", value = "Celková hmotnost v gramech")
  public Double getWeightInGrams() {
    return weightInGrams;
  }

  public void setWeightInGrams(Double weightInGrams) {
    this.weightInGrams = weightInGrams;
  }

  public Gpmnorm weightInGrCalculated(Double weightInGrCalculated) {
    this.weightInGrCalculated = weightInGrCalculated;
    return this;
  }

   /**
   * Celk. hmot. v gr. vypočtená
   * @return weightInGrCalculated
  **/
  @ApiModelProperty(example = "null", value = "Celk. hmot. v gr. vypočtená")
  public Double getWeightInGrCalculated() {
    return weightInGrCalculated;
  }

  public void setWeightInGrCalculated(Double weightInGrCalculated) {
    this.weightInGrCalculated = weightInGrCalculated;
  }

  public Gpmnorm unitWeightInGrams(Double unitWeightInGrams) {
    this.unitWeightInGrams = unitWeightInGrams;
    return this;
  }

   /**
   * Hmotnost jednotky v gramech
   * @return unitWeightInGrams
  **/
  @ApiModelProperty(example = "null", value = "Hmotnost jednotky v gramech")
  public Double getUnitWeightInGrams() {
    return unitWeightInGrams;
  }

  public void setUnitWeightInGrams(Double unitWeightInGrams) {
    this.unitWeightInGrams = unitWeightInGrams;
  }

  public Gpmnorm unitWeightInGrCalculated(Double unitWeightInGrCalculated) {
    this.unitWeightInGrCalculated = unitWeightInGrCalculated;
    return this;
  }

   /**
   * Hmotnost jedn. v gr. vypočtená
   * @return unitWeightInGrCalculated
  **/
  @ApiModelProperty(example = "null", value = "Hmotnost jedn. v gr. vypočtená")
  public Double getUnitWeightInGrCalculated() {
    return unitWeightInGrCalculated;
  }

  public void setUnitWeightInGrCalculated(Double unitWeightInGrCalculated) {
    this.unitWeightInGrCalculated = unitWeightInGrCalculated;
  }

  public Gpmnorm operationDescription(String operationDescription) {
    this.operationDescription = operationDescription;
    return this;
  }

   /**
   * Pracovní postup [persistentní položka]
   * @return operationDescription
  **/
  @ApiModelProperty(example = "null", value = "Pracovní postup [persistentní položka]")
  public String getOperationDescription() {
    return operationDescription;
  }

  public void setOperationDescription(String operationDescription) {
    this.operationDescription = operationDescription;
  }

  public Gpmnorm description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Gpmnorm createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Gpmnorm createdDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
    return this;
  }

   /**
   * Datum vytvoření [persistentní položka]
   * @return createdDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum vytvoření [persistentní položka]")
  public DateTime getCreatedDateDATE() {
    return createdDateDATE;
  }

  public void setCreatedDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
  }

  public Gpmnorm correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Gpmnorm correctedDateDATE(DateTime correctedDateDATE) {
    this.correctedDateDATE = correctedDateDATE;
    return this;
  }

   /**
   * Datum opravy [persistentní položka]
   * @return correctedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum opravy [persistentní položka]")
  public DateTime getCorrectedDateDATE() {
    return correctedDateDATE;
  }

  public void setCorrectedDateDATE(DateTime correctedDateDATE) {
    this.correctedDateDATE = correctedDateDATE;
  }

  public Gpmnorm pictureID(Gpmnorm pictureID) {
    this.pictureID = pictureID;
    return this;
  }

   /**
   * Get pictureID
   * @return pictureID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Gpmnorm getPictureID() {
    return pictureID;
  }

  public void setPictureID(Gpmnorm pictureID) {
    this.pictureID = pictureID;
  }

  public Gpmnorm storeID(String storeID) {
    this.storeID = storeID;
    return this;
  }

   /**
   * Sklad; ID objektu Sklad [persistentní položka]
   * @return storeID
  **/
  @ApiModelProperty(example = "null", value = "Sklad; ID objektu Sklad [persistentní položka]")
  public String getStoreID() {
    return storeID;
  }

  public void setStoreID(String storeID) {
    this.storeID = storeID;
  }

  public Gpmnorm calculatedUnitPrice(Double calculatedUnitPrice) {
    this.calculatedUnitPrice = calculatedUnitPrice;
    return this;
  }

   /**
   * Cena jednotky
   * @return calculatedUnitPrice
  **/
  @ApiModelProperty(example = "null", value = "Cena jednotky")
  public Double getCalculatedUnitPrice() {
    return calculatedUnitPrice;
  }

  public void setCalculatedUnitPrice(Double calculatedUnitPrice) {
    this.calculatedUnitPrice = calculatedUnitPrice;
  }

  public Gpmnorm calculatedPrice(Double calculatedPrice) {
    this.calculatedPrice = calculatedPrice;
    return this;
  }

   /**
   * Cena [persistentní položka]
   * @return calculatedPrice
  **/
  @ApiModelProperty(example = "null", value = "Cena [persistentní položka]")
  public Double getCalculatedPrice() {
    return calculatedPrice;
  }

  public void setCalculatedPrice(Double calculatedPrice) {
    this.calculatedPrice = calculatedPrice;
  }

  public Gpmnorm pictures(List<Gpmnormpicture> pictures) {
    this.pictures = pictures;
    return this;
  }

  public Gpmnorm addPicturesItem(Gpmnormpicture picturesItem) {
    this.pictures.add(picturesItem);
    return this;
  }

   /**
   * Obrázky; kolekce BO Norma gastrovýroby - obrázek [nepersistentní položka]
   * @return pictures
  **/
  @ApiModelProperty(example = "null", value = "Obrázky; kolekce BO Norma gastrovýroby - obrázek [nepersistentní položka]")
  public List<Gpmnormpicture> getPictures() {
    return pictures;
  }

  public void setPictures(List<Gpmnormpicture> pictures) {
    this.pictures = pictures;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Gpmnorm gpmnorm = (Gpmnorm) o;
    return Objects.equals(this.displayName, gpmnorm.displayName) &&
        Objects.equals(this.ID, gpmnorm.ID) &&
        Objects.equals(this.classID, gpmnorm.classID) &&
        Objects.equals(this.objVersion, gpmnorm.objVersion) &&
        Objects.equals(this.rows, gpmnorm.rows) &&
        Objects.equals(this.storeCardID, gpmnorm.storeCardID) &&
        Objects.equals(this.storeCardCode, gpmnorm.storeCardCode) &&
        Objects.equals(this.storeCardName, gpmnorm.storeCardName) &&
        Objects.equals(this.qUnit, gpmnorm.qUnit) &&
        Objects.equals(this.unitRate, gpmnorm.unitRate) &&
        Objects.equals(this.quantity, gpmnorm.quantity) &&
        Objects.equals(this.unitQuantity, gpmnorm.unitQuantity) &&
        Objects.equals(this.weightInGrams, gpmnorm.weightInGrams) &&
        Objects.equals(this.weightInGrCalculated, gpmnorm.weightInGrCalculated) &&
        Objects.equals(this.unitWeightInGrams, gpmnorm.unitWeightInGrams) &&
        Objects.equals(this.unitWeightInGrCalculated, gpmnorm.unitWeightInGrCalculated) &&
        Objects.equals(this.operationDescription, gpmnorm.operationDescription) &&
        Objects.equals(this.description, gpmnorm.description) &&
        Objects.equals(this.createdByID, gpmnorm.createdByID) &&
        Objects.equals(this.createdDateDATE, gpmnorm.createdDateDATE) &&
        Objects.equals(this.correctedByID, gpmnorm.correctedByID) &&
        Objects.equals(this.correctedDateDATE, gpmnorm.correctedDateDATE) &&
        Objects.equals(this.pictureID, gpmnorm.pictureID) &&
        Objects.equals(this.storeID, gpmnorm.storeID) &&
        Objects.equals(this.calculatedUnitPrice, gpmnorm.calculatedUnitPrice) &&
        Objects.equals(this.calculatedPrice, gpmnorm.calculatedPrice) &&
        Objects.equals(this.pictures, gpmnorm.pictures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, storeCardID, storeCardCode, storeCardName, qUnit, unitRate, quantity, unitQuantity, weightInGrams, weightInGrCalculated, unitWeightInGrams, unitWeightInGrCalculated, operationDescription, description, createdByID, createdDateDATE, correctedByID, correctedDateDATE, pictureID, storeID, calculatedUnitPrice, calculatedPrice, pictures);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Gpmnorm {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    storeCardID: ").append(toIndentedString(storeCardID)).append("\n");
    sb.append("    storeCardCode: ").append(toIndentedString(storeCardCode)).append("\n");
    sb.append("    storeCardName: ").append(toIndentedString(storeCardName)).append("\n");
    sb.append("    qUnit: ").append(toIndentedString(qUnit)).append("\n");
    sb.append("    unitRate: ").append(toIndentedString(unitRate)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitQuantity: ").append(toIndentedString(unitQuantity)).append("\n");
    sb.append("    weightInGrams: ").append(toIndentedString(weightInGrams)).append("\n");
    sb.append("    weightInGrCalculated: ").append(toIndentedString(weightInGrCalculated)).append("\n");
    sb.append("    unitWeightInGrams: ").append(toIndentedString(unitWeightInGrams)).append("\n");
    sb.append("    unitWeightInGrCalculated: ").append(toIndentedString(unitWeightInGrCalculated)).append("\n");
    sb.append("    operationDescription: ").append(toIndentedString(operationDescription)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    createdDateDATE: ").append(toIndentedString(createdDateDATE)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    correctedDateDATE: ").append(toIndentedString(correctedDateDATE)).append("\n");
    sb.append("    pictureID: ").append(toIndentedString(pictureID)).append("\n");
    sb.append("    storeID: ").append(toIndentedString(storeID)).append("\n");
    sb.append("    calculatedUnitPrice: ").append(toIndentedString(calculatedUnitPrice)).append("\n");
    sb.append("    calculatedPrice: ").append(toIndentedString(calculatedPrice)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

