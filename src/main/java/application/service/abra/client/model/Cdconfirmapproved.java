/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Cdconfirmapproved
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Cdconfirmapproved   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Cdconfirmapprovedrow> rows = new ArrayList<Cdconfirmapprovedrow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("PricePrecision")
  private Integer pricePrecision = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("AdditionAMount")
  private Double additionAMount = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Description2")
  private String description2 = null;

  @SerializedName("ValidityFrom$DATE")
  private DateTime validityFromDATE = null;

  @SerializedName("ValidityTo$DATE")
  private DateTime validityToDATE = null;

  @SerializedName("Approval_ID")
  private String approvalID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("DrawingAmount")
  private Double drawingAmount = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Cdconfirmapproved rows(List<Cdconfirmapprovedrow> rows) {
    this.rows = rows;
    return this;
  }

  public Cdconfirmapproved addRowsItem(Cdconfirmapprovedrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Schválený výdaj - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Schválený výdaj - řádek [nepersistentní položka]")
  public List<Cdconfirmapprovedrow> getRows() {
    return rows;
  }

  public void setRows(List<Cdconfirmapprovedrow> rows) {
    this.rows = rows;
  }

  public Cdconfirmapproved docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Cdconfirmapproved periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Cdconfirmapproved ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Cdconfirmapproved docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Cdconfirmapproved createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Cdconfirmapproved correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Cdconfirmapproved newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Cdconfirmapproved newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Cdconfirmapproved pricePrecision(Integer pricePrecision) {
    this.pricePrecision = pricePrecision;
    return this;
  }

   /**
   * Zobrazení desetinných míst pro zadávací částky [persistentní položka]
   * @return pricePrecision
  **/
  @ApiModelProperty(example = "null", value = "Zobrazení desetinných míst pro zadávací částky [persistentní položka]")
  public Integer getPricePrecision() {
    return pricePrecision;
  }

  public void setPricePrecision(Integer pricePrecision) {
    this.pricePrecision = pricePrecision;
  }

  public Cdconfirmapproved amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Cdconfirmapproved additionAMount(Double additionAMount) {
    this.additionAMount = additionAMount;
    return this;
  }

   /**
   * Částka fin. přínosu [persistentní položka]
   * @return additionAMount
  **/
  @ApiModelProperty(example = "null", value = "Částka fin. přínosu [persistentní položka]")
  public Double getAdditionAMount() {
    return additionAMount;
  }

  public void setAdditionAMount(Double additionAMount) {
    this.additionAMount = additionAMount;
  }

  public Cdconfirmapproved description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis výdaje [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis výdaje [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Cdconfirmapproved description2(String description2) {
    this.description2 = description2;
    return this;
  }

   /**
   * Popis fin. přínosu: [persistentní položka]
   * @return description2
  **/
  @ApiModelProperty(example = "null", value = "Popis fin. přínosu: [persistentní položka]")
  public String getDescription2() {
    return description2;
  }

  public void setDescription2(String description2) {
    this.description2 = description2;
  }

  public Cdconfirmapproved validityFromDATE(DateTime validityFromDATE) {
    this.validityFromDATE = validityFromDATE;
    return this;
  }

   /**
   * Platnost od [persistentní položka]
   * @return validityFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Platnost od [persistentní položka]")
  public DateTime getValidityFromDATE() {
    return validityFromDATE;
  }

  public void setValidityFromDATE(DateTime validityFromDATE) {
    this.validityFromDATE = validityFromDATE;
  }

  public Cdconfirmapproved validityToDATE(DateTime validityToDATE) {
    this.validityToDATE = validityToDATE;
    return this;
  }

   /**
   * Platnost do [persistentní položka]
   * @return validityToDATE
  **/
  @ApiModelProperty(example = "null", value = "Platnost do [persistentní položka]")
  public DateTime getValidityToDATE() {
    return validityToDATE;
  }

  public void setValidityToDATE(DateTime validityToDATE) {
    this.validityToDATE = validityToDATE;
  }

  public Cdconfirmapproved approvalID(String approvalID) {
    this.approvalID = approvalID;
    return this;
  }

   /**
   * Vazba na schvalovaný výdaj; ID objektu Požadavek na schválení výdaje [persistentní položka]
   * @return approvalID
  **/
  @ApiModelProperty(example = "null", value = "Vazba na schvalovaný výdaj; ID objektu Požadavek na schválení výdaje [persistentní položka]")
  public String getApprovalID() {
    return approvalID;
  }

  public void setApprovalID(String approvalID) {
    this.approvalID = approvalID;
  }

  public Cdconfirmapproved currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna schváleného výdaje; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna schváleného výdaje; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Cdconfirmapproved drawingAmount(Double drawingAmount) {
    this.drawingAmount = drawingAmount;
    return this;
  }

   /**
   * Čerpaná částka
   * @return drawingAmount
  **/
  @ApiModelProperty(example = "null", value = "Čerpaná částka")
  public Double getDrawingAmount() {
    return drawingAmount;
  }

  public void setDrawingAmount(Double drawingAmount) {
    this.drawingAmount = drawingAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cdconfirmapproved cdconfirmapproved = (Cdconfirmapproved) o;
    return Objects.equals(this.displayName, cdconfirmapproved.displayName) &&
        Objects.equals(this.ID, cdconfirmapproved.ID) &&
        Objects.equals(this.classID, cdconfirmapproved.classID) &&
        Objects.equals(this.objVersion, cdconfirmapproved.objVersion) &&
        Objects.equals(this.rows, cdconfirmapproved.rows) &&
        Objects.equals(this.docQueueID, cdconfirmapproved.docQueueID) &&
        Objects.equals(this.periodID, cdconfirmapproved.periodID) &&
        Objects.equals(this.ordNumber, cdconfirmapproved.ordNumber) &&
        Objects.equals(this.docDateDATE, cdconfirmapproved.docDateDATE) &&
        Objects.equals(this.createdByID, cdconfirmapproved.createdByID) &&
        Objects.equals(this.correctedByID, cdconfirmapproved.correctedByID) &&
        Objects.equals(this.newRelatedType, cdconfirmapproved.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, cdconfirmapproved.newRelatedDocumentID) &&
        Objects.equals(this.pricePrecision, cdconfirmapproved.pricePrecision) &&
        Objects.equals(this.amount, cdconfirmapproved.amount) &&
        Objects.equals(this.additionAMount, cdconfirmapproved.additionAMount) &&
        Objects.equals(this.description, cdconfirmapproved.description) &&
        Objects.equals(this.description2, cdconfirmapproved.description2) &&
        Objects.equals(this.validityFromDATE, cdconfirmapproved.validityFromDATE) &&
        Objects.equals(this.validityToDATE, cdconfirmapproved.validityToDATE) &&
        Objects.equals(this.approvalID, cdconfirmapproved.approvalID) &&
        Objects.equals(this.currencyID, cdconfirmapproved.currencyID) &&
        Objects.equals(this.drawingAmount, cdconfirmapproved.drawingAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, pricePrecision, amount, additionAMount, description, description2, validityFromDATE, validityToDATE, approvalID, currencyID, drawingAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cdconfirmapproved {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    pricePrecision: ").append(toIndentedString(pricePrecision)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    additionAMount: ").append(toIndentedString(additionAMount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    description2: ").append(toIndentedString(description2)).append("\n");
    sb.append("    validityFromDATE: ").append(toIndentedString(validityFromDATE)).append("\n");
    sb.append("    validityToDATE: ").append(toIndentedString(validityToDATE)).append("\n");
    sb.append("    approvalID: ").append(toIndentedString(approvalID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    drawingAmount: ").append(toIndentedString(drawingAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

