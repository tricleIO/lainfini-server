/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Scmcolumnsdefinition
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Scmcolumnsdefinition   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Scmcolumnsdefinitionrow> rows = new ArrayList<Scmcolumnsdefinitionrow>();

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("datasourceset_id")
  private String datasourcesetId = null;

  @SerializedName("system")
  private Boolean system = null;

  @SerializedName("setting_id")
  private String settingId = null;

  @SerializedName("groups")
  private List<Scmcolumnsdefinitiongroup> groups = new ArrayList<Scmcolumnsdefinitiongroup>();

  public Scmcolumnsdefinition displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Scmcolumnsdefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Scmcolumnsdefinition classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Scmcolumnsdefinition objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Scmcolumnsdefinition rows(List<Scmcolumnsdefinitionrow> rows) {
    this.rows = rows;
    return this;
  }

  public Scmcolumnsdefinition addRowsItem(Scmcolumnsdefinitionrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo Řádek definice sloupců [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo Řádek definice sloupců [nepersistentní položka]")
  public List<Scmcolumnsdefinitionrow> getRows() {
    return rows;
  }

  public void setRows(List<Scmcolumnsdefinitionrow> rows) {
    this.rows = rows;
  }

  public Scmcolumnsdefinition hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Scmcolumnsdefinition code(String code) {
    this.code = code;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Scmcolumnsdefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Scmcolumnsdefinition datasourcesetId(String datasourcesetId) {
    this.datasourcesetId = datasourcesetId;
    return this;
  }

   /**
   * sada datových zdrojů; id objektu sada datových zdrojů [persistentní položka]
   * @return datasourcesetId
  **/
  @ApiModelProperty(example = "null", value = "sada datových zdrojů; id objektu sada datových zdrojů [persistentní položka]")
  public String getDatasourcesetId() {
    return datasourcesetId;
  }

  public void setDatasourcesetId(String datasourcesetId) {
    this.datasourcesetId = datasourcesetId;
  }

  public Scmcolumnsdefinition system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * systémová [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "systémová [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Scmcolumnsdefinition settingId(String settingId) {
    this.settingId = settingId;
    return this;
  }

   /**
   * nastavení; id objektu nastavení scm [persistentní položka]
   * @return settingId
  **/
  @ApiModelProperty(example = "null", value = "nastavení; id objektu nastavení scm [persistentní položka]")
  public String getSettingId() {
    return settingId;
  }

  public void setSettingId(String settingId) {
    this.settingId = settingId;
  }

  public Scmcolumnsdefinition groups(List<Scmcolumnsdefinitiongroup> groups) {
    this.groups = groups;
    return this;
  }

  public Scmcolumnsdefinition addGroupsItem(Scmcolumnsdefinitiongroup groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * skupiny; kolekce bo skupina definice sloupců [nepersistentní položka]
   * @return groups
  **/
  @ApiModelProperty(example = "null", value = "skupiny; kolekce bo skupina definice sloupců [nepersistentní položka]")
  public List<Scmcolumnsdefinitiongroup> getGroups() {
    return groups;
  }

  public void setGroups(List<Scmcolumnsdefinitiongroup> groups) {
    this.groups = groups;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scmcolumnsdefinition scmcolumnsdefinition = (Scmcolumnsdefinition) o;
    return Objects.equals(this.displayname, scmcolumnsdefinition.displayname) &&
        Objects.equals(this.id, scmcolumnsdefinition.id) &&
        Objects.equals(this.classid, scmcolumnsdefinition.classid) &&
        Objects.equals(this.objversion, scmcolumnsdefinition.objversion) &&
        Objects.equals(this.rows, scmcolumnsdefinition.rows) &&
        Objects.equals(this.hidden, scmcolumnsdefinition.hidden) &&
        Objects.equals(this.code, scmcolumnsdefinition.code) &&
        Objects.equals(this.name, scmcolumnsdefinition.name) &&
        Objects.equals(this.datasourcesetId, scmcolumnsdefinition.datasourcesetId) &&
        Objects.equals(this.system, scmcolumnsdefinition.system) &&
        Objects.equals(this.settingId, scmcolumnsdefinition.settingId) &&
        Objects.equals(this.groups, scmcolumnsdefinition.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, hidden, code, name, datasourcesetId, system, settingId, groups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scmcolumnsdefinition {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    datasourcesetId: ").append(toIndentedString(datasourcesetId)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    settingId: ").append(toIndentedString(settingId)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

