/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Average
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Average   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("createdby_id")
  private String createdbyId = null;

  @SerializedName("correctedby_id")
  private String correctedbyId = null;

  @SerializedName("calccharts")
  private List<Averagechart> calccharts = new ArrayList<Averagechart>();

  @SerializedName("workingrelation_id")
  private String workingrelationId = null;

  @SerializedName("employee_id")
  private String employeeId = null;

  @SerializedName("averagekind")
  private Integer averagekind = null;

  @SerializedName("averageorigin")
  private Integer averageorigin = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("calcfrom$date")
  private DateTime calcfromdate = null;

  @SerializedName("calcto$date")
  private DateTime calctodate = null;

  @SerializedName("validfrom$date")
  private DateTime validfromdate = null;

  @SerializedName("validto$date")
  private DateTime validtodate = null;

  @SerializedName("numerator")
  private Double numerator = null;

  @SerializedName("denominator")
  private Double denominator = null;

  @SerializedName("average")
  private Double average = null;

  @SerializedName("averagekindastext")
  private String averagekindastext = null;

  @SerializedName("averageoriginastext")
  private String averageoriginastext = null;

  @SerializedName("calcchart_id")
  private String calcchartId = null;

  @SerializedName("employeename")
  private String employeename = null;

  @SerializedName("pers_personalnumber")
  private String persPersonalnumber = null;

  @SerializedName("datefrom")
  private DateTime datefrom = null;

  @SerializedName("dateto")
  private DateTime dateto = null;

  public Average displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Average id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Average classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Average objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Average createdbyId(String createdbyId) {
    this.createdbyId = createdbyId;
    return this;
  }

   /**
   * vytvořil; id objektu uživatel [persistentní položka]
   * @return createdbyId
  **/
  @ApiModelProperty(example = "null", value = "vytvořil; id objektu uživatel [persistentní položka]")
  public String getCreatedbyId() {
    return createdbyId;
  }

  public void setCreatedbyId(String createdbyId) {
    this.createdbyId = createdbyId;
  }

  public Average correctedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
    return this;
  }

   /**
   * opravil; id objektu uživatel [persistentní položka]
   * @return correctedbyId
  **/
  @ApiModelProperty(example = "null", value = "opravil; id objektu uživatel [persistentní položka]")
  public String getCorrectedbyId() {
    return correctedbyId;
  }

  public void setCorrectedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
  }

  public Average calccharts(List<Averagechart> calccharts) {
    this.calccharts = calccharts;
    return this;
  }

  public Average addCalcchartsItem(Averagechart calcchartsItem) {
    this.calccharts.add(calcchartsItem);
    return this;
  }

   /**
   * výpočtová schémata; kolekce bo výp.vzorec průměru [nepersistentní položka]
   * @return calccharts
  **/
  @ApiModelProperty(example = "null", value = "výpočtová schémata; kolekce bo výp.vzorec průměru [nepersistentní položka]")
  public List<Averagechart> getCalccharts() {
    return calccharts;
  }

  public void setCalccharts(List<Averagechart> calccharts) {
    this.calccharts = calccharts;
  }

  public Average workingrelationId(String workingrelationId) {
    this.workingrelationId = workingrelationId;
    return this;
  }

   /**
   * pracovní poměr; id objektu pracovní poměr [persistentní položka]
   * @return workingrelationId
  **/
  @ApiModelProperty(example = "null", value = "pracovní poměr; id objektu pracovní poměr [persistentní položka]")
  public String getWorkingrelationId() {
    return workingrelationId;
  }

  public void setWorkingrelationId(String workingrelationId) {
    this.workingrelationId = workingrelationId;
  }

  public Average employeeId(String employeeId) {
    this.employeeId = employeeId;
    return this;
  }

   /**
   * zaměstnanec; id objektu zaměstnanec
   * @return employeeId
  **/
  @ApiModelProperty(example = "null", value = "zaměstnanec; id objektu zaměstnanec")
  public String getEmployeeId() {
    return employeeId;
  }

  public void setEmployeeId(String employeeId) {
    this.employeeId = employeeId;
  }

  public Average averagekind(Integer averagekind) {
    this.averagekind = averagekind;
    return this;
  }

   /**
   * typ průměru [persistentní položka]
   * @return averagekind
  **/
  @ApiModelProperty(example = "null", value = "typ průměru [persistentní položka]")
  public Integer getAveragekind() {
    return averagekind;
  }

  public void setAveragekind(Integer averagekind) {
    this.averagekind = averagekind;
  }

  public Average averageorigin(Integer averageorigin) {
    this.averageorigin = averageorigin;
    return this;
  }

   /**
   * původ [persistentní položka]
   * @return averageorigin
  **/
  @ApiModelProperty(example = "null", value = "původ [persistentní položka]")
  public Integer getAverageorigin() {
    return averageorigin;
  }

  public void setAverageorigin(Integer averageorigin) {
    this.averageorigin = averageorigin;
  }

  public Average description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Average calcfromdate(DateTime calcfromdate) {
    this.calcfromdate = calcfromdate;
    return this;
  }

   /**
   * spočten od [persistentní položka]
   * @return calcfromdate
  **/
  @ApiModelProperty(example = "null", value = "spočten od [persistentní položka]")
  public DateTime getCalcfromdate() {
    return calcfromdate;
  }

  public void setCalcfromdate(DateTime calcfromdate) {
    this.calcfromdate = calcfromdate;
  }

  public Average calctodate(DateTime calctodate) {
    this.calctodate = calctodate;
    return this;
  }

   /**
   * spočten do [persistentní položka]
   * @return calctodate
  **/
  @ApiModelProperty(example = "null", value = "spočten do [persistentní položka]")
  public DateTime getCalctodate() {
    return calctodate;
  }

  public void setCalctodate(DateTime calctodate) {
    this.calctodate = calctodate;
  }

  public Average validfromdate(DateTime validfromdate) {
    this.validfromdate = validfromdate;
    return this;
  }

   /**
   * platný od [persistentní položka]
   * @return validfromdate
  **/
  @ApiModelProperty(example = "null", value = "platný od [persistentní položka]")
  public DateTime getValidfromdate() {
    return validfromdate;
  }

  public void setValidfromdate(DateTime validfromdate) {
    this.validfromdate = validfromdate;
  }

  public Average validtodate(DateTime validtodate) {
    this.validtodate = validtodate;
    return this;
  }

   /**
   * platný do [persistentní položka]
   * @return validtodate
  **/
  @ApiModelProperty(example = "null", value = "platný do [persistentní položka]")
  public DateTime getValidtodate() {
    return validtodate;
  }

  public void setValidtodate(DateTime validtodate) {
    this.validtodate = validtodate;
  }

  public Average numerator(Double numerator) {
    this.numerator = numerator;
    return this;
  }

   /**
   * Čitatel [persistentní položka]
   * @return numerator
  **/
  @ApiModelProperty(example = "null", value = "Čitatel [persistentní položka]")
  public Double getNumerator() {
    return numerator;
  }

  public void setNumerator(Double numerator) {
    this.numerator = numerator;
  }

  public Average denominator(Double denominator) {
    this.denominator = denominator;
    return this;
  }

   /**
   * jmenovatel [persistentní položka]
   * @return denominator
  **/
  @ApiModelProperty(example = "null", value = "jmenovatel [persistentní položka]")
  public Double getDenominator() {
    return denominator;
  }

  public void setDenominator(Double denominator) {
    this.denominator = denominator;
  }

  public Average average(Double average) {
    this.average = average;
    return this;
  }

   /**
   * průměr
   * @return average
  **/
  @ApiModelProperty(example = "null", value = "průměr")
  public Double getAverage() {
    return average;
  }

  public void setAverage(Double average) {
    this.average = average;
  }

  public Average averagekindastext(String averagekindastext) {
    this.averagekindastext = averagekindastext;
    return this;
  }

   /**
   * typ průměru
   * @return averagekindastext
  **/
  @ApiModelProperty(example = "null", value = "typ průměru")
  public String getAveragekindastext() {
    return averagekindastext;
  }

  public void setAveragekindastext(String averagekindastext) {
    this.averagekindastext = averagekindastext;
  }

  public Average averageoriginastext(String averageoriginastext) {
    this.averageoriginastext = averageoriginastext;
    return this;
  }

   /**
   * původ průměru
   * @return averageoriginastext
  **/
  @ApiModelProperty(example = "null", value = "původ průměru")
  public String getAverageoriginastext() {
    return averageoriginastext;
  }

  public void setAverageoriginastext(String averageoriginastext) {
    this.averageoriginastext = averageoriginastext;
  }

  public Average calcchartId(String calcchartId) {
    this.calcchartId = calcchartId;
    return this;
  }

   /**
   * výp.schéma; id objektu výpočtové schéma
   * @return calcchartId
  **/
  @ApiModelProperty(example = "null", value = "výp.schéma; id objektu výpočtové schéma")
  public String getCalcchartId() {
    return calcchartId;
  }

  public void setCalcchartId(String calcchartId) {
    this.calcchartId = calcchartId;
  }

  public Average employeename(String employeename) {
    this.employeename = employeename;
    return this;
  }

   /**
   * příjmení a jméno
   * @return employeename
  **/
  @ApiModelProperty(example = "null", value = "příjmení a jméno")
  public String getEmployeename() {
    return employeename;
  }

  public void setEmployeename(String employeename) {
    this.employeename = employeename;
  }

  public Average persPersonalnumber(String persPersonalnumber) {
    this.persPersonalnumber = persPersonalnumber;
    return this;
  }

   /**
   * os. číslo
   * @return persPersonalnumber
  **/
  @ApiModelProperty(example = "null", value = "os. číslo")
  public String getPersPersonalnumber() {
    return persPersonalnumber;
  }

  public void setPersPersonalnumber(String persPersonalnumber) {
    this.persPersonalnumber = persPersonalnumber;
  }

  public Average datefrom(DateTime datefrom) {
    this.datefrom = datefrom;
    return this;
  }

   /**
   * data od
   * @return datefrom
  **/
  @ApiModelProperty(example = "null", value = "data od")
  public DateTime getDatefrom() {
    return datefrom;
  }

  public void setDatefrom(DateTime datefrom) {
    this.datefrom = datefrom;
  }

  public Average dateto(DateTime dateto) {
    this.dateto = dateto;
    return this;
  }

   /**
   * data do
   * @return dateto
  **/
  @ApiModelProperty(example = "null", value = "data do")
  public DateTime getDateto() {
    return dateto;
  }

  public void setDateto(DateTime dateto) {
    this.dateto = dateto;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Average average = (Average) o;
    return Objects.equals(this.displayname, average.displayname) &&
        Objects.equals(this.id, average.id) &&
        Objects.equals(this.classid, average.classid) &&
        Objects.equals(this.objversion, average.objversion) &&
        Objects.equals(this.createdbyId, average.createdbyId) &&
        Objects.equals(this.correctedbyId, average.correctedbyId) &&
        Objects.equals(this.calccharts, average.calccharts) &&
        Objects.equals(this.workingrelationId, average.workingrelationId) &&
        Objects.equals(this.employeeId, average.employeeId) &&
        Objects.equals(this.averagekind, average.averagekind) &&
        Objects.equals(this.averageorigin, average.averageorigin) &&
        Objects.equals(this.description, average.description) &&
        Objects.equals(this.calcfromdate, average.calcfromdate) &&
        Objects.equals(this.calctodate, average.calctodate) &&
        Objects.equals(this.validfromdate, average.validfromdate) &&
        Objects.equals(this.validtodate, average.validtodate) &&
        Objects.equals(this.numerator, average.numerator) &&
        Objects.equals(this.denominator, average.denominator) &&
        Objects.equals(this.average, average.average) &&
        Objects.equals(this.averagekindastext, average.averagekindastext) &&
        Objects.equals(this.averageoriginastext, average.averageoriginastext) &&
        Objects.equals(this.calcchartId, average.calcchartId) &&
        Objects.equals(this.employeename, average.employeename) &&
        Objects.equals(this.persPersonalnumber, average.persPersonalnumber) &&
        Objects.equals(this.datefrom, average.datefrom) &&
        Objects.equals(this.dateto, average.dateto);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, createdbyId, correctedbyId, calccharts, workingrelationId, employeeId, averagekind, averageorigin, description, calcfromdate, calctodate, validfromdate, validtodate, numerator, denominator, average, averagekindastext, averageoriginastext, calcchartId, employeename, persPersonalnumber, datefrom, dateto);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Average {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    createdbyId: ").append(toIndentedString(createdbyId)).append("\n");
    sb.append("    correctedbyId: ").append(toIndentedString(correctedbyId)).append("\n");
    sb.append("    calccharts: ").append(toIndentedString(calccharts)).append("\n");
    sb.append("    workingrelationId: ").append(toIndentedString(workingrelationId)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    averagekind: ").append(toIndentedString(averagekind)).append("\n");
    sb.append("    averageorigin: ").append(toIndentedString(averageorigin)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    calcfromdate: ").append(toIndentedString(calcfromdate)).append("\n");
    sb.append("    calctodate: ").append(toIndentedString(calctodate)).append("\n");
    sb.append("    validfromdate: ").append(toIndentedString(validfromdate)).append("\n");
    sb.append("    validtodate: ").append(toIndentedString(validtodate)).append("\n");
    sb.append("    numerator: ").append(toIndentedString(numerator)).append("\n");
    sb.append("    denominator: ").append(toIndentedString(denominator)).append("\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    averagekindastext: ").append(toIndentedString(averagekindastext)).append("\n");
    sb.append("    averageoriginastext: ").append(toIndentedString(averageoriginastext)).append("\n");
    sb.append("    calcchartId: ").append(toIndentedString(calcchartId)).append("\n");
    sb.append("    employeename: ").append(toIndentedString(employeename)).append("\n");
    sb.append("    persPersonalnumber: ").append(toIndentedString(persPersonalnumber)).append("\n");
    sb.append("    datefrom: ").append(toIndentedString(datefrom)).append("\n");
    sb.append("    dateto: ").append(toIndentedString(dateto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

