/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Average
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Average   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CalcCharts")
  private List<Averagechart> calcCharts = new ArrayList<Averagechart>();

  @SerializedName("WorkingRelation_ID")
  private String workingRelationID = null;

  @SerializedName("Employee_ID")
  private String employeeID = null;

  @SerializedName("AverageKind")
  private Integer averageKind = null;

  @SerializedName("AverageOrigin")
  private Integer averageOrigin = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("CalcFrom$DATE")
  private DateTime calcFromDATE = null;

  @SerializedName("CalcTo$DATE")
  private DateTime calcToDATE = null;

  @SerializedName("ValidFrom$DATE")
  private DateTime validFromDATE = null;

  @SerializedName("ValidTo$DATE")
  private DateTime validToDATE = null;

  @SerializedName("Numerator")
  private Double numerator = null;

  @SerializedName("Denominator")
  private Double denominator = null;

  @SerializedName("Average")
  private Double average = null;

  @SerializedName("AverageKindAsText")
  private String averageKindAsText = null;

  @SerializedName("AverageOriginAsText")
  private String averageOriginAsText = null;

  @SerializedName("CalcChart_ID")
  private String calcChartID = null;

  @SerializedName("EmployeeName")
  private String employeeName = null;

  @SerializedName("PERS_PersonalNumber")
  private String pERSPersonalNumber = null;

  @SerializedName("DateFrom")
  private DateTime dateFrom = null;

  @SerializedName("DateTo")
  private DateTime dateTo = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Average createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Average correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Average calcCharts(List<Averagechart> calcCharts) {
    this.calcCharts = calcCharts;
    return this;
  }

  public Average addCalcChartsItem(Averagechart calcChartsItem) {
    this.calcCharts.add(calcChartsItem);
    return this;
  }

   /**
   * Výpočtová schémata; kolekce BO Výp.vzorec průměru [nepersistentní položka]
   * @return calcCharts
  **/
  @ApiModelProperty(example = "null", value = "Výpočtová schémata; kolekce BO Výp.vzorec průměru [nepersistentní položka]")
  public List<Averagechart> getCalcCharts() {
    return calcCharts;
  }

  public void setCalcCharts(List<Averagechart> calcCharts) {
    this.calcCharts = calcCharts;
  }

  public Average workingRelationID(String workingRelationID) {
    this.workingRelationID = workingRelationID;
    return this;
  }

   /**
   * Pracovní poměr; ID objektu Pracovní poměr [persistentní položka]
   * @return workingRelationID
  **/
  @ApiModelProperty(example = "null", value = "Pracovní poměr; ID objektu Pracovní poměr [persistentní položka]")
  public String getWorkingRelationID() {
    return workingRelationID;
  }

  public void setWorkingRelationID(String workingRelationID) {
    this.workingRelationID = workingRelationID;
  }

  public Average employeeID(String employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Zaměstnanec; ID objektu Zaměstnanec
   * @return employeeID
  **/
  @ApiModelProperty(example = "null", value = "Zaměstnanec; ID objektu Zaměstnanec")
  public String getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(String employeeID) {
    this.employeeID = employeeID;
  }

  public Average averageKind(Integer averageKind) {
    this.averageKind = averageKind;
    return this;
  }

   /**
   * Typ průměru [persistentní položka]
   * @return averageKind
  **/
  @ApiModelProperty(example = "null", value = "Typ průměru [persistentní položka]")
  public Integer getAverageKind() {
    return averageKind;
  }

  public void setAverageKind(Integer averageKind) {
    this.averageKind = averageKind;
  }

  public Average averageOrigin(Integer averageOrigin) {
    this.averageOrigin = averageOrigin;
    return this;
  }

   /**
   * Původ [persistentní položka]
   * @return averageOrigin
  **/
  @ApiModelProperty(example = "null", value = "Původ [persistentní položka]")
  public Integer getAverageOrigin() {
    return averageOrigin;
  }

  public void setAverageOrigin(Integer averageOrigin) {
    this.averageOrigin = averageOrigin;
  }

  public Average description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Average calcFromDATE(DateTime calcFromDATE) {
    this.calcFromDATE = calcFromDATE;
    return this;
  }

   /**
   * Spočten od [persistentní položka]
   * @return calcFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Spočten od [persistentní položka]")
  public DateTime getCalcFromDATE() {
    return calcFromDATE;
  }

  public void setCalcFromDATE(DateTime calcFromDATE) {
    this.calcFromDATE = calcFromDATE;
  }

  public Average calcToDATE(DateTime calcToDATE) {
    this.calcToDATE = calcToDATE;
    return this;
  }

   /**
   * Spočten do [persistentní položka]
   * @return calcToDATE
  **/
  @ApiModelProperty(example = "null", value = "Spočten do [persistentní položka]")
  public DateTime getCalcToDATE() {
    return calcToDATE;
  }

  public void setCalcToDATE(DateTime calcToDATE) {
    this.calcToDATE = calcToDATE;
  }

  public Average validFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
    return this;
  }

   /**
   * Platný od [persistentní položka]
   * @return validFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Platný od [persistentní položka]")
  public DateTime getValidFromDATE() {
    return validFromDATE;
  }

  public void setValidFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
  }

  public Average validToDATE(DateTime validToDATE) {
    this.validToDATE = validToDATE;
    return this;
  }

   /**
   * Platný do [persistentní položka]
   * @return validToDATE
  **/
  @ApiModelProperty(example = "null", value = "Platný do [persistentní položka]")
  public DateTime getValidToDATE() {
    return validToDATE;
  }

  public void setValidToDATE(DateTime validToDATE) {
    this.validToDATE = validToDATE;
  }

  public Average numerator(Double numerator) {
    this.numerator = numerator;
    return this;
  }

   /**
   * Čitatel [persistentní položka]
   * @return numerator
  **/
  @ApiModelProperty(example = "null", value = "Čitatel [persistentní položka]")
  public Double getNumerator() {
    return numerator;
  }

  public void setNumerator(Double numerator) {
    this.numerator = numerator;
  }

  public Average denominator(Double denominator) {
    this.denominator = denominator;
    return this;
  }

   /**
   * Jmenovatel [persistentní položka]
   * @return denominator
  **/
  @ApiModelProperty(example = "null", value = "Jmenovatel [persistentní položka]")
  public Double getDenominator() {
    return denominator;
  }

  public void setDenominator(Double denominator) {
    this.denominator = denominator;
  }

  public Average average(Double average) {
    this.average = average;
    return this;
  }

   /**
   * Průměr
   * @return average
  **/
  @ApiModelProperty(example = "null", value = "Průměr")
  public Double getAverage() {
    return average;
  }

  public void setAverage(Double average) {
    this.average = average;
  }

  public Average averageKindAsText(String averageKindAsText) {
    this.averageKindAsText = averageKindAsText;
    return this;
  }

   /**
   * Typ průměru
   * @return averageKindAsText
  **/
  @ApiModelProperty(example = "null", value = "Typ průměru")
  public String getAverageKindAsText() {
    return averageKindAsText;
  }

  public void setAverageKindAsText(String averageKindAsText) {
    this.averageKindAsText = averageKindAsText;
  }

  public Average averageOriginAsText(String averageOriginAsText) {
    this.averageOriginAsText = averageOriginAsText;
    return this;
  }

   /**
   * Původ průměru
   * @return averageOriginAsText
  **/
  @ApiModelProperty(example = "null", value = "Původ průměru")
  public String getAverageOriginAsText() {
    return averageOriginAsText;
  }

  public void setAverageOriginAsText(String averageOriginAsText) {
    this.averageOriginAsText = averageOriginAsText;
  }

  public Average calcChartID(String calcChartID) {
    this.calcChartID = calcChartID;
    return this;
  }

   /**
   * Výp.schéma; ID objektu Výpočtové schéma
   * @return calcChartID
  **/
  @ApiModelProperty(example = "null", value = "Výp.schéma; ID objektu Výpočtové schéma")
  public String getCalcChartID() {
    return calcChartID;
  }

  public void setCalcChartID(String calcChartID) {
    this.calcChartID = calcChartID;
  }

   /**
   * Příjmení a jméno
   * @return employeeName
  **/
  @ApiModelProperty(example = "null", value = "Příjmení a jméno")
  public String getEmployeeName() {
    return employeeName;
  }

   /**
   * Os. číslo
   * @return pERSPersonalNumber
  **/
  @ApiModelProperty(example = "null", value = "Os. číslo")
  public String getPERSPersonalNumber() {
    return pERSPersonalNumber;
  }

  public Average dateFrom(DateTime dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Data od
   * @return dateFrom
  **/
  @ApiModelProperty(example = "null", value = "Data od")
  public DateTime getDateFrom() {
    return dateFrom;
  }

  public void setDateFrom(DateTime dateFrom) {
    this.dateFrom = dateFrom;
  }

  public Average dateTo(DateTime dateTo) {
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Data do
   * @return dateTo
  **/
  @ApiModelProperty(example = "null", value = "Data do")
  public DateTime getDateTo() {
    return dateTo;
  }

  public void setDateTo(DateTime dateTo) {
    this.dateTo = dateTo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Average average = (Average) o;
    return Objects.equals(this.displayName, average.displayName) &&
        Objects.equals(this.ID, average.ID) &&
        Objects.equals(this.classID, average.classID) &&
        Objects.equals(this.objVersion, average.objVersion) &&
        Objects.equals(this.createdByID, average.createdByID) &&
        Objects.equals(this.correctedByID, average.correctedByID) &&
        Objects.equals(this.calcCharts, average.calcCharts) &&
        Objects.equals(this.workingRelationID, average.workingRelationID) &&
        Objects.equals(this.employeeID, average.employeeID) &&
        Objects.equals(this.averageKind, average.averageKind) &&
        Objects.equals(this.averageOrigin, average.averageOrigin) &&
        Objects.equals(this.description, average.description) &&
        Objects.equals(this.calcFromDATE, average.calcFromDATE) &&
        Objects.equals(this.calcToDATE, average.calcToDATE) &&
        Objects.equals(this.validFromDATE, average.validFromDATE) &&
        Objects.equals(this.validToDATE, average.validToDATE) &&
        Objects.equals(this.numerator, average.numerator) &&
        Objects.equals(this.denominator, average.denominator) &&
        Objects.equals(this.average, average.average) &&
        Objects.equals(this.averageKindAsText, average.averageKindAsText) &&
        Objects.equals(this.averageOriginAsText, average.averageOriginAsText) &&
        Objects.equals(this.calcChartID, average.calcChartID) &&
        Objects.equals(this.employeeName, average.employeeName) &&
        Objects.equals(this.pERSPersonalNumber, average.pERSPersonalNumber) &&
        Objects.equals(this.dateFrom, average.dateFrom) &&
        Objects.equals(this.dateTo, average.dateTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, createdByID, correctedByID, calcCharts, workingRelationID, employeeID, averageKind, averageOrigin, description, calcFromDATE, calcToDATE, validFromDATE, validToDATE, numerator, denominator, average, averageKindAsText, averageOriginAsText, calcChartID, employeeName, pERSPersonalNumber, dateFrom, dateTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Average {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    calcCharts: ").append(toIndentedString(calcCharts)).append("\n");
    sb.append("    workingRelationID: ").append(toIndentedString(workingRelationID)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    averageKind: ").append(toIndentedString(averageKind)).append("\n");
    sb.append("    averageOrigin: ").append(toIndentedString(averageOrigin)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    calcFromDATE: ").append(toIndentedString(calcFromDATE)).append("\n");
    sb.append("    calcToDATE: ").append(toIndentedString(calcToDATE)).append("\n");
    sb.append("    validFromDATE: ").append(toIndentedString(validFromDATE)).append("\n");
    sb.append("    validToDATE: ").append(toIndentedString(validToDATE)).append("\n");
    sb.append("    numerator: ").append(toIndentedString(numerator)).append("\n");
    sb.append("    denominator: ").append(toIndentedString(denominator)).append("\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    averageKindAsText: ").append(toIndentedString(averageKindAsText)).append("\n");
    sb.append("    averageOriginAsText: ").append(toIndentedString(averageOriginAsText)).append("\n");
    sb.append("    calcChartID: ").append(toIndentedString(calcChartID)).append("\n");
    sb.append("    employeeName: ").append(toIndentedString(employeeName)).append("\n");
    sb.append("    pERSPersonalNumber: ").append(toIndentedString(pERSPersonalNumber)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

