/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Wageoperationtype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Wageoperationtype   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OperationUnit")
  private String operationUnit = null;

  @SerializedName("ChargeExpression")
  private String chargeExpression = null;

  @SerializedName("ExternIdentification")
  private String externIdentification = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("HowUseInClosing")
  private Integer howUseInClosing = null;

  @SerializedName("ClosingExpression")
  private String closingExpression = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Wageoperationtype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Wageoperationtype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Wageoperationtype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Wageoperationtype operationUnit(String operationUnit) {
    this.operationUnit = operationUnit;
    return this;
  }

   /**
   * Jedn. [persistentní položka]
   * @return operationUnit
  **/
  @ApiModelProperty(example = "null", value = "Jedn. [persistentní položka]")
  public String getOperationUnit() {
    return operationUnit;
  }

  public void setOperationUnit(String operationUnit) {
    this.operationUnit = operationUnit;
  }

  public Wageoperationtype chargeExpression(String chargeExpression) {
    this.chargeExpression = chargeExpression;
    return this;
  }

   /**
   * Výraz [persistentní položka]
   * @return chargeExpression
  **/
  @ApiModelProperty(example = "null", value = "Výraz [persistentní položka]")
  public String getChargeExpression() {
    return chargeExpression;
  }

  public void setChargeExpression(String chargeExpression) {
    this.chargeExpression = chargeExpression;
  }

  public Wageoperationtype externIdentification(String externIdentification) {
    this.externIdentification = externIdentification;
    return this;
  }

   /**
   * Ext. ID [persistentní položka]
   * @return externIdentification
  **/
  @ApiModelProperty(example = "null", value = "Ext. ID [persistentní položka]")
  public String getExternIdentification() {
    return externIdentification;
  }

  public void setExternIdentification(String externIdentification) {
    this.externIdentification = externIdentification;
  }

  public Wageoperationtype createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Wageoperationtype correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Wageoperationtype howUseInClosing(Integer howUseInClosing) {
    this.howUseInClosing = howUseInClosing;
    return this;
  }

   /**
   * Ocenění uzávěrky [persistentní položka]
   * @return howUseInClosing
  **/
  @ApiModelProperty(example = "null", value = "Ocenění uzávěrky [persistentní položka]")
  public Integer getHowUseInClosing() {
    return howUseInClosing;
  }

  public void setHowUseInClosing(Integer howUseInClosing) {
    this.howUseInClosing = howUseInClosing;
  }

  public Wageoperationtype closingExpression(String closingExpression) {
    this.closingExpression = closingExpression;
    return this;
  }

   /**
   * Výraz pro uzávěrku [persistentní položka]
   * @return closingExpression
  **/
  @ApiModelProperty(example = "null", value = "Výraz pro uzávěrku [persistentní položka]")
  public String getClosingExpression() {
    return closingExpression;
  }

  public void setClosingExpression(String closingExpression) {
    this.closingExpression = closingExpression;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wageoperationtype wageoperationtype = (Wageoperationtype) o;
    return Objects.equals(this.displayName, wageoperationtype.displayName) &&
        Objects.equals(this.ID, wageoperationtype.ID) &&
        Objects.equals(this.classID, wageoperationtype.classID) &&
        Objects.equals(this.objVersion, wageoperationtype.objVersion) &&
        Objects.equals(this.hidden, wageoperationtype.hidden) &&
        Objects.equals(this.code, wageoperationtype.code) &&
        Objects.equals(this.name, wageoperationtype.name) &&
        Objects.equals(this.operationUnit, wageoperationtype.operationUnit) &&
        Objects.equals(this.chargeExpression, wageoperationtype.chargeExpression) &&
        Objects.equals(this.externIdentification, wageoperationtype.externIdentification) &&
        Objects.equals(this.createdByID, wageoperationtype.createdByID) &&
        Objects.equals(this.correctedByID, wageoperationtype.correctedByID) &&
        Objects.equals(this.howUseInClosing, wageoperationtype.howUseInClosing) &&
        Objects.equals(this.closingExpression, wageoperationtype.closingExpression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, operationUnit, chargeExpression, externIdentification, createdByID, correctedByID, howUseInClosing, closingExpression);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wageoperationtype {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operationUnit: ").append(toIndentedString(operationUnit)).append("\n");
    sb.append("    chargeExpression: ").append(toIndentedString(chargeExpression)).append("\n");
    sb.append("    externIdentification: ").append(toIndentedString(externIdentification)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    howUseInClosing: ").append(toIndentedString(howUseInClosing)).append("\n");
    sb.append("    closingExpression: ").append(toIndentedString(closingExpression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

