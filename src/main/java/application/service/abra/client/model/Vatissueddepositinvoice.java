/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Vatissueddepositinvoice
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Vatissueddepositinvoice   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Vatissueddepositinvoicerow> rows = new ArrayList<Vatissueddepositinvoicerow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("DocUUID")
  private String docUUID = null;

  @SerializedName("AccPresetDef_ID")
  private String accPresetDefID = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("FirmOffice_ID")
  private String firmOfficeID = null;

  @SerializedName("Person_ID")
  private String personID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("AccDate$DATE")
  private DateTime accDateDATE = null;

  @SerializedName("AccDocQueue_ID")
  private String accDocQueueID = null;

  @SerializedName("AccountingType")
  private Integer accountingType = null;

  @SerializedName("IsAccounted")
  private Boolean isAccounted = null;

  @SerializedName("Dirty")
  private Boolean dirty = null;

  @SerializedName("Country_ID")
  private String countryID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("CurrRate")
  private Double currRate = null;

  @SerializedName("RefCurrRate")
  private Double refCurrRate = null;

  @SerializedName("Coef")
  private Integer coef = null;

  @SerializedName("LocalCoef")
  private Integer localCoef = null;

  @SerializedName("Zone_ID")
  private String zoneID = null;

  @SerializedName("LocalZone_ID")
  private String localZoneID = null;

  @SerializedName("RefCurrency_ID")
  private String refCurrencyID = null;

  @SerializedName("LocalRefCurrency_ID")
  private String localRefCurrencyID = null;

  @SerializedName("CurrRateInfo")
  private String currRateInfo = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("LocalAmount")
  private Double localAmount = null;

  @SerializedName("PaidAmount")
  private Double paidAmount = null;

  @SerializedName("LocalPaidAmount")
  private Double localPaidAmount = null;

  @SerializedName("NotPaidAmount")
  private Double notPaidAmount = null;

  @SerializedName("LocalNotPaidAmount")
  private Double localNotPaidAmount = null;

  @SerializedName("ClosingPeriod_ID")
  private String closingPeriodID = null;

  @SerializedName("LastPaymentPeriod_ID")
  private String lastPaymentPeriodID = null;

  @SerializedName("IsProfit")
  private Boolean isProfit = null;

  @SerializedName("Address_ID")
  private String addressID = null;

  @SerializedName("VATCountry_ID")
  private String vATCountryID = null;

  @SerializedName("AmountWithoutVAT")
  private Double amountWithoutVAT = null;

  @SerializedName("LocalAmountWithoutVAT")
  private Double localAmountWithoutVAT = null;

  @SerializedName("VATDate$DATE")
  private DateTime vATDateDATE = null;

  @SerializedName("VATDocument")
  private Boolean vATDocument = null;

  @SerializedName("PricesWithVAT")
  private Boolean pricesWithVAT = null;

  @SerializedName("TradeType")
  private Integer tradeType = null;

  @SerializedName("TradeTypeDescription")
  private String tradeTypeDescription = null;

  @SerializedName("VATRounding")
  private Integer vATRounding = null;

  @SerializedName("VATFromAbovePrecision")
  private Integer vATFromAbovePrecision = null;

  @SerializedName("RoundingAmount")
  private Double roundingAmount = null;

  @SerializedName("LocalRoundingAmount")
  private Double localRoundingAmount = null;

  @SerializedName("IsReverseChargeDeclared")
  private Boolean isReverseChargeDeclared = null;

  @SerializedName("SimplifiedVATDocument")
  private Boolean simplifiedVATDocument = null;

  @SerializedName("VATReportPreference")
  private String vATReportPreference = null;

  @SerializedName("ExternalNumber")
  private String externalNumber = null;

  @SerializedName("VATByPayment")
  private Boolean vATByPayment = null;

  @SerializedName("VATByPaymentEndDate$DATE")
  private DateTime vATByPaymentEndDateDATE = null;

  @SerializedName("UsedAmountWithoutVAT")
  private Double usedAmountWithoutVAT = null;

  @SerializedName("LocalUsedAmountWithoutVAT")
  private Double localUsedAmountWithoutVAT = null;

  @SerializedName("CreditAmount")
  private Double creditAmount = null;

  @SerializedName("LocalCreditAmount")
  private Double localCreditAmount = null;

  @SerializedName("CreditAmountWithoutVAT")
  private Double creditAmountWithoutVAT = null;

  @SerializedName("LocalCreditAmountWithoutVAT")
  private Double localCreditAmountWithoutVAT = null;

  @SerializedName("UsedAmount")
  private Double usedAmount = null;

  @SerializedName("LocalUsedAmount")
  private Double localUsedAmount = null;

  @SerializedName("PaidCreditAmount")
  private Double paidCreditAmount = null;

  @SerializedName("LocalPaidCreditAmount")
  private Double localPaidCreditAmount = null;

  @SerializedName("PaymentSourcePAmount")
  private Double paymentSourcePAmount = null;

  @SerializedName("RemainUsedAmount")
  private Double remainUsedAmount = null;

  @SerializedName("LocalRemainUsedAmount")
  private Double localRemainUsedAmount = null;

  @SerializedName("RemainUsedAmountWithoutVAT")
  private Double remainUsedAmountWithoutVAT = null;

  @SerializedName("LocalRemainUsedAmountWithoutVAT")
  private Double localRemainUsedAmountWithoutVAT = null;

  @SerializedName("CorrectionAmount")
  private Double correctionAmount = null;

  @SerializedName("LocalCorrectionAmount")
  private Double localCorrectionAmount = null;

  @SerializedName("CorrectionAmountWithoutVAT")
  private Double correctionAmountWithoutVAT = null;

  @SerializedName("LocalCorrectionAmountWithoutVAT")
  private Double localCorrectionAmountWithoutVAT = null;

  @SerializedName("CorrectedUsedAmount")
  private Double correctedUsedAmount = null;

  @SerializedName("LocalCorrectedUsedAmount")
  private Double localCorrectedUsedAmount = null;

  @SerializedName("Usable")
  private Boolean usable = null;

  @SerializedName("VATVoluntaryPaid")
  private Boolean vATVoluntaryPaid = null;

  @SerializedName("VATReportReference")
  private String vATReportReference = null;

  @SerializedName("CreatedAt$DATE")
  private DateTime createdAtDATE = null;

  @SerializedName("CorrectedAt$DATE")
  private DateTime correctedAtDATE = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Vatissueddepositinvoice rows(List<Vatissueddepositinvoicerow> rows) {
    this.rows = rows;
    return this;
  }

  public Vatissueddepositinvoice addRowsItem(Vatissueddepositinvoicerow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Daňový zálohový list vydaný - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Daňový zálohový list vydaný - řádek [nepersistentní položka]")
  public List<Vatissueddepositinvoicerow> getRows() {
    return rows;
  }

  public void setRows(List<Vatissueddepositinvoicerow> rows) {
    this.rows = rows;
  }

  public Vatissueddepositinvoice docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Vatissueddepositinvoice periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Vatissueddepositinvoice ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Vatissueddepositinvoice docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Vatissueddepositinvoice createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Vatissueddepositinvoice correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Vatissueddepositinvoice newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Vatissueddepositinvoice newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Vatissueddepositinvoice docUUID(String docUUID) {
    this.docUUID = docUUID;
    return this;
  }

   /**
   * GUID dokladu pro exporty [persistentní položka]
   * @return docUUID
  **/
  @ApiModelProperty(example = "null", value = "GUID dokladu pro exporty [persistentní položka]")
  public String getDocUUID() {
    return docUUID;
  }

  public void setDocUUID(String docUUID) {
    this.docUUID = docUUID;
  }

  public Vatissueddepositinvoice accPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
    return this;
  }

   /**
   * Předkontace; ID objektu Účetní předkontace [persistentní položka]
   * @return accPresetDefID
  **/
  @ApiModelProperty(example = "null", value = "Předkontace; ID objektu Účetní předkontace [persistentní položka]")
  public String getAccPresetDefID() {
    return accPresetDefID;
  }

  public void setAccPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
  }

  public Vatissueddepositinvoice firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Vatissueddepositinvoice firmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
    return this;
  }

   /**
   * Provozovna; ID objektu Provozovna [persistentní položka]
   * @return firmOfficeID
  **/
  @ApiModelProperty(example = "null", value = "Provozovna; ID objektu Provozovna [persistentní položka]")
  public String getFirmOfficeID() {
    return firmOfficeID;
  }

  public void setFirmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
  }

  public Vatissueddepositinvoice personID(String personID) {
    this.personID = personID;
    return this;
  }

   /**
   * Osoba; ID objektu Osoba [persistentní položka]
   * @return personID
  **/
  @ApiModelProperty(example = "null", value = "Osoba; ID objektu Osoba [persistentní položka]")
  public String getPersonID() {
    return personID;
  }

  public void setPersonID(String personID) {
    this.personID = personID;
  }

  public Vatissueddepositinvoice description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Vatissueddepositinvoice accDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
    return this;
  }

   /**
   * Datum účt. [persistentní položka]
   * @return accDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum účt. [persistentní položka]")
  public DateTime getAccDateDATE() {
    return accDateDATE;
  }

  public void setAccDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
  }

  public Vatissueddepositinvoice accDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
    return this;
  }

   /**
   * Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]
   * @return accDocQueueID
  **/
  @ApiModelProperty(example = "null", value = "Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]")
  public String getAccDocQueueID() {
    return accDocQueueID;
  }

  public void setAccDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
  }

  public Vatissueddepositinvoice accountingType(Integer accountingType) {
    this.accountingType = accountingType;
    return this;
  }

   /**
   * Jak účtovat
   * @return accountingType
  **/
  @ApiModelProperty(example = "null", value = "Jak účtovat")
  public Integer getAccountingType() {
    return accountingType;
  }

  public void setAccountingType(Integer accountingType) {
    this.accountingType = accountingType;
  }

  public Vatissueddepositinvoice isAccounted(Boolean isAccounted) {
    this.isAccounted = isAccounted;
    return this;
  }

   /**
   * Účtováno
   * @return isAccounted
  **/
  @ApiModelProperty(example = "null", value = "Účtováno")
  public Boolean getIsAccounted() {
    return isAccounted;
  }

  public void setIsAccounted(Boolean isAccounted) {
    this.isAccounted = isAccounted;
  }

  public Vatissueddepositinvoice dirty(Boolean dirty) {
    this.dirty = dirty;
    return this;
  }

   /**
   * Zakázané přepočítání [persistentní položka]
   * @return dirty
  **/
  @ApiModelProperty(example = "null", value = "Zakázané přepočítání [persistentní položka]")
  public Boolean getDirty() {
    return dirty;
  }

  public void setDirty(Boolean dirty) {
    this.dirty = dirty;
  }

  public Vatissueddepositinvoice countryID(String countryID) {
    this.countryID = countryID;
    return this;
  }

   /**
   * Země; ID objektu Země [persistentní položka]
   * @return countryID
  **/
  @ApiModelProperty(example = "null", value = "Země; ID objektu Země [persistentní položka]")
  public String getCountryID() {
    return countryID;
  }

  public void setCountryID(String countryID) {
    this.countryID = countryID;
  }

  public Vatissueddepositinvoice currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Vatissueddepositinvoice currRate(Double currRate) {
    this.currRate = currRate;
    return this;
  }

   /**
   * Kurz měny [persistentní položka]
   * @return currRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz měny [persistentní položka]")
  public Double getCurrRate() {
    return currRate;
  }

  public void setCurrRate(Double currRate) {
    this.currRate = currRate;
  }

  public Vatissueddepositinvoice refCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
    return this;
  }

   /**
   * Kurz vztažný [persistentní položka]
   * @return refCurrRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz vztažný [persistentní položka]")
  public Double getRefCurrRate() {
    return refCurrRate;
  }

  public void setRefCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
  }

  public Vatissueddepositinvoice coef(Integer coef) {
    this.coef = coef;
    return this;
  }

   /**
   * Koeficient [persistentní položka]
   * @return coef
  **/
  @ApiModelProperty(example = "null", value = "Koeficient [persistentní položka]")
  public Integer getCoef() {
    return coef;
  }

  public void setCoef(Integer coef) {
    this.coef = coef;
  }

  public Vatissueddepositinvoice localCoef(Integer localCoef) {
    this.localCoef = localCoef;
    return this;
  }

   /**
   * Lokální koeficient [persistentní položka]
   * @return localCoef
  **/
  @ApiModelProperty(example = "null", value = "Lokální koeficient [persistentní položka]")
  public Integer getLocalCoef() {
    return localCoef;
  }

  public void setLocalCoef(Integer localCoef) {
    this.localCoef = localCoef;
  }

  public Vatissueddepositinvoice zoneID(String zoneID) {
    this.zoneID = zoneID;
    return this;
  }

   /**
   * Zóna; ID objektu Měna [persistentní položka]
   * @return zoneID
  **/
  @ApiModelProperty(example = "null", value = "Zóna; ID objektu Měna [persistentní položka]")
  public String getZoneID() {
    return zoneID;
  }

  public void setZoneID(String zoneID) {
    this.zoneID = zoneID;
  }

  public Vatissueddepositinvoice localZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
    return this;
  }

   /**
   * Lokální zóna; ID objektu Měna [persistentní položka]
   * @return localZoneID
  **/
  @ApiModelProperty(example = "null", value = "Lokální zóna; ID objektu Měna [persistentní položka]")
  public String getLocalZoneID() {
    return localZoneID;
  }

  public void setLocalZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
  }

   /**
   * Ref.měna; ID objektu Měna
   * @return refCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Ref.měna; ID objektu Měna")
  public String getRefCurrencyID() {
    return refCurrencyID;
  }

   /**
   * Lok.ref.měna; ID objektu Měna
   * @return localRefCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Lok.ref.měna; ID objektu Měna")
  public String getLocalRefCurrencyID() {
    return localRefCurrencyID;
  }

   /**
   * Kurz měny textově
   * @return currRateInfo
  **/
  @ApiModelProperty(example = "null", value = "Kurz měny textově")
  public String getCurrRateInfo() {
    return currRateInfo;
  }

  public Vatissueddepositinvoice amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Celkem [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Celkem [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Vatissueddepositinvoice localAmount(Double localAmount) {
    this.localAmount = localAmount;
    return this;
  }

   /**
   * Celkem lokálně [persistentní položka]
   * @return localAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně [persistentní položka]")
  public Double getLocalAmount() {
    return localAmount;
  }

  public void setLocalAmount(Double localAmount) {
    this.localAmount = localAmount;
  }

   /**
   * Celkem zapl. [persistentní položka]
   * @return paidAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem zapl. [persistentní položka]")
  public Double getPaidAmount() {
    return paidAmount;
  }

   /**
   * Zaplaceno lokálně [persistentní položka]
   * @return localPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Zaplaceno lokálně [persistentní položka]")
  public Double getLocalPaidAmount() {
    return localPaidAmount;
  }

  public Vatissueddepositinvoice notPaidAmount(Double notPaidAmount) {
    this.notPaidAmount = notPaidAmount;
    return this;
  }

   /**
   * Nezaplaceno
   * @return notPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplaceno")
  public Double getNotPaidAmount() {
    return notPaidAmount;
  }

  public void setNotPaidAmount(Double notPaidAmount) {
    this.notPaidAmount = notPaidAmount;
  }

  public Vatissueddepositinvoice localNotPaidAmount(Double localNotPaidAmount) {
    this.localNotPaidAmount = localNotPaidAmount;
    return this;
  }

   /**
   * Nezaplaceno lokálně
   * @return localNotPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplaceno lokálně")
  public Double getLocalNotPaidAmount() {
    return localNotPaidAmount;
  }

  public void setLocalNotPaidAmount(Double localNotPaidAmount) {
    this.localNotPaidAmount = localNotPaidAmount;
  }

   /**
   * Období uzávěrky; ID objektu Období [persistentní položka]
   * @return closingPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období uzávěrky; ID objektu Období [persistentní položka]")
  public String getClosingPeriodID() {
    return closingPeriodID;
  }

   /**
   * Období posl. platby; ID objektu Období [persistentní položka]
   * @return lastPaymentPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období posl. platby; ID objektu Období [persistentní položka]")
  public String getLastPaymentPeriodID() {
    return lastPaymentPeriodID;
  }

  public Vatissueddepositinvoice isProfit(Boolean isProfit) {
    this.isProfit = isProfit;
    return this;
  }

   /**
   * Výnos
   * @return isProfit
  **/
  @ApiModelProperty(example = "null", value = "Výnos")
  public Boolean getIsProfit() {
    return isProfit;
  }

  public void setIsProfit(Boolean isProfit) {
    this.isProfit = isProfit;
  }

  public Vatissueddepositinvoice addressID(String addressID) {
    this.addressID = addressID;
    return this;
  }

   /**
   * Vlastní adresa; ID objektu Adresa [persistentní položka]
   * @return addressID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní adresa; ID objektu Adresa [persistentní položka]")
  public String getAddressID() {
    return addressID;
  }

  public void setAddressID(String addressID) {
    this.addressID = addressID;
  }

  public Vatissueddepositinvoice vATCountryID(String vATCountryID) {
    this.vATCountryID = vATCountryID;
    return this;
  }

   /**
   * Země přiznání DPH; ID objektu Země [persistentní položka]
   * @return vATCountryID
  **/
  @ApiModelProperty(example = "null", value = "Země přiznání DPH; ID objektu Země [persistentní položka]")
  public String getVATCountryID() {
    return vATCountryID;
  }

  public void setVATCountryID(String vATCountryID) {
    this.vATCountryID = vATCountryID;
  }

   /**
   * Celkem bez [persistentní položka]
   * @return amountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Celkem bez [persistentní položka]")
  public Double getAmountWithoutVAT() {
    return amountWithoutVAT;
  }

   /**
   * Celkem lokálně bez daně [persistentní položka]
   * @return localAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně bez daně [persistentní položka]")
  public Double getLocalAmountWithoutVAT() {
    return localAmountWithoutVAT;
  }

  public Vatissueddepositinvoice vATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
    return this;
  }

   /**
   * Datum přijetí úplaty. [persistentní položka]
   * @return vATDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum přijetí úplaty. [persistentní položka]")
  public DateTime getVATDateDATE() {
    return vATDateDATE;
  }

  public void setVATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
  }

  public Vatissueddepositinvoice vATDocument(Boolean vATDocument) {
    this.vATDocument = vATDocument;
    return this;
  }

   /**
   * DPH doklad
   * @return vATDocument
  **/
  @ApiModelProperty(example = "null", value = "DPH doklad")
  public Boolean getVATDocument() {
    return vATDocument;
  }

  public void setVATDocument(Boolean vATDocument) {
    this.vATDocument = vATDocument;
  }

  public Vatissueddepositinvoice pricesWithVAT(Boolean pricesWithVAT) {
    this.pricesWithVAT = pricesWithVAT;
    return this;
  }

   /**
   * Ceny s daní [persistentní položka]
   * @return pricesWithVAT
  **/
  @ApiModelProperty(example = "null", value = "Ceny s daní [persistentní položka]")
  public Boolean getPricesWithVAT() {
    return pricesWithVAT;
  }

  public void setPricesWithVAT(Boolean pricesWithVAT) {
    this.pricesWithVAT = pricesWithVAT;
  }

  public Vatissueddepositinvoice tradeType(Integer tradeType) {
    this.tradeType = tradeType;
    return this;
  }

   /**
   * Typ obchodu [persistentní položka]
   * @return tradeType
  **/
  @ApiModelProperty(example = "null", value = "Typ obchodu [persistentní položka]")
  public Integer getTradeType() {
    return tradeType;
  }

  public void setTradeType(Integer tradeType) {
    this.tradeType = tradeType;
  }

   /**
   * Popis typu obchodu
   * @return tradeTypeDescription
  **/
  @ApiModelProperty(example = "null", value = "Popis typu obchodu")
  public String getTradeTypeDescription() {
    return tradeTypeDescription;
  }

  public Vatissueddepositinvoice vATRounding(Integer vATRounding) {
    this.vATRounding = vATRounding;
    return this;
  }

   /**
   * Zaokrouhlení DPH [persistentní položka]
   * @return vATRounding
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlení DPH [persistentní položka]")
  public Integer getVATRounding() {
    return vATRounding;
  }

  public void setVATRounding(Integer vATRounding) {
    this.vATRounding = vATRounding;
  }

  public Vatissueddepositinvoice vATFromAbovePrecision(Integer vATFromAbovePrecision) {
    this.vATFromAbovePrecision = vATFromAbovePrecision;
    return this;
  }

   /**
   * Přesnost zdanění zaokrouhlení [persistentní položka]
   * @return vATFromAbovePrecision
  **/
  @ApiModelProperty(example = "null", value = "Přesnost zdanění zaokrouhlení [persistentní položka]")
  public Integer getVATFromAbovePrecision() {
    return vATFromAbovePrecision;
  }

  public void setVATFromAbovePrecision(Integer vATFromAbovePrecision) {
    this.vATFromAbovePrecision = vATFromAbovePrecision;
  }

  public Vatissueddepositinvoice roundingAmount(Double roundingAmount) {
    this.roundingAmount = roundingAmount;
    return this;
  }

   /**
   * Zaok.v nulové sazbě [persistentní položka]
   * @return roundingAmount
  **/
  @ApiModelProperty(example = "null", value = "Zaok.v nulové sazbě [persistentní položka]")
  public Double getRoundingAmount() {
    return roundingAmount;
  }

  public void setRoundingAmount(Double roundingAmount) {
    this.roundingAmount = roundingAmount;
  }

  public Vatissueddepositinvoice localRoundingAmount(Double localRoundingAmount) {
    this.localRoundingAmount = localRoundingAmount;
    return this;
  }

   /**
   * Zaok.v nulové sazbě lokálně [persistentní položka]
   * @return localRoundingAmount
  **/
  @ApiModelProperty(example = "null", value = "Zaok.v nulové sazbě lokálně [persistentní položka]")
  public Double getLocalRoundingAmount() {
    return localRoundingAmount;
  }

  public void setLocalRoundingAmount(Double localRoundingAmount) {
    this.localRoundingAmount = localRoundingAmount;
  }

  public Vatissueddepositinvoice isReverseChargeDeclared(Boolean isReverseChargeDeclared) {
    this.isReverseChargeDeclared = isReverseChargeDeclared;
    return this;
  }

   /**
   * Režim Přenesení daňové povinnosti [persistentní položka]
   * @return isReverseChargeDeclared
  **/
  @ApiModelProperty(example = "null", value = "Režim Přenesení daňové povinnosti [persistentní položka]")
  public Boolean getIsReverseChargeDeclared() {
    return isReverseChargeDeclared;
  }

  public void setIsReverseChargeDeclared(Boolean isReverseChargeDeclared) {
    this.isReverseChargeDeclared = isReverseChargeDeclared;
  }

  public Vatissueddepositinvoice simplifiedVATDocument(Boolean simplifiedVATDocument) {
    this.simplifiedVATDocument = simplifiedVATDocument;
    return this;
  }

   /**
   * Zjednodušený daňový doklad [persistentní položka]
   * @return simplifiedVATDocument
  **/
  @ApiModelProperty(example = "null", value = "Zjednodušený daňový doklad [persistentní položka]")
  public Boolean getSimplifiedVATDocument() {
    return simplifiedVATDocument;
  }

  public void setSimplifiedVATDocument(Boolean simplifiedVATDocument) {
    this.simplifiedVATDocument = simplifiedVATDocument;
  }

  public Vatissueddepositinvoice vATReportPreference(String vATReportPreference) {
    this.vATReportPreference = vATReportPreference;
    return this;
  }

   /**
   * Preference výkazu DPH [persistentní položka]
   * @return vATReportPreference
  **/
  @ApiModelProperty(example = "null", value = "Preference výkazu DPH [persistentní položka]")
  public String getVATReportPreference() {
    return vATReportPreference;
  }

  public void setVATReportPreference(String vATReportPreference) {
    this.vATReportPreference = vATReportPreference;
  }

  public Vatissueddepositinvoice externalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
    return this;
  }

   /**
   * Doplňkové číslo [persistentní položka]
   * @return externalNumber
  **/
  @ApiModelProperty(example = "null", value = "Doplňkové číslo [persistentní položka]")
  public String getExternalNumber() {
    return externalNumber;
  }

  public void setExternalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
  }

  public Vatissueddepositinvoice vATByPayment(Boolean vATByPayment) {
    this.vATByPayment = vATByPayment;
    return this;
  }

   /**
   * DPH na základě přijetí platby [persistentní položka]
   * @return vATByPayment
  **/
  @ApiModelProperty(example = "null", value = "DPH na základě přijetí platby [persistentní položka]")
  public Boolean getVATByPayment() {
    return vATByPayment;
  }

  public void setVATByPayment(Boolean vATByPayment) {
    this.vATByPayment = vATByPayment;
  }

  public Vatissueddepositinvoice vATByPaymentEndDateDATE(DateTime vATByPaymentEndDateDATE) {
    this.vATByPaymentEndDateDATE = vATByPaymentEndDateDATE;
    return this;
  }

   /**
   * Datum ukončení zvl. režimu [persistentní položka]
   * @return vATByPaymentEndDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum ukončení zvl. režimu [persistentní položka]")
  public DateTime getVATByPaymentEndDateDATE() {
    return vATByPaymentEndDateDATE;
  }

  public void setVATByPaymentEndDateDATE(DateTime vATByPaymentEndDateDATE) {
    this.vATByPaymentEndDateDATE = vATByPaymentEndDateDATE;
  }

   /**
   * Částka použ. bez DPH [persistentní položka]
   * @return usedAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Částka použ. bez DPH [persistentní položka]")
  public Double getUsedAmountWithoutVAT() {
    return usedAmountWithoutVAT;
  }

   /**
   * Částka použ. v lok. měně bez DPH [persistentní položka]
   * @return localUsedAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Částka použ. v lok. měně bez DPH [persistentní položka]")
  public Double getLocalUsedAmountWithoutVAT() {
    return localUsedAmountWithoutVAT;
  }

   /**
   * Dobr.celkem [persistentní položka]
   * @return creditAmount
  **/
  @ApiModelProperty(example = "null", value = "Dobr.celkem [persistentní položka]")
  public Double getCreditAmount() {
    return creditAmount;
  }

   /**
   * Dobr.lokálně [persistentní položka]
   * @return localCreditAmount
  **/
  @ApiModelProperty(example = "null", value = "Dobr.lokálně [persistentní položka]")
  public Double getLocalCreditAmount() {
    return localCreditAmount;
  }

   /**
   * Dobr.celkem bez daně [persistentní položka]
   * @return creditAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Dobr.celkem bez daně [persistentní položka]")
  public Double getCreditAmountWithoutVAT() {
    return creditAmountWithoutVAT;
  }

   /**
   * Dobr.lokálně bez daně [persistentní položka]
   * @return localCreditAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Dobr.lokálně bez daně [persistentní položka]")
  public Double getLocalCreditAmountWithoutVAT() {
    return localCreditAmountWithoutVAT;
  }

   /**
   * Částka použ. [persistentní položka]
   * @return usedAmount
  **/
  @ApiModelProperty(example = "null", value = "Částka použ. [persistentní položka]")
  public Double getUsedAmount() {
    return usedAmount;
  }

   /**
   * Částka použ.lok. [persistentní položka]
   * @return localUsedAmount
  **/
  @ApiModelProperty(example = "null", value = "Částka použ.lok. [persistentní položka]")
  public Double getLocalUsedAmount() {
    return localUsedAmount;
  }

   /**
   * Celkem zapl. na dobropisech [persistentní položka]
   * @return paidCreditAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem zapl. na dobropisech [persistentní položka]")
  public Double getPaidCreditAmount() {
    return paidCreditAmount;
  }

   /**
   * Zapl. lokálně na dobropisech [persistentní položka]
   * @return localPaidCreditAmount
  **/
  @ApiModelProperty(example = "null", value = "Zapl. lokálně na dobropisech [persistentní položka]")
  public Double getLocalPaidCreditAmount() {
    return localPaidCreditAmount;
  }

   /**
   * Placená částka
   * @return paymentSourcePAmount
  **/
  @ApiModelProperty(example = "null", value = "Placená částka")
  public Double getPaymentSourcePAmount() {
    return paymentSourcePAmount;
  }

   /**
   * Zbývá zúčtovat
   * @return remainUsedAmount
  **/
  @ApiModelProperty(example = "null", value = "Zbývá zúčtovat")
  public Double getRemainUsedAmount() {
    return remainUsedAmount;
  }

   /**
   * Zbývá zúčtovat v lok. měně
   * @return localRemainUsedAmount
  **/
  @ApiModelProperty(example = "null", value = "Zbývá zúčtovat v lok. měně")
  public Double getLocalRemainUsedAmount() {
    return localRemainUsedAmount;
  }

   /**
   * Zbývá zúčtovat bez DPH
   * @return remainUsedAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Zbývá zúčtovat bez DPH")
  public Double getRemainUsedAmountWithoutVAT() {
    return remainUsedAmountWithoutVAT;
  }

   /**
   * Zbývá zúčtovat v lok. měně bez DPH
   * @return localRemainUsedAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Zbývá zúčtovat v lok. měně bez DPH")
  public Double getLocalRemainUsedAmountWithoutVAT() {
    return localRemainUsedAmountWithoutVAT;
  }

   /**
   * Korekční částka
   * @return correctionAmount
  **/
  @ApiModelProperty(example = "null", value = "Korekční částka")
  public Double getCorrectionAmount() {
    return correctionAmount;
  }

   /**
   * Korekční částka v lok. měně
   * @return localCorrectionAmount
  **/
  @ApiModelProperty(example = "null", value = "Korekční částka v lok. měně")
  public Double getLocalCorrectionAmount() {
    return localCorrectionAmount;
  }

   /**
   * Korekční částka bez DPH
   * @return correctionAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Korekční částka bez DPH")
  public Double getCorrectionAmountWithoutVAT() {
    return correctionAmountWithoutVAT;
  }

   /**
   * Korekční částka v lok. měně bez DPH
   * @return localCorrectionAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Korekční částka v lok. měně bez DPH")
  public Double getLocalCorrectionAmountWithoutVAT() {
    return localCorrectionAmountWithoutVAT;
  }

   /**
   * Zúčt.vč.korekce
   * @return correctedUsedAmount
  **/
  @ApiModelProperty(example = "null", value = "Zúčt.vč.korekce")
  public Double getCorrectedUsedAmount() {
    return correctedUsedAmount;
  }

   /**
   * Zúčt.vč.korekce v lok. měně
   * @return localCorrectedUsedAmount
  **/
  @ApiModelProperty(example = "null", value = "Zúčt.vč.korekce v lok. měně")
  public Double getLocalCorrectedUsedAmount() {
    return localCorrectedUsedAmount;
  }

   /**
   * Zúčtovat [persistentní položka]
   * @return usable
  **/
  @ApiModelProperty(example = "null", value = "Zúčtovat [persistentní položka]")
  public Boolean getUsable() {
    return usable;
  }

  public Vatissueddepositinvoice vATVoluntaryPaid(Boolean vATVoluntaryPaid) {
    this.vATVoluntaryPaid = vATVoluntaryPaid;
    return this;
  }

   /**
   * Dobrovolné zaplacení daně [persistentní položka]
   * @return vATVoluntaryPaid
  **/
  @ApiModelProperty(example = "null", value = "Dobrovolné zaplacení daně [persistentní položka]")
  public Boolean getVATVoluntaryPaid() {
    return vATVoluntaryPaid;
  }

  public void setVATVoluntaryPaid(Boolean vATVoluntaryPaid) {
    this.vATVoluntaryPaid = vATVoluntaryPaid;
  }

  public Vatissueddepositinvoice vATReportReference(String vATReportReference) {
    this.vATReportReference = vATReportReference;
    return this;
  }

   /**
   * Reference [persistentní položka]
   * @return vATReportReference
  **/
  @ApiModelProperty(example = "null", value = "Reference [persistentní položka]")
  public String getVATReportReference() {
    return vATReportReference;
  }

  public void setVATReportReference(String vATReportReference) {
    this.vATReportReference = vATReportReference;
  }

  public Vatissueddepositinvoice createdAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return createdAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreatedAtDATE() {
    return createdAtDATE;
  }

  public void setCreatedAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
  }

  public Vatissueddepositinvoice correctedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
    return this;
  }

   /**
   * Opraveno [persistentní položka]
   * @return correctedAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraveno [persistentní položka]")
  public DateTime getCorrectedAtDATE() {
    return correctedAtDATE;
  }

  public void setCorrectedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vatissueddepositinvoice vatissueddepositinvoice = (Vatissueddepositinvoice) o;
    return Objects.equals(this.displayName, vatissueddepositinvoice.displayName) &&
        Objects.equals(this.ID, vatissueddepositinvoice.ID) &&
        Objects.equals(this.classID, vatissueddepositinvoice.classID) &&
        Objects.equals(this.objVersion, vatissueddepositinvoice.objVersion) &&
        Objects.equals(this.rows, vatissueddepositinvoice.rows) &&
        Objects.equals(this.docQueueID, vatissueddepositinvoice.docQueueID) &&
        Objects.equals(this.periodID, vatissueddepositinvoice.periodID) &&
        Objects.equals(this.ordNumber, vatissueddepositinvoice.ordNumber) &&
        Objects.equals(this.docDateDATE, vatissueddepositinvoice.docDateDATE) &&
        Objects.equals(this.createdByID, vatissueddepositinvoice.createdByID) &&
        Objects.equals(this.correctedByID, vatissueddepositinvoice.correctedByID) &&
        Objects.equals(this.newRelatedType, vatissueddepositinvoice.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, vatissueddepositinvoice.newRelatedDocumentID) &&
        Objects.equals(this.docUUID, vatissueddepositinvoice.docUUID) &&
        Objects.equals(this.accPresetDefID, vatissueddepositinvoice.accPresetDefID) &&
        Objects.equals(this.firmID, vatissueddepositinvoice.firmID) &&
        Objects.equals(this.firmOfficeID, vatissueddepositinvoice.firmOfficeID) &&
        Objects.equals(this.personID, vatissueddepositinvoice.personID) &&
        Objects.equals(this.description, vatissueddepositinvoice.description) &&
        Objects.equals(this.accDateDATE, vatissueddepositinvoice.accDateDATE) &&
        Objects.equals(this.accDocQueueID, vatissueddepositinvoice.accDocQueueID) &&
        Objects.equals(this.accountingType, vatissueddepositinvoice.accountingType) &&
        Objects.equals(this.isAccounted, vatissueddepositinvoice.isAccounted) &&
        Objects.equals(this.dirty, vatissueddepositinvoice.dirty) &&
        Objects.equals(this.countryID, vatissueddepositinvoice.countryID) &&
        Objects.equals(this.currencyID, vatissueddepositinvoice.currencyID) &&
        Objects.equals(this.currRate, vatissueddepositinvoice.currRate) &&
        Objects.equals(this.refCurrRate, vatissueddepositinvoice.refCurrRate) &&
        Objects.equals(this.coef, vatissueddepositinvoice.coef) &&
        Objects.equals(this.localCoef, vatissueddepositinvoice.localCoef) &&
        Objects.equals(this.zoneID, vatissueddepositinvoice.zoneID) &&
        Objects.equals(this.localZoneID, vatissueddepositinvoice.localZoneID) &&
        Objects.equals(this.refCurrencyID, vatissueddepositinvoice.refCurrencyID) &&
        Objects.equals(this.localRefCurrencyID, vatissueddepositinvoice.localRefCurrencyID) &&
        Objects.equals(this.currRateInfo, vatissueddepositinvoice.currRateInfo) &&
        Objects.equals(this.amount, vatissueddepositinvoice.amount) &&
        Objects.equals(this.localAmount, vatissueddepositinvoice.localAmount) &&
        Objects.equals(this.paidAmount, vatissueddepositinvoice.paidAmount) &&
        Objects.equals(this.localPaidAmount, vatissueddepositinvoice.localPaidAmount) &&
        Objects.equals(this.notPaidAmount, vatissueddepositinvoice.notPaidAmount) &&
        Objects.equals(this.localNotPaidAmount, vatissueddepositinvoice.localNotPaidAmount) &&
        Objects.equals(this.closingPeriodID, vatissueddepositinvoice.closingPeriodID) &&
        Objects.equals(this.lastPaymentPeriodID, vatissueddepositinvoice.lastPaymentPeriodID) &&
        Objects.equals(this.isProfit, vatissueddepositinvoice.isProfit) &&
        Objects.equals(this.addressID, vatissueddepositinvoice.addressID) &&
        Objects.equals(this.vATCountryID, vatissueddepositinvoice.vATCountryID) &&
        Objects.equals(this.amountWithoutVAT, vatissueddepositinvoice.amountWithoutVAT) &&
        Objects.equals(this.localAmountWithoutVAT, vatissueddepositinvoice.localAmountWithoutVAT) &&
        Objects.equals(this.vATDateDATE, vatissueddepositinvoice.vATDateDATE) &&
        Objects.equals(this.vATDocument, vatissueddepositinvoice.vATDocument) &&
        Objects.equals(this.pricesWithVAT, vatissueddepositinvoice.pricesWithVAT) &&
        Objects.equals(this.tradeType, vatissueddepositinvoice.tradeType) &&
        Objects.equals(this.tradeTypeDescription, vatissueddepositinvoice.tradeTypeDescription) &&
        Objects.equals(this.vATRounding, vatissueddepositinvoice.vATRounding) &&
        Objects.equals(this.vATFromAbovePrecision, vatissueddepositinvoice.vATFromAbovePrecision) &&
        Objects.equals(this.roundingAmount, vatissueddepositinvoice.roundingAmount) &&
        Objects.equals(this.localRoundingAmount, vatissueddepositinvoice.localRoundingAmount) &&
        Objects.equals(this.isReverseChargeDeclared, vatissueddepositinvoice.isReverseChargeDeclared) &&
        Objects.equals(this.simplifiedVATDocument, vatissueddepositinvoice.simplifiedVATDocument) &&
        Objects.equals(this.vATReportPreference, vatissueddepositinvoice.vATReportPreference) &&
        Objects.equals(this.externalNumber, vatissueddepositinvoice.externalNumber) &&
        Objects.equals(this.vATByPayment, vatissueddepositinvoice.vATByPayment) &&
        Objects.equals(this.vATByPaymentEndDateDATE, vatissueddepositinvoice.vATByPaymentEndDateDATE) &&
        Objects.equals(this.usedAmountWithoutVAT, vatissueddepositinvoice.usedAmountWithoutVAT) &&
        Objects.equals(this.localUsedAmountWithoutVAT, vatissueddepositinvoice.localUsedAmountWithoutVAT) &&
        Objects.equals(this.creditAmount, vatissueddepositinvoice.creditAmount) &&
        Objects.equals(this.localCreditAmount, vatissueddepositinvoice.localCreditAmount) &&
        Objects.equals(this.creditAmountWithoutVAT, vatissueddepositinvoice.creditAmountWithoutVAT) &&
        Objects.equals(this.localCreditAmountWithoutVAT, vatissueddepositinvoice.localCreditAmountWithoutVAT) &&
        Objects.equals(this.usedAmount, vatissueddepositinvoice.usedAmount) &&
        Objects.equals(this.localUsedAmount, vatissueddepositinvoice.localUsedAmount) &&
        Objects.equals(this.paidCreditAmount, vatissueddepositinvoice.paidCreditAmount) &&
        Objects.equals(this.localPaidCreditAmount, vatissueddepositinvoice.localPaidCreditAmount) &&
        Objects.equals(this.paymentSourcePAmount, vatissueddepositinvoice.paymentSourcePAmount) &&
        Objects.equals(this.remainUsedAmount, vatissueddepositinvoice.remainUsedAmount) &&
        Objects.equals(this.localRemainUsedAmount, vatissueddepositinvoice.localRemainUsedAmount) &&
        Objects.equals(this.remainUsedAmountWithoutVAT, vatissueddepositinvoice.remainUsedAmountWithoutVAT) &&
        Objects.equals(this.localRemainUsedAmountWithoutVAT, vatissueddepositinvoice.localRemainUsedAmountWithoutVAT) &&
        Objects.equals(this.correctionAmount, vatissueddepositinvoice.correctionAmount) &&
        Objects.equals(this.localCorrectionAmount, vatissueddepositinvoice.localCorrectionAmount) &&
        Objects.equals(this.correctionAmountWithoutVAT, vatissueddepositinvoice.correctionAmountWithoutVAT) &&
        Objects.equals(this.localCorrectionAmountWithoutVAT, vatissueddepositinvoice.localCorrectionAmountWithoutVAT) &&
        Objects.equals(this.correctedUsedAmount, vatissueddepositinvoice.correctedUsedAmount) &&
        Objects.equals(this.localCorrectedUsedAmount, vatissueddepositinvoice.localCorrectedUsedAmount) &&
        Objects.equals(this.usable, vatissueddepositinvoice.usable) &&
        Objects.equals(this.vATVoluntaryPaid, vatissueddepositinvoice.vATVoluntaryPaid) &&
        Objects.equals(this.vATReportReference, vatissueddepositinvoice.vATReportReference) &&
        Objects.equals(this.createdAtDATE, vatissueddepositinvoice.createdAtDATE) &&
        Objects.equals(this.correctedAtDATE, vatissueddepositinvoice.correctedAtDATE);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, docUUID, accPresetDefID, firmID, firmOfficeID, personID, description, accDateDATE, accDocQueueID, accountingType, isAccounted, dirty, countryID, currencyID, currRate, refCurrRate, coef, localCoef, zoneID, localZoneID, refCurrencyID, localRefCurrencyID, currRateInfo, amount, localAmount, paidAmount, localPaidAmount, notPaidAmount, localNotPaidAmount, closingPeriodID, lastPaymentPeriodID, isProfit, addressID, vATCountryID, amountWithoutVAT, localAmountWithoutVAT, vATDateDATE, vATDocument, pricesWithVAT, tradeType, tradeTypeDescription, vATRounding, vATFromAbovePrecision, roundingAmount, localRoundingAmount, isReverseChargeDeclared, simplifiedVATDocument, vATReportPreference, externalNumber, vATByPayment, vATByPaymentEndDateDATE, usedAmountWithoutVAT, localUsedAmountWithoutVAT, creditAmount, localCreditAmount, creditAmountWithoutVAT, localCreditAmountWithoutVAT, usedAmount, localUsedAmount, paidCreditAmount, localPaidCreditAmount, paymentSourcePAmount, remainUsedAmount, localRemainUsedAmount, remainUsedAmountWithoutVAT, localRemainUsedAmountWithoutVAT, correctionAmount, localCorrectionAmount, correctionAmountWithoutVAT, localCorrectionAmountWithoutVAT, correctedUsedAmount, localCorrectedUsedAmount, usable, vATVoluntaryPaid, vATReportReference, createdAtDATE, correctedAtDATE);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vatissueddepositinvoice {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    docUUID: ").append(toIndentedString(docUUID)).append("\n");
    sb.append("    accPresetDefID: ").append(toIndentedString(accPresetDefID)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    firmOfficeID: ").append(toIndentedString(firmOfficeID)).append("\n");
    sb.append("    personID: ").append(toIndentedString(personID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accDateDATE: ").append(toIndentedString(accDateDATE)).append("\n");
    sb.append("    accDocQueueID: ").append(toIndentedString(accDocQueueID)).append("\n");
    sb.append("    accountingType: ").append(toIndentedString(accountingType)).append("\n");
    sb.append("    isAccounted: ").append(toIndentedString(isAccounted)).append("\n");
    sb.append("    dirty: ").append(toIndentedString(dirty)).append("\n");
    sb.append("    countryID: ").append(toIndentedString(countryID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    currRate: ").append(toIndentedString(currRate)).append("\n");
    sb.append("    refCurrRate: ").append(toIndentedString(refCurrRate)).append("\n");
    sb.append("    coef: ").append(toIndentedString(coef)).append("\n");
    sb.append("    localCoef: ").append(toIndentedString(localCoef)).append("\n");
    sb.append("    zoneID: ").append(toIndentedString(zoneID)).append("\n");
    sb.append("    localZoneID: ").append(toIndentedString(localZoneID)).append("\n");
    sb.append("    refCurrencyID: ").append(toIndentedString(refCurrencyID)).append("\n");
    sb.append("    localRefCurrencyID: ").append(toIndentedString(localRefCurrencyID)).append("\n");
    sb.append("    currRateInfo: ").append(toIndentedString(currRateInfo)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    localPaidAmount: ").append(toIndentedString(localPaidAmount)).append("\n");
    sb.append("    notPaidAmount: ").append(toIndentedString(notPaidAmount)).append("\n");
    sb.append("    localNotPaidAmount: ").append(toIndentedString(localNotPaidAmount)).append("\n");
    sb.append("    closingPeriodID: ").append(toIndentedString(closingPeriodID)).append("\n");
    sb.append("    lastPaymentPeriodID: ").append(toIndentedString(lastPaymentPeriodID)).append("\n");
    sb.append("    isProfit: ").append(toIndentedString(isProfit)).append("\n");
    sb.append("    addressID: ").append(toIndentedString(addressID)).append("\n");
    sb.append("    vATCountryID: ").append(toIndentedString(vATCountryID)).append("\n");
    sb.append("    amountWithoutVAT: ").append(toIndentedString(amountWithoutVAT)).append("\n");
    sb.append("    localAmountWithoutVAT: ").append(toIndentedString(localAmountWithoutVAT)).append("\n");
    sb.append("    vATDateDATE: ").append(toIndentedString(vATDateDATE)).append("\n");
    sb.append("    vATDocument: ").append(toIndentedString(vATDocument)).append("\n");
    sb.append("    pricesWithVAT: ").append(toIndentedString(pricesWithVAT)).append("\n");
    sb.append("    tradeType: ").append(toIndentedString(tradeType)).append("\n");
    sb.append("    tradeTypeDescription: ").append(toIndentedString(tradeTypeDescription)).append("\n");
    sb.append("    vATRounding: ").append(toIndentedString(vATRounding)).append("\n");
    sb.append("    vATFromAbovePrecision: ").append(toIndentedString(vATFromAbovePrecision)).append("\n");
    sb.append("    roundingAmount: ").append(toIndentedString(roundingAmount)).append("\n");
    sb.append("    localRoundingAmount: ").append(toIndentedString(localRoundingAmount)).append("\n");
    sb.append("    isReverseChargeDeclared: ").append(toIndentedString(isReverseChargeDeclared)).append("\n");
    sb.append("    simplifiedVATDocument: ").append(toIndentedString(simplifiedVATDocument)).append("\n");
    sb.append("    vATReportPreference: ").append(toIndentedString(vATReportPreference)).append("\n");
    sb.append("    externalNumber: ").append(toIndentedString(externalNumber)).append("\n");
    sb.append("    vATByPayment: ").append(toIndentedString(vATByPayment)).append("\n");
    sb.append("    vATByPaymentEndDateDATE: ").append(toIndentedString(vATByPaymentEndDateDATE)).append("\n");
    sb.append("    usedAmountWithoutVAT: ").append(toIndentedString(usedAmountWithoutVAT)).append("\n");
    sb.append("    localUsedAmountWithoutVAT: ").append(toIndentedString(localUsedAmountWithoutVAT)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    localCreditAmount: ").append(toIndentedString(localCreditAmount)).append("\n");
    sb.append("    creditAmountWithoutVAT: ").append(toIndentedString(creditAmountWithoutVAT)).append("\n");
    sb.append("    localCreditAmountWithoutVAT: ").append(toIndentedString(localCreditAmountWithoutVAT)).append("\n");
    sb.append("    usedAmount: ").append(toIndentedString(usedAmount)).append("\n");
    sb.append("    localUsedAmount: ").append(toIndentedString(localUsedAmount)).append("\n");
    sb.append("    paidCreditAmount: ").append(toIndentedString(paidCreditAmount)).append("\n");
    sb.append("    localPaidCreditAmount: ").append(toIndentedString(localPaidCreditAmount)).append("\n");
    sb.append("    paymentSourcePAmount: ").append(toIndentedString(paymentSourcePAmount)).append("\n");
    sb.append("    remainUsedAmount: ").append(toIndentedString(remainUsedAmount)).append("\n");
    sb.append("    localRemainUsedAmount: ").append(toIndentedString(localRemainUsedAmount)).append("\n");
    sb.append("    remainUsedAmountWithoutVAT: ").append(toIndentedString(remainUsedAmountWithoutVAT)).append("\n");
    sb.append("    localRemainUsedAmountWithoutVAT: ").append(toIndentedString(localRemainUsedAmountWithoutVAT)).append("\n");
    sb.append("    correctionAmount: ").append(toIndentedString(correctionAmount)).append("\n");
    sb.append("    localCorrectionAmount: ").append(toIndentedString(localCorrectionAmount)).append("\n");
    sb.append("    correctionAmountWithoutVAT: ").append(toIndentedString(correctionAmountWithoutVAT)).append("\n");
    sb.append("    localCorrectionAmountWithoutVAT: ").append(toIndentedString(localCorrectionAmountWithoutVAT)).append("\n");
    sb.append("    correctedUsedAmount: ").append(toIndentedString(correctedUsedAmount)).append("\n");
    sb.append("    localCorrectedUsedAmount: ").append(toIndentedString(localCorrectedUsedAmount)).append("\n");
    sb.append("    usable: ").append(toIndentedString(usable)).append("\n");
    sb.append("    vATVoluntaryPaid: ").append(toIndentedString(vATVoluntaryPaid)).append("\n");
    sb.append("    vATReportReference: ").append(toIndentedString(vATReportReference)).append("\n");
    sb.append("    createdAtDATE: ").append(toIndentedString(createdAtDATE)).append("\n");
    sb.append("    correctedAtDATE: ").append(toIndentedString(correctedAtDATE)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

