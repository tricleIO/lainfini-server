/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Systemsupportentry
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Systemsupportentry   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Kind")
  private Integer kind = null;

  @SerializedName("EntryDate$DATE")
  private DateTime entryDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("ResponseEMail")
  private String responseEMail = null;

  @SerializedName("ShortDescription")
  private String shortDescription = null;

  @SerializedName("ProblemDescription")
  private String problemDescription = null;

  @SerializedName("ImplementationData")
  private String implementationData = null;

  @SerializedName("ProblemData")
  private String problemData = null;

  @SerializedName("SolutionDate$DATE")
  private DateTime solutionDateDATE = null;

  @SerializedName("Solver")
  private String solver = null;

  @SerializedName("SolutionDescription")
  private String solutionDescription = null;

  @SerializedName("CrossReference")
  private String crossReference = null;

  @SerializedName("Status")
  private Integer status = null;

  @SerializedName("EntryNumber")
  private Integer entryNumber = null;

  @SerializedName("ProblemSendDate$DATE")
  private DateTime problemSendDateDATE = null;

  @SerializedName("SolutionSendDate$DATE")
  private DateTime solutionSendDateDATE = null;

  @SerializedName("MachineName")
  private String machineName = null;

  @SerializedName("NotifyOnStart")
  private Boolean notifyOnStart = null;

  @SerializedName("NotifyOnSite")
  private String notifyOnSite = null;

  @SerializedName("EntrySite")
  private String entrySite = null;

  @SerializedName("Picture_ID")
  private Systemsupportentry pictureID = null;

  @SerializedName("VendorEntry")
  private Boolean vendorEntry = null;

  @SerializedName("Pictures")
  private List<Systemsupportentrypicture> pictures = new ArrayList<Systemsupportentrypicture>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Systemsupportentry kind(Integer kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Typ záznamu [persistentní položka]
   * @return kind
  **/
  @ApiModelProperty(example = "null", value = "Typ záznamu [persistentní položka]")
  public Integer getKind() {
    return kind;
  }

  public void setKind(Integer kind) {
    this.kind = kind;
  }

  public Systemsupportentry entryDateDATE(DateTime entryDateDATE) {
    this.entryDateDATE = entryDateDATE;
    return this;
  }

   /**
   * Datum zadání [persistentní položka]
   * @return entryDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum zadání [persistentní položka]")
  public DateTime getEntryDateDATE() {
    return entryDateDATE;
  }

  public void setEntryDateDATE(DateTime entryDateDATE) {
    this.entryDateDATE = entryDateDATE;
  }

  public Systemsupportentry createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Systemsupportentry firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Systemsupportentry responseEMail(String responseEMail) {
    this.responseEMail = responseEMail;
    return this;
  }

   /**
   * E-mail pro odpověď [persistentní položka]
   * @return responseEMail
  **/
  @ApiModelProperty(example = "null", value = "E-mail pro odpověď [persistentní položka]")
  public String getResponseEMail() {
    return responseEMail;
  }

  public void setResponseEMail(String responseEMail) {
    this.responseEMail = responseEMail;
  }

  public Systemsupportentry shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Krátký popis [persistentní položka]
   * @return shortDescription
  **/
  @ApiModelProperty(example = "null", value = "Krátký popis [persistentní položka]")
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  public Systemsupportentry problemDescription(String problemDescription) {
    this.problemDescription = problemDescription;
    return this;
  }

   /**
   * Popis problému [persistentní položka]
   * @return problemDescription
  **/
  @ApiModelProperty(example = "null", value = "Popis problému [persistentní položka]")
  public String getProblemDescription() {
    return problemDescription;
  }

  public void setProblemDescription(String problemDescription) {
    this.problemDescription = problemDescription;
  }

  public Systemsupportentry implementationData(String implementationData) {
    this.implementationData = implementationData;
    return this;
  }

   /**
   * Implementační data [persistentní položka]
   * @return implementationData
  **/
  @ApiModelProperty(example = "null", value = "Implementační data [persistentní položka]")
  public String getImplementationData() {
    return implementationData;
  }

  public void setImplementationData(String implementationData) {
    this.implementationData = implementationData;
  }

  public Systemsupportentry problemData(String problemData) {
    this.problemData = problemData;
    return this;
  }

   /**
   * Data [persistentní položka]
   * @return problemData
  **/
  @ApiModelProperty(example = "null", value = "Data [persistentní položka]")
  public String getProblemData() {
    return problemData;
  }

  public void setProblemData(String problemData) {
    this.problemData = problemData;
  }

  public Systemsupportentry solutionDateDATE(DateTime solutionDateDATE) {
    this.solutionDateDATE = solutionDateDATE;
    return this;
  }

   /**
   * Datum řešení [persistentní položka]
   * @return solutionDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum řešení [persistentní položka]")
  public DateTime getSolutionDateDATE() {
    return solutionDateDATE;
  }

  public void setSolutionDateDATE(DateTime solutionDateDATE) {
    this.solutionDateDATE = solutionDateDATE;
  }

  public Systemsupportentry solver(String solver) {
    this.solver = solver;
    return this;
  }

   /**
   * Řešitel [persistentní položka]
   * @return solver
  **/
  @ApiModelProperty(example = "null", value = "Řešitel [persistentní položka]")
  public String getSolver() {
    return solver;
  }

  public void setSolver(String solver) {
    this.solver = solver;
  }

  public Systemsupportentry solutionDescription(String solutionDescription) {
    this.solutionDescription = solutionDescription;
    return this;
  }

   /**
   * Popis řešení [persistentní položka]
   * @return solutionDescription
  **/
  @ApiModelProperty(example = "null", value = "Popis řešení [persistentní položka]")
  public String getSolutionDescription() {
    return solutionDescription;
  }

  public void setSolutionDescription(String solutionDescription) {
    this.solutionDescription = solutionDescription;
  }

  public Systemsupportentry crossReference(String crossReference) {
    this.crossReference = crossReference;
    return this;
  }

   /**
   * Odkaz [persistentní položka]
   * @return crossReference
  **/
  @ApiModelProperty(example = "null", value = "Odkaz [persistentní položka]")
  public String getCrossReference() {
    return crossReference;
  }

  public void setCrossReference(String crossReference) {
    this.crossReference = crossReference;
  }

  public Systemsupportentry status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Stav [persistentní položka]
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "Stav [persistentní položka]")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public Systemsupportentry entryNumber(Integer entryNumber) {
    this.entryNumber = entryNumber;
    return this;
  }

   /**
   * Číslo záznamu [persistentní položka]
   * @return entryNumber
  **/
  @ApiModelProperty(example = "null", value = "Číslo záznamu [persistentní položka]")
  public Integer getEntryNumber() {
    return entryNumber;
  }

  public void setEntryNumber(Integer entryNumber) {
    this.entryNumber = entryNumber;
  }

  public Systemsupportentry problemSendDateDATE(DateTime problemSendDateDATE) {
    this.problemSendDateDATE = problemSendDateDATE;
    return this;
  }

   /**
   * Datum odeslání problému [persistentní položka]
   * @return problemSendDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum odeslání problému [persistentní položka]")
  public DateTime getProblemSendDateDATE() {
    return problemSendDateDATE;
  }

  public void setProblemSendDateDATE(DateTime problemSendDateDATE) {
    this.problemSendDateDATE = problemSendDateDATE;
  }

  public Systemsupportentry solutionSendDateDATE(DateTime solutionSendDateDATE) {
    this.solutionSendDateDATE = solutionSendDateDATE;
    return this;
  }

   /**
   * Datum odeslání řešení [persistentní položka]
   * @return solutionSendDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum odeslání řešení [persistentní položka]")
  public DateTime getSolutionSendDateDATE() {
    return solutionSendDateDATE;
  }

  public void setSolutionSendDateDATE(DateTime solutionSendDateDATE) {
    this.solutionSendDateDATE = solutionSendDateDATE;
  }

  public Systemsupportentry machineName(String machineName) {
    this.machineName = machineName;
    return this;
  }

   /**
   * Stanice [persistentní položka]
   * @return machineName
  **/
  @ApiModelProperty(example = "null", value = "Stanice [persistentní položka]")
  public String getMachineName() {
    return machineName;
  }

  public void setMachineName(String machineName) {
    this.machineName = machineName;
  }

  public Systemsupportentry notifyOnStart(Boolean notifyOnStart) {
    this.notifyOnStart = notifyOnStart;
    return this;
  }

   /**
   * Hlásit při startu [persistentní položka]
   * @return notifyOnStart
  **/
  @ApiModelProperty(example = "null", value = "Hlásit při startu [persistentní položka]")
  public Boolean getNotifyOnStart() {
    return notifyOnStart;
  }

  public void setNotifyOnStart(Boolean notifyOnStart) {
    this.notifyOnStart = notifyOnStart;
  }

  public Systemsupportentry notifyOnSite(String notifyOnSite) {
    this.notifyOnSite = notifyOnSite;
    return this;
  }

   /**
   * Hlásit hnízdu [persistentní položka]
   * @return notifyOnSite
  **/
  @ApiModelProperty(example = "null", value = "Hlásit hnízdu [persistentní položka]")
  public String getNotifyOnSite() {
    return notifyOnSite;
  }

  public void setNotifyOnSite(String notifyOnSite) {
    this.notifyOnSite = notifyOnSite;
  }

  public Systemsupportentry entrySite(String entrySite) {
    this.entrySite = entrySite;
    return this;
  }

   /**
   * Hnízdo záznamu [persistentní položka]
   * @return entrySite
  **/
  @ApiModelProperty(example = "null", value = "Hnízdo záznamu [persistentní položka]")
  public String getEntrySite() {
    return entrySite;
  }

  public void setEntrySite(String entrySite) {
    this.entrySite = entrySite;
  }

  public Systemsupportentry pictureID(Systemsupportentry pictureID) {
    this.pictureID = pictureID;
    return this;
  }

   /**
   * Get pictureID
   * @return pictureID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Systemsupportentry getPictureID() {
    return pictureID;
  }

  public void setPictureID(Systemsupportentry pictureID) {
    this.pictureID = pictureID;
  }

  public Systemsupportentry vendorEntry(Boolean vendorEntry) {
    this.vendorEntry = vendorEntry;
    return this;
  }

   /**
   * Záznam prodejce [persistentní položka]
   * @return vendorEntry
  **/
  @ApiModelProperty(example = "null", value = "Záznam prodejce [persistentní položka]")
  public Boolean getVendorEntry() {
    return vendorEntry;
  }

  public void setVendorEntry(Boolean vendorEntry) {
    this.vendorEntry = vendorEntry;
  }

  public Systemsupportentry pictures(List<Systemsupportentrypicture> pictures) {
    this.pictures = pictures;
    return this;
  }

  public Systemsupportentry addPicturesItem(Systemsupportentrypicture picturesItem) {
    this.pictures.add(picturesItem);
    return this;
  }

   /**
   * Obrazovky; kolekce BO Obrázek k servisní knížce [nepersistentní položka]
   * @return pictures
  **/
  @ApiModelProperty(example = "null", value = "Obrazovky; kolekce BO Obrázek k servisní knížce [nepersistentní položka]")
  public List<Systemsupportentrypicture> getPictures() {
    return pictures;
  }

  public void setPictures(List<Systemsupportentrypicture> pictures) {
    this.pictures = pictures;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Systemsupportentry systemsupportentry = (Systemsupportentry) o;
    return Objects.equals(this.displayName, systemsupportentry.displayName) &&
        Objects.equals(this.ID, systemsupportentry.ID) &&
        Objects.equals(this.classID, systemsupportentry.classID) &&
        Objects.equals(this.objVersion, systemsupportentry.objVersion) &&
        Objects.equals(this.kind, systemsupportentry.kind) &&
        Objects.equals(this.entryDateDATE, systemsupportentry.entryDateDATE) &&
        Objects.equals(this.createdByID, systemsupportentry.createdByID) &&
        Objects.equals(this.firmID, systemsupportentry.firmID) &&
        Objects.equals(this.responseEMail, systemsupportentry.responseEMail) &&
        Objects.equals(this.shortDescription, systemsupportentry.shortDescription) &&
        Objects.equals(this.problemDescription, systemsupportentry.problemDescription) &&
        Objects.equals(this.implementationData, systemsupportentry.implementationData) &&
        Objects.equals(this.problemData, systemsupportentry.problemData) &&
        Objects.equals(this.solutionDateDATE, systemsupportentry.solutionDateDATE) &&
        Objects.equals(this.solver, systemsupportentry.solver) &&
        Objects.equals(this.solutionDescription, systemsupportentry.solutionDescription) &&
        Objects.equals(this.crossReference, systemsupportentry.crossReference) &&
        Objects.equals(this.status, systemsupportentry.status) &&
        Objects.equals(this.entryNumber, systemsupportentry.entryNumber) &&
        Objects.equals(this.problemSendDateDATE, systemsupportentry.problemSendDateDATE) &&
        Objects.equals(this.solutionSendDateDATE, systemsupportentry.solutionSendDateDATE) &&
        Objects.equals(this.machineName, systemsupportentry.machineName) &&
        Objects.equals(this.notifyOnStart, systemsupportentry.notifyOnStart) &&
        Objects.equals(this.notifyOnSite, systemsupportentry.notifyOnSite) &&
        Objects.equals(this.entrySite, systemsupportentry.entrySite) &&
        Objects.equals(this.pictureID, systemsupportentry.pictureID) &&
        Objects.equals(this.vendorEntry, systemsupportentry.vendorEntry) &&
        Objects.equals(this.pictures, systemsupportentry.pictures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, kind, entryDateDATE, createdByID, firmID, responseEMail, shortDescription, problemDescription, implementationData, problemData, solutionDateDATE, solver, solutionDescription, crossReference, status, entryNumber, problemSendDateDATE, solutionSendDateDATE, machineName, notifyOnStart, notifyOnSite, entrySite, pictureID, vendorEntry, pictures);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Systemsupportentry {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    entryDateDATE: ").append(toIndentedString(entryDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    responseEMail: ").append(toIndentedString(responseEMail)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    problemDescription: ").append(toIndentedString(problemDescription)).append("\n");
    sb.append("    implementationData: ").append(toIndentedString(implementationData)).append("\n");
    sb.append("    problemData: ").append(toIndentedString(problemData)).append("\n");
    sb.append("    solutionDateDATE: ").append(toIndentedString(solutionDateDATE)).append("\n");
    sb.append("    solver: ").append(toIndentedString(solver)).append("\n");
    sb.append("    solutionDescription: ").append(toIndentedString(solutionDescription)).append("\n");
    sb.append("    crossReference: ").append(toIndentedString(crossReference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    entryNumber: ").append(toIndentedString(entryNumber)).append("\n");
    sb.append("    problemSendDateDATE: ").append(toIndentedString(problemSendDateDATE)).append("\n");
    sb.append("    solutionSendDateDATE: ").append(toIndentedString(solutionSendDateDATE)).append("\n");
    sb.append("    machineName: ").append(toIndentedString(machineName)).append("\n");
    sb.append("    notifyOnStart: ").append(toIndentedString(notifyOnStart)).append("\n");
    sb.append("    notifyOnSite: ").append(toIndentedString(notifyOnSite)).append("\n");
    sb.append("    entrySite: ").append(toIndentedString(entrySite)).append("\n");
    sb.append("    pictureID: ").append(toIndentedString(pictureID)).append("\n");
    sb.append("    vendorEntry: ").append(toIndentedString(vendorEntry)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

