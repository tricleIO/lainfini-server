/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Intrastatreportdeclaration
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Intrastatreportdeclaration   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("DeclarationID")
  private String declarationID = null;

  @SerializedName("Division_ID")
  private String divisionID = null;

  @SerializedName("ReferencePeriod")
  private String referencePeriod = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("FlowCode")
  private Integer flowCode = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("ItemsCount")
  private Integer itemsCount = null;

  @SerializedName("DeletingItemsCount")
  private Integer deletingItemsCount = null;

  @SerializedName("FlowCode_Text")
  private String flowCodeText = null;

  @SerializedName("IsNegative")
  private Boolean isNegative = null;

  @SerializedName("IntrastatReportItems")
  private List<Annualclearingcountoff> intrastatReportItems = new ArrayList<Annualclearingcountoff>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Podání INTRASTAT [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Podání INTRASTAT [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Intrastatreportdeclaration declarationID(String declarationID) {
    this.declarationID = declarationID;
    return this;
  }

   /**
   * Číslo pobočky [persistentní položka]
   * @return declarationID
  **/
  @ApiModelProperty(example = "null", value = "Číslo pobočky [persistentní položka]")
  public String getDeclarationID() {
    return declarationID;
  }

  public void setDeclarationID(String declarationID) {
    this.declarationID = declarationID;
  }

  public Intrastatreportdeclaration divisionID(String divisionID) {
    this.divisionID = divisionID;
    return this;
  }

   /**
   * Středisko; ID objektu Středisko [persistentní položka]
   * @return divisionID
  **/
  @ApiModelProperty(example = "null", value = "Středisko; ID objektu Středisko [persistentní položka]")
  public String getDivisionID() {
    return divisionID;
  }

  public void setDivisionID(String divisionID) {
    this.divisionID = divisionID;
  }

  public Intrastatreportdeclaration referencePeriod(String referencePeriod) {
    this.referencePeriod = referencePeriod;
    return this;
  }

   /**
   * Vykazované období [persistentní položka]
   * @return referencePeriod
  **/
  @ApiModelProperty(example = "null", value = "Vykazované období [persistentní položka]")
  public String getReferencePeriod() {
    return referencePeriod;
  }

  public void setReferencePeriod(String referencePeriod) {
    this.referencePeriod = referencePeriod;
  }

  public Intrastatreportdeclaration docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum a čas vygenerování [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum a čas vygenerování [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Intrastatreportdeclaration flowCode(Integer flowCode) {
    this.flowCode = flowCode;
    return this;
  }

   /**
   * Směr transakce [persistentní položka]
   * @return flowCode
  **/
  @ApiModelProperty(example = "null", value = "Směr transakce [persistentní položka]")
  public Integer getFlowCode() {
    return flowCode;
  }

  public void setFlowCode(Integer flowCode) {
    this.flowCode = flowCode;
  }

  public Intrastatreportdeclaration currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

   /**
   * Počet položek
   * @return itemsCount
  **/
  @ApiModelProperty(example = "null", value = "Počet položek")
  public Integer getItemsCount() {
    return itemsCount;
  }

   /**
   * Počet mazacích položek
   * @return deletingItemsCount
  **/
  @ApiModelProperty(example = "null", value = "Počet mazacích položek")
  public Integer getDeletingItemsCount() {
    return deletingItemsCount;
  }

   /**
   * Směr transakce - text
   * @return flowCodeText
  **/
  @ApiModelProperty(example = "null", value = "Směr transakce - text")
  public String getFlowCodeText() {
    return flowCodeText;
  }

   /**
   * Negativní
   * @return isNegative
  **/
  @ApiModelProperty(example = "null", value = "Negativní")
  public Boolean getIsNegative() {
    return isNegative;
  }

  public Intrastatreportdeclaration intrastatReportItems(List<Annualclearingcountoff> intrastatReportItems) {
    this.intrastatReportItems = intrastatReportItems;
    return this;
  }

  public Intrastatreportdeclaration addIntrastatReportItemsItem(Annualclearingcountoff intrastatReportItemsItem) {
    this.intrastatReportItems.add(intrastatReportItemsItem);
    return this;
  }

   /**
   * Položky deklarace; kolekce BO Odpočet k roč.zúčtování [nepersistentní položka]
   * @return intrastatReportItems
  **/
  @ApiModelProperty(example = "null", value = "Položky deklarace; kolekce BO Odpočet k roč.zúčtování [nepersistentní položka]")
  public List<Annualclearingcountoff> getIntrastatReportItems() {
    return intrastatReportItems;
  }

  public void setIntrastatReportItems(List<Annualclearingcountoff> intrastatReportItems) {
    this.intrastatReportItems = intrastatReportItems;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Intrastatreportdeclaration intrastatreportdeclaration = (Intrastatreportdeclaration) o;
    return Objects.equals(this.displayName, intrastatreportdeclaration.displayName) &&
        Objects.equals(this.ID, intrastatreportdeclaration.ID) &&
        Objects.equals(this.classID, intrastatreportdeclaration.classID) &&
        Objects.equals(this.objVersion, intrastatreportdeclaration.objVersion) &&
        Objects.equals(this.parentID, intrastatreportdeclaration.parentID) &&
        Objects.equals(this.declarationID, intrastatreportdeclaration.declarationID) &&
        Objects.equals(this.divisionID, intrastatreportdeclaration.divisionID) &&
        Objects.equals(this.referencePeriod, intrastatreportdeclaration.referencePeriod) &&
        Objects.equals(this.docDateDATE, intrastatreportdeclaration.docDateDATE) &&
        Objects.equals(this.flowCode, intrastatreportdeclaration.flowCode) &&
        Objects.equals(this.currencyID, intrastatreportdeclaration.currencyID) &&
        Objects.equals(this.itemsCount, intrastatreportdeclaration.itemsCount) &&
        Objects.equals(this.deletingItemsCount, intrastatreportdeclaration.deletingItemsCount) &&
        Objects.equals(this.flowCodeText, intrastatreportdeclaration.flowCodeText) &&
        Objects.equals(this.isNegative, intrastatreportdeclaration.isNegative) &&
        Objects.equals(this.intrastatReportItems, intrastatreportdeclaration.intrastatReportItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, declarationID, divisionID, referencePeriod, docDateDATE, flowCode, currencyID, itemsCount, deletingItemsCount, flowCodeText, isNegative, intrastatReportItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Intrastatreportdeclaration {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    declarationID: ").append(toIndentedString(declarationID)).append("\n");
    sb.append("    divisionID: ").append(toIndentedString(divisionID)).append("\n");
    sb.append("    referencePeriod: ").append(toIndentedString(referencePeriod)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    flowCode: ").append(toIndentedString(flowCode)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    itemsCount: ").append(toIndentedString(itemsCount)).append("\n");
    sb.append("    deletingItemsCount: ").append(toIndentedString(deletingItemsCount)).append("\n");
    sb.append("    flowCodeText: ").append(toIndentedString(flowCodeText)).append("\n");
    sb.append("    isNegative: ").append(toIndentedString(isNegative)).append("\n");
    sb.append("    intrastatReportItems: ").append(toIndentedString(intrastatReportItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

