/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Pricedefinition
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Pricedefinition   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private Integer code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("Comment")
  private String comment = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("PriceWithVAT")
  private Boolean priceWithVAT = null;

  @SerializedName("Basic")
  private Boolean basic = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Pricedefinition hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Pricedefinition code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public Pricedefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Pricedefinition note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Pricedefinition comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Poznámka
   * @return comment
  **/
  @ApiModelProperty(example = "null", value = "Poznámka")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Pricedefinition currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Pricedefinition priceWithVAT(Boolean priceWithVAT) {
    this.priceWithVAT = priceWithVAT;
    return this;
  }

   /**
   * S daní [persistentní položka]
   * @return priceWithVAT
  **/
  @ApiModelProperty(example = "null", value = "S daní [persistentní položka]")
  public Boolean getPriceWithVAT() {
    return priceWithVAT;
  }

  public void setPriceWithVAT(Boolean priceWithVAT) {
    this.priceWithVAT = priceWithVAT;
  }

  public Pricedefinition basic(Boolean basic) {
    this.basic = basic;
    return this;
  }

   /**
   * Hlavní [persistentní položka]
   * @return basic
  **/
  @ApiModelProperty(example = "null", value = "Hlavní [persistentní položka]")
  public Boolean getBasic() {
    return basic;
  }

  public void setBasic(Boolean basic) {
    this.basic = basic;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pricedefinition pricedefinition = (Pricedefinition) o;
    return Objects.equals(this.displayName, pricedefinition.displayName) &&
        Objects.equals(this.ID, pricedefinition.ID) &&
        Objects.equals(this.classID, pricedefinition.classID) &&
        Objects.equals(this.objVersion, pricedefinition.objVersion) &&
        Objects.equals(this.hidden, pricedefinition.hidden) &&
        Objects.equals(this.code, pricedefinition.code) &&
        Objects.equals(this.name, pricedefinition.name) &&
        Objects.equals(this.note, pricedefinition.note) &&
        Objects.equals(this.comment, pricedefinition.comment) &&
        Objects.equals(this.currencyID, pricedefinition.currencyID) &&
        Objects.equals(this.priceWithVAT, pricedefinition.priceWithVAT) &&
        Objects.equals(this.basic, pricedefinition.basic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, note, comment, currencyID, priceWithVAT, basic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pricedefinition {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    priceWithVAT: ").append(toIndentedString(priceWithVAT)).append("\n");
    sb.append("    basic: ").append(toIndentedString(basic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

