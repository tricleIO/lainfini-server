/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Account
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Account   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("AccountType")
  private String accountType = null;

  @SerializedName("Taxable")
  private Boolean taxable = null;

  @SerializedName("Short")
  private Boolean _short = null;

  @SerializedName("AccountTypeName")
  private String accountTypeName = null;

  @SerializedName("IsIncomplete")
  private Boolean isIncomplete = null;

  @SerializedName("Transferable")
  private Boolean transferable = null;

  @SerializedName("IsCostForProjectControl")
  private Boolean isCostForProjectControl = null;

  @SerializedName("IsRevenueForProjectControl")
  private Boolean isRevenueForProjectControl = null;

  @SerializedName("TypeOfActivity")
  private Integer typeOfActivity = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Account hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Account code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Účet [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Účet [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Account name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Account accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Typ [persistentní položka]
   * @return accountType
  **/
  @ApiModelProperty(example = "null", value = "Typ [persistentní položka]")
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }

  public Account taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

   /**
   * Daňový [persistentní položka]
   * @return taxable
  **/
  @ApiModelProperty(example = "null", value = "Daňový [persistentní položka]")
  public Boolean getTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public Account _short(Boolean _short) {
    this._short = _short;
    return this;
  }

   /**
   * Krátkodobý [persistentní položka]
   * @return _short
  **/
  @ApiModelProperty(example = "null", value = "Krátkodobý [persistentní položka]")
  public Boolean getShort() {
    return _short;
  }

  public void setShort(Boolean _short) {
    this._short = _short;
  }

  public Account accountTypeName(String accountTypeName) {
    this.accountTypeName = accountTypeName;
    return this;
  }

   /**
   * Typ účtu
   * @return accountTypeName
  **/
  @ApiModelProperty(example = "null", value = "Typ účtu")
  public String getAccountTypeName() {
    return accountTypeName;
  }

  public void setAccountTypeName(String accountTypeName) {
    this.accountTypeName = accountTypeName;
  }

  public Account isIncomplete(Boolean isIncomplete) {
    this.isIncomplete = isIncomplete;
    return this;
  }

   /**
   * Neúplný [persistentní položka]
   * @return isIncomplete
  **/
  @ApiModelProperty(example = "null", value = "Neúplný [persistentní položka]")
  public Boolean getIsIncomplete() {
    return isIncomplete;
  }

  public void setIsIncomplete(Boolean isIncomplete) {
    this.isIncomplete = isIncomplete;
  }

  public Account transferable(Boolean transferable) {
    this.transferable = transferable;
    return this;
  }

   /**
   * Přenášet koncové stavy [persistentní položka]
   * @return transferable
  **/
  @ApiModelProperty(example = "null", value = "Přenášet koncové stavy [persistentní položka]")
  public Boolean getTransferable() {
    return transferable;
  }

  public void setTransferable(Boolean transferable) {
    this.transferable = transferable;
  }

  public Account isCostForProjectControl(Boolean isCostForProjectControl) {
    this.isCostForProjectControl = isCostForProjectControl;
    return this;
  }

   /**
   * Náklad proj.ř. [persistentní položka]
   * @return isCostForProjectControl
  **/
  @ApiModelProperty(example = "null", value = "Náklad proj.ř. [persistentní položka]")
  public Boolean getIsCostForProjectControl() {
    return isCostForProjectControl;
  }

  public void setIsCostForProjectControl(Boolean isCostForProjectControl) {
    this.isCostForProjectControl = isCostForProjectControl;
  }

  public Account isRevenueForProjectControl(Boolean isRevenueForProjectControl) {
    this.isRevenueForProjectControl = isRevenueForProjectControl;
    return this;
  }

   /**
   * Výnos proj.ř. [persistentní položka]
   * @return isRevenueForProjectControl
  **/
  @ApiModelProperty(example = "null", value = "Výnos proj.ř. [persistentní položka]")
  public Boolean getIsRevenueForProjectControl() {
    return isRevenueForProjectControl;
  }

  public void setIsRevenueForProjectControl(Boolean isRevenueForProjectControl) {
    this.isRevenueForProjectControl = isRevenueForProjectControl;
  }

  public Account typeOfActivity(Integer typeOfActivity) {
    this.typeOfActivity = typeOfActivity;
    return this;
  }

   /**
   * Ekonomická činnost [persistentní položka]
   * @return typeOfActivity
  **/
  @ApiModelProperty(example = "null", value = "Ekonomická činnost [persistentní položka]")
  public Integer getTypeOfActivity() {
    return typeOfActivity;
  }

  public void setTypeOfActivity(Integer typeOfActivity) {
    this.typeOfActivity = typeOfActivity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.displayName, account.displayName) &&
        Objects.equals(this.ID, account.ID) &&
        Objects.equals(this.classID, account.classID) &&
        Objects.equals(this.objVersion, account.objVersion) &&
        Objects.equals(this.hidden, account.hidden) &&
        Objects.equals(this.code, account.code) &&
        Objects.equals(this.name, account.name) &&
        Objects.equals(this.accountType, account.accountType) &&
        Objects.equals(this.taxable, account.taxable) &&
        Objects.equals(this._short, account._short) &&
        Objects.equals(this.accountTypeName, account.accountTypeName) &&
        Objects.equals(this.isIncomplete, account.isIncomplete) &&
        Objects.equals(this.transferable, account.transferable) &&
        Objects.equals(this.isCostForProjectControl, account.isCostForProjectControl) &&
        Objects.equals(this.isRevenueForProjectControl, account.isRevenueForProjectControl) &&
        Objects.equals(this.typeOfActivity, account.typeOfActivity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, accountType, taxable, _short, accountTypeName, isIncomplete, transferable, isCostForProjectControl, isRevenueForProjectControl, typeOfActivity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    _short: ").append(toIndentedString(_short)).append("\n");
    sb.append("    accountTypeName: ").append(toIndentedString(accountTypeName)).append("\n");
    sb.append("    isIncomplete: ").append(toIndentedString(isIncomplete)).append("\n");
    sb.append("    transferable: ").append(toIndentedString(transferable)).append("\n");
    sb.append("    isCostForProjectControl: ").append(toIndentedString(isCostForProjectControl)).append("\n");
    sb.append("    isRevenueForProjectControl: ").append(toIndentedString(isRevenueForProjectControl)).append("\n");
    sb.append("    typeOfActivity: ").append(toIndentedString(typeOfActivity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

