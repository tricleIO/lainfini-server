/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Paymentorder
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Paymentorder   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Paymentorderrow> rows = new ArrayList<Paymentorderrow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("DueDate$DATE")
  private DateTime dueDateDATE = null;

  @SerializedName("SentDate$DATE")
  private DateTime sentDateDATE = null;

  @SerializedName("BankAccount_ID")
  private String bankAccountID = null;

  @SerializedName("TotalAmount")
  private Double totalAmount = null;

  @SerializedName("RowsCurrency")
  private String rowsCurrency = null;

  @SerializedName("Sent")
  private Boolean sent = null;

  @SerializedName("HomeBankUsed")
  private Boolean homeBankUsed = null;

  @SerializedName("CreatedAt$DATE")
  private DateTime createdAtDATE = null;

  @SerializedName("CorrectedAt$DATE")
  private DateTime correctedAtDATE = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Paymentorder rows(List<Paymentorderrow> rows) {
    this.rows = rows;
    return this;
  }

  public Paymentorder addRowsItem(Paymentorderrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Platební příkaz - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Platební příkaz - řádek [nepersistentní položka]")
  public List<Paymentorderrow> getRows() {
    return rows;
  }

  public void setRows(List<Paymentorderrow> rows) {
    this.rows = rows;
  }

  public Paymentorder docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Paymentorder periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Paymentorder ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Paymentorder docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Paymentorder createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Paymentorder correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Paymentorder newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Paymentorder newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Paymentorder dueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
    return this;
  }

   /**
   * Datum spl. [persistentní položka]
   * @return dueDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum spl. [persistentní položka]")
  public DateTime getDueDateDATE() {
    return dueDateDATE;
  }

  public void setDueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
  }

  public Paymentorder sentDateDATE(DateTime sentDateDATE) {
    this.sentDateDATE = sentDateDATE;
    return this;
  }

   /**
   * Datum odesl. [persistentní položka]
   * @return sentDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum odesl. [persistentní položka]")
  public DateTime getSentDateDATE() {
    return sentDateDATE;
  }

  public void setSentDateDATE(DateTime sentDateDATE) {
    this.sentDateDATE = sentDateDATE;
  }

  public Paymentorder bankAccountID(String bankAccountID) {
    this.bankAccountID = bankAccountID;
    return this;
  }

   /**
   * Vlastní účet; ID objektu Bankovní účet [persistentní položka]
   * @return bankAccountID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní účet; ID objektu Bankovní účet [persistentní položka]")
  public String getBankAccountID() {
    return bankAccountID;
  }

  public void setBankAccountID(String bankAccountID) {
    this.bankAccountID = bankAccountID;
  }

  public Paymentorder totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Celková částka
   * @return totalAmount
  **/
  @ApiModelProperty(example = "null", value = "Celková částka")
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }

  public Paymentorder rowsCurrency(String rowsCurrency) {
    this.rowsCurrency = rowsCurrency;
    return this;
  }

   /**
   * Měna řádků
   * @return rowsCurrency
  **/
  @ApiModelProperty(example = "null", value = "Měna řádků")
  public String getRowsCurrency() {
    return rowsCurrency;
  }

  public void setRowsCurrency(String rowsCurrency) {
    this.rowsCurrency = rowsCurrency;
  }

  public Paymentorder sent(Boolean sent) {
    this.sent = sent;
    return this;
  }

   /**
   * Odesláno [persistentní položka]
   * @return sent
  **/
  @ApiModelProperty(example = "null", value = "Odesláno [persistentní položka]")
  public Boolean getSent() {
    return sent;
  }

  public void setSent(Boolean sent) {
    this.sent = sent;
  }

  public Paymentorder homeBankUsed(Boolean homeBankUsed) {
    this.homeBankUsed = homeBankUsed;
    return this;
  }

   /**
   * Homebanking použit [persistentní položka]
   * @return homeBankUsed
  **/
  @ApiModelProperty(example = "null", value = "Homebanking použit [persistentní položka]")
  public Boolean getHomeBankUsed() {
    return homeBankUsed;
  }

  public void setHomeBankUsed(Boolean homeBankUsed) {
    this.homeBankUsed = homeBankUsed;
  }

  public Paymentorder createdAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return createdAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreatedAtDATE() {
    return createdAtDATE;
  }

  public void setCreatedAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
  }

  public Paymentorder correctedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
    return this;
  }

   /**
   * Opraveno [persistentní položka]
   * @return correctedAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraveno [persistentní položka]")
  public DateTime getCorrectedAtDATE() {
    return correctedAtDATE;
  }

  public void setCorrectedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paymentorder paymentorder = (Paymentorder) o;
    return Objects.equals(this.displayName, paymentorder.displayName) &&
        Objects.equals(this.ID, paymentorder.ID) &&
        Objects.equals(this.classID, paymentorder.classID) &&
        Objects.equals(this.objVersion, paymentorder.objVersion) &&
        Objects.equals(this.rows, paymentorder.rows) &&
        Objects.equals(this.docQueueID, paymentorder.docQueueID) &&
        Objects.equals(this.periodID, paymentorder.periodID) &&
        Objects.equals(this.ordNumber, paymentorder.ordNumber) &&
        Objects.equals(this.docDateDATE, paymentorder.docDateDATE) &&
        Objects.equals(this.createdByID, paymentorder.createdByID) &&
        Objects.equals(this.correctedByID, paymentorder.correctedByID) &&
        Objects.equals(this.newRelatedType, paymentorder.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, paymentorder.newRelatedDocumentID) &&
        Objects.equals(this.dueDateDATE, paymentorder.dueDateDATE) &&
        Objects.equals(this.sentDateDATE, paymentorder.sentDateDATE) &&
        Objects.equals(this.bankAccountID, paymentorder.bankAccountID) &&
        Objects.equals(this.totalAmount, paymentorder.totalAmount) &&
        Objects.equals(this.rowsCurrency, paymentorder.rowsCurrency) &&
        Objects.equals(this.sent, paymentorder.sent) &&
        Objects.equals(this.homeBankUsed, paymentorder.homeBankUsed) &&
        Objects.equals(this.createdAtDATE, paymentorder.createdAtDATE) &&
        Objects.equals(this.correctedAtDATE, paymentorder.correctedAtDATE);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, dueDateDATE, sentDateDATE, bankAccountID, totalAmount, rowsCurrency, sent, homeBankUsed, createdAtDATE, correctedAtDATE);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paymentorder {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    dueDateDATE: ").append(toIndentedString(dueDateDATE)).append("\n");
    sb.append("    sentDateDATE: ").append(toIndentedString(sentDateDATE)).append("\n");
    sb.append("    bankAccountID: ").append(toIndentedString(bankAccountID)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    rowsCurrency: ").append(toIndentedString(rowsCurrency)).append("\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    homeBankUsed: ").append(toIndentedString(homeBankUsed)).append("\n");
    sb.append("    createdAtDATE: ").append(toIndentedString(createdAtDATE)).append("\n");
    sb.append("    correctedAtDATE: ").append(toIndentedString(correctedAtDATE)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

