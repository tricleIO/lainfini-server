/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Inputpanellayout
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Inputpanellayout   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Inputpaneldefinition> rows = new ArrayList<Inputpaneldefinition>();

  @SerializedName("SiteClassID")
  private String siteClassID = null;

  @SerializedName("PanelName")
  private String panelName = null;

  @SerializedName("LayoutOrder")
  private Integer layoutOrder = null;

  @SerializedName("LayoutName")
  private String layoutName = null;

  @SerializedName("LayoutExpression")
  private String layoutExpression = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Inputpanellayout rows(List<Inputpaneldefinition> rows) {
    this.rows = rows;
    return this;
  }

  public Inputpanellayout addRowsItem(Inputpaneldefinition rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Variantní formuláře - definice [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Variantní formuláře - definice [nepersistentní položka]")
  public List<Inputpaneldefinition> getRows() {
    return rows;
  }

  public void setRows(List<Inputpaneldefinition> rows) {
    this.rows = rows;
  }

  public Inputpanellayout siteClassID(String siteClassID) {
    this.siteClassID = siteClassID;
    return this;
  }

   /**
   * Identifikace agendy [persistentní položka]
   * @return siteClassID
  **/
  @ApiModelProperty(example = "null", value = "Identifikace agendy [persistentní položka]")
  public String getSiteClassID() {
    return siteClassID;
  }

  public void setSiteClassID(String siteClassID) {
    this.siteClassID = siteClassID;
  }

  public Inputpanellayout panelName(String panelName) {
    this.panelName = panelName;
    return this;
  }

   /**
   * Název panelu [persistentní položka]
   * @return panelName
  **/
  @ApiModelProperty(example = "null", value = "Název panelu [persistentní položka]")
  public String getPanelName() {
    return panelName;
  }

  public void setPanelName(String panelName) {
    this.panelName = panelName;
  }

  public Inputpanellayout layoutOrder(Integer layoutOrder) {
    this.layoutOrder = layoutOrder;
    return this;
  }

   /**
   * Pořadí vyhodnocení výrazu varianty [persistentní položka]
   * @return layoutOrder
  **/
  @ApiModelProperty(example = "null", value = "Pořadí vyhodnocení výrazu varianty [persistentní položka]")
  public Integer getLayoutOrder() {
    return layoutOrder;
  }

  public void setLayoutOrder(Integer layoutOrder) {
    this.layoutOrder = layoutOrder;
  }

  public Inputpanellayout layoutName(String layoutName) {
    this.layoutName = layoutName;
    return this;
  }

   /**
   * Název varianty [persistentní položka]
   * @return layoutName
  **/
  @ApiModelProperty(example = "null", value = "Název varianty [persistentní položka]")
  public String getLayoutName() {
    return layoutName;
  }

  public void setLayoutName(String layoutName) {
    this.layoutName = layoutName;
  }

  public Inputpanellayout layoutExpression(String layoutExpression) {
    this.layoutExpression = layoutExpression;
    return this;
  }

   /**
   * Výraz [persistentní položka]
   * @return layoutExpression
  **/
  @ApiModelProperty(example = "null", value = "Výraz [persistentní položka]")
  public String getLayoutExpression() {
    return layoutExpression;
  }

  public void setLayoutExpression(String layoutExpression) {
    this.layoutExpression = layoutExpression;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Inputpanellayout inputpanellayout = (Inputpanellayout) o;
    return Objects.equals(this.displayName, inputpanellayout.displayName) &&
        Objects.equals(this.ID, inputpanellayout.ID) &&
        Objects.equals(this.classID, inputpanellayout.classID) &&
        Objects.equals(this.objVersion, inputpanellayout.objVersion) &&
        Objects.equals(this.rows, inputpanellayout.rows) &&
        Objects.equals(this.siteClassID, inputpanellayout.siteClassID) &&
        Objects.equals(this.panelName, inputpanellayout.panelName) &&
        Objects.equals(this.layoutOrder, inputpanellayout.layoutOrder) &&
        Objects.equals(this.layoutName, inputpanellayout.layoutName) &&
        Objects.equals(this.layoutExpression, inputpanellayout.layoutExpression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, siteClassID, panelName, layoutOrder, layoutName, layoutExpression);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Inputpanellayout {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    siteClassID: ").append(toIndentedString(siteClassID)).append("\n");
    sb.append("    panelName: ").append(toIndentedString(panelName)).append("\n");
    sb.append("    layoutOrder: ").append(toIndentedString(layoutOrder)).append("\n");
    sb.append("    layoutName: ").append(toIndentedString(layoutName)).append("\n");
    sb.append("    layoutExpression: ").append(toIndentedString(layoutExpression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

