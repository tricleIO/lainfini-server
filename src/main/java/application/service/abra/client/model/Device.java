/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Device
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Device   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Node")
  private String node = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("DeviceName")
  private String deviceName = null;

  @SerializedName("DeviceType")
  private String deviceType = null;

  @SerializedName("DeviceDriver")
  private String deviceDriver = null;

  @SerializedName("Configuration")
  private byte[] _configuration = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Device node(String node) {
    this.node = node;
    return this;
  }

   /**
   * ID síť. karty [persistentní položka]
   * @return node
  **/
  @ApiModelProperty(example = "null", value = "ID síť. karty [persistentní položka]")
  public String getNode() {
    return node;
  }

  public void setNode(String node) {
    this.node = node;
  }

  public Device name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název počítače [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název počítače [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Device deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Název zařízení [persistentní položka]
   * @return deviceName
  **/
  @ApiModelProperty(example = "null", value = "Název zařízení [persistentní položka]")
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }

  public Device deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Zařízení [persistentní položka]
   * @return deviceType
  **/
  @ApiModelProperty(example = "null", value = "Zařízení [persistentní položka]")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public Device deviceDriver(String deviceDriver) {
    this.deviceDriver = deviceDriver;
    return this;
  }

   /**
   * Ovladač [persistentní položka]
   * @return deviceDriver
  **/
  @ApiModelProperty(example = "null", value = "Ovladač [persistentní položka]")
  public String getDeviceDriver() {
    return deviceDriver;
  }

  public void setDeviceDriver(String deviceDriver) {
    this.deviceDriver = deviceDriver;
  }

  public Device _configuration(byte[] _configuration) {
    this._configuration = _configuration;
    return this;
  }

   /**
   * Konfigurace [persistentní položka]
   * @return _configuration
  **/
  @ApiModelProperty(example = "null", value = "Konfigurace [persistentní položka]")
  public byte[] getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(byte[] _configuration) {
    this._configuration = _configuration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Device device = (Device) o;
    return Objects.equals(this.displayName, device.displayName) &&
        Objects.equals(this.ID, device.ID) &&
        Objects.equals(this.classID, device.classID) &&
        Objects.equals(this.objVersion, device.objVersion) &&
        Objects.equals(this.node, device.node) &&
        Objects.equals(this.name, device.name) &&
        Objects.equals(this.deviceName, device.deviceName) &&
        Objects.equals(this.deviceType, device.deviceType) &&
        Objects.equals(this.deviceDriver, device.deviceDriver) &&
        Objects.equals(this._configuration, device._configuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, node, name, deviceName, deviceType, deviceDriver, _configuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Device {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    node: ").append(toIndentedString(node)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    deviceDriver: ").append(toIndentedString(deviceDriver)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

