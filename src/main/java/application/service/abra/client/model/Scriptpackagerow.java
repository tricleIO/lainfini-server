/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Scriptpackagerow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Scriptpackagerow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("ScriptKind")
  private Integer scriptKind = null;

  @SerializedName("ScriptID")
  private String scriptID = null;

  @SerializedName("ScriptData")
  private String scriptData = null;

  @SerializedName("CompiledScriptData")
  private byte[] compiledScriptData = null;

  @SerializedName("Compiled")
  private Boolean compiled = null;

  @SerializedName("CompilerVersion")
  private Integer compilerVersion = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Balíček skriptů [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Balíček skriptů [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Scriptpackagerow posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Scriptpackagerow scriptKind(Integer scriptKind) {
    this.scriptKind = scriptKind;
    return this;
  }

   /**
   * Druh skriptu [persistentní položka]
   * @return scriptKind
  **/
  @ApiModelProperty(example = "null", value = "Druh skriptu [persistentní položka]")
  public Integer getScriptKind() {
    return scriptKind;
  }

  public void setScriptKind(Integer scriptKind) {
    this.scriptKind = scriptKind;
  }

  public Scriptpackagerow scriptID(String scriptID) {
    this.scriptID = scriptID;
    return this;
  }

   /**
   * ID skriptu [persistentní položka]
   * @return scriptID
  **/
  @ApiModelProperty(example = "null", value = "ID skriptu [persistentní položka]")
  public String getScriptID() {
    return scriptID;
  }

  public void setScriptID(String scriptID) {
    this.scriptID = scriptID;
  }

  public Scriptpackagerow scriptData(String scriptData) {
    this.scriptData = scriptData;
    return this;
  }

   /**
   * Skript [persistentní položka]
   * @return scriptData
  **/
  @ApiModelProperty(example = "null", value = "Skript [persistentní položka]")
  public String getScriptData() {
    return scriptData;
  }

  public void setScriptData(String scriptData) {
    this.scriptData = scriptData;
  }

  public Scriptpackagerow compiledScriptData(byte[] compiledScriptData) {
    this.compiledScriptData = compiledScriptData;
    return this;
  }

   /**
   * Zkompilovaný skript [persistentní položka]
   * @return compiledScriptData
  **/
  @ApiModelProperty(example = "null", value = "Zkompilovaný skript [persistentní položka]")
  public byte[] getCompiledScriptData() {
    return compiledScriptData;
  }

  public void setCompiledScriptData(byte[] compiledScriptData) {
    this.compiledScriptData = compiledScriptData;
  }

   /**
   * Zkompilováno [persistentní položka]
   * @return compiled
  **/
  @ApiModelProperty(example = "null", value = "Zkompilováno [persistentní položka]")
  public Boolean getCompiled() {
    return compiled;
  }

   /**
   * Zkompilováno [persistentní položka]
   * @return compilerVersion
  **/
  @ApiModelProperty(example = "null", value = "Zkompilováno [persistentní položka]")
  public Integer getCompilerVersion() {
    return compilerVersion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scriptpackagerow scriptpackagerow = (Scriptpackagerow) o;
    return Objects.equals(this.displayName, scriptpackagerow.displayName) &&
        Objects.equals(this.ID, scriptpackagerow.ID) &&
        Objects.equals(this.classID, scriptpackagerow.classID) &&
        Objects.equals(this.objVersion, scriptpackagerow.objVersion) &&
        Objects.equals(this.parentID, scriptpackagerow.parentID) &&
        Objects.equals(this.posIndex, scriptpackagerow.posIndex) &&
        Objects.equals(this.scriptKind, scriptpackagerow.scriptKind) &&
        Objects.equals(this.scriptID, scriptpackagerow.scriptID) &&
        Objects.equals(this.scriptData, scriptpackagerow.scriptData) &&
        Objects.equals(this.compiledScriptData, scriptpackagerow.compiledScriptData) &&
        Objects.equals(this.compiled, scriptpackagerow.compiled) &&
        Objects.equals(this.compilerVersion, scriptpackagerow.compilerVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, scriptKind, scriptID, scriptData, compiledScriptData, compiled, compilerVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scriptpackagerow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    scriptKind: ").append(toIndentedString(scriptKind)).append("\n");
    sb.append("    scriptID: ").append(toIndentedString(scriptID)).append("\n");
    sb.append("    scriptData: ").append(toIndentedString(scriptData)).append("\n");
    sb.append("    compiledScriptData: ").append(toIndentedString(compiledScriptData)).append("\n");
    sb.append("    compiled: ").append(toIndentedString(compiled)).append("\n");
    sb.append("    compilerVersion: ").append(toIndentedString(compilerVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

