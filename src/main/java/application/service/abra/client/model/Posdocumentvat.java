/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Posdocumentvat
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Posdocumentvat   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("TAmountWithoutVAT")
  private Double tAmountWithoutVAT = null;

  @SerializedName("TAmount")
  private Double tAmount = null;

  @SerializedName("VATRate")
  private Double vATRate = null;

  @SerializedName("LocalTAmountWithoutVAT")
  private Double localTAmountWithoutVAT = null;

  @SerializedName("LocalTAmount")
  private Double localTAmount = null;

  @SerializedName("VATRound")
  private Double vATRound = null;

  @SerializedName("LocalVATRound")
  private Double localVATRound = null;

  @SerializedName("VATRate_ID")
  private String vATRateID = null;

  @SerializedName("RoundingAmount")
  private Double roundingAmount = null;

  @SerializedName("RoundingWithoutVAT")
  private Double roundingWithoutVAT = null;

  @SerializedName("LocalRoundingAmount")
  private Double localRoundingAmount = null;

  @SerializedName("LocalRoundingWithoutVAT")
  private Double localRoundingWithoutVAT = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Účtenka [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Účtenka [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Posdocumentvat tAmountWithoutVAT(Double tAmountWithoutVAT) {
    this.tAmountWithoutVAT = tAmountWithoutVAT;
    return this;
  }

   /**
   * Bez daně [persistentní položka]
   * @return tAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Bez daně [persistentní položka]")
  public Double getTAmountWithoutVAT() {
    return tAmountWithoutVAT;
  }

  public void setTAmountWithoutVAT(Double tAmountWithoutVAT) {
    this.tAmountWithoutVAT = tAmountWithoutVAT;
  }

  public Posdocumentvat tAmount(Double tAmount) {
    this.tAmount = tAmount;
    return this;
  }

   /**
   * Celkem [persistentní položka]
   * @return tAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem [persistentní položka]")
  public Double getTAmount() {
    return tAmount;
  }

  public void setTAmount(Double tAmount) {
    this.tAmount = tAmount;
  }

   /**
   * Sazba [persistentní položka]
   * @return vATRate
  **/
  @ApiModelProperty(example = "null", value = "Sazba [persistentní položka]")
  public Double getVATRate() {
    return vATRate;
  }

  public Posdocumentvat localTAmountWithoutVAT(Double localTAmountWithoutVAT) {
    this.localTAmountWithoutVAT = localTAmountWithoutVAT;
    return this;
  }

   /**
   * Lokálně bez daně [persistentní položka]
   * @return localTAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Lokálně bez daně [persistentní položka]")
  public Double getLocalTAmountWithoutVAT() {
    return localTAmountWithoutVAT;
  }

  public void setLocalTAmountWithoutVAT(Double localTAmountWithoutVAT) {
    this.localTAmountWithoutVAT = localTAmountWithoutVAT;
  }

  public Posdocumentvat localTAmount(Double localTAmount) {
    this.localTAmount = localTAmount;
    return this;
  }

   /**
   * Celkem lokálně [persistentní položka]
   * @return localTAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně [persistentní položka]")
  public Double getLocalTAmount() {
    return localTAmount;
  }

  public void setLocalTAmount(Double localTAmount) {
    this.localTAmount = localTAmount;
  }

  public Posdocumentvat vATRound(Double vATRound) {
    this.vATRound = vATRound;
    return this;
  }

   /**
   * Zaokrouhlení [persistentní položka]
   * @return vATRound
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlení [persistentní položka]")
  public Double getVATRound() {
    return vATRound;
  }

  public void setVATRound(Double vATRound) {
    this.vATRound = vATRound;
  }

  public Posdocumentvat localVATRound(Double localVATRound) {
    this.localVATRound = localVATRound;
    return this;
  }

   /**
   * Zaokrouhlení lokálně [persistentní položka]
   * @return localVATRound
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlení lokálně [persistentní položka]")
  public Double getLocalVATRound() {
    return localVATRound;
  }

  public void setLocalVATRound(Double localVATRound) {
    this.localVATRound = localVATRound;
  }

  public Posdocumentvat vATRateID(String vATRateID) {
    this.vATRateID = vATRateID;
    return this;
  }

   /**
   * %DPH; ID objektu DPH sazba [persistentní položka]
   * @return vATRateID
  **/
  @ApiModelProperty(example = "null", value = "%DPH; ID objektu DPH sazba [persistentní položka]")
  public String getVATRateID() {
    return vATRateID;
  }

  public void setVATRateID(String vATRateID) {
    this.vATRateID = vATRateID;
  }

  public Posdocumentvat roundingAmount(Double roundingAmount) {
    this.roundingAmount = roundingAmount;
    return this;
  }

   /**
   * Hal. [persistentní položka]
   * @return roundingAmount
  **/
  @ApiModelProperty(example = "null", value = "Hal. [persistentní položka]")
  public Double getRoundingAmount() {
    return roundingAmount;
  }

  public void setRoundingAmount(Double roundingAmount) {
    this.roundingAmount = roundingAmount;
  }

  public Posdocumentvat roundingWithoutVAT(Double roundingWithoutVAT) {
    this.roundingWithoutVAT = roundingWithoutVAT;
    return this;
  }

   /**
   * Hal. bez DPH [persistentní položka]
   * @return roundingWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Hal. bez DPH [persistentní položka]")
  public Double getRoundingWithoutVAT() {
    return roundingWithoutVAT;
  }

  public void setRoundingWithoutVAT(Double roundingWithoutVAT) {
    this.roundingWithoutVAT = roundingWithoutVAT;
  }

  public Posdocumentvat localRoundingAmount(Double localRoundingAmount) {
    this.localRoundingAmount = localRoundingAmount;
    return this;
  }

   /**
   * Hal.vyr.lok. [persistentní položka]
   * @return localRoundingAmount
  **/
  @ApiModelProperty(example = "null", value = "Hal.vyr.lok. [persistentní položka]")
  public Double getLocalRoundingAmount() {
    return localRoundingAmount;
  }

  public void setLocalRoundingAmount(Double localRoundingAmount) {
    this.localRoundingAmount = localRoundingAmount;
  }

  public Posdocumentvat localRoundingWithoutVAT(Double localRoundingWithoutVAT) {
    this.localRoundingWithoutVAT = localRoundingWithoutVAT;
    return this;
  }

   /**
   * Hal. bez DPH lok [persistentní položka]
   * @return localRoundingWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Hal. bez DPH lok [persistentní položka]")
  public Double getLocalRoundingWithoutVAT() {
    return localRoundingWithoutVAT;
  }

  public void setLocalRoundingWithoutVAT(Double localRoundingWithoutVAT) {
    this.localRoundingWithoutVAT = localRoundingWithoutVAT;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Posdocumentvat posdocumentvat = (Posdocumentvat) o;
    return Objects.equals(this.displayName, posdocumentvat.displayName) &&
        Objects.equals(this.ID, posdocumentvat.ID) &&
        Objects.equals(this.classID, posdocumentvat.classID) &&
        Objects.equals(this.objVersion, posdocumentvat.objVersion) &&
        Objects.equals(this.parentID, posdocumentvat.parentID) &&
        Objects.equals(this.tAmountWithoutVAT, posdocumentvat.tAmountWithoutVAT) &&
        Objects.equals(this.tAmount, posdocumentvat.tAmount) &&
        Objects.equals(this.vATRate, posdocumentvat.vATRate) &&
        Objects.equals(this.localTAmountWithoutVAT, posdocumentvat.localTAmountWithoutVAT) &&
        Objects.equals(this.localTAmount, posdocumentvat.localTAmount) &&
        Objects.equals(this.vATRound, posdocumentvat.vATRound) &&
        Objects.equals(this.localVATRound, posdocumentvat.localVATRound) &&
        Objects.equals(this.vATRateID, posdocumentvat.vATRateID) &&
        Objects.equals(this.roundingAmount, posdocumentvat.roundingAmount) &&
        Objects.equals(this.roundingWithoutVAT, posdocumentvat.roundingWithoutVAT) &&
        Objects.equals(this.localRoundingAmount, posdocumentvat.localRoundingAmount) &&
        Objects.equals(this.localRoundingWithoutVAT, posdocumentvat.localRoundingWithoutVAT);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, tAmountWithoutVAT, tAmount, vATRate, localTAmountWithoutVAT, localTAmount, vATRound, localVATRound, vATRateID, roundingAmount, roundingWithoutVAT, localRoundingAmount, localRoundingWithoutVAT);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Posdocumentvat {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    tAmountWithoutVAT: ").append(toIndentedString(tAmountWithoutVAT)).append("\n");
    sb.append("    tAmount: ").append(toIndentedString(tAmount)).append("\n");
    sb.append("    vATRate: ").append(toIndentedString(vATRate)).append("\n");
    sb.append("    localTAmountWithoutVAT: ").append(toIndentedString(localTAmountWithoutVAT)).append("\n");
    sb.append("    localTAmount: ").append(toIndentedString(localTAmount)).append("\n");
    sb.append("    vATRound: ").append(toIndentedString(vATRound)).append("\n");
    sb.append("    localVATRound: ").append(toIndentedString(localVATRound)).append("\n");
    sb.append("    vATRateID: ").append(toIndentedString(vATRateID)).append("\n");
    sb.append("    roundingAmount: ").append(toIndentedString(roundingAmount)).append("\n");
    sb.append("    roundingWithoutVAT: ").append(toIndentedString(roundingWithoutVAT)).append("\n");
    sb.append("    localRoundingAmount: ").append(toIndentedString(localRoundingAmount)).append("\n");
    sb.append("    localRoundingWithoutVAT: ").append(toIndentedString(localRoundingWithoutVAT)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

