/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Absencetype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Absencetype   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("AbsenceBaseType")
  private Integer absenceBaseType = null;

  @SerializedName("GiveCalendarDays")
  private Boolean giveCalendarDays = null;

  @SerializedName("NoEvidenceState")
  private Boolean noEvidenceState = null;

  @SerializedName("NoCalculation")
  private Boolean noCalculation = null;

  @SerializedName("ExTimeType")
  private Integer exTimeType = null;

  @SerializedName("PaidFreeType")
  private Integer paidFreeType = null;

  @SerializedName("NoInsurance")
  private Boolean noInsurance = null;

  @SerializedName("AbsenceBaseTypeText")
  private String absenceBaseTypeText = null;

  @SerializedName("ExTimeTypeText")
  private String exTimeTypeText = null;

  @SerializedName("PaidFreeTypeText")
  private String paidFreeTypeText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Absencetype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Absencetype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Absencetype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Absencetype absenceBaseType(Integer absenceBaseType) {
    this.absenceBaseType = absenceBaseType;
    return this;
  }

   /**
   * Typ [persistentní položka]
   * @return absenceBaseType
  **/
  @ApiModelProperty(example = "null", value = "Typ [persistentní položka]")
  public Integer getAbsenceBaseType() {
    return absenceBaseType;
  }

  public void setAbsenceBaseType(Integer absenceBaseType) {
    this.absenceBaseType = absenceBaseType;
  }

  public Absencetype giveCalendarDays(Boolean giveCalendarDays) {
    this.giveCalendarDays = giveCalendarDays;
    return this;
  }

   /**
   * Kal. dny [persistentní položka]
   * @return giveCalendarDays
  **/
  @ApiModelProperty(example = "null", value = "Kal. dny [persistentní položka]")
  public Boolean getGiveCalendarDays() {
    return giveCalendarDays;
  }

  public void setGiveCalendarDays(Boolean giveCalendarDays) {
    this.giveCalendarDays = giveCalendarDays;
  }

  public Absencetype noEvidenceState(Boolean noEvidenceState) {
    this.noEvidenceState = noEvidenceState;
    return this;
  }

   /**
   * Mimo evid. [persistentní položka]
   * @return noEvidenceState
  **/
  @ApiModelProperty(example = "null", value = "Mimo evid. [persistentní položka]")
  public Boolean getNoEvidenceState() {
    return noEvidenceState;
  }

  public void setNoEvidenceState(Boolean noEvidenceState) {
    this.noEvidenceState = noEvidenceState;
  }

  public Absencetype noCalculation(Boolean noCalculation) {
    this.noCalculation = noCalculation;
    return this;
  }

   /**
   * Bez mzdy [persistentní položka]
   * @return noCalculation
  **/
  @ApiModelProperty(example = "null", value = "Bez mzdy [persistentní položka]")
  public Boolean getNoCalculation() {
    return noCalculation;
  }

  public void setNoCalculation(Boolean noCalculation) {
    this.noCalculation = noCalculation;
  }

  public Absencetype exTimeType(Integer exTimeType) {
    this.exTimeType = exTimeType;
    return this;
  }

   /**
   * Dlouhodobá nepřít. [persistentní položka]
   * @return exTimeType
  **/
  @ApiModelProperty(example = "null", value = "Dlouhodobá nepřít. [persistentní položka]")
  public Integer getExTimeType() {
    return exTimeType;
  }

  public void setExTimeType(Integer exTimeType) {
    this.exTimeType = exTimeType;
  }

  public Absencetype paidFreeType(Integer paidFreeType) {
    this.paidFreeType = paidFreeType;
    return this;
  }

   /**
   * Kat. plac. volna [persistentní položka]
   * @return paidFreeType
  **/
  @ApiModelProperty(example = "null", value = "Kat. plac. volna [persistentní položka]")
  public Integer getPaidFreeType() {
    return paidFreeType;
  }

  public void setPaidFreeType(Integer paidFreeType) {
    this.paidFreeType = paidFreeType;
  }

  public Absencetype noInsurance(Boolean noInsurance) {
    this.noInsurance = noInsurance;
    return this;
  }

   /**
   * Bez pojištění [persistentní položka]
   * @return noInsurance
  **/
  @ApiModelProperty(example = "null", value = "Bez pojištění [persistentní položka]")
  public Boolean getNoInsurance() {
    return noInsurance;
  }

  public void setNoInsurance(Boolean noInsurance) {
    this.noInsurance = noInsurance;
  }

  public Absencetype absenceBaseTypeText(String absenceBaseTypeText) {
    this.absenceBaseTypeText = absenceBaseTypeText;
    return this;
  }

   /**
   * Typ
   * @return absenceBaseTypeText
  **/
  @ApiModelProperty(example = "null", value = "Typ")
  public String getAbsenceBaseTypeText() {
    return absenceBaseTypeText;
  }

  public void setAbsenceBaseTypeText(String absenceBaseTypeText) {
    this.absenceBaseTypeText = absenceBaseTypeText;
  }

  public Absencetype exTimeTypeText(String exTimeTypeText) {
    this.exTimeTypeText = exTimeTypeText;
    return this;
  }

   /**
   * Dlouhodobá nepřít.
   * @return exTimeTypeText
  **/
  @ApiModelProperty(example = "null", value = "Dlouhodobá nepřít.")
  public String getExTimeTypeText() {
    return exTimeTypeText;
  }

  public void setExTimeTypeText(String exTimeTypeText) {
    this.exTimeTypeText = exTimeTypeText;
  }

  public Absencetype paidFreeTypeText(String paidFreeTypeText) {
    this.paidFreeTypeText = paidFreeTypeText;
    return this;
  }

   /**
   * Kat. plac. volna
   * @return paidFreeTypeText
  **/
  @ApiModelProperty(example = "null", value = "Kat. plac. volna")
  public String getPaidFreeTypeText() {
    return paidFreeTypeText;
  }

  public void setPaidFreeTypeText(String paidFreeTypeText) {
    this.paidFreeTypeText = paidFreeTypeText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Absencetype absencetype = (Absencetype) o;
    return Objects.equals(this.displayName, absencetype.displayName) &&
        Objects.equals(this.ID, absencetype.ID) &&
        Objects.equals(this.classID, absencetype.classID) &&
        Objects.equals(this.objVersion, absencetype.objVersion) &&
        Objects.equals(this.hidden, absencetype.hidden) &&
        Objects.equals(this.code, absencetype.code) &&
        Objects.equals(this.name, absencetype.name) &&
        Objects.equals(this.absenceBaseType, absencetype.absenceBaseType) &&
        Objects.equals(this.giveCalendarDays, absencetype.giveCalendarDays) &&
        Objects.equals(this.noEvidenceState, absencetype.noEvidenceState) &&
        Objects.equals(this.noCalculation, absencetype.noCalculation) &&
        Objects.equals(this.exTimeType, absencetype.exTimeType) &&
        Objects.equals(this.paidFreeType, absencetype.paidFreeType) &&
        Objects.equals(this.noInsurance, absencetype.noInsurance) &&
        Objects.equals(this.absenceBaseTypeText, absencetype.absenceBaseTypeText) &&
        Objects.equals(this.exTimeTypeText, absencetype.exTimeTypeText) &&
        Objects.equals(this.paidFreeTypeText, absencetype.paidFreeTypeText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, absenceBaseType, giveCalendarDays, noEvidenceState, noCalculation, exTimeType, paidFreeType, noInsurance, absenceBaseTypeText, exTimeTypeText, paidFreeTypeText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Absencetype {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    absenceBaseType: ").append(toIndentedString(absenceBaseType)).append("\n");
    sb.append("    giveCalendarDays: ").append(toIndentedString(giveCalendarDays)).append("\n");
    sb.append("    noEvidenceState: ").append(toIndentedString(noEvidenceState)).append("\n");
    sb.append("    noCalculation: ").append(toIndentedString(noCalculation)).append("\n");
    sb.append("    exTimeType: ").append(toIndentedString(exTimeType)).append("\n");
    sb.append("    paidFreeType: ").append(toIndentedString(paidFreeType)).append("\n");
    sb.append("    noInsurance: ").append(toIndentedString(noInsurance)).append("\n");
    sb.append("    absenceBaseTypeText: ").append(toIndentedString(absenceBaseTypeText)).append("\n");
    sb.append("    exTimeTypeText: ").append(toIndentedString(exTimeTypeText)).append("\n");
    sb.append("    paidFreeTypeText: ").append(toIndentedString(paidFreeTypeText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

