/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Dockdefinition
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Dockdefinition   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("employee_id")
  private String employeeId = null;

  @SerializedName("docktype_id")
  private String docktypeId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("validfrom$date")
  private DateTime validfromdate = null;

  @SerializedName("validto$date")
  private DateTime validtodate = null;

  @SerializedName("totaldock")
  private Double totaldock = null;

  @SerializedName("dockcount")
  private Integer dockcount = null;

  @SerializedName("basetype")
  private Integer basetype = null;

  @SerializedName("periodicity")
  private Integer periodicity = null;

  @SerializedName("internal")
  private Boolean internal = null;

  @SerializedName("debtcorrect")
  private Boolean debtcorrect = null;

  @SerializedName("ofminimum")
  private Boolean ofminimum = null;

  @SerializedName("partial")
  private Boolean partial = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("printgroup")
  private String printgroup = null;

  @SerializedName("destination")
  private String destination = null;

  @SerializedName("source_id")
  private String sourceId = null;

  @SerializedName("varsymbol")
  private String varsymbol = null;

  @SerializedName("specsymbol")
  private String specsymbol = null;

  @SerializedName("constsymbol_id")
  private String constsymbolId = null;

  @SerializedName("required")
  private Double required = null;

  @SerializedName("ispercent")
  private Boolean ispercent = null;

  @SerializedName("percentofcode")
  private Integer percentofcode = null;

  @SerializedName("createdby_id")
  private String createdbyId = null;

  @SerializedName("correctedby_id")
  private String correctedbyId = null;

  @SerializedName("clsidforpercent")
  private String clsidforpercent = null;

  @SerializedName("duedatenrdays")
  private Integer duedatenrdays = null;

  @SerializedName("division_id")
  private String divisionId = null;

  @SerializedName("busorder_id")
  private String busorderId = null;

  @SerializedName("bustransaction_id")
  private String bustransactionId = null;

  @SerializedName("flag")
  private String flag = null;

  @SerializedName("per_personalnumber")
  private String perPersonalnumber = null;

  @SerializedName("swiftcode")
  private String swiftcode = null;

  @SerializedName("execauthority")
  private String execauthority = null;

  @SerializedName("execrefnumber")
  private String execrefnumber = null;

  @SerializedName("execrecipient")
  private String execrecipient = null;

  @SerializedName("per_numpersonalnumber")
  private Integer perNumpersonalnumber = null;

  @SerializedName("useexpressionforvs")
  private Boolean useexpressionforvs = null;

  @SerializedName("useexpressionforss")
  private Boolean useexpressionforss = null;

  @SerializedName("expressionforvs")
  private String expressionforvs = null;

  @SerializedName("expressionforss")
  private String expressionforss = null;

  @SerializedName("agreementdock")
  private Boolean agreementdock = null;

  @SerializedName("dockfromagreements")
  private Boolean dockfromagreements = null;

  @SerializedName("targetbankcountry_id")
  private String targetbankcountryId = null;

  @SerializedName("basetype_text")
  private String basetypeText = null;

  @SerializedName("percentofname")
  private String percentofname = null;

  @SerializedName("percentoflabel")
  private String percentoflabel = null;

  @SerializedName("employeename")
  private String employeename = null;

  @SerializedName("busproject_id")
  private String busprojectId = null;

  public Dockdefinition displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Dockdefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Dockdefinition classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Dockdefinition objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Dockdefinition employeeId(String employeeId) {
    this.employeeId = employeeId;
    return this;
  }

   /**
   * zaměstnanec; id objektu zaměstnanec [persistentní položka]
   * @return employeeId
  **/
  @ApiModelProperty(example = "null", value = "zaměstnanec; id objektu zaměstnanec [persistentní položka]")
  public String getEmployeeId() {
    return employeeId;
  }

  public void setEmployeeId(String employeeId) {
    this.employeeId = employeeId;
  }

  public Dockdefinition docktypeId(String docktypeId) {
    this.docktypeId = docktypeId;
    return this;
  }

   /**
   * druh srážky; id objektu druh srážky [persistentní položka]
   * @return docktypeId
  **/
  @ApiModelProperty(example = "null", value = "druh srážky; id objektu druh srážky [persistentní položka]")
  public String getDocktypeId() {
    return docktypeId;
  }

  public void setDocktypeId(String docktypeId) {
    this.docktypeId = docktypeId;
  }

  public Dockdefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Dockdefinition validfromdate(DateTime validfromdate) {
    this.validfromdate = validfromdate;
    return this;
  }

   /**
   * platí od [persistentní položka]
   * @return validfromdate
  **/
  @ApiModelProperty(example = "null", value = "platí od [persistentní položka]")
  public DateTime getValidfromdate() {
    return validfromdate;
  }

  public void setValidfromdate(DateTime validfromdate) {
    this.validfromdate = validfromdate;
  }

  public Dockdefinition validtodate(DateTime validtodate) {
    this.validtodate = validtodate;
    return this;
  }

   /**
   * platí do [persistentní položka]
   * @return validtodate
  **/
  @ApiModelProperty(example = "null", value = "platí do [persistentní položka]")
  public DateTime getValidtodate() {
    return validtodate;
  }

  public void setValidtodate(DateTime validtodate) {
    this.validtodate = validtodate;
  }

  public Dockdefinition totaldock(Double totaldock) {
    this.totaldock = totaldock;
    return this;
  }

   /**
   * celková částka [persistentní položka]
   * @return totaldock
  **/
  @ApiModelProperty(example = "null", value = "celková částka [persistentní položka]")
  public Double getTotaldock() {
    return totaldock;
  }

  public void setTotaldock(Double totaldock) {
    this.totaldock = totaldock;
  }

  public Dockdefinition dockcount(Integer dockcount) {
    this.dockcount = dockcount;
    return this;
  }

   /**
   * počet splátek [persistentní položka]
   * @return dockcount
  **/
  @ApiModelProperty(example = "null", value = "počet splátek [persistentní položka]")
  public Integer getDockcount() {
    return dockcount;
  }

  public void setDockcount(Integer dockcount) {
    this.dockcount = dockcount;
  }

  public Dockdefinition basetype(Integer basetype) {
    this.basetype = basetype;
    return this;
  }

   /**
   * zákl.typ [persistentní položka]
   * @return basetype
  **/
  @ApiModelProperty(example = "null", value = "zákl.typ [persistentní položka]")
  public Integer getBasetype() {
    return basetype;
  }

  public void setBasetype(Integer basetype) {
    this.basetype = basetype;
  }

  public Dockdefinition periodicity(Integer periodicity) {
    this.periodicity = periodicity;
    return this;
  }

   /**
   * periodicita [persistentní položka]
   * @return periodicity
  **/
  @ApiModelProperty(example = "null", value = "periodicita [persistentní položka]")
  public Integer getPeriodicity() {
    return periodicity;
  }

  public void setPeriodicity(Integer periodicity) {
    this.periodicity = periodicity;
  }

  public Dockdefinition internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * interní [persistentní položka]
   * @return internal
  **/
  @ApiModelProperty(example = "null", value = "interní [persistentní položka]")
  public Boolean getInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }

  public Dockdefinition debtcorrect(Boolean debtcorrect) {
    this.debtcorrect = debtcorrect;
    return this;
  }

   /**
   * vyr.dlužnou částku [persistentní položka]
   * @return debtcorrect
  **/
  @ApiModelProperty(example = "null", value = "vyr.dlužnou částku [persistentní položka]")
  public Boolean getDebtcorrect() {
    return debtcorrect;
  }

  public void setDebtcorrect(Boolean debtcorrect) {
    this.debtcorrect = debtcorrect;
  }

  public Dockdefinition ofminimum(Boolean ofminimum) {
    this.ofminimum = ofminimum;
    return this;
  }

   /**
   * porovnávat s minimem [persistentní položka]
   * @return ofminimum
  **/
  @ApiModelProperty(example = "null", value = "porovnávat s minimem [persistentní položka]")
  public Boolean getOfminimum() {
    return ofminimum;
  }

  public void setOfminimum(Boolean ofminimum) {
    this.ofminimum = ofminimum;
  }

  public Dockdefinition partial(Boolean partial) {
    this.partial = partial;
    return this;
  }

   /**
   * Část [persistentní položka]
   * @return partial
  **/
  @ApiModelProperty(example = "null", value = "Část [persistentní položka]")
  public Boolean getPartial() {
    return partial;
  }

  public void setPartial(Boolean partial) {
    this.partial = partial;
  }

  public Dockdefinition priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * priorita [persistentní položka]
   * @return priority
  **/
  @ApiModelProperty(example = "null", value = "priorita [persistentní položka]")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Dockdefinition printgroup(String printgroup) {
    this.printgroup = printgroup;
    return this;
  }

   /**
   * tisk.skup. [persistentní položka]
   * @return printgroup
  **/
  @ApiModelProperty(example = "null", value = "tisk.skup. [persistentní položka]")
  public String getPrintgroup() {
    return printgroup;
  }

  public void setPrintgroup(String printgroup) {
    this.printgroup = printgroup;
  }

  public Dockdefinition destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * cílový účet [persistentní položka]
   * @return destination
  **/
  @ApiModelProperty(example = "null", value = "cílový účet [persistentní položka]")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public Dockdefinition sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * zdrojový účet; id objektu bankovní účet [persistentní položka]
   * @return sourceId
  **/
  @ApiModelProperty(example = "null", value = "zdrojový účet; id objektu bankovní účet [persistentní položka]")
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }

  public Dockdefinition varsymbol(String varsymbol) {
    this.varsymbol = varsymbol;
    return this;
  }

   /**
   * var.symbol [persistentní položka]
   * @return varsymbol
  **/
  @ApiModelProperty(example = "null", value = "var.symbol [persistentní položka]")
  public String getVarsymbol() {
    return varsymbol;
  }

  public void setVarsymbol(String varsymbol) {
    this.varsymbol = varsymbol;
  }

  public Dockdefinition specsymbol(String specsymbol) {
    this.specsymbol = specsymbol;
    return this;
  }

   /**
   * spec.symbol [persistentní položka]
   * @return specsymbol
  **/
  @ApiModelProperty(example = "null", value = "spec.symbol [persistentní položka]")
  public String getSpecsymbol() {
    return specsymbol;
  }

  public void setSpecsymbol(String specsymbol) {
    this.specsymbol = specsymbol;
  }

  public Dockdefinition constsymbolId(String constsymbolId) {
    this.constsymbolId = constsymbolId;
    return this;
  }

   /**
   * konst.symbol; id objektu konstantní symbol [persistentní položka]
   * @return constsymbolId
  **/
  @ApiModelProperty(example = "null", value = "konst.symbol; id objektu konstantní symbol [persistentní položka]")
  public String getConstsymbolId() {
    return constsymbolId;
  }

  public void setConstsymbolId(String constsymbolId) {
    this.constsymbolId = constsymbolId;
  }

  public Dockdefinition required(Double required) {
    this.required = required;
    return this;
  }

   /**
   * předepsáno [persistentní položka]
   * @return required
  **/
  @ApiModelProperty(example = "null", value = "předepsáno [persistentní položka]")
  public Double getRequired() {
    return required;
  }

  public void setRequired(Double required) {
    this.required = required;
  }

  public Dockdefinition ispercent(Boolean ispercent) {
    this.ispercent = ispercent;
    return this;
  }

   /**
   * procentem [persistentní položka]
   * @return ispercent
  **/
  @ApiModelProperty(example = "null", value = "procentem [persistentní položka]")
  public Boolean getIspercent() {
    return ispercent;
  }

  public void setIspercent(Boolean ispercent) {
    this.ispercent = ispercent;
  }

  public Dockdefinition percentofcode(Integer percentofcode) {
    this.percentofcode = percentofcode;
    return this;
  }

   /**
   * z položky ml [persistentní položka]
   * @return percentofcode
  **/
  @ApiModelProperty(example = "null", value = "z položky ml [persistentní položka]")
  public Integer getPercentofcode() {
    return percentofcode;
  }

  public void setPercentofcode(Integer percentofcode) {
    this.percentofcode = percentofcode;
  }

  public Dockdefinition createdbyId(String createdbyId) {
    this.createdbyId = createdbyId;
    return this;
  }

   /**
   * vytvořil; id objektu uživatel [persistentní položka]
   * @return createdbyId
  **/
  @ApiModelProperty(example = "null", value = "vytvořil; id objektu uživatel [persistentní položka]")
  public String getCreatedbyId() {
    return createdbyId;
  }

  public void setCreatedbyId(String createdbyId) {
    this.createdbyId = createdbyId;
  }

  public Dockdefinition correctedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
    return this;
  }

   /**
   * opravil; id objektu uživatel [persistentní položka]
   * @return correctedbyId
  **/
  @ApiModelProperty(example = "null", value = "opravil; id objektu uživatel [persistentní položka]")
  public String getCorrectedbyId() {
    return correctedbyId;
  }

  public void setCorrectedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
  }

  public Dockdefinition clsidforpercent(String clsidforpercent) {
    this.clsidforpercent = clsidforpercent;
    return this;
  }

   /**
   * třída objektu [persistentní položka]
   * @return clsidforpercent
  **/
  @ApiModelProperty(example = "null", value = "třída objektu [persistentní položka]")
  public String getClsidforpercent() {
    return clsidforpercent;
  }

  public void setClsidforpercent(String clsidforpercent) {
    this.clsidforpercent = clsidforpercent;
  }

  public Dockdefinition duedatenrdays(Integer duedatenrdays) {
    this.duedatenrdays = duedatenrdays;
    return this;
  }

   /**
   * dny splatnosti po výplatě [persistentní položka]
   * @return duedatenrdays
  **/
  @ApiModelProperty(example = "null", value = "dny splatnosti po výplatě [persistentní položka]")
  public Integer getDuedatenrdays() {
    return duedatenrdays;
  }

  public void setDuedatenrdays(Integer duedatenrdays) {
    this.duedatenrdays = duedatenrdays;
  }

  public Dockdefinition divisionId(String divisionId) {
    this.divisionId = divisionId;
    return this;
  }

   /**
   * středisko; id objektu středisko [persistentní položka]
   * @return divisionId
  **/
  @ApiModelProperty(example = "null", value = "středisko; id objektu středisko [persistentní položka]")
  public String getDivisionId() {
    return divisionId;
  }

  public void setDivisionId(String divisionId) {
    this.divisionId = divisionId;
  }

  public Dockdefinition busorderId(String busorderId) {
    this.busorderId = busorderId;
    return this;
  }

   /**
   * zakázka; id objektu zakázka [persistentní položka]
   * @return busorderId
  **/
  @ApiModelProperty(example = "null", value = "zakázka; id objektu zakázka [persistentní položka]")
  public String getBusorderId() {
    return busorderId;
  }

  public void setBusorderId(String busorderId) {
    this.busorderId = busorderId;
  }

  public Dockdefinition bustransactionId(String bustransactionId) {
    this.bustransactionId = bustransactionId;
    return this;
  }

   /**
   * obch. případ; id objektu obchodní případ [persistentní položka]
   * @return bustransactionId
  **/
  @ApiModelProperty(example = "null", value = "obch. případ; id objektu obchodní případ [persistentní položka]")
  public String getBustransactionId() {
    return bustransactionId;
  }

  public void setBustransactionId(String bustransactionId) {
    this.bustransactionId = bustransactionId;
  }

  public Dockdefinition flag(String flag) {
    this.flag = flag;
    return this;
  }

   /**
   * rozl. řetězec [persistentní položka]
   * @return flag
  **/
  @ApiModelProperty(example = "null", value = "rozl. řetězec [persistentní položka]")
  public String getFlag() {
    return flag;
  }

  public void setFlag(String flag) {
    this.flag = flag;
  }

  public Dockdefinition perPersonalnumber(String perPersonalnumber) {
    this.perPersonalnumber = perPersonalnumber;
    return this;
  }

   /**
   * os.číslo
   * @return perPersonalnumber
  **/
  @ApiModelProperty(example = "null", value = "os.číslo")
  public String getPerPersonalnumber() {
    return perPersonalnumber;
  }

  public void setPerPersonalnumber(String perPersonalnumber) {
    this.perPersonalnumber = perPersonalnumber;
  }

  public Dockdefinition swiftcode(String swiftcode) {
    this.swiftcode = swiftcode;
    return this;
  }

   /**
   * swift kód [persistentní položka]
   * @return swiftcode
  **/
  @ApiModelProperty(example = "null", value = "swift kód [persistentní položka]")
  public String getSwiftcode() {
    return swiftcode;
  }

  public void setSwiftcode(String swiftcode) {
    this.swiftcode = swiftcode;
  }

  public Dockdefinition execauthority(String execauthority) {
    this.execauthority = execauthority;
    return this;
  }

   /**
   * exekuci nařídil [persistentní položka]
   * @return execauthority
  **/
  @ApiModelProperty(example = "null", value = "exekuci nařídil [persistentní položka]")
  public String getExecauthority() {
    return execauthority;
  }

  public void setExecauthority(String execauthority) {
    this.execauthority = execauthority;
  }

  public Dockdefinition execrefnumber(String execrefnumber) {
    this.execrefnumber = execrefnumber;
    return this;
  }

   /**
   * Číslo jednací [persistentní položka]
   * @return execrefnumber
  **/
  @ApiModelProperty(example = "null", value = "Číslo jednací [persistentní položka]")
  public String getExecrefnumber() {
    return execrefnumber;
  }

  public void setExecrefnumber(String execrefnumber) {
    this.execrefnumber = execrefnumber;
  }

  public Dockdefinition execrecipient(String execrecipient) {
    this.execrecipient = execrecipient;
    return this;
  }

   /**
   * oprávněný [persistentní položka]
   * @return execrecipient
  **/
  @ApiModelProperty(example = "null", value = "oprávněný [persistentní položka]")
  public String getExecrecipient() {
    return execrecipient;
  }

  public void setExecrecipient(String execrecipient) {
    this.execrecipient = execrecipient;
  }

  public Dockdefinition perNumpersonalnumber(Integer perNumpersonalnumber) {
    this.perNumpersonalnumber = perNumpersonalnumber;
    return this;
  }

   /**
   * os.číslo numericky
   * @return perNumpersonalnumber
  **/
  @ApiModelProperty(example = "null", value = "os.číslo numericky")
  public Integer getPerNumpersonalnumber() {
    return perNumpersonalnumber;
  }

  public void setPerNumpersonalnumber(Integer perNumpersonalnumber) {
    this.perNumpersonalnumber = perNumpersonalnumber;
  }

  public Dockdefinition useexpressionforvs(Boolean useexpressionforvs) {
    this.useexpressionforvs = useexpressionforvs;
    return this;
  }

   /**
   * vs výrazem [persistentní položka]
   * @return useexpressionforvs
  **/
  @ApiModelProperty(example = "null", value = "vs výrazem [persistentní položka]")
  public Boolean getUseexpressionforvs() {
    return useexpressionforvs;
  }

  public void setUseexpressionforvs(Boolean useexpressionforvs) {
    this.useexpressionforvs = useexpressionforvs;
  }

  public Dockdefinition useexpressionforss(Boolean useexpressionforss) {
    this.useexpressionforss = useexpressionforss;
    return this;
  }

   /**
   * ss výrazem [persistentní položka]
   * @return useexpressionforss
  **/
  @ApiModelProperty(example = "null", value = "ss výrazem [persistentní položka]")
  public Boolean getUseexpressionforss() {
    return useexpressionforss;
  }

  public void setUseexpressionforss(Boolean useexpressionforss) {
    this.useexpressionforss = useexpressionforss;
  }

  public Dockdefinition expressionforvs(String expressionforvs) {
    this.expressionforvs = expressionforvs;
    return this;
  }

   /**
   * výraz pro vs [persistentní položka]
   * @return expressionforvs
  **/
  @ApiModelProperty(example = "null", value = "výraz pro vs [persistentní položka]")
  public String getExpressionforvs() {
    return expressionforvs;
  }

  public void setExpressionforvs(String expressionforvs) {
    this.expressionforvs = expressionforvs;
  }

  public Dockdefinition expressionforss(String expressionforss) {
    this.expressionforss = expressionforss;
    return this;
  }

   /**
   * výraz pro ss [persistentní položka]
   * @return expressionforss
  **/
  @ApiModelProperty(example = "null", value = "výraz pro ss [persistentní položka]")
  public String getExpressionforss() {
    return expressionforss;
  }

  public void setExpressionforss(String expressionforss) {
    this.expressionforss = expressionforss;
  }

  public Dockdefinition agreementdock(Boolean agreementdock) {
    this.agreementdock = agreementdock;
    return this;
  }

   /**
   * srážka dohodou [persistentní položka]
   * @return agreementdock
  **/
  @ApiModelProperty(example = "null", value = "srážka dohodou [persistentní položka]")
  public Boolean getAgreementdock() {
    return agreementdock;
  }

  public void setAgreementdock(Boolean agreementdock) {
    this.agreementdock = agreementdock;
  }

  public Dockdefinition dockfromagreements(Boolean dockfromagreements) {
    this.dockfromagreements = dockfromagreements;
    return this;
  }

   /**
   * srážet i z dohod [persistentní položka]
   * @return dockfromagreements
  **/
  @ApiModelProperty(example = "null", value = "srážet i z dohod [persistentní položka]")
  public Boolean getDockfromagreements() {
    return dockfromagreements;
  }

  public void setDockfromagreements(Boolean dockfromagreements) {
    this.dockfromagreements = dockfromagreements;
  }

  public Dockdefinition targetbankcountryId(String targetbankcountryId) {
    this.targetbankcountryId = targetbankcountryId;
    return this;
  }

   /**
   * země banky; id objektu země [persistentní položka]
   * @return targetbankcountryId
  **/
  @ApiModelProperty(example = "null", value = "země banky; id objektu země [persistentní položka]")
  public String getTargetbankcountryId() {
    return targetbankcountryId;
  }

  public void setTargetbankcountryId(String targetbankcountryId) {
    this.targetbankcountryId = targetbankcountryId;
  }

  public Dockdefinition basetypeText(String basetypeText) {
    this.basetypeText = basetypeText;
    return this;
  }

   /**
   * zákl.typ
   * @return basetypeText
  **/
  @ApiModelProperty(example = "null", value = "zákl.typ")
  public String getBasetypeText() {
    return basetypeText;
  }

  public void setBasetypeText(String basetypeText) {
    this.basetypeText = basetypeText;
  }

  public Dockdefinition percentofname(String percentofname) {
    this.percentofname = percentofname;
    return this;
  }

   /**
   * z položky - jméno
   * @return percentofname
  **/
  @ApiModelProperty(example = "null", value = "z položky - jméno")
  public String getPercentofname() {
    return percentofname;
  }

  public void setPercentofname(String percentofname) {
    this.percentofname = percentofname;
  }

  public Dockdefinition percentoflabel(String percentoflabel) {
    this.percentoflabel = percentoflabel;
    return this;
  }

   /**
   * z položky - popis
   * @return percentoflabel
  **/
  @ApiModelProperty(example = "null", value = "z položky - popis")
  public String getPercentoflabel() {
    return percentoflabel;
  }

  public void setPercentoflabel(String percentoflabel) {
    this.percentoflabel = percentoflabel;
  }

  public Dockdefinition employeename(String employeename) {
    this.employeename = employeename;
    return this;
  }

   /**
   * příjmení a jméno
   * @return employeename
  **/
  @ApiModelProperty(example = "null", value = "příjmení a jméno")
  public String getEmployeename() {
    return employeename;
  }

  public void setEmployeename(String employeename) {
    this.employeename = employeename;
  }

  public Dockdefinition busprojectId(String busprojectId) {
    this.busprojectId = busprojectId;
    return this;
  }

   /**
   * projekt; id objektu projekt [persistentní položka]
   * @return busprojectId
  **/
  @ApiModelProperty(example = "null", value = "projekt; id objektu projekt [persistentní položka]")
  public String getBusprojectId() {
    return busprojectId;
  }

  public void setBusprojectId(String busprojectId) {
    this.busprojectId = busprojectId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dockdefinition dockdefinition = (Dockdefinition) o;
    return Objects.equals(this.displayname, dockdefinition.displayname) &&
        Objects.equals(this.id, dockdefinition.id) &&
        Objects.equals(this.classid, dockdefinition.classid) &&
        Objects.equals(this.objversion, dockdefinition.objversion) &&
        Objects.equals(this.employeeId, dockdefinition.employeeId) &&
        Objects.equals(this.docktypeId, dockdefinition.docktypeId) &&
        Objects.equals(this.description, dockdefinition.description) &&
        Objects.equals(this.validfromdate, dockdefinition.validfromdate) &&
        Objects.equals(this.validtodate, dockdefinition.validtodate) &&
        Objects.equals(this.totaldock, dockdefinition.totaldock) &&
        Objects.equals(this.dockcount, dockdefinition.dockcount) &&
        Objects.equals(this.basetype, dockdefinition.basetype) &&
        Objects.equals(this.periodicity, dockdefinition.periodicity) &&
        Objects.equals(this.internal, dockdefinition.internal) &&
        Objects.equals(this.debtcorrect, dockdefinition.debtcorrect) &&
        Objects.equals(this.ofminimum, dockdefinition.ofminimum) &&
        Objects.equals(this.partial, dockdefinition.partial) &&
        Objects.equals(this.priority, dockdefinition.priority) &&
        Objects.equals(this.printgroup, dockdefinition.printgroup) &&
        Objects.equals(this.destination, dockdefinition.destination) &&
        Objects.equals(this.sourceId, dockdefinition.sourceId) &&
        Objects.equals(this.varsymbol, dockdefinition.varsymbol) &&
        Objects.equals(this.specsymbol, dockdefinition.specsymbol) &&
        Objects.equals(this.constsymbolId, dockdefinition.constsymbolId) &&
        Objects.equals(this.required, dockdefinition.required) &&
        Objects.equals(this.ispercent, dockdefinition.ispercent) &&
        Objects.equals(this.percentofcode, dockdefinition.percentofcode) &&
        Objects.equals(this.createdbyId, dockdefinition.createdbyId) &&
        Objects.equals(this.correctedbyId, dockdefinition.correctedbyId) &&
        Objects.equals(this.clsidforpercent, dockdefinition.clsidforpercent) &&
        Objects.equals(this.duedatenrdays, dockdefinition.duedatenrdays) &&
        Objects.equals(this.divisionId, dockdefinition.divisionId) &&
        Objects.equals(this.busorderId, dockdefinition.busorderId) &&
        Objects.equals(this.bustransactionId, dockdefinition.bustransactionId) &&
        Objects.equals(this.flag, dockdefinition.flag) &&
        Objects.equals(this.perPersonalnumber, dockdefinition.perPersonalnumber) &&
        Objects.equals(this.swiftcode, dockdefinition.swiftcode) &&
        Objects.equals(this.execauthority, dockdefinition.execauthority) &&
        Objects.equals(this.execrefnumber, dockdefinition.execrefnumber) &&
        Objects.equals(this.execrecipient, dockdefinition.execrecipient) &&
        Objects.equals(this.perNumpersonalnumber, dockdefinition.perNumpersonalnumber) &&
        Objects.equals(this.useexpressionforvs, dockdefinition.useexpressionforvs) &&
        Objects.equals(this.useexpressionforss, dockdefinition.useexpressionforss) &&
        Objects.equals(this.expressionforvs, dockdefinition.expressionforvs) &&
        Objects.equals(this.expressionforss, dockdefinition.expressionforss) &&
        Objects.equals(this.agreementdock, dockdefinition.agreementdock) &&
        Objects.equals(this.dockfromagreements, dockdefinition.dockfromagreements) &&
        Objects.equals(this.targetbankcountryId, dockdefinition.targetbankcountryId) &&
        Objects.equals(this.basetypeText, dockdefinition.basetypeText) &&
        Objects.equals(this.percentofname, dockdefinition.percentofname) &&
        Objects.equals(this.percentoflabel, dockdefinition.percentoflabel) &&
        Objects.equals(this.employeename, dockdefinition.employeename) &&
        Objects.equals(this.busprojectId, dockdefinition.busprojectId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, employeeId, docktypeId, description, validfromdate, validtodate, totaldock, dockcount, basetype, periodicity, internal, debtcorrect, ofminimum, partial, priority, printgroup, destination, sourceId, varsymbol, specsymbol, constsymbolId, required, ispercent, percentofcode, createdbyId, correctedbyId, clsidforpercent, duedatenrdays, divisionId, busorderId, bustransactionId, flag, perPersonalnumber, swiftcode, execauthority, execrefnumber, execrecipient, perNumpersonalnumber, useexpressionforvs, useexpressionforss, expressionforvs, expressionforss, agreementdock, dockfromagreements, targetbankcountryId, basetypeText, percentofname, percentoflabel, employeename, busprojectId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dockdefinition {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    docktypeId: ").append(toIndentedString(docktypeId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    validfromdate: ").append(toIndentedString(validfromdate)).append("\n");
    sb.append("    validtodate: ").append(toIndentedString(validtodate)).append("\n");
    sb.append("    totaldock: ").append(toIndentedString(totaldock)).append("\n");
    sb.append("    dockcount: ").append(toIndentedString(dockcount)).append("\n");
    sb.append("    basetype: ").append(toIndentedString(basetype)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    debtcorrect: ").append(toIndentedString(debtcorrect)).append("\n");
    sb.append("    ofminimum: ").append(toIndentedString(ofminimum)).append("\n");
    sb.append("    partial: ").append(toIndentedString(partial)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    printgroup: ").append(toIndentedString(printgroup)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    varsymbol: ").append(toIndentedString(varsymbol)).append("\n");
    sb.append("    specsymbol: ").append(toIndentedString(specsymbol)).append("\n");
    sb.append("    constsymbolId: ").append(toIndentedString(constsymbolId)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    ispercent: ").append(toIndentedString(ispercent)).append("\n");
    sb.append("    percentofcode: ").append(toIndentedString(percentofcode)).append("\n");
    sb.append("    createdbyId: ").append(toIndentedString(createdbyId)).append("\n");
    sb.append("    correctedbyId: ").append(toIndentedString(correctedbyId)).append("\n");
    sb.append("    clsidforpercent: ").append(toIndentedString(clsidforpercent)).append("\n");
    sb.append("    duedatenrdays: ").append(toIndentedString(duedatenrdays)).append("\n");
    sb.append("    divisionId: ").append(toIndentedString(divisionId)).append("\n");
    sb.append("    busorderId: ").append(toIndentedString(busorderId)).append("\n");
    sb.append("    bustransactionId: ").append(toIndentedString(bustransactionId)).append("\n");
    sb.append("    flag: ").append(toIndentedString(flag)).append("\n");
    sb.append("    perPersonalnumber: ").append(toIndentedString(perPersonalnumber)).append("\n");
    sb.append("    swiftcode: ").append(toIndentedString(swiftcode)).append("\n");
    sb.append("    execauthority: ").append(toIndentedString(execauthority)).append("\n");
    sb.append("    execrefnumber: ").append(toIndentedString(execrefnumber)).append("\n");
    sb.append("    execrecipient: ").append(toIndentedString(execrecipient)).append("\n");
    sb.append("    perNumpersonalnumber: ").append(toIndentedString(perNumpersonalnumber)).append("\n");
    sb.append("    useexpressionforvs: ").append(toIndentedString(useexpressionforvs)).append("\n");
    sb.append("    useexpressionforss: ").append(toIndentedString(useexpressionforss)).append("\n");
    sb.append("    expressionforvs: ").append(toIndentedString(expressionforvs)).append("\n");
    sb.append("    expressionforss: ").append(toIndentedString(expressionforss)).append("\n");
    sb.append("    agreementdock: ").append(toIndentedString(agreementdock)).append("\n");
    sb.append("    dockfromagreements: ").append(toIndentedString(dockfromagreements)).append("\n");
    sb.append("    targetbankcountryId: ").append(toIndentedString(targetbankcountryId)).append("\n");
    sb.append("    basetypeText: ").append(toIndentedString(basetypeText)).append("\n");
    sb.append("    percentofname: ").append(toIndentedString(percentofname)).append("\n");
    sb.append("    percentoflabel: ").append(toIndentedString(percentoflabel)).append("\n");
    sb.append("    employeename: ").append(toIndentedString(employeename)).append("\n");
    sb.append("    busprojectId: ").append(toIndentedString(busprojectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

