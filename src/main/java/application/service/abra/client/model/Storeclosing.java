/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Storeclosing
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Storeclosing   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Store_ID")
  private String storeID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("ClosingDate$DATE")
  private DateTime closingDateDATE = null;

  @SerializedName("Beginning")
  private Boolean beginning = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("LocalAmount")
  private Double localAmount = null;

  @SerializedName("ClosingOrder")
  private Integer closingOrder = null;

  @SerializedName("TypeEstimate")
  private Integer typeEstimate = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Storeclosing storeID(String storeID) {
    this.storeID = storeID;
    return this;
  }

   /**
   * Sklad; ID objektu Sklad [persistentní položka]
   * @return storeID
  **/
  @ApiModelProperty(example = "null", value = "Sklad; ID objektu Sklad [persistentní položka]")
  public String getStoreID() {
    return storeID;
  }

  public void setStoreID(String storeID) {
    this.storeID = storeID;
  }

  public Storeclosing periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Storeclosing closingDateDATE(DateTime closingDateDATE) {
    this.closingDateDATE = closingDateDATE;
    return this;
  }

   /**
   * Datum [persistentní položka]
   * @return closingDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum [persistentní položka]")
  public DateTime getClosingDateDATE() {
    return closingDateDATE;
  }

  public void setClosingDateDATE(DateTime closingDateDATE) {
    this.closingDateDATE = closingDateDATE;
  }

  public Storeclosing beginning(Boolean beginning) {
    this.beginning = beginning;
    return this;
  }

   /**
   * Aktivní [persistentní položka]
   * @return beginning
  **/
  @ApiModelProperty(example = "null", value = "Aktivní [persistentní položka]")
  public Boolean getBeginning() {
    return beginning;
  }

  public void setBeginning(Boolean beginning) {
    this.beginning = beginning;
  }

  public Storeclosing createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Storeclosing description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Storeclosing localAmount(Double localAmount) {
    this.localAmount = localAmount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return localAmount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getLocalAmount() {
    return localAmount;
  }

  public void setLocalAmount(Double localAmount) {
    this.localAmount = localAmount;
  }

  public Storeclosing closingOrder(Integer closingOrder) {
    this.closingOrder = closingOrder;
    return this;
  }

   /**
   * Identifikace [persistentní položka]
   * @return closingOrder
  **/
  @ApiModelProperty(example = "null", value = "Identifikace [persistentní položka]")
  public Integer getClosingOrder() {
    return closingOrder;
  }

  public void setClosingOrder(Integer closingOrder) {
    this.closingOrder = closingOrder;
  }

  public Storeclosing typeEstimate(Integer typeEstimate) {
    this.typeEstimate = typeEstimate;
    return this;
  }

   /**
   * Typ oceňování [persistentní položka]
   * @return typeEstimate
  **/
  @ApiModelProperty(example = "null", value = "Typ oceňování [persistentní položka]")
  public Integer getTypeEstimate() {
    return typeEstimate;
  }

  public void setTypeEstimate(Integer typeEstimate) {
    this.typeEstimate = typeEstimate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Storeclosing storeclosing = (Storeclosing) o;
    return Objects.equals(this.displayName, storeclosing.displayName) &&
        Objects.equals(this.ID, storeclosing.ID) &&
        Objects.equals(this.classID, storeclosing.classID) &&
        Objects.equals(this.objVersion, storeclosing.objVersion) &&
        Objects.equals(this.storeID, storeclosing.storeID) &&
        Objects.equals(this.periodID, storeclosing.periodID) &&
        Objects.equals(this.closingDateDATE, storeclosing.closingDateDATE) &&
        Objects.equals(this.beginning, storeclosing.beginning) &&
        Objects.equals(this.createdByID, storeclosing.createdByID) &&
        Objects.equals(this.description, storeclosing.description) &&
        Objects.equals(this.localAmount, storeclosing.localAmount) &&
        Objects.equals(this.closingOrder, storeclosing.closingOrder) &&
        Objects.equals(this.typeEstimate, storeclosing.typeEstimate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, storeID, periodID, closingDateDATE, beginning, createdByID, description, localAmount, closingOrder, typeEstimate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Storeclosing {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    storeID: ").append(toIndentedString(storeID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    closingDateDATE: ").append(toIndentedString(closingDateDATE)).append("\n");
    sb.append("    beginning: ").append(toIndentedString(beginning)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    closingOrder: ").append(toIndentedString(closingOrder)).append("\n");
    sb.append("    typeEstimate: ").append(toIndentedString(typeEstimate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

