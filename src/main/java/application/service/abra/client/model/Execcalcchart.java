/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Execcalcchart
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Execcalcchart   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Execcalcexpression> rows = new ArrayList<Execcalcexpression>();

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("System")
  private Boolean system = null;

  @SerializedName("CLSID")
  private String CLSID = null;

  @SerializedName("Specification")
  private Integer specification = null;

  @SerializedName("CLSIDName")
  private String cLSIDName = null;

  @SerializedName("CalcFieldsSpecialBehaviour")
  private Boolean calcFieldsSpecialBehaviour = null;

  @SerializedName("UserCalcFieldsSpecialBehaviour")
  private Integer userCalcFieldsSpecialBehaviour = null;

  @SerializedName("SourceChart_ID")
  private String sourceChartID = null;

  @SerializedName("Copied")
  private Boolean copied = null;

  @SerializedName("Scripts")
  private List<Execcalcchartscript> scripts = new ArrayList<Execcalcchartscript>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Execcalcchart rows(List<Execcalcexpression> rows) {
    this.rows = rows;
    return this;
  }

  public Execcalcchart addRowsItem(Execcalcexpression rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Položky; kolekce BO Výpočtový vzorec při výpočtu [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Položky; kolekce BO Výpočtový vzorec při výpočtu [nepersistentní položka]")
  public List<Execcalcexpression> getRows() {
    return rows;
  }

  public void setRows(List<Execcalcexpression> rows) {
    this.rows = rows;
  }

  public Execcalcchart hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Execcalcchart createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Execcalcchart correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Execcalcchart code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Execcalcchart name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Execcalcchart system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Syst. [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "Syst. [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Execcalcchart CLSID(String CLSID) {
    this.CLSID = CLSID;
    return this;
  }

   /**
   * Třída objektu [persistentní položka]
   * @return CLSID
  **/
  @ApiModelProperty(example = "null", value = "Třída objektu [persistentní položka]")
  public String getCLSID() {
    return CLSID;
  }

  public void setCLSID(String CLSID) {
    this.CLSID = CLSID;
  }

  public Execcalcchart specification(Integer specification) {
    this.specification = specification;
    return this;
  }

   /**
   * Specifikace [persistentní položka]
   * @return specification
  **/
  @ApiModelProperty(example = "null", value = "Specifikace [persistentní položka]")
  public Integer getSpecification() {
    return specification;
  }

  public void setSpecification(Integer specification) {
    this.specification = specification;
  }

  public Execcalcchart cLSIDName(String cLSIDName) {
    this.cLSIDName = cLSIDName;
    return this;
  }

   /**
   * Třída
   * @return cLSIDName
  **/
  @ApiModelProperty(example = "null", value = "Třída")
  public String getCLSIDName() {
    return cLSIDName;
  }

  public void setCLSIDName(String cLSIDName) {
    this.cLSIDName = cLSIDName;
  }

  public Execcalcchart calcFieldsSpecialBehaviour(Boolean calcFieldsSpecialBehaviour) {
    this.calcFieldsSpecialBehaviour = calcFieldsSpecialBehaviour;
    return this;
  }

   /**
   * Způsob součtování [persistentní položka]
   * @return calcFieldsSpecialBehaviour
  **/
  @ApiModelProperty(example = "null", value = "Způsob součtování [persistentní položka]")
  public Boolean getCalcFieldsSpecialBehaviour() {
    return calcFieldsSpecialBehaviour;
  }

  public void setCalcFieldsSpecialBehaviour(Boolean calcFieldsSpecialBehaviour) {
    this.calcFieldsSpecialBehaviour = calcFieldsSpecialBehaviour;
  }

  public Execcalcchart userCalcFieldsSpecialBehaviour(Integer userCalcFieldsSpecialBehaviour) {
    this.userCalcFieldsSpecialBehaviour = userCalcFieldsSpecialBehaviour;
    return this;
  }

   /**
   * Způsob součtování - uživ. část
   * @return userCalcFieldsSpecialBehaviour
  **/
  @ApiModelProperty(example = "null", value = "Způsob součtování - uživ. část")
  public Integer getUserCalcFieldsSpecialBehaviour() {
    return userCalcFieldsSpecialBehaviour;
  }

  public void setUserCalcFieldsSpecialBehaviour(Integer userCalcFieldsSpecialBehaviour) {
    this.userCalcFieldsSpecialBehaviour = userCalcFieldsSpecialBehaviour;
  }

  public Execcalcchart sourceChartID(String sourceChartID) {
    this.sourceChartID = sourceChartID;
    return this;
  }

   /**
   * Zdrojový vzorec; ID objektu Výpočtové schéma [persistentní položka]
   * @return sourceChartID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojový vzorec; ID objektu Výpočtové schéma [persistentní položka]")
  public String getSourceChartID() {
    return sourceChartID;
  }

  public void setSourceChartID(String sourceChartID) {
    this.sourceChartID = sourceChartID;
  }

  public Execcalcchart copied(Boolean copied) {
    this.copied = copied;
    return this;
  }

   /**
   * Kopie [persistentní položka]
   * @return copied
  **/
  @ApiModelProperty(example = "null", value = "Kopie [persistentní položka]")
  public Boolean getCopied() {
    return copied;
  }

  public void setCopied(Boolean copied) {
    this.copied = copied;
  }

  public Execcalcchart scripts(List<Execcalcchartscript> scripts) {
    this.scripts = scripts;
    return this;
  }

  public Execcalcchart addScriptsItem(Execcalcchartscript scriptsItem) {
    this.scripts.add(scriptsItem);
    return this;
  }

   /**
   * Skripty; kolekce BO Skripty výpočtového vzorce při výpočtu [nepersistentní položka]
   * @return scripts
  **/
  @ApiModelProperty(example = "null", value = "Skripty; kolekce BO Skripty výpočtového vzorce při výpočtu [nepersistentní položka]")
  public List<Execcalcchartscript> getScripts() {
    return scripts;
  }

  public void setScripts(List<Execcalcchartscript> scripts) {
    this.scripts = scripts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Execcalcchart execcalcchart = (Execcalcchart) o;
    return Objects.equals(this.displayName, execcalcchart.displayName) &&
        Objects.equals(this.ID, execcalcchart.ID) &&
        Objects.equals(this.classID, execcalcchart.classID) &&
        Objects.equals(this.objVersion, execcalcchart.objVersion) &&
        Objects.equals(this.rows, execcalcchart.rows) &&
        Objects.equals(this.hidden, execcalcchart.hidden) &&
        Objects.equals(this.createdByID, execcalcchart.createdByID) &&
        Objects.equals(this.correctedByID, execcalcchart.correctedByID) &&
        Objects.equals(this.code, execcalcchart.code) &&
        Objects.equals(this.name, execcalcchart.name) &&
        Objects.equals(this.system, execcalcchart.system) &&
        Objects.equals(this.CLSID, execcalcchart.CLSID) &&
        Objects.equals(this.specification, execcalcchart.specification) &&
        Objects.equals(this.cLSIDName, execcalcchart.cLSIDName) &&
        Objects.equals(this.calcFieldsSpecialBehaviour, execcalcchart.calcFieldsSpecialBehaviour) &&
        Objects.equals(this.userCalcFieldsSpecialBehaviour, execcalcchart.userCalcFieldsSpecialBehaviour) &&
        Objects.equals(this.sourceChartID, execcalcchart.sourceChartID) &&
        Objects.equals(this.copied, execcalcchart.copied) &&
        Objects.equals(this.scripts, execcalcchart.scripts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, hidden, createdByID, correctedByID, code, name, system, CLSID, specification, cLSIDName, calcFieldsSpecialBehaviour, userCalcFieldsSpecialBehaviour, sourceChartID, copied, scripts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Execcalcchart {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    CLSID: ").append(toIndentedString(CLSID)).append("\n");
    sb.append("    specification: ").append(toIndentedString(specification)).append("\n");
    sb.append("    cLSIDName: ").append(toIndentedString(cLSIDName)).append("\n");
    sb.append("    calcFieldsSpecialBehaviour: ").append(toIndentedString(calcFieldsSpecialBehaviour)).append("\n");
    sb.append("    userCalcFieldsSpecialBehaviour: ").append(toIndentedString(userCalcFieldsSpecialBehaviour)).append("\n");
    sb.append("    sourceChartID: ").append(toIndentedString(sourceChartID)).append("\n");
    sb.append("    copied: ").append(toIndentedString(copied)).append("\n");
    sb.append("    scripts: ").append(toIndentedString(scripts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

