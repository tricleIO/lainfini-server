/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Plmexceptionworkplace2
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Plmexceptionworkplace2   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("ValidFrom$DATE")
  private DateTime validFromDATE = null;

  @SerializedName("ValidTo$DATE")
  private DateTime validToDATE = null;

  @SerializedName("WorkPlace_ID")
  private String workPlaceID = null;

  @SerializedName("DeltaPerc")
  private Double deltaPerc = null;

  @SerializedName("DeltaTime")
  private Double deltaTime = null;

  @SerializedName("ExceptionType")
  private Integer exceptionType = null;

  @SerializedName("TimeValidFromAsString")
  private String timeValidFromAsString = null;

  @SerializedName("TimeValidToAsString")
  private String timeValidToAsString = null;

  @SerializedName("MachineCount")
  private Double machineCount = null;

  @SerializedName("ShiftType_ID")
  private String shiftTypeID = null;

  @SerializedName("ExceptionStart$DATE")
  private DateTime exceptionStartDATE = null;

  @SerializedName("ExceptionFinish$DATE")
  private DateTime exceptionFinishDATE = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Výjimka pracoviště [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Výjimka pracoviště [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Plmexceptionworkplace2 posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Plmexceptionworkplace2 validFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
    return this;
  }

   /**
   * Datum od [persistentní položka]
   * @return validFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum od [persistentní položka]")
  public DateTime getValidFromDATE() {
    return validFromDATE;
  }

  public void setValidFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
  }

  public Plmexceptionworkplace2 validToDATE(DateTime validToDATE) {
    this.validToDATE = validToDATE;
    return this;
  }

   /**
   * Datum do [persistentní položka]
   * @return validToDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum do [persistentní položka]")
  public DateTime getValidToDATE() {
    return validToDATE;
  }

  public void setValidToDATE(DateTime validToDATE) {
    this.validToDATE = validToDATE;
  }

  public Plmexceptionworkplace2 workPlaceID(String workPlaceID) {
    this.workPlaceID = workPlaceID;
    return this;
  }

   /**
   * Pracoviště; ID objektu Pracoviště a stroj [persistentní položka]
   * @return workPlaceID
  **/
  @ApiModelProperty(example = "null", value = "Pracoviště; ID objektu Pracoviště a stroj [persistentní položka]")
  public String getWorkPlaceID() {
    return workPlaceID;
  }

  public void setWorkPlaceID(String workPlaceID) {
    this.workPlaceID = workPlaceID;
  }

  public Plmexceptionworkplace2 deltaPerc(Double deltaPerc) {
    this.deltaPerc = deltaPerc;
    return this;
  }

   /**
   * Procentní změna kapacity [persistentní položka]
   * @return deltaPerc
  **/
  @ApiModelProperty(example = "null", value = "Procentní změna kapacity [persistentní položka]")
  public Double getDeltaPerc() {
    return deltaPerc;
  }

  public void setDeltaPerc(Double deltaPerc) {
    this.deltaPerc = deltaPerc;
  }

  public Plmexceptionworkplace2 deltaTime(Double deltaTime) {
    this.deltaTime = deltaTime;
    return this;
  }

   /**
   * Časová změna kapacity v hodinách [persistentní položka]
   * @return deltaTime
  **/
  @ApiModelProperty(example = "null", value = "Časová změna kapacity v hodinách [persistentní položka]")
  public Double getDeltaTime() {
    return deltaTime;
  }

  public void setDeltaTime(Double deltaTime) {
    this.deltaTime = deltaTime;
  }

  public Plmexceptionworkplace2 exceptionType(Integer exceptionType) {
    this.exceptionType = exceptionType;
    return this;
  }

   /**
   * Typ výjimky [persistentní položka]
   * @return exceptionType
  **/
  @ApiModelProperty(example = "null", value = "Typ výjimky [persistentní položka]")
  public Integer getExceptionType() {
    return exceptionType;
  }

  public void setExceptionType(Integer exceptionType) {
    this.exceptionType = exceptionType;
  }

  public Plmexceptionworkplace2 timeValidFromAsString(String timeValidFromAsString) {
    this.timeValidFromAsString = timeValidFromAsString;
    return this;
  }

   /**
   * Čas od
   * @return timeValidFromAsString
  **/
  @ApiModelProperty(example = "null", value = "Čas od")
  public String getTimeValidFromAsString() {
    return timeValidFromAsString;
  }

  public void setTimeValidFromAsString(String timeValidFromAsString) {
    this.timeValidFromAsString = timeValidFromAsString;
  }

  public Plmexceptionworkplace2 timeValidToAsString(String timeValidToAsString) {
    this.timeValidToAsString = timeValidToAsString;
    return this;
  }

   /**
   * Čas do
   * @return timeValidToAsString
  **/
  @ApiModelProperty(example = "null", value = "Čas do")
  public String getTimeValidToAsString() {
    return timeValidToAsString;
  }

  public void setTimeValidToAsString(String timeValidToAsString) {
    this.timeValidToAsString = timeValidToAsString;
  }

  public Plmexceptionworkplace2 machineCount(Double machineCount) {
    this.machineCount = machineCount;
    return this;
  }

   /**
   * Počet strojů/pracovníků [persistentní položka]
   * @return machineCount
  **/
  @ApiModelProperty(example = "null", value = "Počet strojů/pracovníků [persistentní položka]")
  public Double getMachineCount() {
    return machineCount;
  }

  public void setMachineCount(Double machineCount) {
    this.machineCount = machineCount;
  }

  public Plmexceptionworkplace2 shiftTypeID(String shiftTypeID) {
    this.shiftTypeID = shiftTypeID;
    return this;
  }

   /**
   * Druh směny; ID objektu Druh pracovní směny [persistentní položka]
   * @return shiftTypeID
  **/
  @ApiModelProperty(example = "null", value = "Druh směny; ID objektu Druh pracovní směny [persistentní položka]")
  public String getShiftTypeID() {
    return shiftTypeID;
  }

  public void setShiftTypeID(String shiftTypeID) {
    this.shiftTypeID = shiftTypeID;
  }

   /**
   * Datum (čas) od dle směny
   * @return exceptionStartDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum (čas) od dle směny")
  public DateTime getExceptionStartDATE() {
    return exceptionStartDATE;
  }

   /**
   * Datum (čas) do dle směny
   * @return exceptionFinishDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum (čas) do dle směny")
  public DateTime getExceptionFinishDATE() {
    return exceptionFinishDATE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Plmexceptionworkplace2 plmexceptionworkplace2 = (Plmexceptionworkplace2) o;
    return Objects.equals(this.displayName, plmexceptionworkplace2.displayName) &&
        Objects.equals(this.ID, plmexceptionworkplace2.ID) &&
        Objects.equals(this.classID, plmexceptionworkplace2.classID) &&
        Objects.equals(this.objVersion, plmexceptionworkplace2.objVersion) &&
        Objects.equals(this.parentID, plmexceptionworkplace2.parentID) &&
        Objects.equals(this.posIndex, plmexceptionworkplace2.posIndex) &&
        Objects.equals(this.validFromDATE, plmexceptionworkplace2.validFromDATE) &&
        Objects.equals(this.validToDATE, plmexceptionworkplace2.validToDATE) &&
        Objects.equals(this.workPlaceID, plmexceptionworkplace2.workPlaceID) &&
        Objects.equals(this.deltaPerc, plmexceptionworkplace2.deltaPerc) &&
        Objects.equals(this.deltaTime, plmexceptionworkplace2.deltaTime) &&
        Objects.equals(this.exceptionType, plmexceptionworkplace2.exceptionType) &&
        Objects.equals(this.timeValidFromAsString, plmexceptionworkplace2.timeValidFromAsString) &&
        Objects.equals(this.timeValidToAsString, plmexceptionworkplace2.timeValidToAsString) &&
        Objects.equals(this.machineCount, plmexceptionworkplace2.machineCount) &&
        Objects.equals(this.shiftTypeID, plmexceptionworkplace2.shiftTypeID) &&
        Objects.equals(this.exceptionStartDATE, plmexceptionworkplace2.exceptionStartDATE) &&
        Objects.equals(this.exceptionFinishDATE, plmexceptionworkplace2.exceptionFinishDATE);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, validFromDATE, validToDATE, workPlaceID, deltaPerc, deltaTime, exceptionType, timeValidFromAsString, timeValidToAsString, machineCount, shiftTypeID, exceptionStartDATE, exceptionFinishDATE);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Plmexceptionworkplace2 {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    validFromDATE: ").append(toIndentedString(validFromDATE)).append("\n");
    sb.append("    validToDATE: ").append(toIndentedString(validToDATE)).append("\n");
    sb.append("    workPlaceID: ").append(toIndentedString(workPlaceID)).append("\n");
    sb.append("    deltaPerc: ").append(toIndentedString(deltaPerc)).append("\n");
    sb.append("    deltaTime: ").append(toIndentedString(deltaTime)).append("\n");
    sb.append("    exceptionType: ").append(toIndentedString(exceptionType)).append("\n");
    sb.append("    timeValidFromAsString: ").append(toIndentedString(timeValidFromAsString)).append("\n");
    sb.append("    timeValidToAsString: ").append(toIndentedString(timeValidToAsString)).append("\n");
    sb.append("    machineCount: ").append(toIndentedString(machineCount)).append("\n");
    sb.append("    shiftTypeID: ").append(toIndentedString(shiftTypeID)).append("\n");
    sb.append("    exceptionStartDATE: ").append(toIndentedString(exceptionStartDATE)).append("\n");
    sb.append("    exceptionFinishDATE: ").append(toIndentedString(exceptionFinishDATE)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

