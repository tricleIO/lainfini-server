/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Plmexceptionworkplace2
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Plmexceptionworkplace2   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("validfrom$date")
  private DateTime validfromdate = null;

  @SerializedName("validto$date")
  private DateTime validtodate = null;

  @SerializedName("workplace_id")
  private String workplaceId = null;

  @SerializedName("deltaperc")
  private Double deltaperc = null;

  @SerializedName("deltatime")
  private Double deltatime = null;

  @SerializedName("exceptiontype")
  private Integer exceptiontype = null;

  @SerializedName("timevalidfromasstring")
  private String timevalidfromasstring = null;

  @SerializedName("timevalidtoasstring")
  private String timevalidtoasstring = null;

  @SerializedName("machinecount")
  private Double machinecount = null;

  @SerializedName("shifttype_id")
  private String shifttypeId = null;

  @SerializedName("exceptionstart$date")
  private DateTime exceptionstartdate = null;

  @SerializedName("exceptionfinish$date")
  private DateTime exceptionfinishdate = null;

  public Plmexceptionworkplace2 displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Plmexceptionworkplace2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Plmexceptionworkplace2 classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Plmexceptionworkplace2 objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Plmexceptionworkplace2 parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu výjimka pracoviště [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu výjimka pracoviště [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Plmexceptionworkplace2 posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Plmexceptionworkplace2 validfromdate(DateTime validfromdate) {
    this.validfromdate = validfromdate;
    return this;
  }

   /**
   * datum od [persistentní položka]
   * @return validfromdate
  **/
  @ApiModelProperty(example = "null", value = "datum od [persistentní položka]")
  public DateTime getValidfromdate() {
    return validfromdate;
  }

  public void setValidfromdate(DateTime validfromdate) {
    this.validfromdate = validfromdate;
  }

  public Plmexceptionworkplace2 validtodate(DateTime validtodate) {
    this.validtodate = validtodate;
    return this;
  }

   /**
   * datum do [persistentní položka]
   * @return validtodate
  **/
  @ApiModelProperty(example = "null", value = "datum do [persistentní položka]")
  public DateTime getValidtodate() {
    return validtodate;
  }

  public void setValidtodate(DateTime validtodate) {
    this.validtodate = validtodate;
  }

  public Plmexceptionworkplace2 workplaceId(String workplaceId) {
    this.workplaceId = workplaceId;
    return this;
  }

   /**
   * pracoviště; id objektu pracoviště a stroj [persistentní položka]
   * @return workplaceId
  **/
  @ApiModelProperty(example = "null", value = "pracoviště; id objektu pracoviště a stroj [persistentní položka]")
  public String getWorkplaceId() {
    return workplaceId;
  }

  public void setWorkplaceId(String workplaceId) {
    this.workplaceId = workplaceId;
  }

  public Plmexceptionworkplace2 deltaperc(Double deltaperc) {
    this.deltaperc = deltaperc;
    return this;
  }

   /**
   * procentní změna kapacity [persistentní položka]
   * @return deltaperc
  **/
  @ApiModelProperty(example = "null", value = "procentní změna kapacity [persistentní položka]")
  public Double getDeltaperc() {
    return deltaperc;
  }

  public void setDeltaperc(Double deltaperc) {
    this.deltaperc = deltaperc;
  }

  public Plmexceptionworkplace2 deltatime(Double deltatime) {
    this.deltatime = deltatime;
    return this;
  }

   /**
   * Časová změna kapacity v hodinách [persistentní položka]
   * @return deltatime
  **/
  @ApiModelProperty(example = "null", value = "Časová změna kapacity v hodinách [persistentní položka]")
  public Double getDeltatime() {
    return deltatime;
  }

  public void setDeltatime(Double deltatime) {
    this.deltatime = deltatime;
  }

  public Plmexceptionworkplace2 exceptiontype(Integer exceptiontype) {
    this.exceptiontype = exceptiontype;
    return this;
  }

   /**
   * typ výjimky [persistentní položka]
   * @return exceptiontype
  **/
  @ApiModelProperty(example = "null", value = "typ výjimky [persistentní položka]")
  public Integer getExceptiontype() {
    return exceptiontype;
  }

  public void setExceptiontype(Integer exceptiontype) {
    this.exceptiontype = exceptiontype;
  }

  public Plmexceptionworkplace2 timevalidfromasstring(String timevalidfromasstring) {
    this.timevalidfromasstring = timevalidfromasstring;
    return this;
  }

   /**
   * Čas od
   * @return timevalidfromasstring
  **/
  @ApiModelProperty(example = "null", value = "Čas od")
  public String getTimevalidfromasstring() {
    return timevalidfromasstring;
  }

  public void setTimevalidfromasstring(String timevalidfromasstring) {
    this.timevalidfromasstring = timevalidfromasstring;
  }

  public Plmexceptionworkplace2 timevalidtoasstring(String timevalidtoasstring) {
    this.timevalidtoasstring = timevalidtoasstring;
    return this;
  }

   /**
   * Čas do
   * @return timevalidtoasstring
  **/
  @ApiModelProperty(example = "null", value = "Čas do")
  public String getTimevalidtoasstring() {
    return timevalidtoasstring;
  }

  public void setTimevalidtoasstring(String timevalidtoasstring) {
    this.timevalidtoasstring = timevalidtoasstring;
  }

  public Plmexceptionworkplace2 machinecount(Double machinecount) {
    this.machinecount = machinecount;
    return this;
  }

   /**
   * počet strojů/pracovníků [persistentní položka]
   * @return machinecount
  **/
  @ApiModelProperty(example = "null", value = "počet strojů/pracovníků [persistentní položka]")
  public Double getMachinecount() {
    return machinecount;
  }

  public void setMachinecount(Double machinecount) {
    this.machinecount = machinecount;
  }

  public Plmexceptionworkplace2 shifttypeId(String shifttypeId) {
    this.shifttypeId = shifttypeId;
    return this;
  }

   /**
   * druh směny; id objektu druh pracovní směny [persistentní položka]
   * @return shifttypeId
  **/
  @ApiModelProperty(example = "null", value = "druh směny; id objektu druh pracovní směny [persistentní položka]")
  public String getShifttypeId() {
    return shifttypeId;
  }

  public void setShifttypeId(String shifttypeId) {
    this.shifttypeId = shifttypeId;
  }

  public Plmexceptionworkplace2 exceptionstartdate(DateTime exceptionstartdate) {
    this.exceptionstartdate = exceptionstartdate;
    return this;
  }

   /**
   * datum (čas) od dle směny
   * @return exceptionstartdate
  **/
  @ApiModelProperty(example = "null", value = "datum (čas) od dle směny")
  public DateTime getExceptionstartdate() {
    return exceptionstartdate;
  }

  public void setExceptionstartdate(DateTime exceptionstartdate) {
    this.exceptionstartdate = exceptionstartdate;
  }

  public Plmexceptionworkplace2 exceptionfinishdate(DateTime exceptionfinishdate) {
    this.exceptionfinishdate = exceptionfinishdate;
    return this;
  }

   /**
   * datum (čas) do dle směny
   * @return exceptionfinishdate
  **/
  @ApiModelProperty(example = "null", value = "datum (čas) do dle směny")
  public DateTime getExceptionfinishdate() {
    return exceptionfinishdate;
  }

  public void setExceptionfinishdate(DateTime exceptionfinishdate) {
    this.exceptionfinishdate = exceptionfinishdate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Plmexceptionworkplace2 plmexceptionworkplace2 = (Plmexceptionworkplace2) o;
    return Objects.equals(this.displayname, plmexceptionworkplace2.displayname) &&
        Objects.equals(this.id, plmexceptionworkplace2.id) &&
        Objects.equals(this.classid, plmexceptionworkplace2.classid) &&
        Objects.equals(this.objversion, plmexceptionworkplace2.objversion) &&
        Objects.equals(this.parentId, plmexceptionworkplace2.parentId) &&
        Objects.equals(this.posindex, plmexceptionworkplace2.posindex) &&
        Objects.equals(this.validfromdate, plmexceptionworkplace2.validfromdate) &&
        Objects.equals(this.validtodate, plmexceptionworkplace2.validtodate) &&
        Objects.equals(this.workplaceId, plmexceptionworkplace2.workplaceId) &&
        Objects.equals(this.deltaperc, plmexceptionworkplace2.deltaperc) &&
        Objects.equals(this.deltatime, plmexceptionworkplace2.deltatime) &&
        Objects.equals(this.exceptiontype, plmexceptionworkplace2.exceptiontype) &&
        Objects.equals(this.timevalidfromasstring, plmexceptionworkplace2.timevalidfromasstring) &&
        Objects.equals(this.timevalidtoasstring, plmexceptionworkplace2.timevalidtoasstring) &&
        Objects.equals(this.machinecount, plmexceptionworkplace2.machinecount) &&
        Objects.equals(this.shifttypeId, plmexceptionworkplace2.shifttypeId) &&
        Objects.equals(this.exceptionstartdate, plmexceptionworkplace2.exceptionstartdate) &&
        Objects.equals(this.exceptionfinishdate, plmexceptionworkplace2.exceptionfinishdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, validfromdate, validtodate, workplaceId, deltaperc, deltatime, exceptiontype, timevalidfromasstring, timevalidtoasstring, machinecount, shifttypeId, exceptionstartdate, exceptionfinishdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Plmexceptionworkplace2 {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    validfromdate: ").append(toIndentedString(validfromdate)).append("\n");
    sb.append("    validtodate: ").append(toIndentedString(validtodate)).append("\n");
    sb.append("    workplaceId: ").append(toIndentedString(workplaceId)).append("\n");
    sb.append("    deltaperc: ").append(toIndentedString(deltaperc)).append("\n");
    sb.append("    deltatime: ").append(toIndentedString(deltatime)).append("\n");
    sb.append("    exceptiontype: ").append(toIndentedString(exceptiontype)).append("\n");
    sb.append("    timevalidfromasstring: ").append(toIndentedString(timevalidfromasstring)).append("\n");
    sb.append("    timevalidtoasstring: ").append(toIndentedString(timevalidtoasstring)).append("\n");
    sb.append("    machinecount: ").append(toIndentedString(machinecount)).append("\n");
    sb.append("    shifttypeId: ").append(toIndentedString(shifttypeId)).append("\n");
    sb.append("    exceptionstartdate: ").append(toIndentedString(exceptionstartdate)).append("\n");
    sb.append("    exceptionfinishdate: ").append(toIndentedString(exceptionfinishdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

