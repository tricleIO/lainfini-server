/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Bankstatement
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Bankstatement   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Bankstatementrow> rows = new ArrayList<Bankstatementrow>();

  @SerializedName("docqueue_id")
  private String docqueueId = null;

  @SerializedName("period_id")
  private String periodId = null;

  @SerializedName("ordnumber")
  private Integer ordnumber = null;

  @SerializedName("docdate$date")
  private DateTime docdatedate = null;

  @SerializedName("createdby_id")
  private String createdbyId = null;

  @SerializedName("correctedby_id")
  private String correctedbyId = null;

  @SerializedName("newrelatedtype")
  private Integer newrelatedtype = null;

  @SerializedName("newrelateddocument_id")
  private String newrelateddocumentId = null;

  @SerializedName("creditamount")
  private Double creditamount = null;

  @SerializedName("debitamount")
  private Double debitamount = null;

  @SerializedName("localcreditamount")
  private Double localcreditamount = null;

  @SerializedName("localdebitamount")
  private Double localdebitamount = null;

  @SerializedName("accdocqueue_id")
  private String accdocqueueId = null;

  @SerializedName("externalnumber")
  private String externalnumber = null;

  @SerializedName("dirty")
  private Boolean dirty = null;

  @SerializedName("bankaccount_id")
  private String bankaccountId = null;

  @SerializedName("createdat$date")
  private DateTime createdatdate = null;

  @SerializedName("correctedat$date")
  private DateTime correctedatdate = null;

  public Bankstatement displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * Číslo dok.
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Bankstatement id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Bankstatement classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Bankstatement objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Bankstatement rows(List<Bankstatementrow> rows) {
    this.rows = rows;
    return this;
  }

  public Bankstatement addRowsItem(Bankstatementrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo bankovní výpis - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo bankovní výpis - řádek [nepersistentní položka]")
  public List<Bankstatementrow> getRows() {
    return rows;
  }

  public void setRows(List<Bankstatementrow> rows) {
    this.rows = rows;
  }

  public Bankstatement docqueueId(String docqueueId) {
    this.docqueueId = docqueueId;
    return this;
  }

   /**
   * zdrojová řada; id objektu Řada dokladů [persistentní položka]
   * @return docqueueId
  **/
  @ApiModelProperty(example = "null", value = "zdrojová řada; id objektu Řada dokladů [persistentní položka]")
  public String getDocqueueId() {
    return docqueueId;
  }

  public void setDocqueueId(String docqueueId) {
    this.docqueueId = docqueueId;
  }

  public Bankstatement periodId(String periodId) {
    this.periodId = periodId;
    return this;
  }

   /**
   * období; id objektu období [persistentní položka]
   * @return periodId
  **/
  @ApiModelProperty(example = "null", value = "období; id objektu období [persistentní položka]")
  public String getPeriodId() {
    return periodId;
  }

  public void setPeriodId(String periodId) {
    this.periodId = periodId;
  }

  public Bankstatement ordnumber(Integer ordnumber) {
    this.ordnumber = ordnumber;
    return this;
  }

   /**
   * pořadové číslo [persistentní položka]
   * @return ordnumber
  **/
  @ApiModelProperty(example = "null", value = "pořadové číslo [persistentní položka]")
  public Integer getOrdnumber() {
    return ordnumber;
  }

  public void setOrdnumber(Integer ordnumber) {
    this.ordnumber = ordnumber;
  }

  public Bankstatement docdatedate(DateTime docdatedate) {
    this.docdatedate = docdatedate;
    return this;
  }

   /**
   * datum dok. [persistentní položka]
   * @return docdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum dok. [persistentní položka]")
  public DateTime getDocdatedate() {
    return docdatedate;
  }

  public void setDocdatedate(DateTime docdatedate) {
    this.docdatedate = docdatedate;
  }

  public Bankstatement createdbyId(String createdbyId) {
    this.createdbyId = createdbyId;
    return this;
  }

   /**
   * vytvořil; id objektu uživatel [persistentní položka]
   * @return createdbyId
  **/
  @ApiModelProperty(example = "null", value = "vytvořil; id objektu uživatel [persistentní položka]")
  public String getCreatedbyId() {
    return createdbyId;
  }

  public void setCreatedbyId(String createdbyId) {
    this.createdbyId = createdbyId;
  }

  public Bankstatement correctedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
    return this;
  }

   /**
   * opravil; id objektu uživatel [persistentní položka]
   * @return correctedbyId
  **/
  @ApiModelProperty(example = "null", value = "opravil; id objektu uživatel [persistentní položka]")
  public String getCorrectedbyId() {
    return correctedbyId;
  }

  public void setCorrectedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
  }

  public Bankstatement newrelatedtype(Integer newrelatedtype) {
    this.newrelatedtype = newrelatedtype;
    return this;
  }

   /**
   * typ relace
   * @return newrelatedtype
  **/
  @ApiModelProperty(example = "null", value = "typ relace")
  public Integer getNewrelatedtype() {
    return newrelatedtype;
  }

  public void setNewrelatedtype(Integer newrelatedtype) {
    this.newrelatedtype = newrelatedtype;
  }

  public Bankstatement newrelateddocumentId(String newrelateddocumentId) {
    this.newrelateddocumentId = newrelateddocumentId;
    return this;
  }

   /**
   * id dokladu pro připojení
   * @return newrelateddocumentId
  **/
  @ApiModelProperty(example = "null", value = "id dokladu pro připojení")
  public String getNewrelateddocumentId() {
    return newrelateddocumentId;
  }

  public void setNewrelateddocumentId(String newrelateddocumentId) {
    this.newrelateddocumentId = newrelateddocumentId;
  }

  public Bankstatement creditamount(Double creditamount) {
    this.creditamount = creditamount;
    return this;
  }

   /**
   * celkem kredit [persistentní položka]
   * @return creditamount
  **/
  @ApiModelProperty(example = "null", value = "celkem kredit [persistentní položka]")
  public Double getCreditamount() {
    return creditamount;
  }

  public void setCreditamount(Double creditamount) {
    this.creditamount = creditamount;
  }

  public Bankstatement debitamount(Double debitamount) {
    this.debitamount = debitamount;
    return this;
  }

   /**
   * celkem debet [persistentní položka]
   * @return debitamount
  **/
  @ApiModelProperty(example = "null", value = "celkem debet [persistentní položka]")
  public Double getDebitamount() {
    return debitamount;
  }

  public void setDebitamount(Double debitamount) {
    this.debitamount = debitamount;
  }

  public Bankstatement localcreditamount(Double localcreditamount) {
    this.localcreditamount = localcreditamount;
    return this;
  }

   /**
   * celkem lok. kredit [persistentní položka]
   * @return localcreditamount
  **/
  @ApiModelProperty(example = "null", value = "celkem lok. kredit [persistentní položka]")
  public Double getLocalcreditamount() {
    return localcreditamount;
  }

  public void setLocalcreditamount(Double localcreditamount) {
    this.localcreditamount = localcreditamount;
  }

  public Bankstatement localdebitamount(Double localdebitamount) {
    this.localdebitamount = localdebitamount;
    return this;
  }

   /**
   * celkem lok.debet [persistentní položka]
   * @return localdebitamount
  **/
  @ApiModelProperty(example = "null", value = "celkem lok.debet [persistentní položka]")
  public Double getLocaldebitamount() {
    return localdebitamount;
  }

  public void setLocaldebitamount(Double localdebitamount) {
    this.localdebitamount = localdebitamount;
  }

  public Bankstatement accdocqueueId(String accdocqueueId) {
    this.accdocqueueId = accdocqueueId;
    return this;
  }

   /**
   * Účetní řada; id objektu Účetní řada dokladů [persistentní položka]
   * @return accdocqueueId
  **/
  @ApiModelProperty(example = "null", value = "Účetní řada; id objektu Účetní řada dokladů [persistentní položka]")
  public String getAccdocqueueId() {
    return accdocqueueId;
  }

  public void setAccdocqueueId(String accdocqueueId) {
    this.accdocqueueId = accdocqueueId;
  }

  public Bankstatement externalnumber(String externalnumber) {
    this.externalnumber = externalnumber;
    return this;
  }

   /**
   * externí číslo [persistentní položka]
   * @return externalnumber
  **/
  @ApiModelProperty(example = "null", value = "externí číslo [persistentní položka]")
  public String getExternalnumber() {
    return externalnumber;
  }

  public void setExternalnumber(String externalnumber) {
    this.externalnumber = externalnumber;
  }

  public Bankstatement dirty(Boolean dirty) {
    this.dirty = dirty;
    return this;
  }

   /**
   * zakázané přepočítání [persistentní položka]
   * @return dirty
  **/
  @ApiModelProperty(example = "null", value = "zakázané přepočítání [persistentní položka]")
  public Boolean getDirty() {
    return dirty;
  }

  public void setDirty(Boolean dirty) {
    this.dirty = dirty;
  }

  public Bankstatement bankaccountId(String bankaccountId) {
    this.bankaccountId = bankaccountId;
    return this;
  }

   /**
   * bankovní účet; id objektu bankovní účet [persistentní položka]
   * @return bankaccountId
  **/
  @ApiModelProperty(example = "null", value = "bankovní účet; id objektu bankovní účet [persistentní položka]")
  public String getBankaccountId() {
    return bankaccountId;
  }

  public void setBankaccountId(String bankaccountId) {
    this.bankaccountId = bankaccountId;
  }

  public Bankstatement createdatdate(DateTime createdatdate) {
    this.createdatdate = createdatdate;
    return this;
  }

   /**
   * vytvořeno [persistentní položka]
   * @return createdatdate
  **/
  @ApiModelProperty(example = "null", value = "vytvořeno [persistentní položka]")
  public DateTime getCreatedatdate() {
    return createdatdate;
  }

  public void setCreatedatdate(DateTime createdatdate) {
    this.createdatdate = createdatdate;
  }

  public Bankstatement correctedatdate(DateTime correctedatdate) {
    this.correctedatdate = correctedatdate;
    return this;
  }

   /**
   * opraveno [persistentní položka]
   * @return correctedatdate
  **/
  @ApiModelProperty(example = "null", value = "opraveno [persistentní položka]")
  public DateTime getCorrectedatdate() {
    return correctedatdate;
  }

  public void setCorrectedatdate(DateTime correctedatdate) {
    this.correctedatdate = correctedatdate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bankstatement bankstatement = (Bankstatement) o;
    return Objects.equals(this.displayname, bankstatement.displayname) &&
        Objects.equals(this.id, bankstatement.id) &&
        Objects.equals(this.classid, bankstatement.classid) &&
        Objects.equals(this.objversion, bankstatement.objversion) &&
        Objects.equals(this.rows, bankstatement.rows) &&
        Objects.equals(this.docqueueId, bankstatement.docqueueId) &&
        Objects.equals(this.periodId, bankstatement.periodId) &&
        Objects.equals(this.ordnumber, bankstatement.ordnumber) &&
        Objects.equals(this.docdatedate, bankstatement.docdatedate) &&
        Objects.equals(this.createdbyId, bankstatement.createdbyId) &&
        Objects.equals(this.correctedbyId, bankstatement.correctedbyId) &&
        Objects.equals(this.newrelatedtype, bankstatement.newrelatedtype) &&
        Objects.equals(this.newrelateddocumentId, bankstatement.newrelateddocumentId) &&
        Objects.equals(this.creditamount, bankstatement.creditamount) &&
        Objects.equals(this.debitamount, bankstatement.debitamount) &&
        Objects.equals(this.localcreditamount, bankstatement.localcreditamount) &&
        Objects.equals(this.localdebitamount, bankstatement.localdebitamount) &&
        Objects.equals(this.accdocqueueId, bankstatement.accdocqueueId) &&
        Objects.equals(this.externalnumber, bankstatement.externalnumber) &&
        Objects.equals(this.dirty, bankstatement.dirty) &&
        Objects.equals(this.bankaccountId, bankstatement.bankaccountId) &&
        Objects.equals(this.createdatdate, bankstatement.createdatdate) &&
        Objects.equals(this.correctedatdate, bankstatement.correctedatdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, docqueueId, periodId, ordnumber, docdatedate, createdbyId, correctedbyId, newrelatedtype, newrelateddocumentId, creditamount, debitamount, localcreditamount, localdebitamount, accdocqueueId, externalnumber, dirty, bankaccountId, createdatdate, correctedatdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bankstatement {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docqueueId: ").append(toIndentedString(docqueueId)).append("\n");
    sb.append("    periodId: ").append(toIndentedString(periodId)).append("\n");
    sb.append("    ordnumber: ").append(toIndentedString(ordnumber)).append("\n");
    sb.append("    docdatedate: ").append(toIndentedString(docdatedate)).append("\n");
    sb.append("    createdbyId: ").append(toIndentedString(createdbyId)).append("\n");
    sb.append("    correctedbyId: ").append(toIndentedString(correctedbyId)).append("\n");
    sb.append("    newrelatedtype: ").append(toIndentedString(newrelatedtype)).append("\n");
    sb.append("    newrelateddocumentId: ").append(toIndentedString(newrelateddocumentId)).append("\n");
    sb.append("    creditamount: ").append(toIndentedString(creditamount)).append("\n");
    sb.append("    debitamount: ").append(toIndentedString(debitamount)).append("\n");
    sb.append("    localcreditamount: ").append(toIndentedString(localcreditamount)).append("\n");
    sb.append("    localdebitamount: ").append(toIndentedString(localdebitamount)).append("\n");
    sb.append("    accdocqueueId: ").append(toIndentedString(accdocqueueId)).append("\n");
    sb.append("    externalnumber: ").append(toIndentedString(externalnumber)).append("\n");
    sb.append("    dirty: ").append(toIndentedString(dirty)).append("\n");
    sb.append("    bankaccountId: ").append(toIndentedString(bankaccountId)).append("\n");
    sb.append("    createdatdate: ").append(toIndentedString(createdatdate)).append("\n");
    sb.append("    correctedatdate: ").append(toIndentedString(correctedatdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

