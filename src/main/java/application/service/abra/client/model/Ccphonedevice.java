/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Ccphonedevice
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Ccphonedevice   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("PhoneNumber")
  private String phoneNumber = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("DriverCLSID")
  private String driverCLSID = null;

  @SerializedName("DriverCLSIDText")
  private String driverCLSIDText = null;

  @SerializedName("DriverParams")
  private byte[] driverParams = null;

  @SerializedName("Watch")
  private Boolean watch = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Ccphonedevice hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Ccphonedevice phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Telefonní číslo [persistentní položka]
   * @return phoneNumber
  **/
  @ApiModelProperty(example = "null", value = "Telefonní číslo [persistentní položka]")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Ccphonedevice name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Ccphonedevice driverCLSID(String driverCLSID) {
    this.driverCLSID = driverCLSID;
    return this;
  }

   /**
   * ID Ovladače [persistentní položka]
   * @return driverCLSID
  **/
  @ApiModelProperty(example = "null", value = "ID Ovladače [persistentní položka]")
  public String getDriverCLSID() {
    return driverCLSID;
  }

  public void setDriverCLSID(String driverCLSID) {
    this.driverCLSID = driverCLSID;
  }

  public Ccphonedevice driverCLSIDText(String driverCLSIDText) {
    this.driverCLSIDText = driverCLSIDText;
    return this;
  }

   /**
   * Ovladač
   * @return driverCLSIDText
  **/
  @ApiModelProperty(example = "null", value = "Ovladač")
  public String getDriverCLSIDText() {
    return driverCLSIDText;
  }

  public void setDriverCLSIDText(String driverCLSIDText) {
    this.driverCLSIDText = driverCLSIDText;
  }

  public Ccphonedevice driverParams(byte[] driverParams) {
    this.driverParams = driverParams;
    return this;
  }

   /**
   * Parametry ovladače [persistentní položka]
   * @return driverParams
  **/
  @ApiModelProperty(example = "null", value = "Parametry ovladače [persistentní položka]")
  public byte[] getDriverParams() {
    return driverParams;
  }

  public void setDriverParams(byte[] driverParams) {
    this.driverParams = driverParams;
  }

  public Ccphonedevice watch(Boolean watch) {
    this.watch = watch;
    return this;
  }

   /**
   * Sledování za účelem statistiky [persistentní položka]
   * @return watch
  **/
  @ApiModelProperty(example = "null", value = "Sledování za účelem statistiky [persistentní položka]")
  public Boolean getWatch() {
    return watch;
  }

  public void setWatch(Boolean watch) {
    this.watch = watch;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ccphonedevice ccphonedevice = (Ccphonedevice) o;
    return Objects.equals(this.displayName, ccphonedevice.displayName) &&
        Objects.equals(this.ID, ccphonedevice.ID) &&
        Objects.equals(this.classID, ccphonedevice.classID) &&
        Objects.equals(this.objVersion, ccphonedevice.objVersion) &&
        Objects.equals(this.hidden, ccphonedevice.hidden) &&
        Objects.equals(this.phoneNumber, ccphonedevice.phoneNumber) &&
        Objects.equals(this.name, ccphonedevice.name) &&
        Objects.equals(this.driverCLSID, ccphonedevice.driverCLSID) &&
        Objects.equals(this.driverCLSIDText, ccphonedevice.driverCLSIDText) &&
        Objects.equals(this.driverParams, ccphonedevice.driverParams) &&
        Objects.equals(this.watch, ccphonedevice.watch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, phoneNumber, name, driverCLSID, driverCLSIDText, driverParams, watch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ccphonedevice {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    driverCLSID: ").append(toIndentedString(driverCLSID)).append("\n");
    sb.append("    driverCLSIDText: ").append(toIndentedString(driverCLSIDText)).append("\n");
    sb.append("    driverParams: ").append(toIndentedString(driverParams)).append("\n");
    sb.append("    watch: ").append(toIndentedString(watch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

