/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Mlbparameter
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Mlbparameter   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("NormWinterFromTo")
  private String normWinterFromTo = null;

  @SerializedName("NormSpringFromTo")
  private String normSpringFromTo = null;

  @SerializedName("NormSummerFromTo")
  private String normSummerFromTo = null;

  @SerializedName("NormAutumnFromTo")
  private String normAutumnFromTo = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Mlbparameter normWinterFromTo(String normWinterFromTo) {
    this.normWinterFromTo = normWinterFromTo;
    return this;
  }

   /**
   * Období pro normu Zimní [persistentní položka]
   * @return normWinterFromTo
  **/
  @ApiModelProperty(example = "null", value = "Období pro normu Zimní [persistentní položka]")
  public String getNormWinterFromTo() {
    return normWinterFromTo;
  }

  public void setNormWinterFromTo(String normWinterFromTo) {
    this.normWinterFromTo = normWinterFromTo;
  }

  public Mlbparameter normSpringFromTo(String normSpringFromTo) {
    this.normSpringFromTo = normSpringFromTo;
    return this;
  }

   /**
   * Období pro normu Střední (Jaro) [persistentní položka]
   * @return normSpringFromTo
  **/
  @ApiModelProperty(example = "null", value = "Období pro normu Střední (Jaro) [persistentní položka]")
  public String getNormSpringFromTo() {
    return normSpringFromTo;
  }

  public void setNormSpringFromTo(String normSpringFromTo) {
    this.normSpringFromTo = normSpringFromTo;
  }

  public Mlbparameter normSummerFromTo(String normSummerFromTo) {
    this.normSummerFromTo = normSummerFromTo;
    return this;
  }

   /**
   * Období pro normu Letní [persistentní položka]
   * @return normSummerFromTo
  **/
  @ApiModelProperty(example = "null", value = "Období pro normu Letní [persistentní položka]")
  public String getNormSummerFromTo() {
    return normSummerFromTo;
  }

  public void setNormSummerFromTo(String normSummerFromTo) {
    this.normSummerFromTo = normSummerFromTo;
  }

  public Mlbparameter normAutumnFromTo(String normAutumnFromTo) {
    this.normAutumnFromTo = normAutumnFromTo;
    return this;
  }

   /**
   * Období pro normu Střední (Podzim) [persistentní položka]
   * @return normAutumnFromTo
  **/
  @ApiModelProperty(example = "null", value = "Období pro normu Střední (Podzim) [persistentní položka]")
  public String getNormAutumnFromTo() {
    return normAutumnFromTo;
  }

  public void setNormAutumnFromTo(String normAutumnFromTo) {
    this.normAutumnFromTo = normAutumnFromTo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mlbparameter mlbparameter = (Mlbparameter) o;
    return Objects.equals(this.displayName, mlbparameter.displayName) &&
        Objects.equals(this.ID, mlbparameter.ID) &&
        Objects.equals(this.classID, mlbparameter.classID) &&
        Objects.equals(this.objVersion, mlbparameter.objVersion) &&
        Objects.equals(this.normWinterFromTo, mlbparameter.normWinterFromTo) &&
        Objects.equals(this.normSpringFromTo, mlbparameter.normSpringFromTo) &&
        Objects.equals(this.normSummerFromTo, mlbparameter.normSummerFromTo) &&
        Objects.equals(this.normAutumnFromTo, mlbparameter.normAutumnFromTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, normWinterFromTo, normSpringFromTo, normSummerFromTo, normAutumnFromTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mlbparameter {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    normWinterFromTo: ").append(toIndentedString(normWinterFromTo)).append("\n");
    sb.append("    normSpringFromTo: ").append(toIndentedString(normSpringFromTo)).append("\n");
    sb.append("    normSummerFromTo: ").append(toIndentedString(normSummerFromTo)).append("\n");
    sb.append("    normAutumnFromTo: ").append(toIndentedString(normAutumnFromTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

