/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Gpmcateringunitrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Gpmcateringunitrow   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("planedunitprice")
  private Double planedunitprice = null;

  @SerializedName("boarderscount")
  private Double boarderscount = null;

  @SerializedName("totalplanedpartialcosts")
  private Double totalplanedpartialcosts = null;

  @SerializedName("description")
  private String description = null;

  public Gpmcateringunitrow displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Gpmcateringunitrow id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Gpmcateringunitrow classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Gpmcateringunitrow objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Gpmcateringunitrow parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu stravní jednotka [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu stravní jednotka [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Gpmcateringunitrow posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Gpmcateringunitrow planedunitprice(Double planedunitprice) {
    this.planedunitprice = planedunitprice;
    return this;
  }

   /**
   * jednotková cena plánovaných nákladů [persistentní položka]
   * @return planedunitprice
  **/
  @ApiModelProperty(example = "null", value = "jednotková cena plánovaných nákladů [persistentní položka]")
  public Double getPlanedunitprice() {
    return planedunitprice;
  }

  public void setPlanedunitprice(Double planedunitprice) {
    this.planedunitprice = planedunitprice;
  }

  public Gpmcateringunitrow boarderscount(Double boarderscount) {
    this.boarderscount = boarderscount;
    return this;
  }

   /**
   * počet strávníků [persistentní položka]
   * @return boarderscount
  **/
  @ApiModelProperty(example = "null", value = "počet strávníků [persistentní položka]")
  public Double getBoarderscount() {
    return boarderscount;
  }

  public void setBoarderscount(Double boarderscount) {
    this.boarderscount = boarderscount;
  }

  public Gpmcateringunitrow totalplanedpartialcosts(Double totalplanedpartialcosts) {
    this.totalplanedpartialcosts = totalplanedpartialcosts;
    return this;
  }

   /**
   * plánované náklady na dílčí sj
   * @return totalplanedpartialcosts
  **/
  @ApiModelProperty(example = "null", value = "plánované náklady na dílčí sj")
  public Double getTotalplanedpartialcosts() {
    return totalplanedpartialcosts;
  }

  public void setTotalplanedpartialcosts(Double totalplanedpartialcosts) {
    this.totalplanedpartialcosts = totalplanedpartialcosts;
  }

  public Gpmcateringunitrow description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Gpmcateringunitrow gpmcateringunitrow = (Gpmcateringunitrow) o;
    return Objects.equals(this.displayname, gpmcateringunitrow.displayname) &&
        Objects.equals(this.id, gpmcateringunitrow.id) &&
        Objects.equals(this.classid, gpmcateringunitrow.classid) &&
        Objects.equals(this.objversion, gpmcateringunitrow.objversion) &&
        Objects.equals(this.parentId, gpmcateringunitrow.parentId) &&
        Objects.equals(this.posindex, gpmcateringunitrow.posindex) &&
        Objects.equals(this.planedunitprice, gpmcateringunitrow.planedunitprice) &&
        Objects.equals(this.boarderscount, gpmcateringunitrow.boarderscount) &&
        Objects.equals(this.totalplanedpartialcosts, gpmcateringunitrow.totalplanedpartialcosts) &&
        Objects.equals(this.description, gpmcateringunitrow.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, planedunitprice, boarderscount, totalplanedpartialcosts, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Gpmcateringunitrow {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    planedunitprice: ").append(toIndentedString(planedunitprice)).append("\n");
    sb.append("    boarderscount: ").append(toIndentedString(boarderscount)).append("\n");
    sb.append("    totalplanedpartialcosts: ").append(toIndentedString(totalplanedpartialcosts)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

