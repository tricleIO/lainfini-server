/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Issueddepositusage
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Issueddepositusage   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("DepositDocument_ID")
  private String depositDocumentID = null;

  @SerializedName("PaymentDate$DATE")
  private DateTime paymentDateDATE = null;

  @SerializedName("AccDate$DATE")
  private DateTime accDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("LocalAmount")
  private Double localAmount = null;

  @SerializedName("PAmount")
  private Double pAmount = null;

  @SerializedName("PDocument_ID")
  private String pDocumentID = null;

  @SerializedName("PDocumentType")
  private String pDocumentType = null;

  @SerializedName("PDisKind")
  private Integer pDisKind = null;

  @SerializedName("AccPresetDef_ID")
  private String accPresetDefID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("AccDocQueue_ID")
  private String accDocQueueID = null;

  @SerializedName("SourceGroupIdentical_ID")
  private String sourceGroupIdenticalID = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Issueddepositusage depositDocumentID(String depositDocumentID) {
    this.depositDocumentID = depositDocumentID;
    return this;
  }

   /**
   * Zálohový list; ID objektu Zálohový list vydaný [persistentní položka]
   * @return depositDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Zálohový list; ID objektu Zálohový list vydaný [persistentní položka]")
  public String getDepositDocumentID() {
    return depositDocumentID;
  }

  public void setDepositDocumentID(String depositDocumentID) {
    this.depositDocumentID = depositDocumentID;
  }

  public Issueddepositusage paymentDateDATE(DateTime paymentDateDATE) {
    this.paymentDateDATE = paymentDateDATE;
    return this;
  }

   /**
   * Datum zúčtování [persistentní položka]
   * @return paymentDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum zúčtování [persistentní položka]")
  public DateTime getPaymentDateDATE() {
    return paymentDateDATE;
  }

  public void setPaymentDateDATE(DateTime paymentDateDATE) {
    this.paymentDateDATE = paymentDateDATE;
  }

  public Issueddepositusage accDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
    return this;
  }

   /**
   * Datum účtování [persistentní položka]
   * @return accDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum účtování [persistentní položka]")
  public DateTime getAccDateDATE() {
    return accDateDATE;
  }

  public void setAccDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
  }

  public Issueddepositusage createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Issueddepositusage correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Issueddepositusage amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Celková částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Celková částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

   /**
   * Celk. částka lok. [persistentní položka]
   * @return localAmount
  **/
  @ApiModelProperty(example = "null", value = "Celk. částka lok. [persistentní položka]")
  public Double getLocalAmount() {
    return localAmount;
  }

  public Issueddepositusage pAmount(Double pAmount) {
    this.pAmount = pAmount;
    return this;
  }

   /**
   * Platba [persistentní položka]
   * @return pAmount
  **/
  @ApiModelProperty(example = "null", value = "Platba [persistentní položka]")
  public Double getPAmount() {
    return pAmount;
  }

  public void setPAmount(Double pAmount) {
    this.pAmount = pAmount;
  }

  public Issueddepositusage pDocumentID(String pDocumentID) {
    this.pDocumentID = pDocumentID;
    return this;
  }

   /**
   * Placený doklad; ID objektu Dokument [persistentní položka]
   * @return pDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Placený doklad; ID objektu Dokument [persistentní položka]")
  public String getPDocumentID() {
    return pDocumentID;
  }

  public void setPDocumentID(String pDocumentID) {
    this.pDocumentID = pDocumentID;
  }

  public Issueddepositusage pDocumentType(String pDocumentType) {
    this.pDocumentType = pDocumentType;
    return this;
  }

   /**
   * Typ plac.dokl. [persistentní položka]
   * @return pDocumentType
  **/
  @ApiModelProperty(example = "null", value = "Typ plac.dokl. [persistentní položka]")
  public String getPDocumentType() {
    return pDocumentType;
  }

  public void setPDocumentType(String pDocumentType) {
    this.pDocumentType = pDocumentType;
  }

  public Issueddepositusage pDisKind(Integer pDisKind) {
    this.pDisKind = pDisKind;
    return this;
  }

   /**
   * Rozdělení platby [persistentní položka]
   * @return pDisKind
  **/
  @ApiModelProperty(example = "null", value = "Rozdělení platby [persistentní položka]")
  public Integer getPDisKind() {
    return pDisKind;
  }

  public void setPDisKind(Integer pDisKind) {
    this.pDisKind = pDisKind;
  }

  public Issueddepositusage accPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
    return this;
  }

   /**
   * Předkontace; ID objektu Účetní předkontace [persistentní položka]
   * @return accPresetDefID
  **/
  @ApiModelProperty(example = "null", value = "Předkontace; ID objektu Účetní předkontace [persistentní položka]")
  public String getAccPresetDefID() {
    return accPresetDefID;
  }

  public void setAccPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
  }

   /**
   * Měna; ID objektu Měna
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna")
  public String getCurrencyID() {
    return currencyID;
  }

  public Issueddepositusage accDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
    return this;
  }

   /**
   * Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]
   * @return accDocQueueID
  **/
  @ApiModelProperty(example = "null", value = "Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]")
  public String getAccDocQueueID() {
    return accDocQueueID;
  }

  public void setAccDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
  }

   /**
   * Souv. zdrojových skupin; ID objektu Souvislost zdrojových skupin [persistentní položka]
   * @return sourceGroupIdenticalID
  **/
  @ApiModelProperty(example = "null", value = "Souv. zdrojových skupin; ID objektu Souvislost zdrojových skupin [persistentní položka]")
  public String getSourceGroupIdenticalID() {
    return sourceGroupIdenticalID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Issueddepositusage issueddepositusage = (Issueddepositusage) o;
    return Objects.equals(this.displayName, issueddepositusage.displayName) &&
        Objects.equals(this.ID, issueddepositusage.ID) &&
        Objects.equals(this.classID, issueddepositusage.classID) &&
        Objects.equals(this.objVersion, issueddepositusage.objVersion) &&
        Objects.equals(this.depositDocumentID, issueddepositusage.depositDocumentID) &&
        Objects.equals(this.paymentDateDATE, issueddepositusage.paymentDateDATE) &&
        Objects.equals(this.accDateDATE, issueddepositusage.accDateDATE) &&
        Objects.equals(this.createdByID, issueddepositusage.createdByID) &&
        Objects.equals(this.correctedByID, issueddepositusage.correctedByID) &&
        Objects.equals(this.amount, issueddepositusage.amount) &&
        Objects.equals(this.localAmount, issueddepositusage.localAmount) &&
        Objects.equals(this.pAmount, issueddepositusage.pAmount) &&
        Objects.equals(this.pDocumentID, issueddepositusage.pDocumentID) &&
        Objects.equals(this.pDocumentType, issueddepositusage.pDocumentType) &&
        Objects.equals(this.pDisKind, issueddepositusage.pDisKind) &&
        Objects.equals(this.accPresetDefID, issueddepositusage.accPresetDefID) &&
        Objects.equals(this.currencyID, issueddepositusage.currencyID) &&
        Objects.equals(this.accDocQueueID, issueddepositusage.accDocQueueID) &&
        Objects.equals(this.sourceGroupIdenticalID, issueddepositusage.sourceGroupIdenticalID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, depositDocumentID, paymentDateDATE, accDateDATE, createdByID, correctedByID, amount, localAmount, pAmount, pDocumentID, pDocumentType, pDisKind, accPresetDefID, currencyID, accDocQueueID, sourceGroupIdenticalID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Issueddepositusage {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    depositDocumentID: ").append(toIndentedString(depositDocumentID)).append("\n");
    sb.append("    paymentDateDATE: ").append(toIndentedString(paymentDateDATE)).append("\n");
    sb.append("    accDateDATE: ").append(toIndentedString(accDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    pAmount: ").append(toIndentedString(pAmount)).append("\n");
    sb.append("    pDocumentID: ").append(toIndentedString(pDocumentID)).append("\n");
    sb.append("    pDocumentType: ").append(toIndentedString(pDocumentType)).append("\n");
    sb.append("    pDisKind: ").append(toIndentedString(pDisKind)).append("\n");
    sb.append("    accPresetDefID: ").append(toIndentedString(accPresetDefID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    accDocQueueID: ").append(toIndentedString(accDocQueueID)).append("\n");
    sb.append("    sourceGroupIdenticalID: ").append(toIndentedString(sourceGroupIdenticalID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

