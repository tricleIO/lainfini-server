/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Assetdepreciation
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Assetdepreciation   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("D_Month")
  private Integer dMonth = null;

  @SerializedName("D_Year")
  private Integer dYear = null;

  @SerializedName("VirtualPeriod_ID")
  private String virtualPeriodID = null;

  @SerializedName("OffsetNr")
  private Integer offsetNr = null;

  @SerializedName("VirtualPeriodAsText")
  private String virtualPeriodAsText = null;

  @SerializedName("TaxBasePrice")
  private Double taxBasePrice = null;

  @SerializedName("AccBasePrice")
  private Double accBasePrice = null;

  @SerializedName("IncreaseTax")
  private Double increaseTax = null;

  @SerializedName("IsValorisation")
  private Boolean isValorisation = null;

  @SerializedName("IsValorisationAsText")
  private String isValorisationAsText = null;

  @SerializedName("IncreaseAcc")
  private Double increaseAcc = null;

  @SerializedName("DecreaseOfTaxBasePrice")
  private Double decreaseOfTaxBasePrice = null;

  @SerializedName("DecreaseOfAccBasePrice")
  private Double decreaseOfAccBasePrice = null;

  @SerializedName("DecreaseOfTaxRemainderPrice")
  private Double decreaseOfTaxRemainderPrice = null;

  @SerializedName("DecreaseOfAccRemainderPrice")
  private Double decreaseOfAccRemainderPrice = null;

  @SerializedName("TaxRemainderPriceInitial")
  private Double taxRemainderPriceInitial = null;

  @SerializedName("AccRemainderPriceInitial")
  private Double accRemainderPriceInitial = null;

  @SerializedName("TaxDepreciationGroup_ID")
  private String taxDepreciationGroupID = null;

  @SerializedName("AccDepreciationGroup_ID")
  private String accDepreciationGroupID = null;

  @SerializedName("TaxDepreciation")
  private Double taxDepreciation = null;

  @SerializedName("AccDepreciation")
  private Double accDepreciation = null;

  @SerializedName("Origin")
  private Integer origin = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("AccDocQueue_ID")
  private String accDocQueueID = null;

  @SerializedName("AccDate$DATE")
  private DateTime accDateDATE = null;

  @SerializedName("Accounted")
  private Boolean accounted = null;

  @SerializedName("Components")
  private List<Assetdepreciationcomponent> components = new ArrayList<Assetdepreciationcomponent>();

  @SerializedName("TaxBasePriceFinal")
  private Double taxBasePriceFinal = null;

  @SerializedName("AccBasePriceFinal")
  private Double accBasePriceFinal = null;

  @SerializedName("TaxRemainderPriceFinal")
  private Double taxRemainderPriceFinal = null;

  @SerializedName("AccRemainderPriceFinal")
  private Double accRemainderPriceFinal = null;

  @SerializedName("MonthAndYear")
  private String monthAndYear = null;

  @SerializedName("AccountedAsText")
  private String accountedAsText = null;

  @SerializedName("OriginOfTaxAsText")
  private String originOfTaxAsText = null;

  @SerializedName("OriginOfAccAsText")
  private String originOfAccAsText = null;

  @SerializedName("Division_ID")
  private String divisionID = null;

  @SerializedName("BusOrder_ID")
  private String busOrderID = null;

  @SerializedName("BusTransaction_ID")
  private String busTransactionID = null;

  @SerializedName("BusProject_ID")
  private String busProjectID = null;

  @SerializedName("RestAccValueRate")
  private Double restAccValueRate = null;

  @SerializedName("EndDepreciationDate$DATE")
  private DateTime endDepreciationDateDATE = null;

  @SerializedName("DeprecCorrectionSubsidy")
  private Double deprecCorrectionSubsidy = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Karta majetku [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Karta majetku [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

   /**
   * Měsíc [persistentní položka]
   * @return dMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc [persistentní položka]")
  public Integer getDMonth() {
    return dMonth;
  }

   /**
   * Rok [persistentní položka]
   * @return dYear
  **/
  @ApiModelProperty(example = "null", value = "Rok [persistentní položka]")
  public Integer getDYear() {
    return dYear;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return virtualPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getVirtualPeriodID() {
    return virtualPeriodID;
  }

   /**
   * OffsetNr [persistentní položka]
   * @return offsetNr
  **/
  @ApiModelProperty(example = "null", value = "OffsetNr [persistentní položka]")
  public Integer getOffsetNr() {
    return offsetNr;
  }

   /**
   * Období
   * @return virtualPeriodAsText
  **/
  @ApiModelProperty(example = "null", value = "Období")
  public String getVirtualPeriodAsText() {
    return virtualPeriodAsText;
  }

   /**
   * Daň.vstup.c. [persistentní položka]
   * @return taxBasePrice
  **/
  @ApiModelProperty(example = "null", value = "Daň.vstup.c. [persistentní položka]")
  public Double getTaxBasePrice() {
    return taxBasePrice;
  }

   /**
   * Účet.vstup.c. [persistentní položka]
   * @return accBasePrice
  **/
  @ApiModelProperty(example = "null", value = "Účet.vstup.c. [persistentní položka]")
  public Double getAccBasePrice() {
    return accBasePrice;
  }

   /**
   * Zvýšení daň.c. [persistentní položka]
   * @return increaseTax
  **/
  @ApiModelProperty(example = "null", value = "Zvýšení daň.c. [persistentní položka]")
  public Double getIncreaseTax() {
    return increaseTax;
  }

   /**
   * Označení typu změny ceny [persistentní položka]
   * @return isValorisation
  **/
  @ApiModelProperty(example = "null", value = "Označení typu změny ceny [persistentní položka]")
  public Boolean getIsValorisation() {
    return isValorisation;
  }

   /**
   * Označení typu změny ceny text.
   * @return isValorisationAsText
  **/
  @ApiModelProperty(example = "null", value = "Označení typu změny ceny text.")
  public String getIsValorisationAsText() {
    return isValorisationAsText;
  }

   /**
   * Zvýšení účet.c. [persistentní položka]
   * @return increaseAcc
  **/
  @ApiModelProperty(example = "null", value = "Zvýšení účet.c. [persistentní položka]")
  public Double getIncreaseAcc() {
    return increaseAcc;
  }

   /**
   * Sníž.daň.vstup.c. [persistentní položka]
   * @return decreaseOfTaxBasePrice
  **/
  @ApiModelProperty(example = "null", value = "Sníž.daň.vstup.c. [persistentní položka]")
  public Double getDecreaseOfTaxBasePrice() {
    return decreaseOfTaxBasePrice;
  }

   /**
   * Sníž.účet.vstup.c. [persistentní položka]
   * @return decreaseOfAccBasePrice
  **/
  @ApiModelProperty(example = "null", value = "Sníž.účet.vstup.c. [persistentní položka]")
  public Double getDecreaseOfAccBasePrice() {
    return decreaseOfAccBasePrice;
  }

   /**
   * Sníž.daň.zůst.c. [persistentní položka]
   * @return decreaseOfTaxRemainderPrice
  **/
  @ApiModelProperty(example = "null", value = "Sníž.daň.zůst.c. [persistentní položka]")
  public Double getDecreaseOfTaxRemainderPrice() {
    return decreaseOfTaxRemainderPrice;
  }

   /**
   * Sníž.účet.zůst.c. [persistentní položka]
   * @return decreaseOfAccRemainderPrice
  **/
  @ApiModelProperty(example = "null", value = "Sníž.účet.zůst.c. [persistentní položka]")
  public Double getDecreaseOfAccRemainderPrice() {
    return decreaseOfAccRemainderPrice;
  }

   /**
   * Poč.daň.zůst.c. [persistentní položka]
   * @return taxRemainderPriceInitial
  **/
  @ApiModelProperty(example = "null", value = "Poč.daň.zůst.c. [persistentní položka]")
  public Double getTaxRemainderPriceInitial() {
    return taxRemainderPriceInitial;
  }

   /**
   * Poč.účet.zůst.c. [persistentní položka]
   * @return accRemainderPriceInitial
  **/
  @ApiModelProperty(example = "null", value = "Poč.účet.zůst.c. [persistentní položka]")
  public Double getAccRemainderPriceInitial() {
    return accRemainderPriceInitial;
  }

   /**
   * Daň.odp.skup.; ID objektu Daňová odpisová skupina [persistentní položka]
   * @return taxDepreciationGroupID
  **/
  @ApiModelProperty(example = "null", value = "Daň.odp.skup.; ID objektu Daňová odpisová skupina [persistentní položka]")
  public String getTaxDepreciationGroupID() {
    return taxDepreciationGroupID;
  }

   /**
   * Účet.odp.skup.; ID objektu Účetní odpisová skupina [persistentní položka]
   * @return accDepreciationGroupID
  **/
  @ApiModelProperty(example = "null", value = "Účet.odp.skup.; ID objektu Účetní odpisová skupina [persistentní položka]")
  public String getAccDepreciationGroupID() {
    return accDepreciationGroupID;
  }

   /**
   * Daňový odpis [persistentní položka]
   * @return taxDepreciation
  **/
  @ApiModelProperty(example = "null", value = "Daňový odpis [persistentní položka]")
  public Double getTaxDepreciation() {
    return taxDepreciation;
  }

   /**
   * Účetní odpis [persistentní položka]
   * @return accDepreciation
  **/
  @ApiModelProperty(example = "null", value = "Účetní odpis [persistentní položka]")
  public Double getAccDepreciation() {
    return accDepreciation;
  }

   /**
   * Původ [persistentní položka]
   * @return origin
  **/
  @ApiModelProperty(example = "null", value = "Původ [persistentní položka]")
  public Integer getOrigin() {
    return origin;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

   /**
   * Pořídil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Pořídil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

   /**
   * Řada dokl.; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Řada dokl.; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

   /**
   * Čís.dokl. [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Čís.dokl. [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

   /**
   * Datum [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

   /**
   * Úč.řada dokl.; ID objektu Účetní řada dokladů [persistentní položka]
   * @return accDocQueueID
  **/
  @ApiModelProperty(example = "null", value = "Úč.řada dokl.; ID objektu Účetní řada dokladů [persistentní položka]")
  public String getAccDocQueueID() {
    return accDocQueueID;
  }

   /**
   * Datum z. [persistentní položka]
   * @return accDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum z. [persistentní položka]")
  public DateTime getAccDateDATE() {
    return accDateDATE;
  }

   /**
   * Číslo dokladu
   * @return accounted
  **/
  @ApiModelProperty(example = "null", value = "Číslo dokladu")
  public Boolean getAccounted() {
    return accounted;
  }

  public Assetdepreciation components(List<Assetdepreciationcomponent> components) {
    this.components = components;
    return this;
  }

  public Assetdepreciation addComponentsItem(Assetdepreciationcomponent componentsItem) {
    this.components.add(componentsItem);
    return this;
  }

   /**
   * Prvky; kolekce BO Prvek odpisu majetku [nepersistentní položka]
   * @return components
  **/
  @ApiModelProperty(example = "null", value = "Prvky; kolekce BO Prvek odpisu majetku [nepersistentní položka]")
  public List<Assetdepreciationcomponent> getComponents() {
    return components;
  }

  public void setComponents(List<Assetdepreciationcomponent> components) {
    this.components = components;
  }

   /**
   * Konc.daň.vstup.c.
   * @return taxBasePriceFinal
  **/
  @ApiModelProperty(example = "null", value = "Konc.daň.vstup.c.")
  public Double getTaxBasePriceFinal() {
    return taxBasePriceFinal;
  }

   /**
   * Konc.účet.vstup.c.
   * @return accBasePriceFinal
  **/
  @ApiModelProperty(example = "null", value = "Konc.účet.vstup.c.")
  public Double getAccBasePriceFinal() {
    return accBasePriceFinal;
  }

   /**
   * Konc.daň.zůst.c.
   * @return taxRemainderPriceFinal
  **/
  @ApiModelProperty(example = "null", value = "Konc.daň.zůst.c.")
  public Double getTaxRemainderPriceFinal() {
    return taxRemainderPriceFinal;
  }

   /**
   * Konc.účet.zůst.c.
   * @return accRemainderPriceFinal
  **/
  @ApiModelProperty(example = "null", value = "Konc.účet.zůst.c.")
  public Double getAccRemainderPriceFinal() {
    return accRemainderPriceFinal;
  }

   /**
   * měsíc/rok
   * @return monthAndYear
  **/
  @ApiModelProperty(example = "null", value = "měsíc/rok")
  public String getMonthAndYear() {
    return monthAndYear;
  }

   /**
   * Zaúčtován
   * @return accountedAsText
  **/
  @ApiModelProperty(example = "null", value = "Zaúčtován")
  public String getAccountedAsText() {
    return accountedAsText;
  }

   /**
   * Původ
   * @return originOfTaxAsText
  **/
  @ApiModelProperty(example = "null", value = "Původ")
  public String getOriginOfTaxAsText() {
    return originOfTaxAsText;
  }

   /**
   * Původ
   * @return originOfAccAsText
  **/
  @ApiModelProperty(example = "null", value = "Původ")
  public String getOriginOfAccAsText() {
    return originOfAccAsText;
  }

   /**
   * Středisko; ID objektu Středisko [persistentní položka]
   * @return divisionID
  **/
  @ApiModelProperty(example = "null", value = "Středisko; ID objektu Středisko [persistentní položka]")
  public String getDivisionID() {
    return divisionID;
  }

   /**
   * Zakázka; ID objektu Zakázka [persistentní položka]
   * @return busOrderID
  **/
  @ApiModelProperty(example = "null", value = "Zakázka; ID objektu Zakázka [persistentní položka]")
  public String getBusOrderID() {
    return busOrderID;
  }

   /**
   * Obch.případ; ID objektu Obchodní případ [persistentní položka]
   * @return busTransactionID
  **/
  @ApiModelProperty(example = "null", value = "Obch.případ; ID objektu Obchodní případ [persistentní položka]")
  public String getBusTransactionID() {
    return busTransactionID;
  }

   /**
   * Projekt; ID objektu Projekt [persistentní položka]
   * @return busProjectID
  **/
  @ApiModelProperty(example = "null", value = "Projekt; ID objektu Projekt [persistentní položka]")
  public String getBusProjectID() {
    return busProjectID;
  }

   /**
   * Zbytková hodnota [%] [persistentní položka]
   * @return restAccValueRate
  **/
  @ApiModelProperty(example = "null", value = "Zbytková hodnota [%] [persistentní položka]")
  public Double getRestAccValueRate() {
    return restAccValueRate;
  }

   /**
   * Datum konce odepisování [persistentní položka]
   * @return endDepreciationDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum konce odepisování [persistentní položka]")
  public DateTime getEndDepreciationDateDATE() {
    return endDepreciationDateDATE;
  }

   /**
   * Korekce odpisu z dotace [persistentní položka]
   * @return deprecCorrectionSubsidy
  **/
  @ApiModelProperty(example = "null", value = "Korekce odpisu z dotace [persistentní položka]")
  public Double getDeprecCorrectionSubsidy() {
    return deprecCorrectionSubsidy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Assetdepreciation assetdepreciation = (Assetdepreciation) o;
    return Objects.equals(this.displayName, assetdepreciation.displayName) &&
        Objects.equals(this.ID, assetdepreciation.ID) &&
        Objects.equals(this.classID, assetdepreciation.classID) &&
        Objects.equals(this.objVersion, assetdepreciation.objVersion) &&
        Objects.equals(this.parentID, assetdepreciation.parentID) &&
        Objects.equals(this.dMonth, assetdepreciation.dMonth) &&
        Objects.equals(this.dYear, assetdepreciation.dYear) &&
        Objects.equals(this.virtualPeriodID, assetdepreciation.virtualPeriodID) &&
        Objects.equals(this.offsetNr, assetdepreciation.offsetNr) &&
        Objects.equals(this.virtualPeriodAsText, assetdepreciation.virtualPeriodAsText) &&
        Objects.equals(this.taxBasePrice, assetdepreciation.taxBasePrice) &&
        Objects.equals(this.accBasePrice, assetdepreciation.accBasePrice) &&
        Objects.equals(this.increaseTax, assetdepreciation.increaseTax) &&
        Objects.equals(this.isValorisation, assetdepreciation.isValorisation) &&
        Objects.equals(this.isValorisationAsText, assetdepreciation.isValorisationAsText) &&
        Objects.equals(this.increaseAcc, assetdepreciation.increaseAcc) &&
        Objects.equals(this.decreaseOfTaxBasePrice, assetdepreciation.decreaseOfTaxBasePrice) &&
        Objects.equals(this.decreaseOfAccBasePrice, assetdepreciation.decreaseOfAccBasePrice) &&
        Objects.equals(this.decreaseOfTaxRemainderPrice, assetdepreciation.decreaseOfTaxRemainderPrice) &&
        Objects.equals(this.decreaseOfAccRemainderPrice, assetdepreciation.decreaseOfAccRemainderPrice) &&
        Objects.equals(this.taxRemainderPriceInitial, assetdepreciation.taxRemainderPriceInitial) &&
        Objects.equals(this.accRemainderPriceInitial, assetdepreciation.accRemainderPriceInitial) &&
        Objects.equals(this.taxDepreciationGroupID, assetdepreciation.taxDepreciationGroupID) &&
        Objects.equals(this.accDepreciationGroupID, assetdepreciation.accDepreciationGroupID) &&
        Objects.equals(this.taxDepreciation, assetdepreciation.taxDepreciation) &&
        Objects.equals(this.accDepreciation, assetdepreciation.accDepreciation) &&
        Objects.equals(this.origin, assetdepreciation.origin) &&
        Objects.equals(this.correctedByID, assetdepreciation.correctedByID) &&
        Objects.equals(this.createdByID, assetdepreciation.createdByID) &&
        Objects.equals(this.periodID, assetdepreciation.periodID) &&
        Objects.equals(this.docQueueID, assetdepreciation.docQueueID) &&
        Objects.equals(this.ordNumber, assetdepreciation.ordNumber) &&
        Objects.equals(this.docDateDATE, assetdepreciation.docDateDATE) &&
        Objects.equals(this.accDocQueueID, assetdepreciation.accDocQueueID) &&
        Objects.equals(this.accDateDATE, assetdepreciation.accDateDATE) &&
        Objects.equals(this.accounted, assetdepreciation.accounted) &&
        Objects.equals(this.components, assetdepreciation.components) &&
        Objects.equals(this.taxBasePriceFinal, assetdepreciation.taxBasePriceFinal) &&
        Objects.equals(this.accBasePriceFinal, assetdepreciation.accBasePriceFinal) &&
        Objects.equals(this.taxRemainderPriceFinal, assetdepreciation.taxRemainderPriceFinal) &&
        Objects.equals(this.accRemainderPriceFinal, assetdepreciation.accRemainderPriceFinal) &&
        Objects.equals(this.monthAndYear, assetdepreciation.monthAndYear) &&
        Objects.equals(this.accountedAsText, assetdepreciation.accountedAsText) &&
        Objects.equals(this.originOfTaxAsText, assetdepreciation.originOfTaxAsText) &&
        Objects.equals(this.originOfAccAsText, assetdepreciation.originOfAccAsText) &&
        Objects.equals(this.divisionID, assetdepreciation.divisionID) &&
        Objects.equals(this.busOrderID, assetdepreciation.busOrderID) &&
        Objects.equals(this.busTransactionID, assetdepreciation.busTransactionID) &&
        Objects.equals(this.busProjectID, assetdepreciation.busProjectID) &&
        Objects.equals(this.restAccValueRate, assetdepreciation.restAccValueRate) &&
        Objects.equals(this.endDepreciationDateDATE, assetdepreciation.endDepreciationDateDATE) &&
        Objects.equals(this.deprecCorrectionSubsidy, assetdepreciation.deprecCorrectionSubsidy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, dMonth, dYear, virtualPeriodID, offsetNr, virtualPeriodAsText, taxBasePrice, accBasePrice, increaseTax, isValorisation, isValorisationAsText, increaseAcc, decreaseOfTaxBasePrice, decreaseOfAccBasePrice, decreaseOfTaxRemainderPrice, decreaseOfAccRemainderPrice, taxRemainderPriceInitial, accRemainderPriceInitial, taxDepreciationGroupID, accDepreciationGroupID, taxDepreciation, accDepreciation, origin, correctedByID, createdByID, periodID, docQueueID, ordNumber, docDateDATE, accDocQueueID, accDateDATE, accounted, components, taxBasePriceFinal, accBasePriceFinal, taxRemainderPriceFinal, accRemainderPriceFinal, monthAndYear, accountedAsText, originOfTaxAsText, originOfAccAsText, divisionID, busOrderID, busTransactionID, busProjectID, restAccValueRate, endDepreciationDateDATE, deprecCorrectionSubsidy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Assetdepreciation {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    dMonth: ").append(toIndentedString(dMonth)).append("\n");
    sb.append("    dYear: ").append(toIndentedString(dYear)).append("\n");
    sb.append("    virtualPeriodID: ").append(toIndentedString(virtualPeriodID)).append("\n");
    sb.append("    offsetNr: ").append(toIndentedString(offsetNr)).append("\n");
    sb.append("    virtualPeriodAsText: ").append(toIndentedString(virtualPeriodAsText)).append("\n");
    sb.append("    taxBasePrice: ").append(toIndentedString(taxBasePrice)).append("\n");
    sb.append("    accBasePrice: ").append(toIndentedString(accBasePrice)).append("\n");
    sb.append("    increaseTax: ").append(toIndentedString(increaseTax)).append("\n");
    sb.append("    isValorisation: ").append(toIndentedString(isValorisation)).append("\n");
    sb.append("    isValorisationAsText: ").append(toIndentedString(isValorisationAsText)).append("\n");
    sb.append("    increaseAcc: ").append(toIndentedString(increaseAcc)).append("\n");
    sb.append("    decreaseOfTaxBasePrice: ").append(toIndentedString(decreaseOfTaxBasePrice)).append("\n");
    sb.append("    decreaseOfAccBasePrice: ").append(toIndentedString(decreaseOfAccBasePrice)).append("\n");
    sb.append("    decreaseOfTaxRemainderPrice: ").append(toIndentedString(decreaseOfTaxRemainderPrice)).append("\n");
    sb.append("    decreaseOfAccRemainderPrice: ").append(toIndentedString(decreaseOfAccRemainderPrice)).append("\n");
    sb.append("    taxRemainderPriceInitial: ").append(toIndentedString(taxRemainderPriceInitial)).append("\n");
    sb.append("    accRemainderPriceInitial: ").append(toIndentedString(accRemainderPriceInitial)).append("\n");
    sb.append("    taxDepreciationGroupID: ").append(toIndentedString(taxDepreciationGroupID)).append("\n");
    sb.append("    accDepreciationGroupID: ").append(toIndentedString(accDepreciationGroupID)).append("\n");
    sb.append("    taxDepreciation: ").append(toIndentedString(taxDepreciation)).append("\n");
    sb.append("    accDepreciation: ").append(toIndentedString(accDepreciation)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    accDocQueueID: ").append(toIndentedString(accDocQueueID)).append("\n");
    sb.append("    accDateDATE: ").append(toIndentedString(accDateDATE)).append("\n");
    sb.append("    accounted: ").append(toIndentedString(accounted)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    taxBasePriceFinal: ").append(toIndentedString(taxBasePriceFinal)).append("\n");
    sb.append("    accBasePriceFinal: ").append(toIndentedString(accBasePriceFinal)).append("\n");
    sb.append("    taxRemainderPriceFinal: ").append(toIndentedString(taxRemainderPriceFinal)).append("\n");
    sb.append("    accRemainderPriceFinal: ").append(toIndentedString(accRemainderPriceFinal)).append("\n");
    sb.append("    monthAndYear: ").append(toIndentedString(monthAndYear)).append("\n");
    sb.append("    accountedAsText: ").append(toIndentedString(accountedAsText)).append("\n");
    sb.append("    originOfTaxAsText: ").append(toIndentedString(originOfTaxAsText)).append("\n");
    sb.append("    originOfAccAsText: ").append(toIndentedString(originOfAccAsText)).append("\n");
    sb.append("    divisionID: ").append(toIndentedString(divisionID)).append("\n");
    sb.append("    busOrderID: ").append(toIndentedString(busOrderID)).append("\n");
    sb.append("    busTransactionID: ").append(toIndentedString(busTransactionID)).append("\n");
    sb.append("    busProjectID: ").append(toIndentedString(busProjectID)).append("\n");
    sb.append("    restAccValueRate: ").append(toIndentedString(restAccValueRate)).append("\n");
    sb.append("    endDepreciationDateDATE: ").append(toIndentedString(endDepreciationDateDATE)).append("\n");
    sb.append("    deprecCorrectionSubsidy: ").append(toIndentedString(deprecCorrectionSubsidy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

