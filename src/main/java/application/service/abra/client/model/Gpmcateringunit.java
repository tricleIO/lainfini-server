/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Gpmcateringunit
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Gpmcateringunit   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Gpmcateringunitrow> rows = new ArrayList<Gpmcateringunitrow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("BusOrder_ID")
  private String busOrderID = null;

  @SerializedName("BusTransaction_ID")
  private String busTransactionID = null;

  @SerializedName("BusProject_ID")
  private String busProjectID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("CreatedDate$DATE")
  private DateTime createdDateDATE = null;

  @SerializedName("CorrectedDate$DATE")
  private DateTime correctedDateDATE = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("PlanedDailyCosts")
  private Double planedDailyCosts = null;

  @SerializedName("RealDailyCosts")
  private Double realDailyCosts = null;

  @SerializedName("DailyCostsDifference")
  private Double dailyCostsDifference = null;

  @SerializedName("PlanedWeeklyCosts")
  private Double planedWeeklyCosts = null;

  @SerializedName("RealWeeklyCosts")
  private Double realWeeklyCosts = null;

  @SerializedName("WeeklyCostsDifference")
  private Double weeklyCostsDifference = null;

  @SerializedName("PlanedMonthlyCosts")
  private Double planedMonthlyCosts = null;

  @SerializedName("RealMonthlyCosts")
  private Double realMonthlyCosts = null;

  @SerializedName("MonthlyCostsDifference")
  private Double monthlyCostsDifference = null;

  @SerializedName("PlanedYearlyCosts")
  private Double planedYearlyCosts = null;

  @SerializedName("RealYearlyCosts")
  private Double realYearlyCosts = null;

  @SerializedName("YearlyCostsDifference")
  private Double yearlyCostsDifference = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Gpmcateringunit rows(List<Gpmcateringunitrow> rows) {
    this.rows = rows;
    return this;
  }

  public Gpmcateringunit addRowsItem(Gpmcateringunitrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Stravní jednotka - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Stravní jednotka - řádek [nepersistentní položka]")
  public List<Gpmcateringunitrow> getRows() {
    return rows;
  }

  public void setRows(List<Gpmcateringunitrow> rows) {
    this.rows = rows;
  }

  public Gpmcateringunit docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Gpmcateringunit periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Gpmcateringunit ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Gpmcateringunit docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Gpmcateringunit createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Gpmcateringunit correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Gpmcateringunit newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Gpmcateringunit newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Gpmcateringunit busOrderID(String busOrderID) {
    this.busOrderID = busOrderID;
    return this;
  }

   /**
   * Zakázka; ID objektu Zakázka [persistentní položka]
   * @return busOrderID
  **/
  @ApiModelProperty(example = "null", value = "Zakázka; ID objektu Zakázka [persistentní položka]")
  public String getBusOrderID() {
    return busOrderID;
  }

  public void setBusOrderID(String busOrderID) {
    this.busOrderID = busOrderID;
  }

  public Gpmcateringunit busTransactionID(String busTransactionID) {
    this.busTransactionID = busTransactionID;
    return this;
  }

   /**
   * Obchodní případ; ID objektu Obchodní případ [persistentní položka]
   * @return busTransactionID
  **/
  @ApiModelProperty(example = "null", value = "Obchodní případ; ID objektu Obchodní případ [persistentní položka]")
  public String getBusTransactionID() {
    return busTransactionID;
  }

  public void setBusTransactionID(String busTransactionID) {
    this.busTransactionID = busTransactionID;
  }

  public Gpmcateringunit busProjectID(String busProjectID) {
    this.busProjectID = busProjectID;
    return this;
  }

   /**
   * Projekt; ID objektu Projekt [persistentní položka]
   * @return busProjectID
  **/
  @ApiModelProperty(example = "null", value = "Projekt; ID objektu Projekt [persistentní položka]")
  public String getBusProjectID() {
    return busProjectID;
  }

  public void setBusProjectID(String busProjectID) {
    this.busProjectID = busProjectID;
  }

  public Gpmcateringunit description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Gpmcateringunit createdDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
    return this;
  }

   /**
   * Datum vytvoření (skutečné) [persistentní položka]
   * @return createdDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum vytvoření (skutečné) [persistentní položka]")
  public DateTime getCreatedDateDATE() {
    return createdDateDATE;
  }

  public void setCreatedDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
  }

  public Gpmcateringunit correctedDateDATE(DateTime correctedDateDATE) {
    this.correctedDateDATE = correctedDateDATE;
    return this;
  }

   /**
   * Datum opravy [persistentní položka]
   * @return correctedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum opravy [persistentní položka]")
  public DateTime getCorrectedDateDATE() {
    return correctedDateDATE;
  }

  public void setCorrectedDateDATE(DateTime correctedDateDATE) {
    this.correctedDateDATE = correctedDateDATE;
  }

  public Gpmcateringunit currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Gpmcateringunit planedDailyCosts(Double planedDailyCosts) {
    this.planedDailyCosts = planedDailyCosts;
    return this;
  }

   /**
   * Plánované denní náklady [persistentní položka]
   * @return planedDailyCosts
  **/
  @ApiModelProperty(example = "null", value = "Plánované denní náklady [persistentní položka]")
  public Double getPlanedDailyCosts() {
    return planedDailyCosts;
  }

  public void setPlanedDailyCosts(Double planedDailyCosts) {
    this.planedDailyCosts = planedDailyCosts;
  }

  public Gpmcateringunit realDailyCosts(Double realDailyCosts) {
    this.realDailyCosts = realDailyCosts;
    return this;
  }

   /**
   * Skutečné denní náklady [persistentní položka]
   * @return realDailyCosts
  **/
  @ApiModelProperty(example = "null", value = "Skutečné denní náklady [persistentní položka]")
  public Double getRealDailyCosts() {
    return realDailyCosts;
  }

  public void setRealDailyCosts(Double realDailyCosts) {
    this.realDailyCosts = realDailyCosts;
  }

  public Gpmcateringunit dailyCostsDifference(Double dailyCostsDifference) {
    this.dailyCostsDifference = dailyCostsDifference;
    return this;
  }

   /**
   * Rozdíl denních nákladů
   * @return dailyCostsDifference
  **/
  @ApiModelProperty(example = "null", value = "Rozdíl denních nákladů")
  public Double getDailyCostsDifference() {
    return dailyCostsDifference;
  }

  public void setDailyCostsDifference(Double dailyCostsDifference) {
    this.dailyCostsDifference = dailyCostsDifference;
  }

  public Gpmcateringunit planedWeeklyCosts(Double planedWeeklyCosts) {
    this.planedWeeklyCosts = planedWeeklyCosts;
    return this;
  }

   /**
   * Plánované náklady od začátku týdne
   * @return planedWeeklyCosts
  **/
  @ApiModelProperty(example = "null", value = "Plánované náklady od začátku týdne")
  public Double getPlanedWeeklyCosts() {
    return planedWeeklyCosts;
  }

  public void setPlanedWeeklyCosts(Double planedWeeklyCosts) {
    this.planedWeeklyCosts = planedWeeklyCosts;
  }

  public Gpmcateringunit realWeeklyCosts(Double realWeeklyCosts) {
    this.realWeeklyCosts = realWeeklyCosts;
    return this;
  }

   /**
   * Skutečné náklady od začátku týdne
   * @return realWeeklyCosts
  **/
  @ApiModelProperty(example = "null", value = "Skutečné náklady od začátku týdne")
  public Double getRealWeeklyCosts() {
    return realWeeklyCosts;
  }

  public void setRealWeeklyCosts(Double realWeeklyCosts) {
    this.realWeeklyCosts = realWeeklyCosts;
  }

  public Gpmcateringunit weeklyCostsDifference(Double weeklyCostsDifference) {
    this.weeklyCostsDifference = weeklyCostsDifference;
    return this;
  }

   /**
   * Rozdíl nákladů od začátku týdne
   * @return weeklyCostsDifference
  **/
  @ApiModelProperty(example = "null", value = "Rozdíl nákladů od začátku týdne")
  public Double getWeeklyCostsDifference() {
    return weeklyCostsDifference;
  }

  public void setWeeklyCostsDifference(Double weeklyCostsDifference) {
    this.weeklyCostsDifference = weeklyCostsDifference;
  }

  public Gpmcateringunit planedMonthlyCosts(Double planedMonthlyCosts) {
    this.planedMonthlyCosts = planedMonthlyCosts;
    return this;
  }

   /**
   * Plánované náklady od začátku měsíce
   * @return planedMonthlyCosts
  **/
  @ApiModelProperty(example = "null", value = "Plánované náklady od začátku měsíce")
  public Double getPlanedMonthlyCosts() {
    return planedMonthlyCosts;
  }

  public void setPlanedMonthlyCosts(Double planedMonthlyCosts) {
    this.planedMonthlyCosts = planedMonthlyCosts;
  }

  public Gpmcateringunit realMonthlyCosts(Double realMonthlyCosts) {
    this.realMonthlyCosts = realMonthlyCosts;
    return this;
  }

   /**
   * Skutečné náklady od začátku měsíce
   * @return realMonthlyCosts
  **/
  @ApiModelProperty(example = "null", value = "Skutečné náklady od začátku měsíce")
  public Double getRealMonthlyCosts() {
    return realMonthlyCosts;
  }

  public void setRealMonthlyCosts(Double realMonthlyCosts) {
    this.realMonthlyCosts = realMonthlyCosts;
  }

  public Gpmcateringunit monthlyCostsDifference(Double monthlyCostsDifference) {
    this.monthlyCostsDifference = monthlyCostsDifference;
    return this;
  }

   /**
   * Rozdíl nákladů od začátku měsíce
   * @return monthlyCostsDifference
  **/
  @ApiModelProperty(example = "null", value = "Rozdíl nákladů od začátku měsíce")
  public Double getMonthlyCostsDifference() {
    return monthlyCostsDifference;
  }

  public void setMonthlyCostsDifference(Double monthlyCostsDifference) {
    this.monthlyCostsDifference = monthlyCostsDifference;
  }

  public Gpmcateringunit planedYearlyCosts(Double planedYearlyCosts) {
    this.planedYearlyCosts = planedYearlyCosts;
    return this;
  }

   /**
   * Plánované náklady od začátku roku
   * @return planedYearlyCosts
  **/
  @ApiModelProperty(example = "null", value = "Plánované náklady od začátku roku")
  public Double getPlanedYearlyCosts() {
    return planedYearlyCosts;
  }

  public void setPlanedYearlyCosts(Double planedYearlyCosts) {
    this.planedYearlyCosts = planedYearlyCosts;
  }

  public Gpmcateringunit realYearlyCosts(Double realYearlyCosts) {
    this.realYearlyCosts = realYearlyCosts;
    return this;
  }

   /**
   * Skutečné náklady od začátku roku
   * @return realYearlyCosts
  **/
  @ApiModelProperty(example = "null", value = "Skutečné náklady od začátku roku")
  public Double getRealYearlyCosts() {
    return realYearlyCosts;
  }

  public void setRealYearlyCosts(Double realYearlyCosts) {
    this.realYearlyCosts = realYearlyCosts;
  }

  public Gpmcateringunit yearlyCostsDifference(Double yearlyCostsDifference) {
    this.yearlyCostsDifference = yearlyCostsDifference;
    return this;
  }

   /**
   * Rozdíl nákladů od začátku roku
   * @return yearlyCostsDifference
  **/
  @ApiModelProperty(example = "null", value = "Rozdíl nákladů od začátku roku")
  public Double getYearlyCostsDifference() {
    return yearlyCostsDifference;
  }

  public void setYearlyCostsDifference(Double yearlyCostsDifference) {
    this.yearlyCostsDifference = yearlyCostsDifference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Gpmcateringunit gpmcateringunit = (Gpmcateringunit) o;
    return Objects.equals(this.displayName, gpmcateringunit.displayName) &&
        Objects.equals(this.ID, gpmcateringunit.ID) &&
        Objects.equals(this.classID, gpmcateringunit.classID) &&
        Objects.equals(this.objVersion, gpmcateringunit.objVersion) &&
        Objects.equals(this.rows, gpmcateringunit.rows) &&
        Objects.equals(this.docQueueID, gpmcateringunit.docQueueID) &&
        Objects.equals(this.periodID, gpmcateringunit.periodID) &&
        Objects.equals(this.ordNumber, gpmcateringunit.ordNumber) &&
        Objects.equals(this.docDateDATE, gpmcateringunit.docDateDATE) &&
        Objects.equals(this.createdByID, gpmcateringunit.createdByID) &&
        Objects.equals(this.correctedByID, gpmcateringunit.correctedByID) &&
        Objects.equals(this.newRelatedType, gpmcateringunit.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, gpmcateringunit.newRelatedDocumentID) &&
        Objects.equals(this.busOrderID, gpmcateringunit.busOrderID) &&
        Objects.equals(this.busTransactionID, gpmcateringunit.busTransactionID) &&
        Objects.equals(this.busProjectID, gpmcateringunit.busProjectID) &&
        Objects.equals(this.description, gpmcateringunit.description) &&
        Objects.equals(this.createdDateDATE, gpmcateringunit.createdDateDATE) &&
        Objects.equals(this.correctedDateDATE, gpmcateringunit.correctedDateDATE) &&
        Objects.equals(this.currencyID, gpmcateringunit.currencyID) &&
        Objects.equals(this.planedDailyCosts, gpmcateringunit.planedDailyCosts) &&
        Objects.equals(this.realDailyCosts, gpmcateringunit.realDailyCosts) &&
        Objects.equals(this.dailyCostsDifference, gpmcateringunit.dailyCostsDifference) &&
        Objects.equals(this.planedWeeklyCosts, gpmcateringunit.planedWeeklyCosts) &&
        Objects.equals(this.realWeeklyCosts, gpmcateringunit.realWeeklyCosts) &&
        Objects.equals(this.weeklyCostsDifference, gpmcateringunit.weeklyCostsDifference) &&
        Objects.equals(this.planedMonthlyCosts, gpmcateringunit.planedMonthlyCosts) &&
        Objects.equals(this.realMonthlyCosts, gpmcateringunit.realMonthlyCosts) &&
        Objects.equals(this.monthlyCostsDifference, gpmcateringunit.monthlyCostsDifference) &&
        Objects.equals(this.planedYearlyCosts, gpmcateringunit.planedYearlyCosts) &&
        Objects.equals(this.realYearlyCosts, gpmcateringunit.realYearlyCosts) &&
        Objects.equals(this.yearlyCostsDifference, gpmcateringunit.yearlyCostsDifference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, busOrderID, busTransactionID, busProjectID, description, createdDateDATE, correctedDateDATE, currencyID, planedDailyCosts, realDailyCosts, dailyCostsDifference, planedWeeklyCosts, realWeeklyCosts, weeklyCostsDifference, planedMonthlyCosts, realMonthlyCosts, monthlyCostsDifference, planedYearlyCosts, realYearlyCosts, yearlyCostsDifference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Gpmcateringunit {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    busOrderID: ").append(toIndentedString(busOrderID)).append("\n");
    sb.append("    busTransactionID: ").append(toIndentedString(busTransactionID)).append("\n");
    sb.append("    busProjectID: ").append(toIndentedString(busProjectID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdDateDATE: ").append(toIndentedString(createdDateDATE)).append("\n");
    sb.append("    correctedDateDATE: ").append(toIndentedString(correctedDateDATE)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    planedDailyCosts: ").append(toIndentedString(planedDailyCosts)).append("\n");
    sb.append("    realDailyCosts: ").append(toIndentedString(realDailyCosts)).append("\n");
    sb.append("    dailyCostsDifference: ").append(toIndentedString(dailyCostsDifference)).append("\n");
    sb.append("    planedWeeklyCosts: ").append(toIndentedString(planedWeeklyCosts)).append("\n");
    sb.append("    realWeeklyCosts: ").append(toIndentedString(realWeeklyCosts)).append("\n");
    sb.append("    weeklyCostsDifference: ").append(toIndentedString(weeklyCostsDifference)).append("\n");
    sb.append("    planedMonthlyCosts: ").append(toIndentedString(planedMonthlyCosts)).append("\n");
    sb.append("    realMonthlyCosts: ").append(toIndentedString(realMonthlyCosts)).append("\n");
    sb.append("    monthlyCostsDifference: ").append(toIndentedString(monthlyCostsDifference)).append("\n");
    sb.append("    planedYearlyCosts: ").append(toIndentedString(planedYearlyCosts)).append("\n");
    sb.append("    realYearlyCosts: ").append(toIndentedString(realYearlyCosts)).append("\n");
    sb.append("    yearlyCostsDifference: ").append(toIndentedString(yearlyCostsDifference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

