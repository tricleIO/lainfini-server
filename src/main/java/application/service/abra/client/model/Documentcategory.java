/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Documentcategory
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Documentcategory   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("busorder_id")
  private String busorderId = null;

  @SerializedName("busorderusage")
  private Integer busorderusage = null;

  @SerializedName("busproject_id")
  private String busprojectId = null;

  @SerializedName("busprojectusage")
  private Integer busprojectusage = null;

  @SerializedName("bustransaction_id")
  private String bustransactionId = null;

  @SerializedName("bustransactionusage")
  private Integer bustransactionusage = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("compresscontent")
  private Boolean compresscontent = null;

  @SerializedName("division_id")
  private String divisionId = null;

  @SerializedName("divisionusage")
  private Integer divisionusage = null;

  @SerializedName("driverid")
  private String driverid = null;

  @SerializedName("driverparams")
  private byte[] driverparams = null;

  @SerializedName("filenamemask")
  private String filenamemask = null;

  @SerializedName("firm_id")
  private String firmId = null;

  @SerializedName("maxsize")
  private Integer maxsize = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("processingtype")
  private Integer processingtype = null;

  @SerializedName("processingtypename")
  private String processingtypename = null;

  @SerializedName("purpose")
  private Integer purpose = null;

  @SerializedName("purposename")
  private String purposename = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("maskisregex")
  private Boolean maskisregex = null;

  @SerializedName("participants")
  private List<Defaultdocumentparticipant> participants = new ArrayList<Defaultdocumentparticipant>();

  @SerializedName("docqueues")
  private List<Documentdocqueue> docqueues = new ArrayList<Documentdocqueue>();

  @SerializedName("defaultcompetence")
  private Integer defaultcompetence = null;

  @SerializedName("addasparticipant")
  private Boolean addasparticipant = null;

  @SerializedName("lockingmode")
  private Integer lockingmode = null;

  @SerializedName("lockingmodestr")
  private String lockingmodestr = null;

  public Documentcategory displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Documentcategory id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Documentcategory classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Documentcategory objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Documentcategory busorderId(String busorderId) {
    this.busorderId = busorderId;
    return this;
  }

   /**
   * zakázka; id objektu zakázka [persistentní položka]
   * @return busorderId
  **/
  @ApiModelProperty(example = "null", value = "zakázka; id objektu zakázka [persistentní položka]")
  public String getBusorderId() {
    return busorderId;
  }

  public void setBusorderId(String busorderId) {
    this.busorderId = busorderId;
  }

  public Documentcategory busorderusage(Integer busorderusage) {
    this.busorderusage = busorderusage;
    return this;
  }

   /**
   * způsob použití zakázky [persistentní položka]
   * @return busorderusage
  **/
  @ApiModelProperty(example = "null", value = "způsob použití zakázky [persistentní položka]")
  public Integer getBusorderusage() {
    return busorderusage;
  }

  public void setBusorderusage(Integer busorderusage) {
    this.busorderusage = busorderusage;
  }

  public Documentcategory busprojectId(String busprojectId) {
    this.busprojectId = busprojectId;
    return this;
  }

   /**
   * projekt; id objektu projekt [persistentní položka]
   * @return busprojectId
  **/
  @ApiModelProperty(example = "null", value = "projekt; id objektu projekt [persistentní položka]")
  public String getBusprojectId() {
    return busprojectId;
  }

  public void setBusprojectId(String busprojectId) {
    this.busprojectId = busprojectId;
  }

  public Documentcategory busprojectusage(Integer busprojectusage) {
    this.busprojectusage = busprojectusage;
    return this;
  }

   /**
   * způsob použití projektu [persistentní položka]
   * @return busprojectusage
  **/
  @ApiModelProperty(example = "null", value = "způsob použití projektu [persistentní položka]")
  public Integer getBusprojectusage() {
    return busprojectusage;
  }

  public void setBusprojectusage(Integer busprojectusage) {
    this.busprojectusage = busprojectusage;
  }

  public Documentcategory bustransactionId(String bustransactionId) {
    this.bustransactionId = bustransactionId;
    return this;
  }

   /**
   * obch. případ; id objektu obchodní případ [persistentní položka]
   * @return bustransactionId
  **/
  @ApiModelProperty(example = "null", value = "obch. případ; id objektu obchodní případ [persistentní položka]")
  public String getBustransactionId() {
    return bustransactionId;
  }

  public void setBustransactionId(String bustransactionId) {
    this.bustransactionId = bustransactionId;
  }

  public Documentcategory bustransactionusage(Integer bustransactionusage) {
    this.bustransactionusage = bustransactionusage;
    return this;
  }

   /**
   * způsob použití obch. případu [persistentní položka]
   * @return bustransactionusage
  **/
  @ApiModelProperty(example = "null", value = "způsob použití obch. případu [persistentní položka]")
  public Integer getBustransactionusage() {
    return bustransactionusage;
  }

  public void setBustransactionusage(Integer bustransactionusage) {
    this.bustransactionusage = bustransactionusage;
  }

  public Documentcategory code(String code) {
    this.code = code;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Documentcategory compresscontent(Boolean compresscontent) {
    this.compresscontent = compresscontent;
    return this;
  }

   /**
   * komprimovat [persistentní položka]
   * @return compresscontent
  **/
  @ApiModelProperty(example = "null", value = "komprimovat [persistentní položka]")
  public Boolean getCompresscontent() {
    return compresscontent;
  }

  public void setCompresscontent(Boolean compresscontent) {
    this.compresscontent = compresscontent;
  }

  public Documentcategory divisionId(String divisionId) {
    this.divisionId = divisionId;
    return this;
  }

   /**
   * středisko; id objektu středisko [persistentní položka]
   * @return divisionId
  **/
  @ApiModelProperty(example = "null", value = "středisko; id objektu středisko [persistentní položka]")
  public String getDivisionId() {
    return divisionId;
  }

  public void setDivisionId(String divisionId) {
    this.divisionId = divisionId;
  }

  public Documentcategory divisionusage(Integer divisionusage) {
    this.divisionusage = divisionusage;
    return this;
  }

   /**
   * způsob použití střediska [persistentní položka]
   * @return divisionusage
  **/
  @ApiModelProperty(example = "null", value = "způsob použití střediska [persistentní položka]")
  public Integer getDivisionusage() {
    return divisionusage;
  }

  public void setDivisionusage(Integer divisionusage) {
    this.divisionusage = divisionusage;
  }

  public Documentcategory driverid(String driverid) {
    this.driverid = driverid;
    return this;
  }

   /**
   * id ovladače [persistentní položka]
   * @return driverid
  **/
  @ApiModelProperty(example = "null", value = "id ovladače [persistentní položka]")
  public String getDriverid() {
    return driverid;
  }

  public void setDriverid(String driverid) {
    this.driverid = driverid;
  }

  public Documentcategory driverparams(byte[] driverparams) {
    this.driverparams = driverparams;
    return this;
  }

   /**
   * parametry ovladače [persistentní položka]
   * @return driverparams
  **/
  @ApiModelProperty(example = "null", value = "parametry ovladače [persistentní položka]")
  public byte[] getDriverparams() {
    return driverparams;
  }

  public void setDriverparams(byte[] driverparams) {
    this.driverparams = driverparams;
  }

  public Documentcategory filenamemask(String filenamemask) {
    this.filenamemask = filenamemask;
    return this;
  }

   /**
   * maska souboru [persistentní položka]
   * @return filenamemask
  **/
  @ApiModelProperty(example = "null", value = "maska souboru [persistentní položka]")
  public String getFilenamemask() {
    return filenamemask;
  }

  public void setFilenamemask(String filenamemask) {
    this.filenamemask = filenamemask;
  }

  public Documentcategory firmId(String firmId) {
    this.firmId = firmId;
    return this;
  }

   /**
   * firma; id objektu firma [persistentní položka]
   * @return firmId
  **/
  @ApiModelProperty(example = "null", value = "firma; id objektu firma [persistentní položka]")
  public String getFirmId() {
    return firmId;
  }

  public void setFirmId(String firmId) {
    this.firmId = firmId;
  }

  public Documentcategory maxsize(Integer maxsize) {
    this.maxsize = maxsize;
    return this;
  }

   /**
   * max. velikost souborů [persistentní položka]
   * @return maxsize
  **/
  @ApiModelProperty(example = "null", value = "max. velikost souborů [persistentní položka]")
  public Integer getMaxsize() {
    return maxsize;
  }

  public void setMaxsize(Integer maxsize) {
    this.maxsize = maxsize;
  }

  public Documentcategory name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Documentcategory processingtype(Integer processingtype) {
    this.processingtype = processingtype;
    return this;
  }

   /**
   * způsob zpracování [persistentní položka]
   * @return processingtype
  **/
  @ApiModelProperty(example = "null", value = "způsob zpracování [persistentní položka]")
  public Integer getProcessingtype() {
    return processingtype;
  }

  public void setProcessingtype(Integer processingtype) {
    this.processingtype = processingtype;
  }

  public Documentcategory processingtypename(String processingtypename) {
    this.processingtypename = processingtypename;
    return this;
  }

   /**
   * způsob zpracování (název)
   * @return processingtypename
  **/
  @ApiModelProperty(example = "null", value = "způsob zpracování (název)")
  public String getProcessingtypename() {
    return processingtypename;
  }

  public void setProcessingtypename(String processingtypename) {
    this.processingtypename = processingtypename;
  }

  public Documentcategory purpose(Integer purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Účel dokladu [persistentní položka]
   * @return purpose
  **/
  @ApiModelProperty(example = "null", value = "Účel dokladu [persistentní položka]")
  public Integer getPurpose() {
    return purpose;
  }

  public void setPurpose(Integer purpose) {
    this.purpose = purpose;
  }

  public Documentcategory purposename(String purposename) {
    this.purposename = purposename;
    return this;
  }

   /**
   * Účel dokladu
   * @return purposename
  **/
  @ApiModelProperty(example = "null", value = "Účel dokladu")
  public String getPurposename() {
    return purposename;
  }

  public void setPurposename(String purposename) {
    this.purposename = purposename;
  }

  public Documentcategory hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Documentcategory maskisregex(Boolean maskisregex) {
    this.maskisregex = maskisregex;
    return this;
  }

   /**
   * regulární výraz [persistentní položka]
   * @return maskisregex
  **/
  @ApiModelProperty(example = "null", value = "regulární výraz [persistentní položka]")
  public Boolean getMaskisregex() {
    return maskisregex;
  }

  public void setMaskisregex(Boolean maskisregex) {
    this.maskisregex = maskisregex;
  }

  public Documentcategory participants(List<Defaultdocumentparticipant> participants) {
    this.participants = participants;
    return this;
  }

  public Documentcategory addParticipantsItem(Defaultdocumentparticipant participantsItem) {
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Účastníci; kolekce bo výchozí účastník dokumentu [nepersistentní položka]
   * @return participants
  **/
  @ApiModelProperty(example = "null", value = "Účastníci; kolekce bo výchozí účastník dokumentu [nepersistentní položka]")
  public List<Defaultdocumentparticipant> getParticipants() {
    return participants;
  }

  public void setParticipants(List<Defaultdocumentparticipant> participants) {
    this.participants = participants;
  }

  public Documentcategory docqueues(List<Documentdocqueue> docqueues) {
    this.docqueues = docqueues;
    return this;
  }

  public Documentcategory addDocqueuesItem(Documentdocqueue docqueuesItem) {
    this.docqueues.add(docqueuesItem);
    return this;
  }

   /**
   * Řady dokladů; kolekce bo Řada dokladů pro dokumenty [nepersistentní položka]
   * @return docqueues
  **/
  @ApiModelProperty(example = "null", value = "Řady dokladů; kolekce bo Řada dokladů pro dokumenty [nepersistentní položka]")
  public List<Documentdocqueue> getDocqueues() {
    return docqueues;
  }

  public void setDocqueues(List<Documentdocqueue> docqueues) {
    this.docqueues = docqueues;
  }

  public Documentcategory defaultcompetence(Integer defaultcompetence) {
    this.defaultcompetence = defaultcompetence;
    return this;
  }

   /**
   * výchozí oprávnění [persistentní položka]
   * @return defaultcompetence
  **/
  @ApiModelProperty(example = "null", value = "výchozí oprávnění [persistentní položka]")
  public Integer getDefaultcompetence() {
    return defaultcompetence;
  }

  public void setDefaultcompetence(Integer defaultcompetence) {
    this.defaultcompetence = defaultcompetence;
  }

  public Documentcategory addasparticipant(Boolean addasparticipant) {
    this.addasparticipant = addasparticipant;
    return this;
  }

   /**
   * automaticky přidat mezi účastníky [persistentní položka]
   * @return addasparticipant
  **/
  @ApiModelProperty(example = "null", value = "automaticky přidat mezi účastníky [persistentní položka]")
  public Boolean getAddasparticipant() {
    return addasparticipant;
  }

  public void setAddasparticipant(Boolean addasparticipant) {
    this.addasparticipant = addasparticipant;
  }

  public Documentcategory lockingmode(Integer lockingmode) {
    this.lockingmode = lockingmode;
    return this;
  }

   /**
   * způsob zamykání dokumentů [persistentní položka]
   * @return lockingmode
  **/
  @ApiModelProperty(example = "null", value = "způsob zamykání dokumentů [persistentní položka]")
  public Integer getLockingmode() {
    return lockingmode;
  }

  public void setLockingmode(Integer lockingmode) {
    this.lockingmode = lockingmode;
  }

  public Documentcategory lockingmodestr(String lockingmodestr) {
    this.lockingmodestr = lockingmodestr;
    return this;
  }

   /**
   * způsob zamykání dokumentů
   * @return lockingmodestr
  **/
  @ApiModelProperty(example = "null", value = "způsob zamykání dokumentů")
  public String getLockingmodestr() {
    return lockingmodestr;
  }

  public void setLockingmodestr(String lockingmodestr) {
    this.lockingmodestr = lockingmodestr;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Documentcategory documentcategory = (Documentcategory) o;
    return Objects.equals(this.displayname, documentcategory.displayname) &&
        Objects.equals(this.id, documentcategory.id) &&
        Objects.equals(this.classid, documentcategory.classid) &&
        Objects.equals(this.objversion, documentcategory.objversion) &&
        Objects.equals(this.busorderId, documentcategory.busorderId) &&
        Objects.equals(this.busorderusage, documentcategory.busorderusage) &&
        Objects.equals(this.busprojectId, documentcategory.busprojectId) &&
        Objects.equals(this.busprojectusage, documentcategory.busprojectusage) &&
        Objects.equals(this.bustransactionId, documentcategory.bustransactionId) &&
        Objects.equals(this.bustransactionusage, documentcategory.bustransactionusage) &&
        Objects.equals(this.code, documentcategory.code) &&
        Objects.equals(this.compresscontent, documentcategory.compresscontent) &&
        Objects.equals(this.divisionId, documentcategory.divisionId) &&
        Objects.equals(this.divisionusage, documentcategory.divisionusage) &&
        Objects.equals(this.driverid, documentcategory.driverid) &&
        Objects.equals(this.driverparams, documentcategory.driverparams) &&
        Objects.equals(this.filenamemask, documentcategory.filenamemask) &&
        Objects.equals(this.firmId, documentcategory.firmId) &&
        Objects.equals(this.maxsize, documentcategory.maxsize) &&
        Objects.equals(this.name, documentcategory.name) &&
        Objects.equals(this.processingtype, documentcategory.processingtype) &&
        Objects.equals(this.processingtypename, documentcategory.processingtypename) &&
        Objects.equals(this.purpose, documentcategory.purpose) &&
        Objects.equals(this.purposename, documentcategory.purposename) &&
        Objects.equals(this.hidden, documentcategory.hidden) &&
        Objects.equals(this.maskisregex, documentcategory.maskisregex) &&
        Objects.equals(this.participants, documentcategory.participants) &&
        Objects.equals(this.docqueues, documentcategory.docqueues) &&
        Objects.equals(this.defaultcompetence, documentcategory.defaultcompetence) &&
        Objects.equals(this.addasparticipant, documentcategory.addasparticipant) &&
        Objects.equals(this.lockingmode, documentcategory.lockingmode) &&
        Objects.equals(this.lockingmodestr, documentcategory.lockingmodestr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, busorderId, busorderusage, busprojectId, busprojectusage, bustransactionId, bustransactionusage, code, compresscontent, divisionId, divisionusage, driverid, driverparams, filenamemask, firmId, maxsize, name, processingtype, processingtypename, purpose, purposename, hidden, maskisregex, participants, docqueues, defaultcompetence, addasparticipant, lockingmode, lockingmodestr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Documentcategory {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    busorderId: ").append(toIndentedString(busorderId)).append("\n");
    sb.append("    busorderusage: ").append(toIndentedString(busorderusage)).append("\n");
    sb.append("    busprojectId: ").append(toIndentedString(busprojectId)).append("\n");
    sb.append("    busprojectusage: ").append(toIndentedString(busprojectusage)).append("\n");
    sb.append("    bustransactionId: ").append(toIndentedString(bustransactionId)).append("\n");
    sb.append("    bustransactionusage: ").append(toIndentedString(bustransactionusage)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    compresscontent: ").append(toIndentedString(compresscontent)).append("\n");
    sb.append("    divisionId: ").append(toIndentedString(divisionId)).append("\n");
    sb.append("    divisionusage: ").append(toIndentedString(divisionusage)).append("\n");
    sb.append("    driverid: ").append(toIndentedString(driverid)).append("\n");
    sb.append("    driverparams: ").append(toIndentedString(driverparams)).append("\n");
    sb.append("    filenamemask: ").append(toIndentedString(filenamemask)).append("\n");
    sb.append("    firmId: ").append(toIndentedString(firmId)).append("\n");
    sb.append("    maxsize: ").append(toIndentedString(maxsize)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    processingtype: ").append(toIndentedString(processingtype)).append("\n");
    sb.append("    processingtypename: ").append(toIndentedString(processingtypename)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    purposename: ").append(toIndentedString(purposename)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    maskisregex: ").append(toIndentedString(maskisregex)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    docqueues: ").append(toIndentedString(docqueues)).append("\n");
    sb.append("    defaultcompetence: ").append(toIndentedString(defaultcompetence)).append("\n");
    sb.append("    addasparticipant: ").append(toIndentedString(addasparticipant)).append("\n");
    sb.append("    lockingmode: ").append(toIndentedString(lockingmode)).append("\n");
    sb.append("    lockingmodestr: ").append(toIndentedString(lockingmodestr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

