/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Approvedsupplierscore
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Approvedsupplierscore   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("EvaluationCriterion_ID")
  private String evaluationCriterionID = null;

  @SerializedName("CreatedDate$DATE")
  private DateTime createdDateDATE = null;

  @SerializedName("Frequency")
  private Integer frequency = null;

  @SerializedName("OrderNumber")
  private Integer orderNumber = null;

  @SerializedName("InYear")
  private Integer inYear = null;

  @SerializedName("EvaluatedFromDate$DATE")
  private DateTime evaluatedFromDateDATE = null;

  @SerializedName("EvaluatedToDate$DATE")
  private DateTime evaluatedToDateDATE = null;

  @SerializedName("CalculatedScore")
  private Integer calculatedScore = null;

  @SerializedName("Score")
  private Integer score = null;

  @SerializedName("Takeover")
  private Boolean takeover = null;

  @SerializedName("PeriodText")
  private String periodText = null;

  @SerializedName("Satisfactory")
  private Boolean satisfactory = null;

  @SerializedName("PercentScore")
  private Double percentScore = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Hodnocený dodavatel [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Hodnocený dodavatel [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Approvedsupplierscore evaluationCriterionID(String evaluationCriterionID) {
    this.evaluationCriterionID = evaluationCriterionID;
    return this;
  }

   /**
   * Hodnotící kritérium; ID objektu Hodnotící kritérium [persistentní položka]
   * @return evaluationCriterionID
  **/
  @ApiModelProperty(example = "null", value = "Hodnotící kritérium; ID objektu Hodnotící kritérium [persistentní položka]")
  public String getEvaluationCriterionID() {
    return evaluationCriterionID;
  }

  public void setEvaluationCriterionID(String evaluationCriterionID) {
    this.evaluationCriterionID = evaluationCriterionID;
  }

  public Approvedsupplierscore createdDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
    return this;
  }

   /**
   * Datum známkování [persistentní položka]
   * @return createdDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum známkování [persistentní položka]")
  public DateTime getCreatedDateDATE() {
    return createdDateDATE;
  }

  public void setCreatedDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
  }

  public Approvedsupplierscore frequency(Integer frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Časový typ hodnocení [persistentní položka]
   * @return frequency
  **/
  @ApiModelProperty(example = "null", value = "Časový typ hodnocení [persistentní položka]")
  public Integer getFrequency() {
    return frequency;
  }

  public void setFrequency(Integer frequency) {
    this.frequency = frequency;
  }

  public Approvedsupplierscore orderNumber(Integer orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Pořadové číslo období [persistentní položka]
   * @return orderNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo období [persistentní položka]")
  public Integer getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(Integer orderNumber) {
    this.orderNumber = orderNumber;
  }

  public Approvedsupplierscore inYear(Integer inYear) {
    this.inYear = inYear;
    return this;
  }

   /**
   * Rok [persistentní položka]
   * @return inYear
  **/
  @ApiModelProperty(example = "null", value = "Rok [persistentní položka]")
  public Integer getInYear() {
    return inYear;
  }

  public void setInYear(Integer inYear) {
    this.inYear = inYear;
  }

  public Approvedsupplierscore evaluatedFromDateDATE(DateTime evaluatedFromDateDATE) {
    this.evaluatedFromDateDATE = evaluatedFromDateDATE;
    return this;
  }

   /**
   * Spodní datum vyhodnocovaného období [persistentní položka]
   * @return evaluatedFromDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Spodní datum vyhodnocovaného období [persistentní položka]")
  public DateTime getEvaluatedFromDateDATE() {
    return evaluatedFromDateDATE;
  }

  public void setEvaluatedFromDateDATE(DateTime evaluatedFromDateDATE) {
    this.evaluatedFromDateDATE = evaluatedFromDateDATE;
  }

  public Approvedsupplierscore evaluatedToDateDATE(DateTime evaluatedToDateDATE) {
    this.evaluatedToDateDATE = evaluatedToDateDATE;
    return this;
  }

   /**
   * Horní datum vyhodnocovaného období [persistentní položka]
   * @return evaluatedToDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Horní datum vyhodnocovaného období [persistentní položka]")
  public DateTime getEvaluatedToDateDATE() {
    return evaluatedToDateDATE;
  }

  public void setEvaluatedToDateDATE(DateTime evaluatedToDateDATE) {
    this.evaluatedToDateDATE = evaluatedToDateDATE;
  }

  public Approvedsupplierscore calculatedScore(Integer calculatedScore) {
    this.calculatedScore = calculatedScore;
    return this;
  }

   /**
   * Vypočtený počet bodů [persistentní položka]
   * @return calculatedScore
  **/
  @ApiModelProperty(example = "null", value = "Vypočtený počet bodů [persistentní položka]")
  public Integer getCalculatedScore() {
    return calculatedScore;
  }

  public void setCalculatedScore(Integer calculatedScore) {
    this.calculatedScore = calculatedScore;
  }

  public Approvedsupplierscore score(Integer score) {
    this.score = score;
    return this;
  }

   /**
   * Počet bodů [persistentní položka]
   * @return score
  **/
  @ApiModelProperty(example = "null", value = "Počet bodů [persistentní položka]")
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }

  public Approvedsupplierscore takeover(Boolean takeover) {
    this.takeover = takeover;
    return this;
  }

   /**
   * Převzato [persistentní položka]
   * @return takeover
  **/
  @ApiModelProperty(example = "null", value = "Převzato [persistentní položka]")
  public Boolean getTakeover() {
    return takeover;
  }

  public void setTakeover(Boolean takeover) {
    this.takeover = takeover;
  }

  public Approvedsupplierscore periodText(String periodText) {
    this.periodText = periodText;
    return this;
  }

   /**
   * Období
   * @return periodText
  **/
  @ApiModelProperty(example = "null", value = "Období")
  public String getPeriodText() {
    return periodText;
  }

  public void setPeriodText(String periodText) {
    this.periodText = periodText;
  }

  public Approvedsupplierscore satisfactory(Boolean satisfactory) {
    this.satisfactory = satisfactory;
    return this;
  }

   /**
   * Vyhovuje
   * @return satisfactory
  **/
  @ApiModelProperty(example = "null", value = "Vyhovuje")
  public Boolean getSatisfactory() {
    return satisfactory;
  }

  public void setSatisfactory(Boolean satisfactory) {
    this.satisfactory = satisfactory;
  }

  public Approvedsupplierscore percentScore(Double percentScore) {
    this.percentScore = percentScore;
    return this;
  }

   /**
   * Procentní hodnocení
   * @return percentScore
  **/
  @ApiModelProperty(example = "null", value = "Procentní hodnocení")
  public Double getPercentScore() {
    return percentScore;
  }

  public void setPercentScore(Double percentScore) {
    this.percentScore = percentScore;
  }

  public Approvedsupplierscore createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Approvedsupplierscore correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Approvedsupplierscore approvedsupplierscore = (Approvedsupplierscore) o;
    return Objects.equals(this.displayName, approvedsupplierscore.displayName) &&
        Objects.equals(this.ID, approvedsupplierscore.ID) &&
        Objects.equals(this.classID, approvedsupplierscore.classID) &&
        Objects.equals(this.objVersion, approvedsupplierscore.objVersion) &&
        Objects.equals(this.parentID, approvedsupplierscore.parentID) &&
        Objects.equals(this.evaluationCriterionID, approvedsupplierscore.evaluationCriterionID) &&
        Objects.equals(this.createdDateDATE, approvedsupplierscore.createdDateDATE) &&
        Objects.equals(this.frequency, approvedsupplierscore.frequency) &&
        Objects.equals(this.orderNumber, approvedsupplierscore.orderNumber) &&
        Objects.equals(this.inYear, approvedsupplierscore.inYear) &&
        Objects.equals(this.evaluatedFromDateDATE, approvedsupplierscore.evaluatedFromDateDATE) &&
        Objects.equals(this.evaluatedToDateDATE, approvedsupplierscore.evaluatedToDateDATE) &&
        Objects.equals(this.calculatedScore, approvedsupplierscore.calculatedScore) &&
        Objects.equals(this.score, approvedsupplierscore.score) &&
        Objects.equals(this.takeover, approvedsupplierscore.takeover) &&
        Objects.equals(this.periodText, approvedsupplierscore.periodText) &&
        Objects.equals(this.satisfactory, approvedsupplierscore.satisfactory) &&
        Objects.equals(this.percentScore, approvedsupplierscore.percentScore) &&
        Objects.equals(this.createdByID, approvedsupplierscore.createdByID) &&
        Objects.equals(this.correctedByID, approvedsupplierscore.correctedByID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, evaluationCriterionID, createdDateDATE, frequency, orderNumber, inYear, evaluatedFromDateDATE, evaluatedToDateDATE, calculatedScore, score, takeover, periodText, satisfactory, percentScore, createdByID, correctedByID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Approvedsupplierscore {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    evaluationCriterionID: ").append(toIndentedString(evaluationCriterionID)).append("\n");
    sb.append("    createdDateDATE: ").append(toIndentedString(createdDateDATE)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    inYear: ").append(toIndentedString(inYear)).append("\n");
    sb.append("    evaluatedFromDateDATE: ").append(toIndentedString(evaluatedFromDateDATE)).append("\n");
    sb.append("    evaluatedToDateDATE: ").append(toIndentedString(evaluatedToDateDATE)).append("\n");
    sb.append("    calculatedScore: ").append(toIndentedString(calculatedScore)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    takeover: ").append(toIndentedString(takeover)).append("\n");
    sb.append("    periodText: ").append(toIndentedString(periodText)).append("\n");
    sb.append("    satisfactory: ").append(toIndentedString(satisfactory)).append("\n");
    sb.append("    percentScore: ").append(toIndentedString(percentScore)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

