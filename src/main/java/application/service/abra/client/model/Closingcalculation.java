/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Closingcalculation
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Closingcalculation   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Notpositionedrowbusinessobject> rows = new ArrayList<Notpositionedrowbusinessobject>();

  @SerializedName("calccharts")
  private List<Calcclosingchartlist> calccharts = new ArrayList<Calcclosingchartlist>();

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("wageperiod_id")
  private String wageperiodId = null;

  @SerializedName("employee_id")
  private String employeeId = null;

  @SerializedName("workingrelation_id")
  private String workingrelationId = null;

  @SerializedName("dock_id")
  private String dockId = null;

  @SerializedName("supresswlist")
  private Integer supresswlist = null;

  public Closingcalculation displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Closingcalculation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Closingcalculation classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Closingcalculation objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Closingcalculation rows(List<Notpositionedrowbusinessobject> rows) {
    this.rows = rows;
    return this;
  }

  public Closingcalculation addRowsItem(Notpositionedrowbusinessobject rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo Řádek bez pořadí [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo Řádek bez pořadí [nepersistentní položka]")
  public List<Notpositionedrowbusinessobject> getRows() {
    return rows;
  }

  public void setRows(List<Notpositionedrowbusinessobject> rows) {
    this.rows = rows;
  }

  public Closingcalculation calccharts(List<Calcclosingchartlist> calccharts) {
    this.calccharts = calccharts;
    return this;
  }

  public Closingcalculation addCalcchartsItem(Calcclosingchartlist calcchartsItem) {
    this.calccharts.add(calcchartsItem);
    return this;
  }

   /**
   * výpočtová schémata; kolekce bo schéma pro výpočet uzávěrky [nepersistentní položka]
   * @return calccharts
  **/
  @ApiModelProperty(example = "null", value = "výpočtová schémata; kolekce bo schéma pro výpočet uzávěrky [nepersistentní položka]")
  public List<Calcclosingchartlist> getCalccharts() {
    return calccharts;
  }

  public void setCalccharts(List<Calcclosingchartlist> calccharts) {
    this.calccharts = calccharts;
  }

  public Closingcalculation amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Closingcalculation wageperiodId(String wageperiodId) {
    this.wageperiodId = wageperiodId;
    return this;
  }

   /**
   * mzdové období; id objektu mzdové období
   * @return wageperiodId
  **/
  @ApiModelProperty(example = "null", value = "mzdové období; id objektu mzdové období")
  public String getWageperiodId() {
    return wageperiodId;
  }

  public void setWageperiodId(String wageperiodId) {
    this.wageperiodId = wageperiodId;
  }

  public Closingcalculation employeeId(String employeeId) {
    this.employeeId = employeeId;
    return this;
  }

   /**
   * zaměstnanec; id objektu zaměstnanec
   * @return employeeId
  **/
  @ApiModelProperty(example = "null", value = "zaměstnanec; id objektu zaměstnanec")
  public String getEmployeeId() {
    return employeeId;
  }

  public void setEmployeeId(String employeeId) {
    this.employeeId = employeeId;
  }

  public Closingcalculation workingrelationId(String workingrelationId) {
    this.workingrelationId = workingrelationId;
    return this;
  }

   /**
   * pracovní poměr; id objektu pracovní poměr
   * @return workingrelationId
  **/
  @ApiModelProperty(example = "null", value = "pracovní poměr; id objektu pracovní poměr")
  public String getWorkingrelationId() {
    return workingrelationId;
  }

  public void setWorkingrelationId(String workingrelationId) {
    this.workingrelationId = workingrelationId;
  }

  public Closingcalculation dockId(String dockId) {
    this.dockId = dockId;
    return this;
  }

   /**
   * srážka; id objektu srážka [persistentní položka]
   * @return dockId
  **/
  @ApiModelProperty(example = "null", value = "srážka; id objektu srážka [persistentní položka]")
  public String getDockId() {
    return dockId;
  }

  public void setDockId(String dockId) {
    this.dockId = dockId;
  }

  public Closingcalculation supresswlist(Integer supresswlist) {
    this.supresswlist = supresswlist;
    return this;
  }

   /**
   * zpracovávaný objekt
   * @return supresswlist
  **/
  @ApiModelProperty(example = "null", value = "zpracovávaný objekt")
  public Integer getSupresswlist() {
    return supresswlist;
  }

  public void setSupresswlist(Integer supresswlist) {
    this.supresswlist = supresswlist;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Closingcalculation closingcalculation = (Closingcalculation) o;
    return Objects.equals(this.displayname, closingcalculation.displayname) &&
        Objects.equals(this.id, closingcalculation.id) &&
        Objects.equals(this.classid, closingcalculation.classid) &&
        Objects.equals(this.objversion, closingcalculation.objversion) &&
        Objects.equals(this.rows, closingcalculation.rows) &&
        Objects.equals(this.calccharts, closingcalculation.calccharts) &&
        Objects.equals(this.amount, closingcalculation.amount) &&
        Objects.equals(this.wageperiodId, closingcalculation.wageperiodId) &&
        Objects.equals(this.employeeId, closingcalculation.employeeId) &&
        Objects.equals(this.workingrelationId, closingcalculation.workingrelationId) &&
        Objects.equals(this.dockId, closingcalculation.dockId) &&
        Objects.equals(this.supresswlist, closingcalculation.supresswlist);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, calccharts, amount, wageperiodId, employeeId, workingrelationId, dockId, supresswlist);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Closingcalculation {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    calccharts: ").append(toIndentedString(calccharts)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    wageperiodId: ").append(toIndentedString(wageperiodId)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    workingrelationId: ").append(toIndentedString(workingrelationId)).append("\n");
    sb.append("    dockId: ").append(toIndentedString(dockId)).append("\n");
    sb.append("    supresswlist: ").append(toIndentedString(supresswlist)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

