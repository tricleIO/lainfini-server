/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Wagelistcommon
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Wagelistcommon   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("CalcCharts")
  private List<Calcwlistcommon> calcCharts = new ArrayList<Calcwlistcommon>();

  @SerializedName("IsComputed")
  private Boolean isComputed = null;

  @SerializedName("WagePeriod_ID")
  private String wagePeriodID = null;

  @SerializedName("Employee_ID")
  private String employeeID = null;

  @SerializedName("ExpenseCompensation")
  private List<Expensecompensation> expenseCompensation = new ArrayList<Expensecompensation>();

  @SerializedName("AnnualClearing")
  private Double annualClearing = null;

  @SerializedName("YearTaxBonus")
  private Double yearTaxBonus = null;

  @SerializedName("WageRestOtherCurr")
  private Double wageRestOtherCurr = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("CurrRate")
  private Double currRate = null;

  @SerializedName("RefCurrRate")
  private Double refCurrRate = null;

  @SerializedName("Coef")
  private Integer coef = null;

  @SerializedName("LocalCoef")
  private Integer localCoef = null;

  @SerializedName("Zone_ID")
  private String zoneID = null;

  @SerializedName("LocalZone_ID")
  private String localZoneID = null;

  @SerializedName("CurrAmount")
  private Double currAmount = null;

  @SerializedName("ExtraTaxTotal")
  private Double extraTaxTotal = null;

  @SerializedName("DepositTaxTotal")
  private Double depositTaxTotal = null;

  @SerializedName("SocialInsEmployee")
  private Double socialInsEmployee = null;

  @SerializedName("HealthInsEmployee")
  private Double healthInsEmployee = null;

  @SerializedName("GrossWageTotal")
  private Double grossWageTotal = null;

  @SerializedName("RefCurrency_ID")
  private String refCurrencyID = null;

  @SerializedName("LocalRefCurrency_ID")
  private String localRefCurrencyID = null;

  @SerializedName("WageListFrom")
  private DateTime wageListFrom = null;

  @SerializedName("WageListTo")
  private DateTime wageListTo = null;

  @SerializedName("MainWorkingRelationOID")
  private String mainWorkingRelationOID = null;

  @SerializedName("NetWage")
  private Double netWage = null;

  @SerializedName("MainWRelationWListPartial_ID")
  private String mainWRelationWListPartialID = null;

  @SerializedName("HIAnnualClearingEmp")
  private Double hIAnnualClearingEmp = null;

  @SerializedName("HIAnnualClearingComp")
  private Double hIAnnualClearingComp = null;

  @SerializedName("YearEmployeePremium")
  private Double yearEmployeePremium = null;

  @SerializedName("NotPaySocIns")
  private Integer notPaySocIns = null;

  @SerializedName("NotPayHealthIns")
  private Integer notPayHealthIns = null;

  @SerializedName("S_UnpaidFreeCalTotal")
  private Double sUnpaidFreeCalTotal = null;

  @SerializedName("S_HealthInsBaseAbsences")
  private Double sHealthInsBaseAbsences = null;

  @SerializedName("S_HealthInsBaseUnpaidFree")
  private Double sHealthInsBaseUnpaidFree = null;

  @SerializedName("S_HealthInsUnpaidFreeDays")
  private Double sHealthInsUnpaidFreeDays = null;

  @SerializedName("S_HealthInsUnpaidFreeDaysTotal")
  private Double sHealthInsUnpaidFreeDaysTotal = null;

  @SerializedName("S_HealthInsAbsences")
  private Double sHealthInsAbsences = null;

  @SerializedName("S_HealthInsUnpaidFreeDock")
  private Double sHealthInsUnpaidFreeDock = null;

  @SerializedName("S_HealthInsBaseTotal")
  private Double sHealthInsBaseTotal = null;

  @SerializedName("S_HealthInsMinBase")
  private Double sHealthInsMinBase = null;

  @SerializedName("S_HealthInsMinBaseTotal")
  private Double sHealthInsMinBaseTotal = null;

  @SerializedName("S_HealthInsBaseCorrect")
  private Double sHealthInsBaseCorrect = null;

  @SerializedName("S_HealthInsTotal")
  private Double sHealthInsTotal = null;

  @SerializedName("S_HealthInsCompany")
  private Double sHealthInsCompany = null;

  @SerializedName("S_SocialInsBase")
  private Double sSocialInsBase = null;

  @SerializedName("S_RetFundAmount")
  private Double sRetFundAmount = null;

  @SerializedName("S_RetFundTaxBase")
  private Double sRetFundTaxBase = null;

  @SerializedName("S_RetFundTaxExpense")
  private Double sRetFundTaxExpense = null;

  @SerializedName("S_RetFundSocialExpense")
  private Double sRetFundSocialExpense = null;

  @SerializedName("S_LifeInsAmount")
  private Double sLifeInsAmount = null;

  @SerializedName("S_LifeInsTaxBase")
  private Double sLifeInsTaxBase = null;

  @SerializedName("S_LifeInsTaxExpense")
  private Double sLifeInsTaxExpense = null;

  @SerializedName("S_LifeInsSocialExpense")
  private Double sLifeInsSocialExpense = null;

  @SerializedName("S_DutyCar")
  private Double sDutyCar = null;

  @SerializedName("S_DutyCarTotal")
  private Double sDutyCarTotal = null;

  @SerializedName("S_Rent")
  private Double sRent = null;

  @SerializedName("S_RentTotal")
  private Double sRentTotal = null;

  @SerializedName("S_InventionReward")
  private Double sInventionReward = null;

  @SerializedName("S_TaxableIncome")
  private Double sTaxableIncome = null;

  @SerializedName("S_SmartMoney")
  private Double sSmartMoney = null;

  @SerializedName("S_TravelCompTotal")
  private Double sTravelCompTotal = null;

  @SerializedName("S_FlatTravelComp")
  private Double sFlatTravelComp = null;

  @SerializedName("S_OtherTaxFreeComp")
  private Double sOtherTaxFreeComp = null;

  @SerializedName("S_ExpenseCompTotal")
  private Double sExpenseCompTotal = null;

  @SerializedName("S_TaxCountOffsTotal")
  private Double sTaxCountOffsTotal = null;

  @SerializedName("S_TaxBase")
  private Double sTaxBase = null;

  @SerializedName("S_TaxBaseTotal")
  private Double sTaxBaseTotal = null;

  @SerializedName("S_DepositTaxDueBase")
  private Double sDepositTaxDueBase = null;

  @SerializedName("S_IsDepositTax")
  private Integer sIsDepositTax = null;

  @SerializedName("S_DepositTaxBase")
  private Double sDepositTaxBase = null;

  @SerializedName("S_DepositTax")
  private Double sDepositTax = null;

  @SerializedName("S_ExtraTaxBase")
  private Double sExtraTaxBase = null;

  @SerializedName("S_ExtraTax")
  private Double sExtraTax = null;

  @SerializedName("S_NetIncome")
  private Double sNetIncome = null;

  @SerializedName("S_GrossIncome")
  private Double sGrossIncome = null;

  @SerializedName("S_RetireLimitIncome")
  private Double sRetireLimitIncome = null;

  @SerializedName("S_MealTicketFullPrice")
  private Double sMealTicketFullPrice = null;

  @SerializedName("S_MealTicketDisPrice")
  private Double sMealTicketDisPrice = null;

  @SerializedName("S_WageDeposit")
  private Double sWageDeposit = null;

  @SerializedName("S_DocksTotal")
  private Double sDocksTotal = null;

  @SerializedName("S_WageRest")
  private Double sWageRest = null;

  @SerializedName("S_CurrAmountToAccount")
  private Double sCurrAmountToAccount = null;

  @SerializedName("S_CurrAmountCash")
  private Double sCurrAmountCash = null;

  @SerializedName("S_WageToAccount")
  private Double sWageToAccount = null;

  @SerializedName("S_WageCash")
  private Double sWageCash = null;

  @SerializedName("S_AtLeastOneIsSocIns")
  private Integer sAtLeastOneIsSocIns = null;

  @SerializedName("S_TaxAdvantage")
  private Double sTaxAdvantage = null;

  @SerializedName("S_TaxBonusTotal")
  private Double sTaxBonusTotal = null;

  @SerializedName("S_TaxDiscountTotal")
  private Double sTaxDiscountTotal = null;

  @SerializedName("S_TaxAdvantageTotal")
  private Double sTaxAdvantageTotal = null;

  @SerializedName("S_DepositTaxBeforeTaxAdvantage")
  private Double sDepositTaxBeforeTaxAdvantage = null;

  @SerializedName("S_DemandOnEmployee")
  private Double sDemandOnEmployee = null;

  @SerializedName("S_DecisiveAmountForTaxBonus")
  private Double sDecisiveAmountForTaxBonus = null;

  @SerializedName("S_TaxBonusCoef")
  private Double sTaxBonusCoef = null;

  @SerializedName("S_TaxBonus")
  private Double sTaxBonus = null;

  @SerializedName("S_IsNonResidentExecutive")
  private Integer sIsNonResidentExecutive = null;

  @SerializedName("S_TaxDiscountGeneral")
  private Double sTaxDiscountGeneral = null;

  @SerializedName("S_DepositTaxBeforeDiscount")
  private Double sDepositTaxBeforeDiscount = null;

  @SerializedName("S_TaxDiscountChildren")
  private Integer sTaxDiscountChildren = null;

  @SerializedName("S_UndockableCorrection")
  private Double sUndockableCorrection = null;

  @SerializedName("S_CalcAvgNetWage")
  private Integer sCalcAvgNetWage = null;

  @SerializedName("S_SocInsBaseLowRate")
  private Double sSocInsBaseLowRate = null;

  @SerializedName("S_GrossWageForDocksTotal")
  private Double sGrossWageForDocksTotal = null;

  @SerializedName("S_NetWageForDocksTotal")
  private Double sNetWageForDocksTotal = null;

  @SerializedName("S_GrossWageForDocks")
  private Double sGrossWageForDocks = null;

  @SerializedName("S_NetWageForDocks")
  private Double sNetWageForDocks = null;

  @SerializedName("S_SocialInsMaxBaseTotal")
  private Double sSocialInsMaxBaseTotal = null;

  @SerializedName("S_HealthInsMaxBaseTotal")
  private Double sHealthInsMaxBaseTotal = null;

  @SerializedName("S_SocialInsFullBaseTotal")
  private Double sSocialInsFullBaseTotal = null;

  @SerializedName("S_AtLeastOneIsHealthIns")
  private Integer sAtLeastOneIsHealthIns = null;

  @SerializedName("S_SuperGrossWageTotal")
  private Double sSuperGrossWageTotal = null;

  @SerializedName("S_SuperGrossWage")
  private Double sSuperGrossWage = null;

  @SerializedName("S_SocialInsCompany")
  private Double sSocialInsCompany = null;

  @SerializedName("S_TaxIncomeCorporate")
  private Double sTaxIncomeCorporate = null;

  @SerializedName("S_TaxIncomeExecutive")
  private Double sTaxIncomeExecutive = null;

  @SerializedName("S_HealthInsBaseCorporate")
  private Double sHealthInsBaseCorporate = null;

  @SerializedName("S_HealthInsBaseExecutive")
  private Double sHealthInsBaseExecutive = null;

  @SerializedName("S_SocialInsBaseExecutive")
  private Double sSocialInsBaseExecutive = null;

  @SerializedName("S_SocialInsBaseCorporate")
  private Double sSocialInsBaseCorporate = null;

  @SerializedName("S_ExtraTaxDueBase")
  private Double sExtraTaxDueBase = null;

  @SerializedName("S_TotalWorkTimeCheck")
  private Double sTotalWorkTimeCheck = null;

  @SerializedName("S_HabitationCosts")
  private Double sHabitationCosts = null;

  @SerializedName("S_SocialInsMaxBase")
  private Double sSocialInsMaxBase = null;

  @SerializedName("S_HealthInsMaxBase")
  private Double sHealthInsMaxBase = null;

  @SerializedName("S_HealthInsBase")
  private Double sHealthInsBase = null;

  @SerializedName("S_SocialInsFullBase")
  private Double sSocialInsFullBase = null;

  @SerializedName("S_AtLeastOneHasSIDiscount")
  private Integer sAtLeastOneHasSIDiscount = null;

  @SerializedName("S_SocInsDiscount")
  private Double sSocInsDiscount = null;

  @SerializedName("S_SocInsDiscountTotal")
  private Double sSocInsDiscountTotal = null;

  @SerializedName("S_HInsFromSurchargeIsPayedBy")
  private Integer sHInsFromSurchargeIsPayedBy = null;

  @SerializedName("S_HasExtraSIDiscountEdit")
  private Integer sHasExtraSIDiscountEdit = null;

  @SerializedName("S_TotalWorkTimeHardCheck")
  private Double sTotalWorkTimeHardCheck = null;

  @SerializedName("S_SocialInsCompanyBaseRate")
  private Double sSocialInsCompanyBaseRate = null;

  @SerializedName("S_AgreementIncome")
  private Double sAgreementIncome = null;

  @SerializedName("S_RetSavings")
  private Double sRetSavings = null;

  @SerializedName("S_SolidarityTaxIncrease")
  private Double sSolidarityTaxIncrease = null;

  @SerializedName("S_SolidarityTaxIncreaseBase")
  private Double sSolidarityTaxIncreaseBase = null;

  @SerializedName("S_SolidarityTaxIncrBaseTotal")
  private Double sSolidarityTaxIncrBaseTotal = null;

  @SerializedName("S_SolidarityTaxIncreaseTotal")
  private Double sSolidarityTaxIncreaseTotal = null;

  @SerializedName("S_PartTimeIncome")
  private Double sPartTimeIncome = null;

  @SerializedName("S_DepositTaxRefund")
  private Double sDepositTaxRefund = null;

  @SerializedName("S_WorkActivityIncome")
  private Double sWorkActivityIncome = null;

  @SerializedName("S_NetWageForDocksFullTotal")
  private Double sNetWageForDocksFullTotal = null;

  @SerializedName("S_NetWageForDocksFull")
  private Double sNetWageForDocksFull = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Wagelistcommon docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Wagelistcommon periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Wagelistcommon ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Wagelistcommon docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Wagelistcommon createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Wagelistcommon correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Wagelistcommon newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Wagelistcommon newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Wagelistcommon calcCharts(List<Calcwlistcommon> calcCharts) {
    this.calcCharts = calcCharts;
    return this;
  }

  public Wagelistcommon addCalcChartsItem(Calcwlistcommon calcChartsItem) {
    this.calcCharts.add(calcChartsItem);
    return this;
  }

   /**
   * Výpočtová schémata; kolekce BO Schéma pro ML souhrnný [nepersistentní položka]
   * @return calcCharts
  **/
  @ApiModelProperty(example = "null", value = "Výpočtová schémata; kolekce BO Schéma pro ML souhrnný [nepersistentní položka]")
  public List<Calcwlistcommon> getCalcCharts() {
    return calcCharts;
  }

  public void setCalcCharts(List<Calcwlistcommon> calcCharts) {
    this.calcCharts = calcCharts;
  }

  public Wagelistcommon isComputed(Boolean isComputed) {
    this.isComputed = isComputed;
    return this;
  }

   /**
   * Vypočteno [persistentní položka]
   * @return isComputed
  **/
  @ApiModelProperty(example = "null", value = "Vypočteno [persistentní položka]")
  public Boolean getIsComputed() {
    return isComputed;
  }

  public void setIsComputed(Boolean isComputed) {
    this.isComputed = isComputed;
  }

  public Wagelistcommon wagePeriodID(String wagePeriodID) {
    this.wagePeriodID = wagePeriodID;
    return this;
  }

   /**
   * Období; ID objektu Mzdové období [persistentní položka]
   * @return wagePeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Mzdové období [persistentní položka]")
  public String getWagePeriodID() {
    return wagePeriodID;
  }

  public void setWagePeriodID(String wagePeriodID) {
    this.wagePeriodID = wagePeriodID;
  }

  public Wagelistcommon employeeID(String employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Zaměstnanec; ID objektu Zaměstnanec [persistentní položka]
   * @return employeeID
  **/
  @ApiModelProperty(example = "null", value = "Zaměstnanec; ID objektu Zaměstnanec [persistentní položka]")
  public String getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(String employeeID) {
    this.employeeID = employeeID;
  }

  public Wagelistcommon expenseCompensation(List<Expensecompensation> expenseCompensation) {
    this.expenseCompensation = expenseCompensation;
    return this;
  }

  public Wagelistcommon addExpenseCompensationItem(Expensecompensation expenseCompensationItem) {
    this.expenseCompensation.add(expenseCompensationItem);
    return this;
  }

   /**
   * Náhrady výdajů; kolekce BO Náhrada výdaje [nepersistentní položka]
   * @return expenseCompensation
  **/
  @ApiModelProperty(example = "null", value = "Náhrady výdajů; kolekce BO Náhrada výdaje [nepersistentní položka]")
  public List<Expensecompensation> getExpenseCompensation() {
    return expenseCompensation;
  }

  public void setExpenseCompensation(List<Expensecompensation> expenseCompensation) {
    this.expenseCompensation = expenseCompensation;
  }

  public Wagelistcommon annualClearing(Double annualClearing) {
    this.annualClearing = annualClearing;
    return this;
  }

   /**
   * Roč. zúčtování [persistentní položka]
   * @return annualClearing
  **/
  @ApiModelProperty(example = "null", value = "Roč. zúčtování [persistentní položka]")
  public Double getAnnualClearing() {
    return annualClearing;
  }

  public void setAnnualClearing(Double annualClearing) {
    this.annualClearing = annualClearing;
  }

  public Wagelistcommon yearTaxBonus(Double yearTaxBonus) {
    this.yearTaxBonus = yearTaxBonus;
    return this;
  }

   /**
   * Daň. bonus z roč. zúčtování [persistentní položka]
   * @return yearTaxBonus
  **/
  @ApiModelProperty(example = "null", value = "Daň. bonus z roč. zúčtování [persistentní položka]")
  public Double getYearTaxBonus() {
    return yearTaxBonus;
  }

  public void setYearTaxBonus(Double yearTaxBonus) {
    this.yearTaxBonus = yearTaxBonus;
  }

   /**
   * Do cizí měny [persistentní položka]
   * @return wageRestOtherCurr
  **/
  @ApiModelProperty(example = "null", value = "Do cizí měny [persistentní položka]")
  public Double getWageRestOtherCurr() {
    return wageRestOtherCurr;
  }

  public Wagelistcommon currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Wagelistcommon currRate(Double currRate) {
    this.currRate = currRate;
    return this;
  }

   /**
   * Kurz [persistentní položka]
   * @return currRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz [persistentní položka]")
  public Double getCurrRate() {
    return currRate;
  }

  public void setCurrRate(Double currRate) {
    this.currRate = currRate;
  }

  public Wagelistcommon refCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
    return this;
  }

   /**
   * Vzt. kurz [persistentní položka]
   * @return refCurrRate
  **/
  @ApiModelProperty(example = "null", value = "Vzt. kurz [persistentní položka]")
  public Double getRefCurrRate() {
    return refCurrRate;
  }

  public void setRefCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
  }

  public Wagelistcommon coef(Integer coef) {
    this.coef = coef;
    return this;
  }

   /**
   * Koeficient [persistentní položka]
   * @return coef
  **/
  @ApiModelProperty(example = "null", value = "Koeficient [persistentní položka]")
  public Integer getCoef() {
    return coef;
  }

  public void setCoef(Integer coef) {
    this.coef = coef;
  }

  public Wagelistcommon localCoef(Integer localCoef) {
    this.localCoef = localCoef;
    return this;
  }

   /**
   * Lok. koef. [persistentní položka]
   * @return localCoef
  **/
  @ApiModelProperty(example = "null", value = "Lok. koef. [persistentní položka]")
  public Integer getLocalCoef() {
    return localCoef;
  }

  public void setLocalCoef(Integer localCoef) {
    this.localCoef = localCoef;
  }

  public Wagelistcommon zoneID(String zoneID) {
    this.zoneID = zoneID;
    return this;
  }

   /**
   * Zóna; ID objektu Měna [persistentní položka]
   * @return zoneID
  **/
  @ApiModelProperty(example = "null", value = "Zóna; ID objektu Měna [persistentní položka]")
  public String getZoneID() {
    return zoneID;
  }

  public void setZoneID(String zoneID) {
    this.zoneID = zoneID;
  }

  public Wagelistcommon localZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
    return this;
  }

   /**
   * Lok. zóna; ID objektu Měna [persistentní položka]
   * @return localZoneID
  **/
  @ApiModelProperty(example = "null", value = "Lok. zóna; ID objektu Měna [persistentní položka]")
  public String getLocalZoneID() {
    return localZoneID;
  }

  public void setLocalZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
  }

   /**
   * V cizí měně [persistentní položka]
   * @return currAmount
  **/
  @ApiModelProperty(example = "null", value = "V cizí měně [persistentní položka]")
  public Double getCurrAmount() {
    return currAmount;
  }

   /**
   * Daň zvláštní sazbou [persistentní položka]
   * @return extraTaxTotal
  **/
  @ApiModelProperty(example = "null", value = "Daň zvláštní sazbou [persistentní položka]")
  public Double getExtraTaxTotal() {
    return extraTaxTotal;
  }

   /**
   * Daň zálohová [persistentní položka]
   * @return depositTaxTotal
  **/
  @ApiModelProperty(example = "null", value = "Daň zálohová [persistentní položka]")
  public Double getDepositTaxTotal() {
    return depositTaxTotal;
  }

   /**
   * Pojistné SP - zaměstnanec [persistentní položka]
   * @return socialInsEmployee
  **/
  @ApiModelProperty(example = "null", value = "Pojistné SP - zaměstnanec [persistentní položka]")
  public Double getSocialInsEmployee() {
    return socialInsEmployee;
  }

   /**
   * Pojistné ZP - zaměstnanec [persistentní položka]
   * @return healthInsEmployee
  **/
  @ApiModelProperty(example = "null", value = "Pojistné ZP - zaměstnanec [persistentní položka]")
  public Double getHealthInsEmployee() {
    return healthInsEmployee;
  }

   /**
   * Hrubá mzda cel. [persistentní položka]
   * @return grossWageTotal
  **/
  @ApiModelProperty(example = "null", value = "Hrubá mzda cel. [persistentní položka]")
  public Double getGrossWageTotal() {
    return grossWageTotal;
  }

   /**
   * Ref.měna; ID objektu Měna
   * @return refCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Ref.měna; ID objektu Měna")
  public String getRefCurrencyID() {
    return refCurrencyID;
  }

   /**
   * Lok.ref.měna; ID objektu Měna
   * @return localRefCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Lok.ref.měna; ID objektu Měna")
  public String getLocalRefCurrencyID() {
    return localRefCurrencyID;
  }

   /**
   * ML od data
   * @return wageListFrom
  **/
  @ApiModelProperty(example = "null", value = "ML od data")
  public DateTime getWageListFrom() {
    return wageListFrom;
  }

   /**
   * ML do data
   * @return wageListTo
  **/
  @ApiModelProperty(example = "null", value = "ML do data")
  public DateTime getWageListTo() {
    return wageListTo;
  }

   /**
   * Řídící PP
   * @return mainWorkingRelationOID
  **/
  @ApiModelProperty(example = "null", value = "Řídící PP")
  public String getMainWorkingRelationOID() {
    return mainWorkingRelationOID;
  }

   /**
   * Průměrný čistý příjem
   * @return netWage
  **/
  @ApiModelProperty(example = "null", value = "Průměrný čistý příjem")
  public Double getNetWage() {
    return netWage;
  }

   /**
   * ML dílčí pro řídící PP; ID objektu Mzdový list dílčí
   * @return mainWRelationWListPartialID
  **/
  @ApiModelProperty(example = "null", value = "ML dílčí pro řídící PP; ID objektu Mzdový list dílčí")
  public String getMainWRelationWListPartialID() {
    return mainWRelationWListPartialID;
  }

  public Wagelistcommon hIAnnualClearingEmp(Double hIAnnualClearingEmp) {
    this.hIAnnualClearingEmp = hIAnnualClearingEmp;
    return this;
  }

   /**
   * Roční zúčtování ZP - zaměstnanec [persistentní položka]
   * @return hIAnnualClearingEmp
  **/
  @ApiModelProperty(example = "null", value = "Roční zúčtování ZP - zaměstnanec [persistentní položka]")
  public Double getHIAnnualClearingEmp() {
    return hIAnnualClearingEmp;
  }

  public void setHIAnnualClearingEmp(Double hIAnnualClearingEmp) {
    this.hIAnnualClearingEmp = hIAnnualClearingEmp;
  }

  public Wagelistcommon hIAnnualClearingComp(Double hIAnnualClearingComp) {
    this.hIAnnualClearingComp = hIAnnualClearingComp;
    return this;
  }

   /**
   * Roční zúčtování ZP - zaměstnavatel [persistentní položka]
   * @return hIAnnualClearingComp
  **/
  @ApiModelProperty(example = "null", value = "Roční zúčtování ZP - zaměstnavatel [persistentní položka]")
  public Double getHIAnnualClearingComp() {
    return hIAnnualClearingComp;
  }

  public void setHIAnnualClearingComp(Double hIAnnualClearingComp) {
    this.hIAnnualClearingComp = hIAnnualClearingComp;
  }

  public Wagelistcommon yearEmployeePremium(Double yearEmployeePremium) {
    this.yearEmployeePremium = yearEmployeePremium;
    return this;
  }

   /**
   * Zam.prémie z roč. zúčtování [persistentní položka]
   * @return yearEmployeePremium
  **/
  @ApiModelProperty(example = "null", value = "Zam.prémie z roč. zúčtování [persistentní položka]")
  public Double getYearEmployeePremium() {
    return yearEmployeePremium;
  }

  public void setYearEmployeePremium(Double yearEmployeePremium) {
    this.yearEmployeePremium = yearEmployeePremium;
  }

   /**
   * Odvádí SP v zahraničí [persistentní položka]
   * @return notPaySocIns
  **/
  @ApiModelProperty(example = "null", value = "Odvádí SP v zahraničí [persistentní položka]")
  public Integer getNotPaySocIns() {
    return notPaySocIns;
  }

   /**
   * Odvádí ZP v zahraničí [persistentní položka]
   * @return notPayHealthIns
  **/
  @ApiModelProperty(example = "null", value = "Odvádí ZP v zahraničí [persistentní položka]")
  public Integer getNotPayHealthIns() {
    return notPayHealthIns;
  }

   /**
   * Nepl. volno (kal.dny) celkem [persistentní položka]
   * @return sUnpaidFreeCalTotal
  **/
  @ApiModelProperty(example = "null", value = "Nepl. volno (kal.dny) celkem [persistentní položka]")
  public Double getSUnpaidFreeCalTotal() {
    return sUnpaidFreeCalTotal;
  }

   /**
   * Základ ZP za absence [persistentní položka]
   * @return sHealthInsBaseAbsences
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP za absence [persistentní položka]")
  public Double getSHealthInsBaseAbsences() {
    return sHealthInsBaseAbsences;
  }

   /**
   * Základ ZP za neplacené volno [persistentní položka]
   * @return sHealthInsBaseUnpaidFree
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP za neplacené volno [persistentní položka]")
  public Double getSHealthInsBaseUnpaidFree() {
    return sHealthInsBaseUnpaidFree;
  }

  public Wagelistcommon sHealthInsUnpaidFreeDays(Double sHealthInsUnpaidFreeDays) {
    this.sHealthInsUnpaidFreeDays = sHealthInsUnpaidFreeDays;
    return this;
  }

   /**
   * Dny NPV pro srážku ZP - opr. [persistentní položka]
   * @return sHealthInsUnpaidFreeDays
  **/
  @ApiModelProperty(example = "null", value = "Dny NPV pro srážku ZP - opr. [persistentní položka]")
  public Double getSHealthInsUnpaidFreeDays() {
    return sHealthInsUnpaidFreeDays;
  }

  public void setSHealthInsUnpaidFreeDays(Double sHealthInsUnpaidFreeDays) {
    this.sHealthInsUnpaidFreeDays = sHealthInsUnpaidFreeDays;
  }

   /**
   * Dny NPV pro srážku ZP [persistentní položka]
   * @return sHealthInsUnpaidFreeDaysTotal
  **/
  @ApiModelProperty(example = "null", value = "Dny NPV pro srážku ZP [persistentní položka]")
  public Double getSHealthInsUnpaidFreeDaysTotal() {
    return sHealthInsUnpaidFreeDaysTotal;
  }

   /**
   * ZP za absence [persistentní položka]
   * @return sHealthInsAbsences
  **/
  @ApiModelProperty(example = "null", value = "ZP za absence [persistentní položka]")
  public Double getSHealthInsAbsences() {
    return sHealthInsAbsences;
  }

   /**
   * Srážka ZP za NPV [persistentní položka]
   * @return sHealthInsUnpaidFreeDock
  **/
  @ApiModelProperty(example = "null", value = "Srážka ZP za NPV [persistentní položka]")
  public Double getSHealthInsUnpaidFreeDock() {
    return sHealthInsUnpaidFreeDock;
  }

   /**
   * Základ ZP součet [persistentní položka]
   * @return sHealthInsBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP součet [persistentní položka]")
  public Double getSHealthInsBaseTotal() {
    return sHealthInsBaseTotal;
  }

  public Wagelistcommon sHealthInsMinBase(Double sHealthInsMinBase) {
    this.sHealthInsMinBase = sHealthInsMinBase;
    return this;
  }

   /**
   * Minimální základ ZP - opr. [persistentní položka]
   * @return sHealthInsMinBase
  **/
  @ApiModelProperty(example = "null", value = "Minimální základ ZP - opr. [persistentní položka]")
  public Double getSHealthInsMinBase() {
    return sHealthInsMinBase;
  }

  public void setSHealthInsMinBase(Double sHealthInsMinBase) {
    this.sHealthInsMinBase = sHealthInsMinBase;
  }

   /**
   * Minimální základ ZP [persistentní položka]
   * @return sHealthInsMinBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Minimální základ ZP [persistentní položka]")
  public Double getSHealthInsMinBaseTotal() {
    return sHealthInsMinBaseTotal;
  }

   /**
   * Základ ZP [persistentní položka]
   * @return sHealthInsBaseCorrect
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP [persistentní položka]")
  public Double getSHealthInsBaseCorrect() {
    return sHealthInsBaseCorrect;
  }

   /**
   * Pojistné ZP celkem [persistentní položka]
   * @return sHealthInsTotal
  **/
  @ApiModelProperty(example = "null", value = "Pojistné ZP celkem [persistentní položka]")
  public Double getSHealthInsTotal() {
    return sHealthInsTotal;
  }

   /**
   * Pojistné ZP zaměstnavatel [persistentní položka]
   * @return sHealthInsCompany
  **/
  @ApiModelProperty(example = "null", value = "Pojistné ZP zaměstnavatel [persistentní položka]")
  public Double getSHealthInsCompany() {
    return sHealthInsCompany;
  }

   /**
   * Základ SP [persistentní položka]
   * @return sSocialInsBase
  **/
  @ApiModelProperty(example = "null", value = "Základ SP [persistentní položka]")
  public Double getSSocialInsBase() {
    return sSocialInsBase;
  }

   /**
   * Penz.fond částka [persistentní položka]
   * @return sRetFundAmount
  **/
  @ApiModelProperty(example = "null", value = "Penz.fond částka [persistentní položka]")
  public Double getSRetFundAmount() {
    return sRetFundAmount;
  }

   /**
   * Penz. fond základ daně [persistentní položka]
   * @return sRetFundTaxBase
  **/
  @ApiModelProperty(example = "null", value = "Penz. fond základ daně [persistentní položka]")
  public Double getSRetFundTaxBase() {
    return sRetFundTaxBase;
  }

   /**
   * Penz. fond daňový náklad [persistentní položka]
   * @return sRetFundTaxExpense
  **/
  @ApiModelProperty(example = "null", value = "Penz. fond daňový náklad [persistentní položka]")
  public Double getSRetFundTaxExpense() {
    return sRetFundTaxExpense;
  }

   /**
   * Penz. fond z FKSP [persistentní položka]
   * @return sRetFundSocialExpense
  **/
  @ApiModelProperty(example = "null", value = "Penz. fond z FKSP [persistentní položka]")
  public Double getSRetFundSocialExpense() {
    return sRetFundSocialExpense;
  }

   /**
   * Živ. poj. částka [persistentní položka]
   * @return sLifeInsAmount
  **/
  @ApiModelProperty(example = "null", value = "Živ. poj. částka [persistentní položka]")
  public Double getSLifeInsAmount() {
    return sLifeInsAmount;
  }

   /**
   * Živ. poj. základ daně [persistentní položka]
   * @return sLifeInsTaxBase
  **/
  @ApiModelProperty(example = "null", value = "Živ. poj. základ daně [persistentní položka]")
  public Double getSLifeInsTaxBase() {
    return sLifeInsTaxBase;
  }

   /**
   * Živ. poj. daňový náklad [persistentní položka]
   * @return sLifeInsTaxExpense
  **/
  @ApiModelProperty(example = "null", value = "Živ. poj. daňový náklad [persistentní položka]")
  public Double getSLifeInsTaxExpense() {
    return sLifeInsTaxExpense;
  }

   /**
   * Živ. poj. z FKSP [persistentní položka]
   * @return sLifeInsSocialExpense
  **/
  @ApiModelProperty(example = "null", value = "Živ. poj. z FKSP [persistentní položka]")
  public Double getSLifeInsSocialExpense() {
    return sLifeInsSocialExpense;
  }

  public Wagelistcommon sDutyCar(Double sDutyCar) {
    this.sDutyCar = sDutyCar;
    return this;
  }

   /**
   * Služební auto pro soukr. opr. [persistentní položka]
   * @return sDutyCar
  **/
  @ApiModelProperty(example = "null", value = "Služební auto pro soukr. opr. [persistentní položka]")
  public Double getSDutyCar() {
    return sDutyCar;
  }

  public void setSDutyCar(Double sDutyCar) {
    this.sDutyCar = sDutyCar;
  }

   /**
   * Služební auto pro soukr. [persistentní položka]
   * @return sDutyCarTotal
  **/
  @ApiModelProperty(example = "null", value = "Služební auto pro soukr. [persistentní položka]")
  public Double getSDutyCarTotal() {
    return sDutyCarTotal;
  }

  public Wagelistcommon sRent(Double sRent) {
    this.sRent = sRent;
    return this;
  }

   /**
   * Renta oprava [persistentní položka]
   * @return sRent
  **/
  @ApiModelProperty(example = "null", value = "Renta oprava [persistentní položka]")
  public Double getSRent() {
    return sRent;
  }

  public void setSRent(Double sRent) {
    this.sRent = sRent;
  }

   /**
   * Renta [persistentní položka]
   * @return sRentTotal
  **/
  @ApiModelProperty(example = "null", value = "Renta [persistentní položka]")
  public Double getSRentTotal() {
    return sRentTotal;
  }

   /**
   * Odměna za vynálezy [persistentní položka]
   * @return sInventionReward
  **/
  @ApiModelProperty(example = "null", value = "Odměna za vynálezy [persistentní položka]")
  public Double getSInventionReward() {
    return sInventionReward;
  }

   /**
   * Zdanitelné příjmy [persistentní položka]
   * @return sTaxableIncome
  **/
  @ApiModelProperty(example = "null", value = "Zdanitelné příjmy [persistentní položka]")
  public Double getSTaxableIncome() {
    return sTaxableIncome;
  }

  public Wagelistcommon sSmartMoney(Double sSmartMoney) {
    this.sSmartMoney = sSmartMoney;
    return this;
  }

   /**
   * Bolestné [persistentní položka]
   * @return sSmartMoney
  **/
  @ApiModelProperty(example = "null", value = "Bolestné [persistentní položka]")
  public Double getSSmartMoney() {
    return sSmartMoney;
  }

  public void setSSmartMoney(Double sSmartMoney) {
    this.sSmartMoney = sSmartMoney;
  }

   /**
   * Cestovní náhrady celkem [persistentní položka]
   * @return sTravelCompTotal
  **/
  @ApiModelProperty(example = "null", value = "Cestovní náhrady celkem [persistentní položka]")
  public Double getSTravelCompTotal() {
    return sTravelCompTotal;
  }

   /**
   * Paušál. náhrada cest. výdajů [persistentní položka]
   * @return sFlatTravelComp
  **/
  @ApiModelProperty(example = "null", value = "Paušál. náhrada cest. výdajů [persistentní položka]")
  public Double getSFlatTravelComp() {
    return sFlatTravelComp;
  }

  public Wagelistcommon sOtherTaxFreeComp(Double sOtherTaxFreeComp) {
    this.sOtherTaxFreeComp = sOtherTaxFreeComp;
    return this;
  }

   /**
   * Ostatní nedaněné náhrady [persistentní položka]
   * @return sOtherTaxFreeComp
  **/
  @ApiModelProperty(example = "null", value = "Ostatní nedaněné náhrady [persistentní položka]")
  public Double getSOtherTaxFreeComp() {
    return sOtherTaxFreeComp;
  }

  public void setSOtherTaxFreeComp(Double sOtherTaxFreeComp) {
    this.sOtherTaxFreeComp = sOtherTaxFreeComp;
  }

   /**
   * Ostatní náhrady výdajů [persistentní položka]
   * @return sExpenseCompTotal
  **/
  @ApiModelProperty(example = "null", value = "Ostatní náhrady výdajů [persistentní položka]")
  public Double getSExpenseCompTotal() {
    return sExpenseCompTotal;
  }

   /**
   * Odpočty ze základu daně [persistentní položka]
   * @return sTaxCountOffsTotal
  **/
  @ApiModelProperty(example = "null", value = "Odpočty ze základu daně [persistentní položka]")
  public Double getSTaxCountOffsTotal() {
    return sTaxCountOffsTotal;
  }

  public Wagelistcommon sTaxBase(Double sTaxBase) {
    this.sTaxBase = sTaxBase;
    return this;
  }

   /**
   * Základ daně opr. [persistentní položka]
   * @return sTaxBase
  **/
  @ApiModelProperty(example = "null", value = "Základ daně opr. [persistentní položka]")
  public Double getSTaxBase() {
    return sTaxBase;
  }

  public void setSTaxBase(Double sTaxBase) {
    this.sTaxBase = sTaxBase;
  }

   /**
   * Základ daně [persistentní položka]
   * @return sTaxBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Základ daně [persistentní položka]")
  public Double getSTaxBaseTotal() {
    return sTaxBaseTotal;
  }

   /**
   * Základ zálohy (výjimky) [persistentní položka]
   * @return sDepositTaxDueBase
  **/
  @ApiModelProperty(example = "null", value = "Základ zálohy (výjimky) [persistentní položka]")
  public Double getSDepositTaxDueBase() {
    return sDepositTaxDueBase;
  }

   /**
   * Zálohová daň? [persistentní položka]
   * @return sIsDepositTax
  **/
  @ApiModelProperty(example = "null", value = "Zálohová daň? [persistentní položka]")
  public Integer getSIsDepositTax() {
    return sIsDepositTax;
  }

   /**
   * Základ zálohové daně [persistentní položka]
   * @return sDepositTaxBase
  **/
  @ApiModelProperty(example = "null", value = "Základ zálohové daně [persistentní položka]")
  public Double getSDepositTaxBase() {
    return sDepositTaxBase;
  }

  public Wagelistcommon sDepositTax(Double sDepositTax) {
    this.sDepositTax = sDepositTax;
    return this;
  }

   /**
   * Zálohová daň opr. [persistentní položka]
   * @return sDepositTax
  **/
  @ApiModelProperty(example = "null", value = "Zálohová daň opr. [persistentní položka]")
  public Double getSDepositTax() {
    return sDepositTax;
  }

  public void setSDepositTax(Double sDepositTax) {
    this.sDepositTax = sDepositTax;
  }

   /**
   * Základ daně zvl. sazbou [persistentní položka]
   * @return sExtraTaxBase
  **/
  @ApiModelProperty(example = "null", value = "Základ daně zvl. sazbou [persistentní položka]")
  public Double getSExtraTaxBase() {
    return sExtraTaxBase;
  }

  public Wagelistcommon sExtraTax(Double sExtraTax) {
    this.sExtraTax = sExtraTax;
    return this;
  }

   /**
   * Daň zvl. sazbou opr.  [persistentní položka]
   * @return sExtraTax
  **/
  @ApiModelProperty(example = "null", value = "Daň zvl. sazbou opr.  [persistentní položka]")
  public Double getSExtraTax() {
    return sExtraTax;
  }

  public void setSExtraTax(Double sExtraTax) {
    this.sExtraTax = sExtraTax;
  }

   /**
   * Čistý příjem [persistentní položka]
   * @return sNetIncome
  **/
  @ApiModelProperty(example = "null", value = "Čistý příjem [persistentní položka]")
  public Double getSNetIncome() {
    return sNetIncome;
  }

   /**
   * Hrubý příjem [persistentní položka]
   * @return sGrossIncome
  **/
  @ApiModelProperty(example = "null", value = "Hrubý příjem [persistentní položka]")
  public Double getSGrossIncome() {
    return sGrossIncome;
  }

   /**
   * Příjem pro nárok na důchod [persistentní položka]
   * @return sRetireLimitIncome
  **/
  @ApiModelProperty(example = "null", value = "Příjem pro nárok na důchod [persistentní položka]")
  public Double getSRetireLimitIncome() {
    return sRetireLimitIncome;
  }

   /**
   * Stravenky za plnou cenu [persistentní položka]
   * @return sMealTicketFullPrice
  **/
  @ApiModelProperty(example = "null", value = "Stravenky za plnou cenu [persistentní položka]")
  public Double getSMealTicketFullPrice() {
    return sMealTicketFullPrice;
  }

   /**
   * Stravenky za sníženou cenu [persistentní položka]
   * @return sMealTicketDisPrice
  **/
  @ApiModelProperty(example = "null", value = "Stravenky za sníženou cenu [persistentní položka]")
  public Double getSMealTicketDisPrice() {
    return sMealTicketDisPrice;
  }

   /**
   * Záloha na mzdu [persistentní položka]
   * @return sWageDeposit
  **/
  @ApiModelProperty(example = "null", value = "Záloha na mzdu [persistentní položka]")
  public Double getSWageDeposit() {
    return sWageDeposit;
  }

   /**
   * Srážky celkem [persistentní položka]
   * @return sDocksTotal
  **/
  @ApiModelProperty(example = "null", value = "Srážky celkem [persistentní položka]")
  public Double getSDocksTotal() {
    return sDocksTotal;
  }

   /**
   * Doplatek [persistentní položka]
   * @return sWageRest
  **/
  @ApiModelProperty(example = "null", value = "Doplatek [persistentní položka]")
  public Double getSWageRest() {
    return sWageRest;
  }

   /**
   * V cizí měně na účet [persistentní položka]
   * @return sCurrAmountToAccount
  **/
  @ApiModelProperty(example = "null", value = "V cizí měně na účet [persistentní položka]")
  public Double getSCurrAmountToAccount() {
    return sCurrAmountToAccount;
  }

   /**
   * V cizí měně hotově [persistentní položka]
   * @return sCurrAmountCash
  **/
  @ApiModelProperty(example = "null", value = "V cizí měně hotově [persistentní položka]")
  public Double getSCurrAmountCash() {
    return sCurrAmountCash;
  }

   /**
   * Na účet [persistentní položka]
   * @return sWageToAccount
  **/
  @ApiModelProperty(example = "null", value = "Na účet [persistentní položka]")
  public Double getSWageToAccount() {
    return sWageToAccount;
  }

   /**
   * Vyplaceno hotově [persistentní položka]
   * @return sWageCash
  **/
  @ApiModelProperty(example = "null", value = "Vyplaceno hotově [persistentní položka]")
  public Double getSWageCash() {
    return sWageCash;
  }

   /**
   * Alespoň jeden PP je pojištěn [persistentní položka]
   * @return sAtLeastOneIsSocIns
  **/
  @ApiModelProperty(example = "null", value = "Alespoň jeden PP je pojištěn [persistentní položka]")
  public Integer getSAtLeastOneIsSocIns() {
    return sAtLeastOneIsSocIns;
  }

  public Wagelistcommon sTaxAdvantage(Double sTaxAdvantage) {
    this.sTaxAdvantage = sTaxAdvantage;
    return this;
  }

   /**
   * Daňové zvýhodnění [persistentní položka]
   * @return sTaxAdvantage
  **/
  @ApiModelProperty(example = "null", value = "Daňové zvýhodnění [persistentní položka]")
  public Double getSTaxAdvantage() {
    return sTaxAdvantage;
  }

  public void setSTaxAdvantage(Double sTaxAdvantage) {
    this.sTaxAdvantage = sTaxAdvantage;
  }

   /**
   * Daňový bonus celkem [persistentní položka]
   * @return sTaxBonusTotal
  **/
  @ApiModelProperty(example = "null", value = "Daňový bonus celkem [persistentní položka]")
  public Double getSTaxBonusTotal() {
    return sTaxBonusTotal;
  }

   /**
   * Měs. sleva na dani-celkem [persistentní položka]
   * @return sTaxDiscountTotal
  **/
  @ApiModelProperty(example = "null", value = "Měs. sleva na dani-celkem [persistentní položka]")
  public Double getSTaxDiscountTotal() {
    return sTaxDiscountTotal;
  }

   /**
   * Daňové zvýhodnění (celkem) [persistentní položka]
   * @return sTaxAdvantageTotal
  **/
  @ApiModelProperty(example = "null", value = "Daňové zvýhodnění (celkem) [persistentní položka]")
  public Double getSTaxAdvantageTotal() {
    return sTaxAdvantageTotal;
  }

   /**
   * Zálohová daň před daň. zvýhod. [persistentní položka]
   * @return sDepositTaxBeforeTaxAdvantage
  **/
  @ApiModelProperty(example = "null", value = "Zálohová daň před daň. zvýhod. [persistentní položka]")
  public Double getSDepositTaxBeforeTaxAdvantage() {
    return sDepositTaxBeforeTaxAdvantage;
  }

   /**
   * Pohledávka za zaměstnancem [persistentní položka]
   * @return sDemandOnEmployee
  **/
  @ApiModelProperty(example = "null", value = "Pohledávka za zaměstnancem [persistentní položka]")
  public Double getSDemandOnEmployee() {
    return sDemandOnEmployee;
  }

   /**
   * Rozhodná částka pro daň. bonus [persistentní položka]
   * @return sDecisiveAmountForTaxBonus
  **/
  @ApiModelProperty(example = "null", value = "Rozhodná částka pro daň. bonus [persistentní položka]")
  public Double getSDecisiveAmountForTaxBonus() {
    return sDecisiveAmountForTaxBonus;
  }

   /**
   * Koeficient pro daňový bonus [persistentní položka]
   * @return sTaxBonusCoef
  **/
  @ApiModelProperty(example = "null", value = "Koeficient pro daňový bonus [persistentní položka]")
  public Double getSTaxBonusCoef() {
    return sTaxBonusCoef;
  }

  public Wagelistcommon sTaxBonus(Double sTaxBonus) {
    this.sTaxBonus = sTaxBonus;
    return this;
  }

   /**
   * Daňový bonus [persistentní položka]
   * @return sTaxBonus
  **/
  @ApiModelProperty(example = "null", value = "Daňový bonus [persistentní položka]")
  public Double getSTaxBonus() {
    return sTaxBonus;
  }

  public void setSTaxBonus(Double sTaxBonus) {
    this.sTaxBonus = sTaxBonus;
  }

   /**
   * Je jednatel nerezident [persistentní položka]
   * @return sIsNonResidentExecutive
  **/
  @ApiModelProperty(example = "null", value = "Je jednatel nerezident [persistentní položka]")
  public Integer getSIsNonResidentExecutive() {
    return sIsNonResidentExecutive;
  }

   /**
   * Měs. sleva na dani podle §35ba [persistentní položka]
   * @return sTaxDiscountGeneral
  **/
  @ApiModelProperty(example = "null", value = "Měs. sleva na dani podle §35ba [persistentní položka]")
  public Double getSTaxDiscountGeneral() {
    return sTaxDiscountGeneral;
  }

   /**
   * Zálohová daň před slevami [persistentní položka]
   * @return sDepositTaxBeforeDiscount
  **/
  @ApiModelProperty(example = "null", value = "Zálohová daň před slevami [persistentní položka]")
  public Double getSDepositTaxBeforeDiscount() {
    return sDepositTaxBeforeDiscount;
  }

   /**
   * Měs. sleva na dani podle §35c [persistentní položka]
   * @return sTaxDiscountChildren
  **/
  @ApiModelProperty(example = "null", value = "Měs. sleva na dani podle §35c [persistentní položka]")
  public Integer getSTaxDiscountChildren() {
    return sTaxDiscountChildren;
  }

  public Wagelistcommon sUndockableCorrection(Double sUndockableCorrection) {
    this.sUndockableCorrection = sUndockableCorrection;
    return this;
  }

   /**
   * Nesrazitelná částka - oprava [persistentní položka]
   * @return sUndockableCorrection
  **/
  @ApiModelProperty(example = "null", value = "Nesrazitelná částka - oprava [persistentní položka]")
  public Double getSUndockableCorrection() {
    return sUndockableCorrection;
  }

  public void setSUndockableCorrection(Double sUndockableCorrection) {
    this.sUndockableCorrection = sUndockableCorrection;
  }

   /**
   * Počítá se PČM [persistentní položka]
   * @return sCalcAvgNetWage
  **/
  @ApiModelProperty(example = "null", value = "Počítá se PČM [persistentní položka]")
  public Integer getSCalcAvgNetWage() {
    return sCalcAvgNetWage;
  }

   /**
   * Základ pro sníženou sazbu SP [persistentní položka]
   * @return sSocInsBaseLowRate
  **/
  @ApiModelProperty(example = "null", value = "Základ pro sníženou sazbu SP [persistentní položka]")
  public Double getSSocInsBaseLowRate() {
    return sSocInsBaseLowRate;
  }

   /**
   * Hrubá mzda k určení srážek [persistentní položka]
   * @return sGrossWageForDocksTotal
  **/
  @ApiModelProperty(example = "null", value = "Hrubá mzda k určení srážek [persistentní položka]")
  public Double getSGrossWageForDocksTotal() {
    return sGrossWageForDocksTotal;
  }

   /**
   * Čistý příj.k určení srážek [persistentní položka]
   * @return sNetWageForDocksTotal
  **/
  @ApiModelProperty(example = "null", value = "Čistý příj.k určení srážek [persistentní položka]")
  public Double getSNetWageForDocksTotal() {
    return sNetWageForDocksTotal;
  }

  public Wagelistcommon sGrossWageForDocks(Double sGrossWageForDocks) {
    this.sGrossWageForDocks = sGrossWageForDocks;
    return this;
  }

   /**
   * Hr.mzda k určení srážek opr. [persistentní položka]
   * @return sGrossWageForDocks
  **/
  @ApiModelProperty(example = "null", value = "Hr.mzda k určení srážek opr. [persistentní položka]")
  public Double getSGrossWageForDocks() {
    return sGrossWageForDocks;
  }

  public void setSGrossWageForDocks(Double sGrossWageForDocks) {
    this.sGrossWageForDocks = sGrossWageForDocks;
  }

  public Wagelistcommon sNetWageForDocks(Double sNetWageForDocks) {
    this.sNetWageForDocks = sNetWageForDocks;
    return this;
  }

   /**
   * Čistý př.k určení srážek opr. [persistentní položka]
   * @return sNetWageForDocks
  **/
  @ApiModelProperty(example = "null", value = "Čistý př.k určení srážek opr. [persistentní položka]")
  public Double getSNetWageForDocks() {
    return sNetWageForDocks;
  }

  public void setSNetWageForDocks(Double sNetWageForDocks) {
    this.sNetWageForDocks = sNetWageForDocks;
  }

   /**
   * Maximální základ SP - celkem [persistentní položka]
   * @return sSocialInsMaxBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Maximální základ SP - celkem [persistentní položka]")
  public Double getSSocialInsMaxBaseTotal() {
    return sSocialInsMaxBaseTotal;
  }

   /**
   * Maximální základ ZP - celkem [persistentní položka]
   * @return sHealthInsMaxBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Maximální základ ZP - celkem [persistentní položka]")
  public Double getSHealthInsMaxBaseTotal() {
    return sHealthInsMaxBaseTotal;
  }

   /**
   * Nekrácený základ SP [persistentní položka]
   * @return sSocialInsFullBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Nekrácený základ SP [persistentní položka]")
  public Double getSSocialInsFullBaseTotal() {
    return sSocialInsFullBaseTotal;
  }

   /**
   * Alespoň jeden PP je zdr.poj. [persistentní položka]
   * @return sAtLeastOneIsHealthIns
  **/
  @ApiModelProperty(example = "null", value = "Alespoň jeden PP je zdr.poj. [persistentní položka]")
  public Integer getSAtLeastOneIsHealthIns() {
    return sAtLeastOneIsHealthIns;
  }

   /**
   * Superhrubá mzda [persistentní položka]
   * @return sSuperGrossWageTotal
  **/
  @ApiModelProperty(example = "null", value = "Superhrubá mzda [persistentní položka]")
  public Double getSSuperGrossWageTotal() {
    return sSuperGrossWageTotal;
  }

  public Wagelistcommon sSuperGrossWage(Double sSuperGrossWage) {
    this.sSuperGrossWage = sSuperGrossWage;
    return this;
  }

   /**
   * Superhrubá mzda - oprava [persistentní položka]
   * @return sSuperGrossWage
  **/
  @ApiModelProperty(example = "null", value = "Superhrubá mzda - oprava [persistentní položka]")
  public Double getSSuperGrossWage() {
    return sSuperGrossWage;
  }

  public void setSSuperGrossWage(Double sSuperGrossWage) {
    this.sSuperGrossWage = sSuperGrossWage;
  }

   /**
   * Pojistné SP zaměstnavatel [persistentní položka]
   * @return sSocialInsCompany
  **/
  @ApiModelProperty(example = "null", value = "Pojistné SP zaměstnavatel [persistentní položka]")
  public Double getSSocialInsCompany() {
    return sSocialInsCompany;
  }

   /**
   * Zdanitelné příjmy čl.stat.org. [persistentní položka]
   * @return sTaxIncomeCorporate
  **/
  @ApiModelProperty(example = "null", value = "Zdanitelné příjmy čl.stat.org. [persistentní položka]")
  public Double getSTaxIncomeCorporate() {
    return sTaxIncomeCorporate;
  }

   /**
   * Zdanitelné příjmy jednatele [persistentní položka]
   * @return sTaxIncomeExecutive
  **/
  @ApiModelProperty(example = "null", value = "Zdanitelné příjmy jednatele [persistentní položka]")
  public Double getSTaxIncomeExecutive() {
    return sTaxIncomeExecutive;
  }

   /**
   * Základ ZP z příjmů čl.st.org. [persistentní položka]
   * @return sHealthInsBaseCorporate
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP z příjmů čl.st.org. [persistentní položka]")
  public Double getSHealthInsBaseCorporate() {
    return sHealthInsBaseCorporate;
  }

   /**
   * Základ ZP z příjmů jednatele [persistentní položka]
   * @return sHealthInsBaseExecutive
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP z příjmů jednatele [persistentní položka]")
  public Double getSHealthInsBaseExecutive() {
    return sHealthInsBaseExecutive;
  }

   /**
   * Základ SP z příjmů jednatele [persistentní položka]
   * @return sSocialInsBaseExecutive
  **/
  @ApiModelProperty(example = "null", value = "Základ SP z příjmů jednatele [persistentní položka]")
  public Double getSSocialInsBaseExecutive() {
    return sSocialInsBaseExecutive;
  }

   /**
   * Základ SP z příjmů čl.st.org. [persistentní položka]
   * @return sSocialInsBaseCorporate
  **/
  @ApiModelProperty(example = "null", value = "Základ SP z příjmů čl.st.org. [persistentní položka]")
  public Double getSSocialInsBaseCorporate() {
    return sSocialInsBaseCorporate;
  }

   /**
   * Základ srážky (výjimky) [persistentní položka]
   * @return sExtraTaxDueBase
  **/
  @ApiModelProperty(example = "null", value = "Základ srážky (výjimky) [persistentní položka]")
  public Double getSExtraTaxDueBase() {
    return sExtraTaxDueBase;
  }

   /**
   * Kontrola odprac. času DPP [persistentní položka]
   * @return sTotalWorkTimeCheck
  **/
  @ApiModelProperty(example = "null", value = "Kontrola odprac. času DPP [persistentní položka]")
  public Double getSTotalWorkTimeCheck() {
    return sTotalWorkTimeCheck;
  }

   /**
   * Náklady na bydlení [persistentní položka]
   * @return sHabitationCosts
  **/
  @ApiModelProperty(example = "null", value = "Náklady na bydlení [persistentní položka]")
  public Double getSHabitationCosts() {
    return sHabitationCosts;
  }

  public Wagelistcommon sSocialInsMaxBase(Double sSocialInsMaxBase) {
    this.sSocialInsMaxBase = sSocialInsMaxBase;
    return this;
  }

   /**
   * Maximální základ SP - oprava [persistentní položka]
   * @return sSocialInsMaxBase
  **/
  @ApiModelProperty(example = "null", value = "Maximální základ SP - oprava [persistentní položka]")
  public Double getSSocialInsMaxBase() {
    return sSocialInsMaxBase;
  }

  public void setSSocialInsMaxBase(Double sSocialInsMaxBase) {
    this.sSocialInsMaxBase = sSocialInsMaxBase;
  }

  public Wagelistcommon sHealthInsMaxBase(Double sHealthInsMaxBase) {
    this.sHealthInsMaxBase = sHealthInsMaxBase;
    return this;
  }

   /**
   * Maximální základ ZP - oprava [persistentní položka]
   * @return sHealthInsMaxBase
  **/
  @ApiModelProperty(example = "null", value = "Maximální základ ZP - oprava [persistentní položka]")
  public Double getSHealthInsMaxBase() {
    return sHealthInsMaxBase;
  }

  public void setSHealthInsMaxBase(Double sHealthInsMaxBase) {
    this.sHealthInsMaxBase = sHealthInsMaxBase;
  }

  public Wagelistcommon sHealthInsBase(Double sHealthInsBase) {
    this.sHealthInsBase = sHealthInsBase;
    return this;
  }

   /**
   * Základ ZP - oprava [persistentní položka]
   * @return sHealthInsBase
  **/
  @ApiModelProperty(example = "null", value = "Základ ZP - oprava [persistentní položka]")
  public Double getSHealthInsBase() {
    return sHealthInsBase;
  }

  public void setSHealthInsBase(Double sHealthInsBase) {
    this.sHealthInsBase = sHealthInsBase;
  }

  public Wagelistcommon sSocialInsFullBase(Double sSocialInsFullBase) {
    this.sSocialInsFullBase = sSocialInsFullBase;
    return this;
  }

   /**
   * Nekrácený základ SP - oprava [persistentní položka]
   * @return sSocialInsFullBase
  **/
  @ApiModelProperty(example = "null", value = "Nekrácený základ SP - oprava [persistentní položka]")
  public Double getSSocialInsFullBase() {
    return sSocialInsFullBase;
  }

  public void setSSocialInsFullBase(Double sSocialInsFullBase) {
    this.sSocialInsFullBase = sSocialInsFullBase;
  }

   /**
   * Alespoň jeden PP sleva SP [persistentní položka]
   * @return sAtLeastOneHasSIDiscount
  **/
  @ApiModelProperty(example = "null", value = "Alespoň jeden PP sleva SP [persistentní položka]")
  public Integer getSAtLeastOneHasSIDiscount() {
    return sAtLeastOneHasSIDiscount;
  }

  public Wagelistcommon sSocInsDiscount(Double sSocInsDiscount) {
    this.sSocInsDiscount = sSocInsDiscount;
    return this;
  }

   /**
   * Sleva na sociálním poj. - opr. [persistentní položka]
   * @return sSocInsDiscount
  **/
  @ApiModelProperty(example = "null", value = "Sleva na sociálním poj. - opr. [persistentní položka]")
  public Double getSSocInsDiscount() {
    return sSocInsDiscount;
  }

  public void setSSocInsDiscount(Double sSocInsDiscount) {
    this.sSocInsDiscount = sSocInsDiscount;
  }

   /**
   * Sleva na sociálním pojištění [persistentní položka]
   * @return sSocInsDiscountTotal
  **/
  @ApiModelProperty(example = "null", value = "Sleva na sociálním pojištění [persistentní položka]")
  public Double getSSocInsDiscountTotal() {
    return sSocInsDiscountTotal;
  }

  public Wagelistcommon sHInsFromSurchargeIsPayedBy(Integer sHInsFromSurchargeIsPayedBy) {
    this.sHInsFromSurchargeIsPayedBy = sHInsFromSurchargeIsPayedBy;
    return this;
  }

   /**
   * Zdr.poj.z doplatku platí [persistentní položka]
   * @return sHInsFromSurchargeIsPayedBy
  **/
  @ApiModelProperty(example = "null", value = "Zdr.poj.z doplatku platí [persistentní položka]")
  public Integer getSHInsFromSurchargeIsPayedBy() {
    return sHInsFromSurchargeIsPayedBy;
  }

  public void setSHInsFromSurchargeIsPayedBy(Integer sHInsFromSurchargeIsPayedBy) {
    this.sHInsFromSurchargeIsPayedBy = sHInsFromSurchargeIsPayedBy;
  }

  public Wagelistcommon sHasExtraSIDiscountEdit(Integer sHasExtraSIDiscountEdit) {
    this.sHasExtraSIDiscountEdit = sHasExtraSIDiscountEdit;
    return this;
  }

   /**
   * Má mimořádnou slevu na s.poj. [persistentní položka]
   * @return sHasExtraSIDiscountEdit
  **/
  @ApiModelProperty(example = "null", value = "Má mimořádnou slevu na s.poj. [persistentní položka]")
  public Integer getSHasExtraSIDiscountEdit() {
    return sHasExtraSIDiscountEdit;
  }

  public void setSHasExtraSIDiscountEdit(Integer sHasExtraSIDiscountEdit) {
    this.sHasExtraSIDiscountEdit = sHasExtraSIDiscountEdit;
  }

   /**
   * Kontrola odprac. času DPP [persistentní položka]
   * @return sTotalWorkTimeHardCheck
  **/
  @ApiModelProperty(example = "null", value = "Kontrola odprac. času DPP [persistentní položka]")
  public Double getSTotalWorkTimeHardCheck() {
    return sTotalWorkTimeHardCheck;
  }

   /**
   * SP zaměstnavatel zák.sazba [persistentní položka]
   * @return sSocialInsCompanyBaseRate
  **/
  @ApiModelProperty(example = "null", value = "SP zaměstnavatel zák.sazba [persistentní položka]")
  public Double getSSocialInsCompanyBaseRate() {
    return sSocialInsCompanyBaseRate;
  }

   /**
   * Příjmy z DPP [persistentní položka]
   * @return sAgreementIncome
  **/
  @ApiModelProperty(example = "null", value = "Příjmy z DPP [persistentní položka]")
  public Double getSAgreementIncome() {
    return sAgreementIncome;
  }

   /**
   * Důchodové spoření [persistentní položka]
   * @return sRetSavings
  **/
  @ApiModelProperty(example = "null", value = "Důchodové spoření [persistentní položka]")
  public Double getSRetSavings() {
    return sRetSavings;
  }

  public Wagelistcommon sSolidarityTaxIncrease(Double sSolidarityTaxIncrease) {
    this.sSolidarityTaxIncrease = sSolidarityTaxIncrease;
    return this;
  }

   /**
   * Solidární navýšení daně [persistentní položka]
   * @return sSolidarityTaxIncrease
  **/
  @ApiModelProperty(example = "null", value = "Solidární navýšení daně [persistentní položka]")
  public Double getSSolidarityTaxIncrease() {
    return sSolidarityTaxIncrease;
  }

  public void setSSolidarityTaxIncrease(Double sSolidarityTaxIncrease) {
    this.sSolidarityTaxIncrease = sSolidarityTaxIncrease;
  }

  public Wagelistcommon sSolidarityTaxIncreaseBase(Double sSolidarityTaxIncreaseBase) {
    this.sSolidarityTaxIncreaseBase = sSolidarityTaxIncreaseBase;
    return this;
  }

   /**
   * Základ solid. nav.daně [persistentní položka]
   * @return sSolidarityTaxIncreaseBase
  **/
  @ApiModelProperty(example = "null", value = "Základ solid. nav.daně [persistentní položka]")
  public Double getSSolidarityTaxIncreaseBase() {
    return sSolidarityTaxIncreaseBase;
  }

  public void setSSolidarityTaxIncreaseBase(Double sSolidarityTaxIncreaseBase) {
    this.sSolidarityTaxIncreaseBase = sSolidarityTaxIncreaseBase;
  }

   /**
   * Základ solid.nav.daně-celkem [persistentní položka]
   * @return sSolidarityTaxIncrBaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Základ solid.nav.daně-celkem [persistentní položka]")
  public Double getSSolidarityTaxIncrBaseTotal() {
    return sSolidarityTaxIncrBaseTotal;
  }

   /**
   * Solidární nav.daně-celkem [persistentní položka]
   * @return sSolidarityTaxIncreaseTotal
  **/
  @ApiModelProperty(example = "null", value = "Solidární nav.daně-celkem [persistentní položka]")
  public Double getSSolidarityTaxIncreaseTotal() {
    return sSolidarityTaxIncreaseTotal;
  }

   /**
   * Příjmy z PP malého rozsahu [persistentní položka]
   * @return sPartTimeIncome
  **/
  @ApiModelProperty(example = "null", value = "Příjmy z PP malého rozsahu [persistentní položka]")
  public Double getSPartTimeIncome() {
    return sPartTimeIncome;
  }

  public Wagelistcommon sDepositTaxRefund(Double sDepositTaxRefund) {
    this.sDepositTaxRefund = sDepositTaxRefund;
    return this;
  }

   /**
   * Nezohledněné slevy [persistentní položka]
   * @return sDepositTaxRefund
  **/
  @ApiModelProperty(example = "null", value = "Nezohledněné slevy [persistentní položka]")
  public Double getSDepositTaxRefund() {
    return sDepositTaxRefund;
  }

  public void setSDepositTaxRefund(Double sDepositTaxRefund) {
    this.sDepositTaxRefund = sDepositTaxRefund;
  }

   /**
   * Příjmy z DPČ [persistentní položka]
   * @return sWorkActivityIncome
  **/
  @ApiModelProperty(example = "null", value = "Příjmy z DPČ [persistentní položka]")
  public Double getSWorkActivityIncome() {
    return sWorkActivityIncome;
  }

   /**
   * Č.příj. pro sr.vč. doh. celkem [persistentní položka]
   * @return sNetWageForDocksFullTotal
  **/
  @ApiModelProperty(example = "null", value = "Č.příj. pro sr.vč. doh. celkem [persistentní položka]")
  public Double getSNetWageForDocksFullTotal() {
    return sNetWageForDocksFullTotal;
  }

  public Wagelistcommon sNetWageForDocksFull(Double sNetWageForDocksFull) {
    this.sNetWageForDocksFull = sNetWageForDocksFull;
    return this;
  }

   /**
   * Č.příj. pro srážky vč.dohod [persistentní položka]
   * @return sNetWageForDocksFull
  **/
  @ApiModelProperty(example = "null", value = "Č.příj. pro srážky vč.dohod [persistentní položka]")
  public Double getSNetWageForDocksFull() {
    return sNetWageForDocksFull;
  }

  public void setSNetWageForDocksFull(Double sNetWageForDocksFull) {
    this.sNetWageForDocksFull = sNetWageForDocksFull;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wagelistcommon wagelistcommon = (Wagelistcommon) o;
    return Objects.equals(this.displayName, wagelistcommon.displayName) &&
        Objects.equals(this.ID, wagelistcommon.ID) &&
        Objects.equals(this.classID, wagelistcommon.classID) &&
        Objects.equals(this.objVersion, wagelistcommon.objVersion) &&
        Objects.equals(this.docQueueID, wagelistcommon.docQueueID) &&
        Objects.equals(this.periodID, wagelistcommon.periodID) &&
        Objects.equals(this.ordNumber, wagelistcommon.ordNumber) &&
        Objects.equals(this.docDateDATE, wagelistcommon.docDateDATE) &&
        Objects.equals(this.createdByID, wagelistcommon.createdByID) &&
        Objects.equals(this.correctedByID, wagelistcommon.correctedByID) &&
        Objects.equals(this.newRelatedType, wagelistcommon.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, wagelistcommon.newRelatedDocumentID) &&
        Objects.equals(this.calcCharts, wagelistcommon.calcCharts) &&
        Objects.equals(this.isComputed, wagelistcommon.isComputed) &&
        Objects.equals(this.wagePeriodID, wagelistcommon.wagePeriodID) &&
        Objects.equals(this.employeeID, wagelistcommon.employeeID) &&
        Objects.equals(this.expenseCompensation, wagelistcommon.expenseCompensation) &&
        Objects.equals(this.annualClearing, wagelistcommon.annualClearing) &&
        Objects.equals(this.yearTaxBonus, wagelistcommon.yearTaxBonus) &&
        Objects.equals(this.wageRestOtherCurr, wagelistcommon.wageRestOtherCurr) &&
        Objects.equals(this.currencyID, wagelistcommon.currencyID) &&
        Objects.equals(this.currRate, wagelistcommon.currRate) &&
        Objects.equals(this.refCurrRate, wagelistcommon.refCurrRate) &&
        Objects.equals(this.coef, wagelistcommon.coef) &&
        Objects.equals(this.localCoef, wagelistcommon.localCoef) &&
        Objects.equals(this.zoneID, wagelistcommon.zoneID) &&
        Objects.equals(this.localZoneID, wagelistcommon.localZoneID) &&
        Objects.equals(this.currAmount, wagelistcommon.currAmount) &&
        Objects.equals(this.extraTaxTotal, wagelistcommon.extraTaxTotal) &&
        Objects.equals(this.depositTaxTotal, wagelistcommon.depositTaxTotal) &&
        Objects.equals(this.socialInsEmployee, wagelistcommon.socialInsEmployee) &&
        Objects.equals(this.healthInsEmployee, wagelistcommon.healthInsEmployee) &&
        Objects.equals(this.grossWageTotal, wagelistcommon.grossWageTotal) &&
        Objects.equals(this.refCurrencyID, wagelistcommon.refCurrencyID) &&
        Objects.equals(this.localRefCurrencyID, wagelistcommon.localRefCurrencyID) &&
        Objects.equals(this.wageListFrom, wagelistcommon.wageListFrom) &&
        Objects.equals(this.wageListTo, wagelistcommon.wageListTo) &&
        Objects.equals(this.mainWorkingRelationOID, wagelistcommon.mainWorkingRelationOID) &&
        Objects.equals(this.netWage, wagelistcommon.netWage) &&
        Objects.equals(this.mainWRelationWListPartialID, wagelistcommon.mainWRelationWListPartialID) &&
        Objects.equals(this.hIAnnualClearingEmp, wagelistcommon.hIAnnualClearingEmp) &&
        Objects.equals(this.hIAnnualClearingComp, wagelistcommon.hIAnnualClearingComp) &&
        Objects.equals(this.yearEmployeePremium, wagelistcommon.yearEmployeePremium) &&
        Objects.equals(this.notPaySocIns, wagelistcommon.notPaySocIns) &&
        Objects.equals(this.notPayHealthIns, wagelistcommon.notPayHealthIns) &&
        Objects.equals(this.sUnpaidFreeCalTotal, wagelistcommon.sUnpaidFreeCalTotal) &&
        Objects.equals(this.sHealthInsBaseAbsences, wagelistcommon.sHealthInsBaseAbsences) &&
        Objects.equals(this.sHealthInsBaseUnpaidFree, wagelistcommon.sHealthInsBaseUnpaidFree) &&
        Objects.equals(this.sHealthInsUnpaidFreeDays, wagelistcommon.sHealthInsUnpaidFreeDays) &&
        Objects.equals(this.sHealthInsUnpaidFreeDaysTotal, wagelistcommon.sHealthInsUnpaidFreeDaysTotal) &&
        Objects.equals(this.sHealthInsAbsences, wagelistcommon.sHealthInsAbsences) &&
        Objects.equals(this.sHealthInsUnpaidFreeDock, wagelistcommon.sHealthInsUnpaidFreeDock) &&
        Objects.equals(this.sHealthInsBaseTotal, wagelistcommon.sHealthInsBaseTotal) &&
        Objects.equals(this.sHealthInsMinBase, wagelistcommon.sHealthInsMinBase) &&
        Objects.equals(this.sHealthInsMinBaseTotal, wagelistcommon.sHealthInsMinBaseTotal) &&
        Objects.equals(this.sHealthInsBaseCorrect, wagelistcommon.sHealthInsBaseCorrect) &&
        Objects.equals(this.sHealthInsTotal, wagelistcommon.sHealthInsTotal) &&
        Objects.equals(this.sHealthInsCompany, wagelistcommon.sHealthInsCompany) &&
        Objects.equals(this.sSocialInsBase, wagelistcommon.sSocialInsBase) &&
        Objects.equals(this.sRetFundAmount, wagelistcommon.sRetFundAmount) &&
        Objects.equals(this.sRetFundTaxBase, wagelistcommon.sRetFundTaxBase) &&
        Objects.equals(this.sRetFundTaxExpense, wagelistcommon.sRetFundTaxExpense) &&
        Objects.equals(this.sRetFundSocialExpense, wagelistcommon.sRetFundSocialExpense) &&
        Objects.equals(this.sLifeInsAmount, wagelistcommon.sLifeInsAmount) &&
        Objects.equals(this.sLifeInsTaxBase, wagelistcommon.sLifeInsTaxBase) &&
        Objects.equals(this.sLifeInsTaxExpense, wagelistcommon.sLifeInsTaxExpense) &&
        Objects.equals(this.sLifeInsSocialExpense, wagelistcommon.sLifeInsSocialExpense) &&
        Objects.equals(this.sDutyCar, wagelistcommon.sDutyCar) &&
        Objects.equals(this.sDutyCarTotal, wagelistcommon.sDutyCarTotal) &&
        Objects.equals(this.sRent, wagelistcommon.sRent) &&
        Objects.equals(this.sRentTotal, wagelistcommon.sRentTotal) &&
        Objects.equals(this.sInventionReward, wagelistcommon.sInventionReward) &&
        Objects.equals(this.sTaxableIncome, wagelistcommon.sTaxableIncome) &&
        Objects.equals(this.sSmartMoney, wagelistcommon.sSmartMoney) &&
        Objects.equals(this.sTravelCompTotal, wagelistcommon.sTravelCompTotal) &&
        Objects.equals(this.sFlatTravelComp, wagelistcommon.sFlatTravelComp) &&
        Objects.equals(this.sOtherTaxFreeComp, wagelistcommon.sOtherTaxFreeComp) &&
        Objects.equals(this.sExpenseCompTotal, wagelistcommon.sExpenseCompTotal) &&
        Objects.equals(this.sTaxCountOffsTotal, wagelistcommon.sTaxCountOffsTotal) &&
        Objects.equals(this.sTaxBase, wagelistcommon.sTaxBase) &&
        Objects.equals(this.sTaxBaseTotal, wagelistcommon.sTaxBaseTotal) &&
        Objects.equals(this.sDepositTaxDueBase, wagelistcommon.sDepositTaxDueBase) &&
        Objects.equals(this.sIsDepositTax, wagelistcommon.sIsDepositTax) &&
        Objects.equals(this.sDepositTaxBase, wagelistcommon.sDepositTaxBase) &&
        Objects.equals(this.sDepositTax, wagelistcommon.sDepositTax) &&
        Objects.equals(this.sExtraTaxBase, wagelistcommon.sExtraTaxBase) &&
        Objects.equals(this.sExtraTax, wagelistcommon.sExtraTax) &&
        Objects.equals(this.sNetIncome, wagelistcommon.sNetIncome) &&
        Objects.equals(this.sGrossIncome, wagelistcommon.sGrossIncome) &&
        Objects.equals(this.sRetireLimitIncome, wagelistcommon.sRetireLimitIncome) &&
        Objects.equals(this.sMealTicketFullPrice, wagelistcommon.sMealTicketFullPrice) &&
        Objects.equals(this.sMealTicketDisPrice, wagelistcommon.sMealTicketDisPrice) &&
        Objects.equals(this.sWageDeposit, wagelistcommon.sWageDeposit) &&
        Objects.equals(this.sDocksTotal, wagelistcommon.sDocksTotal) &&
        Objects.equals(this.sWageRest, wagelistcommon.sWageRest) &&
        Objects.equals(this.sCurrAmountToAccount, wagelistcommon.sCurrAmountToAccount) &&
        Objects.equals(this.sCurrAmountCash, wagelistcommon.sCurrAmountCash) &&
        Objects.equals(this.sWageToAccount, wagelistcommon.sWageToAccount) &&
        Objects.equals(this.sWageCash, wagelistcommon.sWageCash) &&
        Objects.equals(this.sAtLeastOneIsSocIns, wagelistcommon.sAtLeastOneIsSocIns) &&
        Objects.equals(this.sTaxAdvantage, wagelistcommon.sTaxAdvantage) &&
        Objects.equals(this.sTaxBonusTotal, wagelistcommon.sTaxBonusTotal) &&
        Objects.equals(this.sTaxDiscountTotal, wagelistcommon.sTaxDiscountTotal) &&
        Objects.equals(this.sTaxAdvantageTotal, wagelistcommon.sTaxAdvantageTotal) &&
        Objects.equals(this.sDepositTaxBeforeTaxAdvantage, wagelistcommon.sDepositTaxBeforeTaxAdvantage) &&
        Objects.equals(this.sDemandOnEmployee, wagelistcommon.sDemandOnEmployee) &&
        Objects.equals(this.sDecisiveAmountForTaxBonus, wagelistcommon.sDecisiveAmountForTaxBonus) &&
        Objects.equals(this.sTaxBonusCoef, wagelistcommon.sTaxBonusCoef) &&
        Objects.equals(this.sTaxBonus, wagelistcommon.sTaxBonus) &&
        Objects.equals(this.sIsNonResidentExecutive, wagelistcommon.sIsNonResidentExecutive) &&
        Objects.equals(this.sTaxDiscountGeneral, wagelistcommon.sTaxDiscountGeneral) &&
        Objects.equals(this.sDepositTaxBeforeDiscount, wagelistcommon.sDepositTaxBeforeDiscount) &&
        Objects.equals(this.sTaxDiscountChildren, wagelistcommon.sTaxDiscountChildren) &&
        Objects.equals(this.sUndockableCorrection, wagelistcommon.sUndockableCorrection) &&
        Objects.equals(this.sCalcAvgNetWage, wagelistcommon.sCalcAvgNetWage) &&
        Objects.equals(this.sSocInsBaseLowRate, wagelistcommon.sSocInsBaseLowRate) &&
        Objects.equals(this.sGrossWageForDocksTotal, wagelistcommon.sGrossWageForDocksTotal) &&
        Objects.equals(this.sNetWageForDocksTotal, wagelistcommon.sNetWageForDocksTotal) &&
        Objects.equals(this.sGrossWageForDocks, wagelistcommon.sGrossWageForDocks) &&
        Objects.equals(this.sNetWageForDocks, wagelistcommon.sNetWageForDocks) &&
        Objects.equals(this.sSocialInsMaxBaseTotal, wagelistcommon.sSocialInsMaxBaseTotal) &&
        Objects.equals(this.sHealthInsMaxBaseTotal, wagelistcommon.sHealthInsMaxBaseTotal) &&
        Objects.equals(this.sSocialInsFullBaseTotal, wagelistcommon.sSocialInsFullBaseTotal) &&
        Objects.equals(this.sAtLeastOneIsHealthIns, wagelistcommon.sAtLeastOneIsHealthIns) &&
        Objects.equals(this.sSuperGrossWageTotal, wagelistcommon.sSuperGrossWageTotal) &&
        Objects.equals(this.sSuperGrossWage, wagelistcommon.sSuperGrossWage) &&
        Objects.equals(this.sSocialInsCompany, wagelistcommon.sSocialInsCompany) &&
        Objects.equals(this.sTaxIncomeCorporate, wagelistcommon.sTaxIncomeCorporate) &&
        Objects.equals(this.sTaxIncomeExecutive, wagelistcommon.sTaxIncomeExecutive) &&
        Objects.equals(this.sHealthInsBaseCorporate, wagelistcommon.sHealthInsBaseCorporate) &&
        Objects.equals(this.sHealthInsBaseExecutive, wagelistcommon.sHealthInsBaseExecutive) &&
        Objects.equals(this.sSocialInsBaseExecutive, wagelistcommon.sSocialInsBaseExecutive) &&
        Objects.equals(this.sSocialInsBaseCorporate, wagelistcommon.sSocialInsBaseCorporate) &&
        Objects.equals(this.sExtraTaxDueBase, wagelistcommon.sExtraTaxDueBase) &&
        Objects.equals(this.sTotalWorkTimeCheck, wagelistcommon.sTotalWorkTimeCheck) &&
        Objects.equals(this.sHabitationCosts, wagelistcommon.sHabitationCosts) &&
        Objects.equals(this.sSocialInsMaxBase, wagelistcommon.sSocialInsMaxBase) &&
        Objects.equals(this.sHealthInsMaxBase, wagelistcommon.sHealthInsMaxBase) &&
        Objects.equals(this.sHealthInsBase, wagelistcommon.sHealthInsBase) &&
        Objects.equals(this.sSocialInsFullBase, wagelistcommon.sSocialInsFullBase) &&
        Objects.equals(this.sAtLeastOneHasSIDiscount, wagelistcommon.sAtLeastOneHasSIDiscount) &&
        Objects.equals(this.sSocInsDiscount, wagelistcommon.sSocInsDiscount) &&
        Objects.equals(this.sSocInsDiscountTotal, wagelistcommon.sSocInsDiscountTotal) &&
        Objects.equals(this.sHInsFromSurchargeIsPayedBy, wagelistcommon.sHInsFromSurchargeIsPayedBy) &&
        Objects.equals(this.sHasExtraSIDiscountEdit, wagelistcommon.sHasExtraSIDiscountEdit) &&
        Objects.equals(this.sTotalWorkTimeHardCheck, wagelistcommon.sTotalWorkTimeHardCheck) &&
        Objects.equals(this.sSocialInsCompanyBaseRate, wagelistcommon.sSocialInsCompanyBaseRate) &&
        Objects.equals(this.sAgreementIncome, wagelistcommon.sAgreementIncome) &&
        Objects.equals(this.sRetSavings, wagelistcommon.sRetSavings) &&
        Objects.equals(this.sSolidarityTaxIncrease, wagelistcommon.sSolidarityTaxIncrease) &&
        Objects.equals(this.sSolidarityTaxIncreaseBase, wagelistcommon.sSolidarityTaxIncreaseBase) &&
        Objects.equals(this.sSolidarityTaxIncrBaseTotal, wagelistcommon.sSolidarityTaxIncrBaseTotal) &&
        Objects.equals(this.sSolidarityTaxIncreaseTotal, wagelistcommon.sSolidarityTaxIncreaseTotal) &&
        Objects.equals(this.sPartTimeIncome, wagelistcommon.sPartTimeIncome) &&
        Objects.equals(this.sDepositTaxRefund, wagelistcommon.sDepositTaxRefund) &&
        Objects.equals(this.sWorkActivityIncome, wagelistcommon.sWorkActivityIncome) &&
        Objects.equals(this.sNetWageForDocksFullTotal, wagelistcommon.sNetWageForDocksFullTotal) &&
        Objects.equals(this.sNetWageForDocksFull, wagelistcommon.sNetWageForDocksFull);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, calcCharts, isComputed, wagePeriodID, employeeID, expenseCompensation, annualClearing, yearTaxBonus, wageRestOtherCurr, currencyID, currRate, refCurrRate, coef, localCoef, zoneID, localZoneID, currAmount, extraTaxTotal, depositTaxTotal, socialInsEmployee, healthInsEmployee, grossWageTotal, refCurrencyID, localRefCurrencyID, wageListFrom, wageListTo, mainWorkingRelationOID, netWage, mainWRelationWListPartialID, hIAnnualClearingEmp, hIAnnualClearingComp, yearEmployeePremium, notPaySocIns, notPayHealthIns, sUnpaidFreeCalTotal, sHealthInsBaseAbsences, sHealthInsBaseUnpaidFree, sHealthInsUnpaidFreeDays, sHealthInsUnpaidFreeDaysTotal, sHealthInsAbsences, sHealthInsUnpaidFreeDock, sHealthInsBaseTotal, sHealthInsMinBase, sHealthInsMinBaseTotal, sHealthInsBaseCorrect, sHealthInsTotal, sHealthInsCompany, sSocialInsBase, sRetFundAmount, sRetFundTaxBase, sRetFundTaxExpense, sRetFundSocialExpense, sLifeInsAmount, sLifeInsTaxBase, sLifeInsTaxExpense, sLifeInsSocialExpense, sDutyCar, sDutyCarTotal, sRent, sRentTotal, sInventionReward, sTaxableIncome, sSmartMoney, sTravelCompTotal, sFlatTravelComp, sOtherTaxFreeComp, sExpenseCompTotal, sTaxCountOffsTotal, sTaxBase, sTaxBaseTotal, sDepositTaxDueBase, sIsDepositTax, sDepositTaxBase, sDepositTax, sExtraTaxBase, sExtraTax, sNetIncome, sGrossIncome, sRetireLimitIncome, sMealTicketFullPrice, sMealTicketDisPrice, sWageDeposit, sDocksTotal, sWageRest, sCurrAmountToAccount, sCurrAmountCash, sWageToAccount, sWageCash, sAtLeastOneIsSocIns, sTaxAdvantage, sTaxBonusTotal, sTaxDiscountTotal, sTaxAdvantageTotal, sDepositTaxBeforeTaxAdvantage, sDemandOnEmployee, sDecisiveAmountForTaxBonus, sTaxBonusCoef, sTaxBonus, sIsNonResidentExecutive, sTaxDiscountGeneral, sDepositTaxBeforeDiscount, sTaxDiscountChildren, sUndockableCorrection, sCalcAvgNetWage, sSocInsBaseLowRate, sGrossWageForDocksTotal, sNetWageForDocksTotal, sGrossWageForDocks, sNetWageForDocks, sSocialInsMaxBaseTotal, sHealthInsMaxBaseTotal, sSocialInsFullBaseTotal, sAtLeastOneIsHealthIns, sSuperGrossWageTotal, sSuperGrossWage, sSocialInsCompany, sTaxIncomeCorporate, sTaxIncomeExecutive, sHealthInsBaseCorporate, sHealthInsBaseExecutive, sSocialInsBaseExecutive, sSocialInsBaseCorporate, sExtraTaxDueBase, sTotalWorkTimeCheck, sHabitationCosts, sSocialInsMaxBase, sHealthInsMaxBase, sHealthInsBase, sSocialInsFullBase, sAtLeastOneHasSIDiscount, sSocInsDiscount, sSocInsDiscountTotal, sHInsFromSurchargeIsPayedBy, sHasExtraSIDiscountEdit, sTotalWorkTimeHardCheck, sSocialInsCompanyBaseRate, sAgreementIncome, sRetSavings, sSolidarityTaxIncrease, sSolidarityTaxIncreaseBase, sSolidarityTaxIncrBaseTotal, sSolidarityTaxIncreaseTotal, sPartTimeIncome, sDepositTaxRefund, sWorkActivityIncome, sNetWageForDocksFullTotal, sNetWageForDocksFull);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wagelistcommon {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    calcCharts: ").append(toIndentedString(calcCharts)).append("\n");
    sb.append("    isComputed: ").append(toIndentedString(isComputed)).append("\n");
    sb.append("    wagePeriodID: ").append(toIndentedString(wagePeriodID)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    expenseCompensation: ").append(toIndentedString(expenseCompensation)).append("\n");
    sb.append("    annualClearing: ").append(toIndentedString(annualClearing)).append("\n");
    sb.append("    yearTaxBonus: ").append(toIndentedString(yearTaxBonus)).append("\n");
    sb.append("    wageRestOtherCurr: ").append(toIndentedString(wageRestOtherCurr)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    currRate: ").append(toIndentedString(currRate)).append("\n");
    sb.append("    refCurrRate: ").append(toIndentedString(refCurrRate)).append("\n");
    sb.append("    coef: ").append(toIndentedString(coef)).append("\n");
    sb.append("    localCoef: ").append(toIndentedString(localCoef)).append("\n");
    sb.append("    zoneID: ").append(toIndentedString(zoneID)).append("\n");
    sb.append("    localZoneID: ").append(toIndentedString(localZoneID)).append("\n");
    sb.append("    currAmount: ").append(toIndentedString(currAmount)).append("\n");
    sb.append("    extraTaxTotal: ").append(toIndentedString(extraTaxTotal)).append("\n");
    sb.append("    depositTaxTotal: ").append(toIndentedString(depositTaxTotal)).append("\n");
    sb.append("    socialInsEmployee: ").append(toIndentedString(socialInsEmployee)).append("\n");
    sb.append("    healthInsEmployee: ").append(toIndentedString(healthInsEmployee)).append("\n");
    sb.append("    grossWageTotal: ").append(toIndentedString(grossWageTotal)).append("\n");
    sb.append("    refCurrencyID: ").append(toIndentedString(refCurrencyID)).append("\n");
    sb.append("    localRefCurrencyID: ").append(toIndentedString(localRefCurrencyID)).append("\n");
    sb.append("    wageListFrom: ").append(toIndentedString(wageListFrom)).append("\n");
    sb.append("    wageListTo: ").append(toIndentedString(wageListTo)).append("\n");
    sb.append("    mainWorkingRelationOID: ").append(toIndentedString(mainWorkingRelationOID)).append("\n");
    sb.append("    netWage: ").append(toIndentedString(netWage)).append("\n");
    sb.append("    mainWRelationWListPartialID: ").append(toIndentedString(mainWRelationWListPartialID)).append("\n");
    sb.append("    hIAnnualClearingEmp: ").append(toIndentedString(hIAnnualClearingEmp)).append("\n");
    sb.append("    hIAnnualClearingComp: ").append(toIndentedString(hIAnnualClearingComp)).append("\n");
    sb.append("    yearEmployeePremium: ").append(toIndentedString(yearEmployeePremium)).append("\n");
    sb.append("    notPaySocIns: ").append(toIndentedString(notPaySocIns)).append("\n");
    sb.append("    notPayHealthIns: ").append(toIndentedString(notPayHealthIns)).append("\n");
    sb.append("    sUnpaidFreeCalTotal: ").append(toIndentedString(sUnpaidFreeCalTotal)).append("\n");
    sb.append("    sHealthInsBaseAbsences: ").append(toIndentedString(sHealthInsBaseAbsences)).append("\n");
    sb.append("    sHealthInsBaseUnpaidFree: ").append(toIndentedString(sHealthInsBaseUnpaidFree)).append("\n");
    sb.append("    sHealthInsUnpaidFreeDays: ").append(toIndentedString(sHealthInsUnpaidFreeDays)).append("\n");
    sb.append("    sHealthInsUnpaidFreeDaysTotal: ").append(toIndentedString(sHealthInsUnpaidFreeDaysTotal)).append("\n");
    sb.append("    sHealthInsAbsences: ").append(toIndentedString(sHealthInsAbsences)).append("\n");
    sb.append("    sHealthInsUnpaidFreeDock: ").append(toIndentedString(sHealthInsUnpaidFreeDock)).append("\n");
    sb.append("    sHealthInsBaseTotal: ").append(toIndentedString(sHealthInsBaseTotal)).append("\n");
    sb.append("    sHealthInsMinBase: ").append(toIndentedString(sHealthInsMinBase)).append("\n");
    sb.append("    sHealthInsMinBaseTotal: ").append(toIndentedString(sHealthInsMinBaseTotal)).append("\n");
    sb.append("    sHealthInsBaseCorrect: ").append(toIndentedString(sHealthInsBaseCorrect)).append("\n");
    sb.append("    sHealthInsTotal: ").append(toIndentedString(sHealthInsTotal)).append("\n");
    sb.append("    sHealthInsCompany: ").append(toIndentedString(sHealthInsCompany)).append("\n");
    sb.append("    sSocialInsBase: ").append(toIndentedString(sSocialInsBase)).append("\n");
    sb.append("    sRetFundAmount: ").append(toIndentedString(sRetFundAmount)).append("\n");
    sb.append("    sRetFundTaxBase: ").append(toIndentedString(sRetFundTaxBase)).append("\n");
    sb.append("    sRetFundTaxExpense: ").append(toIndentedString(sRetFundTaxExpense)).append("\n");
    sb.append("    sRetFundSocialExpense: ").append(toIndentedString(sRetFundSocialExpense)).append("\n");
    sb.append("    sLifeInsAmount: ").append(toIndentedString(sLifeInsAmount)).append("\n");
    sb.append("    sLifeInsTaxBase: ").append(toIndentedString(sLifeInsTaxBase)).append("\n");
    sb.append("    sLifeInsTaxExpense: ").append(toIndentedString(sLifeInsTaxExpense)).append("\n");
    sb.append("    sLifeInsSocialExpense: ").append(toIndentedString(sLifeInsSocialExpense)).append("\n");
    sb.append("    sDutyCar: ").append(toIndentedString(sDutyCar)).append("\n");
    sb.append("    sDutyCarTotal: ").append(toIndentedString(sDutyCarTotal)).append("\n");
    sb.append("    sRent: ").append(toIndentedString(sRent)).append("\n");
    sb.append("    sRentTotal: ").append(toIndentedString(sRentTotal)).append("\n");
    sb.append("    sInventionReward: ").append(toIndentedString(sInventionReward)).append("\n");
    sb.append("    sTaxableIncome: ").append(toIndentedString(sTaxableIncome)).append("\n");
    sb.append("    sSmartMoney: ").append(toIndentedString(sSmartMoney)).append("\n");
    sb.append("    sTravelCompTotal: ").append(toIndentedString(sTravelCompTotal)).append("\n");
    sb.append("    sFlatTravelComp: ").append(toIndentedString(sFlatTravelComp)).append("\n");
    sb.append("    sOtherTaxFreeComp: ").append(toIndentedString(sOtherTaxFreeComp)).append("\n");
    sb.append("    sExpenseCompTotal: ").append(toIndentedString(sExpenseCompTotal)).append("\n");
    sb.append("    sTaxCountOffsTotal: ").append(toIndentedString(sTaxCountOffsTotal)).append("\n");
    sb.append("    sTaxBase: ").append(toIndentedString(sTaxBase)).append("\n");
    sb.append("    sTaxBaseTotal: ").append(toIndentedString(sTaxBaseTotal)).append("\n");
    sb.append("    sDepositTaxDueBase: ").append(toIndentedString(sDepositTaxDueBase)).append("\n");
    sb.append("    sIsDepositTax: ").append(toIndentedString(sIsDepositTax)).append("\n");
    sb.append("    sDepositTaxBase: ").append(toIndentedString(sDepositTaxBase)).append("\n");
    sb.append("    sDepositTax: ").append(toIndentedString(sDepositTax)).append("\n");
    sb.append("    sExtraTaxBase: ").append(toIndentedString(sExtraTaxBase)).append("\n");
    sb.append("    sExtraTax: ").append(toIndentedString(sExtraTax)).append("\n");
    sb.append("    sNetIncome: ").append(toIndentedString(sNetIncome)).append("\n");
    sb.append("    sGrossIncome: ").append(toIndentedString(sGrossIncome)).append("\n");
    sb.append("    sRetireLimitIncome: ").append(toIndentedString(sRetireLimitIncome)).append("\n");
    sb.append("    sMealTicketFullPrice: ").append(toIndentedString(sMealTicketFullPrice)).append("\n");
    sb.append("    sMealTicketDisPrice: ").append(toIndentedString(sMealTicketDisPrice)).append("\n");
    sb.append("    sWageDeposit: ").append(toIndentedString(sWageDeposit)).append("\n");
    sb.append("    sDocksTotal: ").append(toIndentedString(sDocksTotal)).append("\n");
    sb.append("    sWageRest: ").append(toIndentedString(sWageRest)).append("\n");
    sb.append("    sCurrAmountToAccount: ").append(toIndentedString(sCurrAmountToAccount)).append("\n");
    sb.append("    sCurrAmountCash: ").append(toIndentedString(sCurrAmountCash)).append("\n");
    sb.append("    sWageToAccount: ").append(toIndentedString(sWageToAccount)).append("\n");
    sb.append("    sWageCash: ").append(toIndentedString(sWageCash)).append("\n");
    sb.append("    sAtLeastOneIsSocIns: ").append(toIndentedString(sAtLeastOneIsSocIns)).append("\n");
    sb.append("    sTaxAdvantage: ").append(toIndentedString(sTaxAdvantage)).append("\n");
    sb.append("    sTaxBonusTotal: ").append(toIndentedString(sTaxBonusTotal)).append("\n");
    sb.append("    sTaxDiscountTotal: ").append(toIndentedString(sTaxDiscountTotal)).append("\n");
    sb.append("    sTaxAdvantageTotal: ").append(toIndentedString(sTaxAdvantageTotal)).append("\n");
    sb.append("    sDepositTaxBeforeTaxAdvantage: ").append(toIndentedString(sDepositTaxBeforeTaxAdvantage)).append("\n");
    sb.append("    sDemandOnEmployee: ").append(toIndentedString(sDemandOnEmployee)).append("\n");
    sb.append("    sDecisiveAmountForTaxBonus: ").append(toIndentedString(sDecisiveAmountForTaxBonus)).append("\n");
    sb.append("    sTaxBonusCoef: ").append(toIndentedString(sTaxBonusCoef)).append("\n");
    sb.append("    sTaxBonus: ").append(toIndentedString(sTaxBonus)).append("\n");
    sb.append("    sIsNonResidentExecutive: ").append(toIndentedString(sIsNonResidentExecutive)).append("\n");
    sb.append("    sTaxDiscountGeneral: ").append(toIndentedString(sTaxDiscountGeneral)).append("\n");
    sb.append("    sDepositTaxBeforeDiscount: ").append(toIndentedString(sDepositTaxBeforeDiscount)).append("\n");
    sb.append("    sTaxDiscountChildren: ").append(toIndentedString(sTaxDiscountChildren)).append("\n");
    sb.append("    sUndockableCorrection: ").append(toIndentedString(sUndockableCorrection)).append("\n");
    sb.append("    sCalcAvgNetWage: ").append(toIndentedString(sCalcAvgNetWage)).append("\n");
    sb.append("    sSocInsBaseLowRate: ").append(toIndentedString(sSocInsBaseLowRate)).append("\n");
    sb.append("    sGrossWageForDocksTotal: ").append(toIndentedString(sGrossWageForDocksTotal)).append("\n");
    sb.append("    sNetWageForDocksTotal: ").append(toIndentedString(sNetWageForDocksTotal)).append("\n");
    sb.append("    sGrossWageForDocks: ").append(toIndentedString(sGrossWageForDocks)).append("\n");
    sb.append("    sNetWageForDocks: ").append(toIndentedString(sNetWageForDocks)).append("\n");
    sb.append("    sSocialInsMaxBaseTotal: ").append(toIndentedString(sSocialInsMaxBaseTotal)).append("\n");
    sb.append("    sHealthInsMaxBaseTotal: ").append(toIndentedString(sHealthInsMaxBaseTotal)).append("\n");
    sb.append("    sSocialInsFullBaseTotal: ").append(toIndentedString(sSocialInsFullBaseTotal)).append("\n");
    sb.append("    sAtLeastOneIsHealthIns: ").append(toIndentedString(sAtLeastOneIsHealthIns)).append("\n");
    sb.append("    sSuperGrossWageTotal: ").append(toIndentedString(sSuperGrossWageTotal)).append("\n");
    sb.append("    sSuperGrossWage: ").append(toIndentedString(sSuperGrossWage)).append("\n");
    sb.append("    sSocialInsCompany: ").append(toIndentedString(sSocialInsCompany)).append("\n");
    sb.append("    sTaxIncomeCorporate: ").append(toIndentedString(sTaxIncomeCorporate)).append("\n");
    sb.append("    sTaxIncomeExecutive: ").append(toIndentedString(sTaxIncomeExecutive)).append("\n");
    sb.append("    sHealthInsBaseCorporate: ").append(toIndentedString(sHealthInsBaseCorporate)).append("\n");
    sb.append("    sHealthInsBaseExecutive: ").append(toIndentedString(sHealthInsBaseExecutive)).append("\n");
    sb.append("    sSocialInsBaseExecutive: ").append(toIndentedString(sSocialInsBaseExecutive)).append("\n");
    sb.append("    sSocialInsBaseCorporate: ").append(toIndentedString(sSocialInsBaseCorporate)).append("\n");
    sb.append("    sExtraTaxDueBase: ").append(toIndentedString(sExtraTaxDueBase)).append("\n");
    sb.append("    sTotalWorkTimeCheck: ").append(toIndentedString(sTotalWorkTimeCheck)).append("\n");
    sb.append("    sHabitationCosts: ").append(toIndentedString(sHabitationCosts)).append("\n");
    sb.append("    sSocialInsMaxBase: ").append(toIndentedString(sSocialInsMaxBase)).append("\n");
    sb.append("    sHealthInsMaxBase: ").append(toIndentedString(sHealthInsMaxBase)).append("\n");
    sb.append("    sHealthInsBase: ").append(toIndentedString(sHealthInsBase)).append("\n");
    sb.append("    sSocialInsFullBase: ").append(toIndentedString(sSocialInsFullBase)).append("\n");
    sb.append("    sAtLeastOneHasSIDiscount: ").append(toIndentedString(sAtLeastOneHasSIDiscount)).append("\n");
    sb.append("    sSocInsDiscount: ").append(toIndentedString(sSocInsDiscount)).append("\n");
    sb.append("    sSocInsDiscountTotal: ").append(toIndentedString(sSocInsDiscountTotal)).append("\n");
    sb.append("    sHInsFromSurchargeIsPayedBy: ").append(toIndentedString(sHInsFromSurchargeIsPayedBy)).append("\n");
    sb.append("    sHasExtraSIDiscountEdit: ").append(toIndentedString(sHasExtraSIDiscountEdit)).append("\n");
    sb.append("    sTotalWorkTimeHardCheck: ").append(toIndentedString(sTotalWorkTimeHardCheck)).append("\n");
    sb.append("    sSocialInsCompanyBaseRate: ").append(toIndentedString(sSocialInsCompanyBaseRate)).append("\n");
    sb.append("    sAgreementIncome: ").append(toIndentedString(sAgreementIncome)).append("\n");
    sb.append("    sRetSavings: ").append(toIndentedString(sRetSavings)).append("\n");
    sb.append("    sSolidarityTaxIncrease: ").append(toIndentedString(sSolidarityTaxIncrease)).append("\n");
    sb.append("    sSolidarityTaxIncreaseBase: ").append(toIndentedString(sSolidarityTaxIncreaseBase)).append("\n");
    sb.append("    sSolidarityTaxIncrBaseTotal: ").append(toIndentedString(sSolidarityTaxIncrBaseTotal)).append("\n");
    sb.append("    sSolidarityTaxIncreaseTotal: ").append(toIndentedString(sSolidarityTaxIncreaseTotal)).append("\n");
    sb.append("    sPartTimeIncome: ").append(toIndentedString(sPartTimeIncome)).append("\n");
    sb.append("    sDepositTaxRefund: ").append(toIndentedString(sDepositTaxRefund)).append("\n");
    sb.append("    sWorkActivityIncome: ").append(toIndentedString(sWorkActivityIncome)).append("\n");
    sb.append("    sNetWageForDocksFullTotal: ").append(toIndentedString(sNetWageForDocksFullTotal)).append("\n");
    sb.append("    sNetWageForDocksFull: ").append(toIndentedString(sNetWageForDocksFull)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

