/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Trmdriver
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Trmdriver   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Person_ID")
  private String personID = null;

  @SerializedName("Division_ID")
  private String divisionID = null;

  @SerializedName("TRMDriverCategory_ID")
  private String tRMDriverCategoryID = null;

  @SerializedName("TRMDriverClass_ID")
  private String tRMDriverClassID = null;

  @SerializedName("DriverName")
  private String driverName = null;

  @SerializedName("DriverNumber")
  private String driverNumber = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Trmdriver hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Trmdriver personID(String personID) {
    this.personID = personID;
    return this;
  }

   /**
   * Osoba; ID objektu Osoba [persistentní položka]
   * @return personID
  **/
  @ApiModelProperty(example = "null", value = "Osoba; ID objektu Osoba [persistentní položka]")
  public String getPersonID() {
    return personID;
  }

  public void setPersonID(String personID) {
    this.personID = personID;
  }

  public Trmdriver divisionID(String divisionID) {
    this.divisionID = divisionID;
    return this;
  }

   /**
   * Středisko; ID objektu Středisko [persistentní položka]
   * @return divisionID
  **/
  @ApiModelProperty(example = "null", value = "Středisko; ID objektu Středisko [persistentní položka]")
  public String getDivisionID() {
    return divisionID;
  }

  public void setDivisionID(String divisionID) {
    this.divisionID = divisionID;
  }

  public Trmdriver tRMDriverCategoryID(String tRMDriverCategoryID) {
    this.tRMDriverCategoryID = tRMDriverCategoryID;
    return this;
  }

   /**
   * Kategorie; ID objektu Kategorie řidiče [persistentní položka]
   * @return tRMDriverCategoryID
  **/
  @ApiModelProperty(example = "null", value = "Kategorie; ID objektu Kategorie řidiče [persistentní položka]")
  public String getTRMDriverCategoryID() {
    return tRMDriverCategoryID;
  }

  public void setTRMDriverCategoryID(String tRMDriverCategoryID) {
    this.tRMDriverCategoryID = tRMDriverCategoryID;
  }

  public Trmdriver tRMDriverClassID(String tRMDriverClassID) {
    this.tRMDriverClassID = tRMDriverClassID;
    return this;
  }

   /**
   * Třída; ID objektu Třída řidiče [persistentní položka]
   * @return tRMDriverClassID
  **/
  @ApiModelProperty(example = "null", value = "Třída; ID objektu Třída řidiče [persistentní položka]")
  public String getTRMDriverClassID() {
    return tRMDriverClassID;
  }

  public void setTRMDriverClassID(String tRMDriverClassID) {
    this.tRMDriverClassID = tRMDriverClassID;
  }

  public Trmdriver driverName(String driverName) {
    this.driverName = driverName;
    return this;
  }

   /**
   * Řidič
   * @return driverName
  **/
  @ApiModelProperty(example = "null", value = "Řidič")
  public String getDriverName() {
    return driverName;
  }

  public void setDriverName(String driverName) {
    this.driverName = driverName;
  }

  public Trmdriver driverNumber(String driverNumber) {
    this.driverNumber = driverNumber;
    return this;
  }

   /**
   * Osob.číslo
   * @return driverNumber
  **/
  @ApiModelProperty(example = "null", value = "Osob.číslo")
  public String getDriverNumber() {
    return driverNumber;
  }

  public void setDriverNumber(String driverNumber) {
    this.driverNumber = driverNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Trmdriver trmdriver = (Trmdriver) o;
    return Objects.equals(this.displayName, trmdriver.displayName) &&
        Objects.equals(this.ID, trmdriver.ID) &&
        Objects.equals(this.classID, trmdriver.classID) &&
        Objects.equals(this.objVersion, trmdriver.objVersion) &&
        Objects.equals(this.hidden, trmdriver.hidden) &&
        Objects.equals(this.personID, trmdriver.personID) &&
        Objects.equals(this.divisionID, trmdriver.divisionID) &&
        Objects.equals(this.tRMDriverCategoryID, trmdriver.tRMDriverCategoryID) &&
        Objects.equals(this.tRMDriverClassID, trmdriver.tRMDriverClassID) &&
        Objects.equals(this.driverName, trmdriver.driverName) &&
        Objects.equals(this.driverNumber, trmdriver.driverNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, personID, divisionID, tRMDriverCategoryID, tRMDriverClassID, driverName, driverNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Trmdriver {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    personID: ").append(toIndentedString(personID)).append("\n");
    sb.append("    divisionID: ").append(toIndentedString(divisionID)).append("\n");
    sb.append("    tRMDriverCategoryID: ").append(toIndentedString(tRMDriverCategoryID)).append("\n");
    sb.append("    tRMDriverClassID: ").append(toIndentedString(tRMDriverClassID)).append("\n");
    sb.append("    driverName: ").append(toIndentedString(driverName)).append("\n");
    sb.append("    driverNumber: ").append(toIndentedString(driverNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

