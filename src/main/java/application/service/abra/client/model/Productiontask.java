/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Productiontask
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Productiontask   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Productiontaskrow> rows = new ArrayList<Productiontaskrow>();

  @SerializedName("StoreCard_ID")
  private String storeCardID = null;

  @SerializedName("Store_ID")
  private String storeID = null;

  @SerializedName("PlannedQuantity")
  private Double plannedQuantity = null;

  @SerializedName("DeadLine$DATE")
  private DateTime deadLineDATE = null;

  @SerializedName("Quantity")
  private Double quantity = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("Ordnumber")
  private Integer ordnumber = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("OwnerType")
  private Integer ownerType = null;

  @SerializedName("CreatedAt$DATE")
  private DateTime createdAtDATE = null;

  @SerializedName("CorrectedAt$DATE")
  private DateTime correctedAtDATE = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Productiontask rows(List<Productiontaskrow> rows) {
    this.rows = rows;
    return this;
  }

  public Productiontask addRowsItem(Productiontaskrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Výrobní úloha - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Výrobní úloha - řádek [nepersistentní položka]")
  public List<Productiontaskrow> getRows() {
    return rows;
  }

  public void setRows(List<Productiontaskrow> rows) {
    this.rows = rows;
  }

  public Productiontask storeCardID(String storeCardID) {
    this.storeCardID = storeCardID;
    return this;
  }

   /**
   * Skl. karta výrobku; ID objektu Skladová karta [persistentní položka]
   * @return storeCardID
  **/
  @ApiModelProperty(example = "null", value = "Skl. karta výrobku; ID objektu Skladová karta [persistentní položka]")
  public String getStoreCardID() {
    return storeCardID;
  }

  public void setStoreCardID(String storeCardID) {
    this.storeCardID = storeCardID;
  }

  public Productiontask storeID(String storeID) {
    this.storeID = storeID;
    return this;
  }

   /**
   * Sklad výrobku; ID objektu Sklad [persistentní položka]
   * @return storeID
  **/
  @ApiModelProperty(example = "null", value = "Sklad výrobku; ID objektu Sklad [persistentní položka]")
  public String getStoreID() {
    return storeID;
  }

  public void setStoreID(String storeID) {
    this.storeID = storeID;
  }

  public Productiontask plannedQuantity(Double plannedQuantity) {
    this.plannedQuantity = plannedQuantity;
    return this;
  }

   /**
   * Plánováno [persistentní položka]
   * @return plannedQuantity
  **/
  @ApiModelProperty(example = "null", value = "Plánováno [persistentní položka]")
  public Double getPlannedQuantity() {
    return plannedQuantity;
  }

  public void setPlannedQuantity(Double plannedQuantity) {
    this.plannedQuantity = plannedQuantity;
  }

  public Productiontask deadLineDATE(DateTime deadLineDATE) {
    this.deadLineDATE = deadLineDATE;
    return this;
  }

   /**
   * Termín [persistentní položka]
   * @return deadLineDATE
  **/
  @ApiModelProperty(example = "null", value = "Termín [persistentní položka]")
  public DateTime getDeadLineDATE() {
    return deadLineDATE;
  }

  public void setDeadLineDATE(DateTime deadLineDATE) {
    this.deadLineDATE = deadLineDATE;
  }

  public Productiontask quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Přijato výrobků [persistentní položka]
   * @return quantity
  **/
  @ApiModelProperty(example = "null", value = "Přijato výrobků [persistentní položka]")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public Productiontask docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Productiontask periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Productiontask ordnumber(Integer ordnumber) {
    this.ordnumber = ordnumber;
    return this;
  }

   /**
   * Číslo dokladu [persistentní položka]
   * @return ordnumber
  **/
  @ApiModelProperty(example = "null", value = "Číslo dokladu [persistentní položka]")
  public Integer getOrdnumber() {
    return ordnumber;
  }

  public void setOrdnumber(Integer ordnumber) {
    this.ordnumber = ordnumber;
  }

  public Productiontask text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Text [persistentní položka]
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "Text [persistentní položka]")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Productiontask ownerType(Integer ownerType) {
    this.ownerType = ownerType;
    return this;
  }

   /**
   * Typ vlastníka [persistentní položka]
   * @return ownerType
  **/
  @ApiModelProperty(example = "null", value = "Typ vlastníka [persistentní položka]")
  public Integer getOwnerType() {
    return ownerType;
  }

  public void setOwnerType(Integer ownerType) {
    this.ownerType = ownerType;
  }

  public Productiontask createdAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return createdAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreatedAtDATE() {
    return createdAtDATE;
  }

  public void setCreatedAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
  }

  public Productiontask correctedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
    return this;
  }

   /**
   * Opraveno [persistentní položka]
   * @return correctedAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraveno [persistentní položka]")
  public DateTime getCorrectedAtDATE() {
    return correctedAtDATE;
  }

  public void setCorrectedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Productiontask productiontask = (Productiontask) o;
    return Objects.equals(this.displayName, productiontask.displayName) &&
        Objects.equals(this.ID, productiontask.ID) &&
        Objects.equals(this.classID, productiontask.classID) &&
        Objects.equals(this.objVersion, productiontask.objVersion) &&
        Objects.equals(this.rows, productiontask.rows) &&
        Objects.equals(this.storeCardID, productiontask.storeCardID) &&
        Objects.equals(this.storeID, productiontask.storeID) &&
        Objects.equals(this.plannedQuantity, productiontask.plannedQuantity) &&
        Objects.equals(this.deadLineDATE, productiontask.deadLineDATE) &&
        Objects.equals(this.quantity, productiontask.quantity) &&
        Objects.equals(this.docQueueID, productiontask.docQueueID) &&
        Objects.equals(this.periodID, productiontask.periodID) &&
        Objects.equals(this.ordnumber, productiontask.ordnumber) &&
        Objects.equals(this.text, productiontask.text) &&
        Objects.equals(this.ownerType, productiontask.ownerType) &&
        Objects.equals(this.createdAtDATE, productiontask.createdAtDATE) &&
        Objects.equals(this.correctedAtDATE, productiontask.correctedAtDATE);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, storeCardID, storeID, plannedQuantity, deadLineDATE, quantity, docQueueID, periodID, ordnumber, text, ownerType, createdAtDATE, correctedAtDATE);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Productiontask {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    storeCardID: ").append(toIndentedString(storeCardID)).append("\n");
    sb.append("    storeID: ").append(toIndentedString(storeID)).append("\n");
    sb.append("    plannedQuantity: ").append(toIndentedString(plannedQuantity)).append("\n");
    sb.append("    deadLineDATE: ").append(toIndentedString(deadLineDATE)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordnumber: ").append(toIndentedString(ordnumber)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    ownerType: ").append(toIndentedString(ownerType)).append("\n");
    sb.append("    createdAtDATE: ").append(toIndentedString(createdAtDATE)).append("\n");
    sb.append("    correctedAtDATE: ").append(toIndentedString(correctedAtDATE)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

