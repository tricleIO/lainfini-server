/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Importmgrparams
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Importmgrparams   {
  @SerializedName("output_document")
  private Id outputDocument = null;

  @SerializedName("input_document")
  private Id inputDocument = null;

  @SerializedName("params")
  private Object params = null;

  public Importmgrparams outputDocument(Id outputDocument) {
    this.outputDocument = outputDocument;
    return this;
  }

   /**
   * Get outputDocument
   * @return outputDocument
  **/
  @ApiModelProperty(example = "null", value = "")
  public Id getOutputDocument() {
    return outputDocument;
  }

  public void setOutputDocument(Id outputDocument) {
    this.outputDocument = outputDocument;
  }

  public Importmgrparams inputDocument(Id inputDocument) {
    this.inputDocument = inputDocument;
    return this;
  }

   /**
   * ID importovaného dokladu, nebo pole ID importovaných dokladů (v případě importu více dokladů do jednoho)
   * @return inputDocument
  **/
  @ApiModelProperty(example = "null", value = "ID importovaného dokladu, nebo pole ID importovaných dokladů (v případě importu více dokladů do jednoho)")
  public Id getInputDocument() {
    return inputDocument;
  }

  public void setInputDocument(Id inputDocument) {
    this.inputDocument = inputDocument;
  }

  public Importmgrparams params(Object params) {
    this.params = params;
    return this;
  }

   /**
   * Objekt parametrů importního manažera. Název parametru je vlastností objektu, jeho hodnota je hodnotou vlastnosti.
   * @return params
  **/
  @ApiModelProperty(example = "null", value = "Objekt parametrů importního manažera. Název parametru je vlastností objektu, jeho hodnota je hodnotou vlastnosti.")
  public Object getParams() {
    return params;
  }

  public void setParams(Object params) {
    this.params = params;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Importmgrparams importmgrparams = (Importmgrparams) o;
    return Objects.equals(this.outputDocument, importmgrparams.outputDocument) &&
        Objects.equals(this.inputDocument, importmgrparams.inputDocument) &&
        Objects.equals(this.params, importmgrparams.params);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outputDocument, inputDocument, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Importmgrparams {\n");
    
    sb.append("    outputDocument: ").append(toIndentedString(outputDocument)).append("\n");
    sb.append("    inputDocument: ").append(toIndentedString(inputDocument)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

