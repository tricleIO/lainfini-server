/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Fastsearchdefinition
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Fastsearchdefinition   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("boclsid")
  private String boclsid = null;

  @SerializedName("tablename")
  private String tablename = null;

  @SerializedName("indexes")
  private List<Fastsearchdefinitionindex> indexes = new ArrayList<Fastsearchdefinitionindex>();

  @SerializedName("dbtablename")
  private String dbtablename = null;

  @SerializedName("boname")
  private String boname = null;

  @SerializedName("sitename")
  private String sitename = null;

  @SerializedName("createdat$date")
  private DateTime createdatdate = null;

  @SerializedName("correctedat$date")
  private DateTime correctedatdate = null;

  @SerializedName("createdby_id")
  private String createdbyId = null;

  @SerializedName("correctedby_id")
  private String correctedbyId = null;

  public Fastsearchdefinition displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Fastsearchdefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Fastsearchdefinition classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Fastsearchdefinition objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Fastsearchdefinition boclsid(String boclsid) {
    this.boclsid = boclsid;
    return this;
  }

   /**
   * třída [persistentní položka]
   * @return boclsid
  **/
  @ApiModelProperty(example = "null", value = "třída [persistentní položka]")
  public String getBoclsid() {
    return boclsid;
  }

  public void setBoclsid(String boclsid) {
    this.boclsid = boclsid;
  }

  public Fastsearchdefinition tablename(String tablename) {
    this.tablename = tablename;
    return this;
  }

   /**
   * tabulka [persistentní položka]
   * @return tablename
  **/
  @ApiModelProperty(example = "null", value = "tabulka [persistentní položka]")
  public String getTablename() {
    return tablename;
  }

  public void setTablename(String tablename) {
    this.tablename = tablename;
  }

  public Fastsearchdefinition indexes(List<Fastsearchdefinitionindex> indexes) {
    this.indexes = indexes;
    return this;
  }

  public Fastsearchdefinition addIndexesItem(Fastsearchdefinitionindex indexesItem) {
    this.indexes.add(indexesItem);
    return this;
  }

   /**
   * indexy; kolekce bo fulltextové hledání - definice položky [nepersistentní položka]
   * @return indexes
  **/
  @ApiModelProperty(example = "null", value = "indexy; kolekce bo fulltextové hledání - definice položky [nepersistentní položka]")
  public List<Fastsearchdefinitionindex> getIndexes() {
    return indexes;
  }

  public void setIndexes(List<Fastsearchdefinitionindex> indexes) {
    this.indexes = indexes;
  }

  public Fastsearchdefinition dbtablename(String dbtablename) {
    this.dbtablename = dbtablename;
    return this;
  }

   /**
   * db. tabulka
   * @return dbtablename
  **/
  @ApiModelProperty(example = "null", value = "db. tabulka")
  public String getDbtablename() {
    return dbtablename;
  }

  public void setDbtablename(String dbtablename) {
    this.dbtablename = dbtablename;
  }

  public Fastsearchdefinition boname(String boname) {
    this.boname = boname;
    return this;
  }

   /**
   * název třídy
   * @return boname
  **/
  @ApiModelProperty(example = "null", value = "název třídy")
  public String getBoname() {
    return boname;
  }

  public void setBoname(String boname) {
    this.boname = boname;
  }

  public Fastsearchdefinition sitename(String sitename) {
    this.sitename = sitename;
    return this;
  }

   /**
   * název agendy
   * @return sitename
  **/
  @ApiModelProperty(example = "null", value = "název agendy")
  public String getSitename() {
    return sitename;
  }

  public void setSitename(String sitename) {
    this.sitename = sitename;
  }

  public Fastsearchdefinition createdatdate(DateTime createdatdate) {
    this.createdatdate = createdatdate;
    return this;
  }

   /**
   * vytvořeno [persistentní položka]
   * @return createdatdate
  **/
  @ApiModelProperty(example = "null", value = "vytvořeno [persistentní položka]")
  public DateTime getCreatedatdate() {
    return createdatdate;
  }

  public void setCreatedatdate(DateTime createdatdate) {
    this.createdatdate = createdatdate;
  }

  public Fastsearchdefinition correctedatdate(DateTime correctedatdate) {
    this.correctedatdate = correctedatdate;
    return this;
  }

   /**
   * opraveno [persistentní položka]
   * @return correctedatdate
  **/
  @ApiModelProperty(example = "null", value = "opraveno [persistentní položka]")
  public DateTime getCorrectedatdate() {
    return correctedatdate;
  }

  public void setCorrectedatdate(DateTime correctedatdate) {
    this.correctedatdate = correctedatdate;
  }

  public Fastsearchdefinition createdbyId(String createdbyId) {
    this.createdbyId = createdbyId;
    return this;
  }

   /**
   * vytvořil; id objektu uživatel [persistentní položka]
   * @return createdbyId
  **/
  @ApiModelProperty(example = "null", value = "vytvořil; id objektu uživatel [persistentní položka]")
  public String getCreatedbyId() {
    return createdbyId;
  }

  public void setCreatedbyId(String createdbyId) {
    this.createdbyId = createdbyId;
  }

  public Fastsearchdefinition correctedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
    return this;
  }

   /**
   * opravil; id objektu uživatel [persistentní položka]
   * @return correctedbyId
  **/
  @ApiModelProperty(example = "null", value = "opravil; id objektu uživatel [persistentní položka]")
  public String getCorrectedbyId() {
    return correctedbyId;
  }

  public void setCorrectedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fastsearchdefinition fastsearchdefinition = (Fastsearchdefinition) o;
    return Objects.equals(this.displayname, fastsearchdefinition.displayname) &&
        Objects.equals(this.id, fastsearchdefinition.id) &&
        Objects.equals(this.classid, fastsearchdefinition.classid) &&
        Objects.equals(this.objversion, fastsearchdefinition.objversion) &&
        Objects.equals(this.boclsid, fastsearchdefinition.boclsid) &&
        Objects.equals(this.tablename, fastsearchdefinition.tablename) &&
        Objects.equals(this.indexes, fastsearchdefinition.indexes) &&
        Objects.equals(this.dbtablename, fastsearchdefinition.dbtablename) &&
        Objects.equals(this.boname, fastsearchdefinition.boname) &&
        Objects.equals(this.sitename, fastsearchdefinition.sitename) &&
        Objects.equals(this.createdatdate, fastsearchdefinition.createdatdate) &&
        Objects.equals(this.correctedatdate, fastsearchdefinition.correctedatdate) &&
        Objects.equals(this.createdbyId, fastsearchdefinition.createdbyId) &&
        Objects.equals(this.correctedbyId, fastsearchdefinition.correctedbyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, boclsid, tablename, indexes, dbtablename, boname, sitename, createdatdate, correctedatdate, createdbyId, correctedbyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fastsearchdefinition {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    boclsid: ").append(toIndentedString(boclsid)).append("\n");
    sb.append("    tablename: ").append(toIndentedString(tablename)).append("\n");
    sb.append("    indexes: ").append(toIndentedString(indexes)).append("\n");
    sb.append("    dbtablename: ").append(toIndentedString(dbtablename)).append("\n");
    sb.append("    boname: ").append(toIndentedString(boname)).append("\n");
    sb.append("    sitename: ").append(toIndentedString(sitename)).append("\n");
    sb.append("    createdatdate: ").append(toIndentedString(createdatdate)).append("\n");
    sb.append("    correctedatdate: ").append(toIndentedString(correctedatdate)).append("\n");
    sb.append("    createdbyId: ").append(toIndentedString(createdbyId)).append("\n");
    sb.append("    correctedbyId: ").append(toIndentedString(correctedbyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

