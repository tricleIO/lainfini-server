/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Additionalcosts
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Additionalcosts   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("CustomsAmount")
  private Double customsAmount = null;

  @SerializedName("SpendingTaxAmount")
  private Double spendingTaxAmount = null;

  @SerializedName("TransportationAmount")
  private Double transportationAmount = null;

  @SerializedName("OtherCostAmount")
  private Double otherCostAmount = null;

  @SerializedName("CustomsTariff")
  private Double customsTariff = null;

  @SerializedName("OtherCostTariff")
  private Double otherCostTariff = null;

  @SerializedName("SpendingTaxTariff")
  private Double spendingTaxTariff = null;

  @SerializedName("TransportationTariff")
  private Double transportationTariff = null;

  @SerializedName("TransportationUsed")
  private Boolean transportationUsed = null;

  @SerializedName("OtherCostUsed")
  private Boolean otherCostUsed = null;

  @SerializedName("TransportationIsLocal")
  private Boolean transportationIsLocal = null;

  @SerializedName("OtherCostIsLocal")
  private Boolean otherCostIsLocal = null;

  @SerializedName("CustomsIsLocal")
  private Boolean customsIsLocal = null;

  @SerializedName("SpendingTaxIsLocal")
  private Boolean spendingTaxIsLocal = null;

  @SerializedName("IntrastatAffectKind")
  private Integer intrastatAffectKind = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Additionalcosts customsAmount(Double customsAmount) {
    this.customsAmount = customsAmount;
    return this;
  }

   /**
   * Clo [persistentní položka]
   * @return customsAmount
  **/
  @ApiModelProperty(example = "null", value = "Clo [persistentní položka]")
  public Double getCustomsAmount() {
    return customsAmount;
  }

  public void setCustomsAmount(Double customsAmount) {
    this.customsAmount = customsAmount;
  }

  public Additionalcosts spendingTaxAmount(Double spendingTaxAmount) {
    this.spendingTaxAmount = spendingTaxAmount;
    return this;
  }

   /**
   * Proc.náklady [persistentní položka]
   * @return spendingTaxAmount
  **/
  @ApiModelProperty(example = "null", value = "Proc.náklady [persistentní položka]")
  public Double getSpendingTaxAmount() {
    return spendingTaxAmount;
  }

  public void setSpendingTaxAmount(Double spendingTaxAmount) {
    this.spendingTaxAmount = spendingTaxAmount;
  }

  public Additionalcosts transportationAmount(Double transportationAmount) {
    this.transportationAmount = transportationAmount;
    return this;
  }

   /**
   * Doprava [persistentní položka]
   * @return transportationAmount
  **/
  @ApiModelProperty(example = "null", value = "Doprava [persistentní položka]")
  public Double getTransportationAmount() {
    return transportationAmount;
  }

  public void setTransportationAmount(Double transportationAmount) {
    this.transportationAmount = transportationAmount;
  }

  public Additionalcosts otherCostAmount(Double otherCostAmount) {
    this.otherCostAmount = otherCostAmount;
    return this;
  }

   /**
   * Ostatní náklady [persistentní položka]
   * @return otherCostAmount
  **/
  @ApiModelProperty(example = "null", value = "Ostatní náklady [persistentní položka]")
  public Double getOtherCostAmount() {
    return otherCostAmount;
  }

  public void setOtherCostAmount(Double otherCostAmount) {
    this.otherCostAmount = otherCostAmount;
  }

  public Additionalcosts customsTariff(Double customsTariff) {
    this.customsTariff = customsTariff;
    return this;
  }

   /**
   * Clo - sazba [persistentní položka]
   * @return customsTariff
  **/
  @ApiModelProperty(example = "null", value = "Clo - sazba [persistentní položka]")
  public Double getCustomsTariff() {
    return customsTariff;
  }

  public void setCustomsTariff(Double customsTariff) {
    this.customsTariff = customsTariff;
  }

  public Additionalcosts otherCostTariff(Double otherCostTariff) {
    this.otherCostTariff = otherCostTariff;
    return this;
  }

   /**
   * Ost.nákl. - sazba [persistentní položka]
   * @return otherCostTariff
  **/
  @ApiModelProperty(example = "null", value = "Ost.nákl. - sazba [persistentní položka]")
  public Double getOtherCostTariff() {
    return otherCostTariff;
  }

  public void setOtherCostTariff(Double otherCostTariff) {
    this.otherCostTariff = otherCostTariff;
  }

  public Additionalcosts spendingTaxTariff(Double spendingTaxTariff) {
    this.spendingTaxTariff = spendingTaxTariff;
    return this;
  }

   /**
   * Proc.náklady - sazba [persistentní položka]
   * @return spendingTaxTariff
  **/
  @ApiModelProperty(example = "null", value = "Proc.náklady - sazba [persistentní položka]")
  public Double getSpendingTaxTariff() {
    return spendingTaxTariff;
  }

  public void setSpendingTaxTariff(Double spendingTaxTariff) {
    this.spendingTaxTariff = spendingTaxTariff;
  }

  public Additionalcosts transportationTariff(Double transportationTariff) {
    this.transportationTariff = transportationTariff;
    return this;
  }

   /**
   * Doprava - sazba [persistentní položka]
   * @return transportationTariff
  **/
  @ApiModelProperty(example = "null", value = "Doprava - sazba [persistentní položka]")
  public Double getTransportationTariff() {
    return transportationTariff;
  }

  public void setTransportationTariff(Double transportationTariff) {
    this.transportationTariff = transportationTariff;
  }

  public Additionalcosts transportationUsed(Boolean transportationUsed) {
    this.transportationUsed = transportationUsed;
    return this;
  }

   /**
   * Je doprava [persistentní položka]
   * @return transportationUsed
  **/
  @ApiModelProperty(example = "null", value = "Je doprava [persistentní položka]")
  public Boolean getTransportationUsed() {
    return transportationUsed;
  }

  public void setTransportationUsed(Boolean transportationUsed) {
    this.transportationUsed = transportationUsed;
  }

  public Additionalcosts otherCostUsed(Boolean otherCostUsed) {
    this.otherCostUsed = otherCostUsed;
    return this;
  }

   /**
   * Jsou ostat.nákl. [persistentní položka]
   * @return otherCostUsed
  **/
  @ApiModelProperty(example = "null", value = "Jsou ostat.nákl. [persistentní položka]")
  public Boolean getOtherCostUsed() {
    return otherCostUsed;
  }

  public void setOtherCostUsed(Boolean otherCostUsed) {
    this.otherCostUsed = otherCostUsed;
  }

  public Additionalcosts transportationIsLocal(Boolean transportationIsLocal) {
    this.transportationIsLocal = transportationIsLocal;
    return this;
  }

   /**
   * Dopr.lokál. [persistentní položka]
   * @return transportationIsLocal
  **/
  @ApiModelProperty(example = "null", value = "Dopr.lokál. [persistentní položka]")
  public Boolean getTransportationIsLocal() {
    return transportationIsLocal;
  }

  public void setTransportationIsLocal(Boolean transportationIsLocal) {
    this.transportationIsLocal = transportationIsLocal;
  }

  public Additionalcosts otherCostIsLocal(Boolean otherCostIsLocal) {
    this.otherCostIsLocal = otherCostIsLocal;
    return this;
  }

   /**
   * Ost.nákl.lokál. [persistentní položka]
   * @return otherCostIsLocal
  **/
  @ApiModelProperty(example = "null", value = "Ost.nákl.lokál. [persistentní položka]")
  public Boolean getOtherCostIsLocal() {
    return otherCostIsLocal;
  }

  public void setOtherCostIsLocal(Boolean otherCostIsLocal) {
    this.otherCostIsLocal = otherCostIsLocal;
  }

  public Additionalcosts customsIsLocal(Boolean customsIsLocal) {
    this.customsIsLocal = customsIsLocal;
    return this;
  }

   /**
   * Clo lokálně [persistentní položka]
   * @return customsIsLocal
  **/
  @ApiModelProperty(example = "null", value = "Clo lokálně [persistentní položka]")
  public Boolean getCustomsIsLocal() {
    return customsIsLocal;
  }

  public void setCustomsIsLocal(Boolean customsIsLocal) {
    this.customsIsLocal = customsIsLocal;
  }

  public Additionalcosts spendingTaxIsLocal(Boolean spendingTaxIsLocal) {
    this.spendingTaxIsLocal = spendingTaxIsLocal;
    return this;
  }

   /**
   * Proc.náklady lokál. [persistentní položka]
   * @return spendingTaxIsLocal
  **/
  @ApiModelProperty(example = "null", value = "Proc.náklady lokál. [persistentní položka]")
  public Boolean getSpendingTaxIsLocal() {
    return spendingTaxIsLocal;
  }

  public void setSpendingTaxIsLocal(Boolean spendingTaxIsLocal) {
    this.spendingTaxIsLocal = spendingTaxIsLocal;
  }

  public Additionalcosts intrastatAffectKind(Integer intrastatAffectKind) {
    this.intrastatAffectKind = intrastatAffectKind;
    return this;
  }

   /**
   * Započítat do částky pro Intrastat [persistentní položka]
   * @return intrastatAffectKind
  **/
  @ApiModelProperty(example = "null", value = "Započítat do částky pro Intrastat [persistentní položka]")
  public Integer getIntrastatAffectKind() {
    return intrastatAffectKind;
  }

  public void setIntrastatAffectKind(Integer intrastatAffectKind) {
    this.intrastatAffectKind = intrastatAffectKind;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Additionalcosts additionalcosts = (Additionalcosts) o;
    return Objects.equals(this.displayName, additionalcosts.displayName) &&
        Objects.equals(this.ID, additionalcosts.ID) &&
        Objects.equals(this.classID, additionalcosts.classID) &&
        Objects.equals(this.objVersion, additionalcosts.objVersion) &&
        Objects.equals(this.customsAmount, additionalcosts.customsAmount) &&
        Objects.equals(this.spendingTaxAmount, additionalcosts.spendingTaxAmount) &&
        Objects.equals(this.transportationAmount, additionalcosts.transportationAmount) &&
        Objects.equals(this.otherCostAmount, additionalcosts.otherCostAmount) &&
        Objects.equals(this.customsTariff, additionalcosts.customsTariff) &&
        Objects.equals(this.otherCostTariff, additionalcosts.otherCostTariff) &&
        Objects.equals(this.spendingTaxTariff, additionalcosts.spendingTaxTariff) &&
        Objects.equals(this.transportationTariff, additionalcosts.transportationTariff) &&
        Objects.equals(this.transportationUsed, additionalcosts.transportationUsed) &&
        Objects.equals(this.otherCostUsed, additionalcosts.otherCostUsed) &&
        Objects.equals(this.transportationIsLocal, additionalcosts.transportationIsLocal) &&
        Objects.equals(this.otherCostIsLocal, additionalcosts.otherCostIsLocal) &&
        Objects.equals(this.customsIsLocal, additionalcosts.customsIsLocal) &&
        Objects.equals(this.spendingTaxIsLocal, additionalcosts.spendingTaxIsLocal) &&
        Objects.equals(this.intrastatAffectKind, additionalcosts.intrastatAffectKind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, customsAmount, spendingTaxAmount, transportationAmount, otherCostAmount, customsTariff, otherCostTariff, spendingTaxTariff, transportationTariff, transportationUsed, otherCostUsed, transportationIsLocal, otherCostIsLocal, customsIsLocal, spendingTaxIsLocal, intrastatAffectKind);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Additionalcosts {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    customsAmount: ").append(toIndentedString(customsAmount)).append("\n");
    sb.append("    spendingTaxAmount: ").append(toIndentedString(spendingTaxAmount)).append("\n");
    sb.append("    transportationAmount: ").append(toIndentedString(transportationAmount)).append("\n");
    sb.append("    otherCostAmount: ").append(toIndentedString(otherCostAmount)).append("\n");
    sb.append("    customsTariff: ").append(toIndentedString(customsTariff)).append("\n");
    sb.append("    otherCostTariff: ").append(toIndentedString(otherCostTariff)).append("\n");
    sb.append("    spendingTaxTariff: ").append(toIndentedString(spendingTaxTariff)).append("\n");
    sb.append("    transportationTariff: ").append(toIndentedString(transportationTariff)).append("\n");
    sb.append("    transportationUsed: ").append(toIndentedString(transportationUsed)).append("\n");
    sb.append("    otherCostUsed: ").append(toIndentedString(otherCostUsed)).append("\n");
    sb.append("    transportationIsLocal: ").append(toIndentedString(transportationIsLocal)).append("\n");
    sb.append("    otherCostIsLocal: ").append(toIndentedString(otherCostIsLocal)).append("\n");
    sb.append("    customsIsLocal: ").append(toIndentedString(customsIsLocal)).append("\n");
    sb.append("    spendingTaxIsLocal: ").append(toIndentedString(spendingTaxIsLocal)).append("\n");
    sb.append("    intrastatAffectKind: ").append(toIndentedString(intrastatAffectKind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

