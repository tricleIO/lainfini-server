/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Posreceiptday
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Posreceiptday   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("Date$DATE")
  private DateTime dateDATE = null;

  @SerializedName("Tenancy")
  private Double tenancy = null;

  @SerializedName("Deposit")
  private Double deposit = null;

  @SerializedName("Collection")
  private Double collection = null;

  @SerializedName("IssuedInvoice")
  private Double issuedInvoice = null;

  @SerializedName("IssuedDInvoice")
  private Double issuedDInvoice = null;

  @SerializedName("UsedIssuedDInvoice")
  private Double usedIssuedDInvoice = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Tržba - řádek [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Tržba - řádek [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Posreceiptday dateDATE(DateTime dateDATE) {
    this.dateDATE = dateDATE;
    return this;
  }

   /**
   * Datum [persistentní položka]
   * @return dateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum [persistentní položka]")
  public DateTime getDateDATE() {
    return dateDATE;
  }

  public void setDateDATE(DateTime dateDATE) {
    this.dateDATE = dateDATE;
  }

  public Posreceiptday tenancy(Double tenancy) {
    this.tenancy = tenancy;
    return this;
  }

   /**
   * Tržba [persistentní položka]
   * @return tenancy
  **/
  @ApiModelProperty(example = "null", value = "Tržba [persistentní položka]")
  public Double getTenancy() {
    return tenancy;
  }

  public void setTenancy(Double tenancy) {
    this.tenancy = tenancy;
  }

  public Posreceiptday deposit(Double deposit) {
    this.deposit = deposit;
    return this;
  }

   /**
   * Vloženo [persistentní položka]
   * @return deposit
  **/
  @ApiModelProperty(example = "null", value = "Vloženo [persistentní položka]")
  public Double getDeposit() {
    return deposit;
  }

  public void setDeposit(Double deposit) {
    this.deposit = deposit;
  }

  public Posreceiptday collection(Double collection) {
    this.collection = collection;
    return this;
  }

   /**
   * Vybráno [persistentní položka]
   * @return collection
  **/
  @ApiModelProperty(example = "null", value = "Vybráno [persistentní položka]")
  public Double getCollection() {
    return collection;
  }

  public void setCollection(Double collection) {
    this.collection = collection;
  }

  public Posreceiptday issuedInvoice(Double issuedInvoice) {
    this.issuedInvoice = issuedInvoice;
    return this;
  }

   /**
   * Faktury [persistentní položka]
   * @return issuedInvoice
  **/
  @ApiModelProperty(example = "null", value = "Faktury [persistentní položka]")
  public Double getIssuedInvoice() {
    return issuedInvoice;
  }

  public void setIssuedInvoice(Double issuedInvoice) {
    this.issuedInvoice = issuedInvoice;
  }

  public Posreceiptday issuedDInvoice(Double issuedDInvoice) {
    this.issuedDInvoice = issuedDInvoice;
    return this;
  }

   /**
   * Zálohy [persistentní položka]
   * @return issuedDInvoice
  **/
  @ApiModelProperty(example = "null", value = "Zálohy [persistentní položka]")
  public Double getIssuedDInvoice() {
    return issuedDInvoice;
  }

  public void setIssuedDInvoice(Double issuedDInvoice) {
    this.issuedDInvoice = issuedDInvoice;
  }

  public Posreceiptday usedIssuedDInvoice(Double usedIssuedDInvoice) {
    this.usedIssuedDInvoice = usedIssuedDInvoice;
    return this;
  }

   /**
   * Použité zálohy [persistentní položka]
   * @return usedIssuedDInvoice
  **/
  @ApiModelProperty(example = "null", value = "Použité zálohy [persistentní položka]")
  public Double getUsedIssuedDInvoice() {
    return usedIssuedDInvoice;
  }

  public void setUsedIssuedDInvoice(Double usedIssuedDInvoice) {
    this.usedIssuedDInvoice = usedIssuedDInvoice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Posreceiptday posreceiptday = (Posreceiptday) o;
    return Objects.equals(this.displayName, posreceiptday.displayName) &&
        Objects.equals(this.ID, posreceiptday.ID) &&
        Objects.equals(this.classID, posreceiptday.classID) &&
        Objects.equals(this.objVersion, posreceiptday.objVersion) &&
        Objects.equals(this.parentID, posreceiptday.parentID) &&
        Objects.equals(this.dateDATE, posreceiptday.dateDATE) &&
        Objects.equals(this.tenancy, posreceiptday.tenancy) &&
        Objects.equals(this.deposit, posreceiptday.deposit) &&
        Objects.equals(this.collection, posreceiptday.collection) &&
        Objects.equals(this.issuedInvoice, posreceiptday.issuedInvoice) &&
        Objects.equals(this.issuedDInvoice, posreceiptday.issuedDInvoice) &&
        Objects.equals(this.usedIssuedDInvoice, posreceiptday.usedIssuedDInvoice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, dateDATE, tenancy, deposit, collection, issuedInvoice, issuedDInvoice, usedIssuedDInvoice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Posreceiptday {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    dateDATE: ").append(toIndentedString(dateDATE)).append("\n");
    sb.append("    tenancy: ").append(toIndentedString(tenancy)).append("\n");
    sb.append("    deposit: ").append(toIndentedString(deposit)).append("\n");
    sb.append("    collection: ").append(toIndentedString(collection)).append("\n");
    sb.append("    issuedInvoice: ").append(toIndentedString(issuedInvoice)).append("\n");
    sb.append("    issuedDInvoice: ").append(toIndentedString(issuedDInvoice)).append("\n");
    sb.append("    usedIssuedDInvoice: ").append(toIndentedString(usedIssuedDInvoice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

