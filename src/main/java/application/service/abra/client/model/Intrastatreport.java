/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Intrastatreport
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Intrastatreport   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Intrastatreportdeclaration> rows = new ArrayList<Intrastatreportdeclaration>();

  @SerializedName("intrastatreport_id")
  private String intrastatreportId = null;

  @SerializedName("envelopeid")
  private String envelopeid = null;

  @SerializedName("docdate$date")
  private DateTime docdatedate = null;

  @SerializedName("datefrom$date")
  private DateTime datefromdate = null;

  @SerializedName("dateto$date")
  private DateTime datetodate = null;

  @SerializedName("communicationdocument_id")
  private String communicationdocumentId = null;

  @SerializedName("conditions")
  private byte[] conditions = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("ischanged")
  private Boolean ischanged = null;

  @SerializedName("origin")
  private Integer origin = null;

  @SerializedName("differentfrompreviousreport")
  private Boolean differentfrompreviousreport = null;

  @SerializedName("isonlydeleting")
  private Boolean isonlydeleting = null;

  @SerializedName("exportversion")
  private Integer exportversion = null;

  public Intrastatreport displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Intrastatreport id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Intrastatreport classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Intrastatreport objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Intrastatreport rows(List<Intrastatreportdeclaration> rows) {
    this.rows = rows;
    return this;
  }

  public Intrastatreport addRowsItem(Intrastatreportdeclaration rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo deklarace intrastat [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo deklarace intrastat [nepersistentní položka]")
  public List<Intrastatreportdeclaration> getRows() {
    return rows;
  }

  public void setRows(List<Intrastatreportdeclaration> rows) {
    this.rows = rows;
  }

  public Intrastatreport intrastatreportId(String intrastatreportId) {
    this.intrastatreportId = intrastatreportId;
    return this;
  }

   /**
   * opravované podání; id objektu podání intrastat [persistentní položka]
   * @return intrastatreportId
  **/
  @ApiModelProperty(example = "null", value = "opravované podání; id objektu podání intrastat [persistentní položka]")
  public String getIntrastatreportId() {
    return intrastatreportId;
  }

  public void setIntrastatreportId(String intrastatreportId) {
    this.intrastatreportId = intrastatreportId;
  }

  public Intrastatreport envelopeid(String envelopeid) {
    this.envelopeid = envelopeid;
    return this;
  }

   /**
   * identifikátor pvs [persistentní položka]
   * @return envelopeid
  **/
  @ApiModelProperty(example = "null", value = "identifikátor pvs [persistentní položka]")
  public String getEnvelopeid() {
    return envelopeid;
  }

  public void setEnvelopeid(String envelopeid) {
    this.envelopeid = envelopeid;
  }

  public Intrastatreport docdatedate(DateTime docdatedate) {
    this.docdatedate = docdatedate;
    return this;
  }

   /**
   * datum a čas generování [persistentní položka]
   * @return docdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum a čas generování [persistentní položka]")
  public DateTime getDocdatedate() {
    return docdatedate;
  }

  public void setDocdatedate(DateTime docdatedate) {
    this.docdatedate = docdatedate;
  }

  public Intrastatreport datefromdate(DateTime datefromdate) {
    this.datefromdate = datefromdate;
    return this;
  }

   /**
   * datum od [persistentní položka]
   * @return datefromdate
  **/
  @ApiModelProperty(example = "null", value = "datum od [persistentní položka]")
  public DateTime getDatefromdate() {
    return datefromdate;
  }

  public void setDatefromdate(DateTime datefromdate) {
    this.datefromdate = datefromdate;
  }

  public Intrastatreport datetodate(DateTime datetodate) {
    this.datetodate = datetodate;
    return this;
  }

   /**
   * datum do [persistentní položka]
   * @return datetodate
  **/
  @ApiModelProperty(example = "null", value = "datum do [persistentní položka]")
  public DateTime getDatetodate() {
    return datetodate;
  }

  public void setDatetodate(DateTime datetodate) {
    this.datetodate = datetodate;
  }

  public Intrastatreport communicationdocumentId(String communicationdocumentId) {
    this.communicationdocumentId = communicationdocumentId;
    return this;
  }

   /**
   * dokument; id objektu dokument [persistentní položka]
   * @return communicationdocumentId
  **/
  @ApiModelProperty(example = "null", value = "dokument; id objektu dokument [persistentní položka]")
  public String getCommunicationdocumentId() {
    return communicationdocumentId;
  }

  public void setCommunicationdocumentId(String communicationdocumentId) {
    this.communicationdocumentId = communicationdocumentId;
  }

  public Intrastatreport conditions(byte[] conditions) {
    this.conditions = conditions;
    return this;
  }

   /**
   * podmínky [persistentní položka]
   * @return conditions
  **/
  @ApiModelProperty(example = "null", value = "podmínky [persistentní položka]")
  public byte[] getConditions() {
    return conditions;
  }

  public void setConditions(byte[] conditions) {
    this.conditions = conditions;
  }

  public Intrastatreport status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * status [persistentní položka]
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "status [persistentní položka]")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public Intrastatreport ischanged(Boolean ischanged) {
    this.ischanged = ischanged;
    return this;
  }

   /**
   * podklady změněny
   * @return ischanged
  **/
  @ApiModelProperty(example = "null", value = "podklady změněny")
  public Boolean getIschanged() {
    return ischanged;
  }

  public void setIschanged(Boolean ischanged) {
    this.ischanged = ischanged;
  }

  public Intrastatreport origin(Integer origin) {
    this.origin = origin;
    return this;
  }

   /**
   * původ [persistentní položka]
   * @return origin
  **/
  @ApiModelProperty(example = "null", value = "původ [persistentní položka]")
  public Integer getOrigin() {
    return origin;
  }

  public void setOrigin(Integer origin) {
    this.origin = origin;
  }

  public Intrastatreport differentfrompreviousreport(Boolean differentfrompreviousreport) {
    this.differentfrompreviousreport = differentfrompreviousreport;
    return this;
  }

   /**
   * různý od předchozího
   * @return differentfrompreviousreport
  **/
  @ApiModelProperty(example = "null", value = "různý od předchozího")
  public Boolean getDifferentfrompreviousreport() {
    return differentfrompreviousreport;
  }

  public void setDifferentfrompreviousreport(Boolean differentfrompreviousreport) {
    this.differentfrompreviousreport = differentfrompreviousreport;
  }

  public Intrastatreport isonlydeleting(Boolean isonlydeleting) {
    this.isonlydeleting = isonlydeleting;
    return this;
  }

   /**
   * obsahuje pouze mazací deklarace
   * @return isonlydeleting
  **/
  @ApiModelProperty(example = "null", value = "obsahuje pouze mazací deklarace")
  public Boolean getIsonlydeleting() {
    return isonlydeleting;
  }

  public void setIsonlydeleting(Boolean isonlydeleting) {
    this.isonlydeleting = isonlydeleting;
  }

  public Intrastatreport exportversion(Integer exportversion) {
    this.exportversion = exportversion;
    return this;
  }

   /**
   * verze exportu [persistentní položka]
   * @return exportversion
  **/
  @ApiModelProperty(example = "null", value = "verze exportu [persistentní položka]")
  public Integer getExportversion() {
    return exportversion;
  }

  public void setExportversion(Integer exportversion) {
    this.exportversion = exportversion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Intrastatreport intrastatreport = (Intrastatreport) o;
    return Objects.equals(this.displayname, intrastatreport.displayname) &&
        Objects.equals(this.id, intrastatreport.id) &&
        Objects.equals(this.classid, intrastatreport.classid) &&
        Objects.equals(this.objversion, intrastatreport.objversion) &&
        Objects.equals(this.rows, intrastatreport.rows) &&
        Objects.equals(this.intrastatreportId, intrastatreport.intrastatreportId) &&
        Objects.equals(this.envelopeid, intrastatreport.envelopeid) &&
        Objects.equals(this.docdatedate, intrastatreport.docdatedate) &&
        Objects.equals(this.datefromdate, intrastatreport.datefromdate) &&
        Objects.equals(this.datetodate, intrastatreport.datetodate) &&
        Objects.equals(this.communicationdocumentId, intrastatreport.communicationdocumentId) &&
        Objects.equals(this.conditions, intrastatreport.conditions) &&
        Objects.equals(this.status, intrastatreport.status) &&
        Objects.equals(this.ischanged, intrastatreport.ischanged) &&
        Objects.equals(this.origin, intrastatreport.origin) &&
        Objects.equals(this.differentfrompreviousreport, intrastatreport.differentfrompreviousreport) &&
        Objects.equals(this.isonlydeleting, intrastatreport.isonlydeleting) &&
        Objects.equals(this.exportversion, intrastatreport.exportversion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, intrastatreportId, envelopeid, docdatedate, datefromdate, datetodate, communicationdocumentId, conditions, status, ischanged, origin, differentfrompreviousreport, isonlydeleting, exportversion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Intrastatreport {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    intrastatreportId: ").append(toIndentedString(intrastatreportId)).append("\n");
    sb.append("    envelopeid: ").append(toIndentedString(envelopeid)).append("\n");
    sb.append("    docdatedate: ").append(toIndentedString(docdatedate)).append("\n");
    sb.append("    datefromdate: ").append(toIndentedString(datefromdate)).append("\n");
    sb.append("    datetodate: ").append(toIndentedString(datetodate)).append("\n");
    sb.append("    communicationdocumentId: ").append(toIndentedString(communicationdocumentId)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    ischanged: ").append(toIndentedString(ischanged)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    differentfrompreviousreport: ").append(toIndentedString(differentfrompreviousreport)).append("\n");
    sb.append("    isonlydeleting: ").append(toIndentedString(isonlydeleting)).append("\n");
    sb.append("    exportversion: ").append(toIndentedString(exportversion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

