/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Wageclosingdef
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Wageclosingdef   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Periodicity")
  private Integer periodicity = null;

  @SerializedName("CalcChart_ID")
  private String calcChartID = null;

  @SerializedName("ToAccounting")
  private Boolean toAccounting = null;

  @SerializedName("AccPresetDef_ID")
  private String accPresetDefID = null;

  @SerializedName("SplitByOperations")
  private Boolean splitByOperations = null;

  @SerializedName("OperationCodes")
  private String operationCodes = null;

  @SerializedName("ToPaymentOrder")
  private Boolean toPaymentOrder = null;

  @SerializedName("MinusSign")
  private Boolean minusSign = null;

  @SerializedName("PaymentDef_ID")
  private String paymentDefID = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("Rounding")
  private Integer rounding = null;

  @SerializedName("CorrectionType")
  private Integer correctionType = null;

  @SerializedName("CorrectionExpr")
  private String correctionExpr = null;

  @SerializedName("CorrectionTypeAsText")
  private String correctionTypeAsText = null;

  @SerializedName("OnlyEvalExpression")
  private Boolean onlyEvalExpression = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Wageclosingdef hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Wageclosingdef code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Wageclosingdef name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Wageclosingdef periodicity(Integer periodicity) {
    this.periodicity = periodicity;
    return this;
  }

   /**
   * Periodicita [persistentní položka]
   * @return periodicity
  **/
  @ApiModelProperty(example = "null", value = "Periodicita [persistentní položka]")
  public Integer getPeriodicity() {
    return periodicity;
  }

  public void setPeriodicity(Integer periodicity) {
    this.periodicity = periodicity;
  }

  public Wageclosingdef calcChartID(String calcChartID) {
    this.calcChartID = calcChartID;
    return this;
  }

   /**
   * Výpočtové schéma; ID objektu Výpočtové schéma [persistentní položka]
   * @return calcChartID
  **/
  @ApiModelProperty(example = "null", value = "Výpočtové schéma; ID objektu Výpočtové schéma [persistentní položka]")
  public String getCalcChartID() {
    return calcChartID;
  }

  public void setCalcChartID(String calcChartID) {
    this.calcChartID = calcChartID;
  }

  public Wageclosingdef toAccounting(Boolean toAccounting) {
    this.toAccounting = toAccounting;
    return this;
  }

   /**
   * Účtovat částku [persistentní položka]
   * @return toAccounting
  **/
  @ApiModelProperty(example = "null", value = "Účtovat částku [persistentní položka]")
  public Boolean getToAccounting() {
    return toAccounting;
  }

  public void setToAccounting(Boolean toAccounting) {
    this.toAccounting = toAccounting;
  }

  public Wageclosingdef accPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
    return this;
  }

   /**
   * Předkontace; ID objektu Účetní předkontace [persistentní položka]
   * @return accPresetDefID
  **/
  @ApiModelProperty(example = "null", value = "Předkontace; ID objektu Účetní předkontace [persistentní položka]")
  public String getAccPresetDefID() {
    return accPresetDefID;
  }

  public void setAccPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
  }

  public Wageclosingdef splitByOperations(Boolean splitByOperations) {
    this.splitByOperations = splitByOperations;
    return this;
  }

   /**
   * Rozdělit [persistentní položka]
   * @return splitByOperations
  **/
  @ApiModelProperty(example = "null", value = "Rozdělit [persistentní položka]")
  public Boolean getSplitByOperations() {
    return splitByOperations;
  }

  public void setSplitByOperations(Boolean splitByOperations) {
    this.splitByOperations = splitByOperations;
  }

  public Wageclosingdef operationCodes(String operationCodes) {
    this.operationCodes = operationCodes;
    return this;
  }

   /**
   * Výkony [persistentní položka]
   * @return operationCodes
  **/
  @ApiModelProperty(example = "null", value = "Výkony [persistentní položka]")
  public String getOperationCodes() {
    return operationCodes;
  }

  public void setOperationCodes(String operationCodes) {
    this.operationCodes = operationCodes;
  }

  public Wageclosingdef toPaymentOrder(Boolean toPaymentOrder) {
    this.toPaymentOrder = toPaymentOrder;
    return this;
  }

   /**
   * Platební příkaz [persistentní položka]
   * @return toPaymentOrder
  **/
  @ApiModelProperty(example = "null", value = "Platební příkaz [persistentní položka]")
  public Boolean getToPaymentOrder() {
    return toPaymentOrder;
  }

  public void setToPaymentOrder(Boolean toPaymentOrder) {
    this.toPaymentOrder = toPaymentOrder;
  }

  public Wageclosingdef minusSign(Boolean minusSign) {
    this.minusSign = minusSign;
    return this;
  }

   /**
   * Záporná částka [persistentní položka]
   * @return minusSign
  **/
  @ApiModelProperty(example = "null", value = "Záporná částka [persistentní položka]")
  public Boolean getMinusSign() {
    return minusSign;
  }

  public void setMinusSign(Boolean minusSign) {
    this.minusSign = minusSign;
  }

  public Wageclosingdef paymentDefID(String paymentDefID) {
    this.paymentDefID = paymentDefID;
    return this;
  }

   /**
   * Definice platby; ID objektu Definice plateb [persistentní položka]
   * @return paymentDefID
  **/
  @ApiModelProperty(example = "null", value = "Definice platby; ID objektu Definice plateb [persistentní položka]")
  public String getPaymentDefID() {
    return paymentDefID;
  }

  public void setPaymentDefID(String paymentDefID) {
    this.paymentDefID = paymentDefID;
  }

  public Wageclosingdef docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Řada dokladů uzávěrky; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Řada dokladů uzávěrky; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Wageclosingdef correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Wageclosingdef createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Wageclosingdef rounding(Integer rounding) {
    this.rounding = rounding;
    return this;
  }

   /**
   * Zaokrouhlení [persistentní položka]
   * @return rounding
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlení [persistentní položka]")
  public Integer getRounding() {
    return rounding;
  }

  public void setRounding(Integer rounding) {
    this.rounding = rounding;
  }

  public Wageclosingdef correctionType(Integer correctionType) {
    this.correctionType = correctionType;
    return this;
  }

   /**
   * Typ korekce [persistentní položka]
   * @return correctionType
  **/
  @ApiModelProperty(example = "null", value = "Typ korekce [persistentní položka]")
  public Integer getCorrectionType() {
    return correctionType;
  }

  public void setCorrectionType(Integer correctionType) {
    this.correctionType = correctionType;
  }

  public Wageclosingdef correctionExpr(String correctionExpr) {
    this.correctionExpr = correctionExpr;
    return this;
  }

   /**
   * Korekce [persistentní položka]
   * @return correctionExpr
  **/
  @ApiModelProperty(example = "null", value = "Korekce [persistentní položka]")
  public String getCorrectionExpr() {
    return correctionExpr;
  }

  public void setCorrectionExpr(String correctionExpr) {
    this.correctionExpr = correctionExpr;
  }

  public Wageclosingdef correctionTypeAsText(String correctionTypeAsText) {
    this.correctionTypeAsText = correctionTypeAsText;
    return this;
  }

   /**
   * Typ korekce
   * @return correctionTypeAsText
  **/
  @ApiModelProperty(example = "null", value = "Typ korekce")
  public String getCorrectionTypeAsText() {
    return correctionTypeAsText;
  }

  public void setCorrectionTypeAsText(String correctionTypeAsText) {
    this.correctionTypeAsText = correctionTypeAsText;
  }

  public Wageclosingdef onlyEvalExpression(Boolean onlyEvalExpression) {
    this.onlyEvalExpression = onlyEvalExpression;
    return this;
  }

   /**
   * Jen vyhodnotit výraz [persistentní položka]
   * @return onlyEvalExpression
  **/
  @ApiModelProperty(example = "null", value = "Jen vyhodnotit výraz [persistentní položka]")
  public Boolean getOnlyEvalExpression() {
    return onlyEvalExpression;
  }

  public void setOnlyEvalExpression(Boolean onlyEvalExpression) {
    this.onlyEvalExpression = onlyEvalExpression;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wageclosingdef wageclosingdef = (Wageclosingdef) o;
    return Objects.equals(this.displayName, wageclosingdef.displayName) &&
        Objects.equals(this.ID, wageclosingdef.ID) &&
        Objects.equals(this.classID, wageclosingdef.classID) &&
        Objects.equals(this.objVersion, wageclosingdef.objVersion) &&
        Objects.equals(this.hidden, wageclosingdef.hidden) &&
        Objects.equals(this.code, wageclosingdef.code) &&
        Objects.equals(this.name, wageclosingdef.name) &&
        Objects.equals(this.periodicity, wageclosingdef.periodicity) &&
        Objects.equals(this.calcChartID, wageclosingdef.calcChartID) &&
        Objects.equals(this.toAccounting, wageclosingdef.toAccounting) &&
        Objects.equals(this.accPresetDefID, wageclosingdef.accPresetDefID) &&
        Objects.equals(this.splitByOperations, wageclosingdef.splitByOperations) &&
        Objects.equals(this.operationCodes, wageclosingdef.operationCodes) &&
        Objects.equals(this.toPaymentOrder, wageclosingdef.toPaymentOrder) &&
        Objects.equals(this.minusSign, wageclosingdef.minusSign) &&
        Objects.equals(this.paymentDefID, wageclosingdef.paymentDefID) &&
        Objects.equals(this.docQueueID, wageclosingdef.docQueueID) &&
        Objects.equals(this.correctedByID, wageclosingdef.correctedByID) &&
        Objects.equals(this.createdByID, wageclosingdef.createdByID) &&
        Objects.equals(this.rounding, wageclosingdef.rounding) &&
        Objects.equals(this.correctionType, wageclosingdef.correctionType) &&
        Objects.equals(this.correctionExpr, wageclosingdef.correctionExpr) &&
        Objects.equals(this.correctionTypeAsText, wageclosingdef.correctionTypeAsText) &&
        Objects.equals(this.onlyEvalExpression, wageclosingdef.onlyEvalExpression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, periodicity, calcChartID, toAccounting, accPresetDefID, splitByOperations, operationCodes, toPaymentOrder, minusSign, paymentDefID, docQueueID, correctedByID, createdByID, rounding, correctionType, correctionExpr, correctionTypeAsText, onlyEvalExpression);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wageclosingdef {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    calcChartID: ").append(toIndentedString(calcChartID)).append("\n");
    sb.append("    toAccounting: ").append(toIndentedString(toAccounting)).append("\n");
    sb.append("    accPresetDefID: ").append(toIndentedString(accPresetDefID)).append("\n");
    sb.append("    splitByOperations: ").append(toIndentedString(splitByOperations)).append("\n");
    sb.append("    operationCodes: ").append(toIndentedString(operationCodes)).append("\n");
    sb.append("    toPaymentOrder: ").append(toIndentedString(toPaymentOrder)).append("\n");
    sb.append("    minusSign: ").append(toIndentedString(minusSign)).append("\n");
    sb.append("    paymentDefID: ").append(toIndentedString(paymentDefID)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    rounding: ").append(toIndentedString(rounding)).append("\n");
    sb.append("    correctionType: ").append(toIndentedString(correctionType)).append("\n");
    sb.append("    correctionExpr: ").append(toIndentedString(correctionExpr)).append("\n");
    sb.append("    correctionTypeAsText: ").append(toIndentedString(correctionTypeAsText)).append("\n");
    sb.append("    onlyEvalExpression: ").append(toIndentedString(onlyEvalExpression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

