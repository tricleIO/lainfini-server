/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Evaluationcriteriondatasource
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Evaluationcriteriondatasource   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("DSQLID")
  private String DSQLID = null;

  @SerializedName("DSQLName")
  private String dSQLName = null;

  @SerializedName("DSQLValues")
  private byte[] dSQLValues = null;

  @SerializedName("DSQLAggregateFunction")
  private Integer dSQLAggregateFunction = null;

  @SerializedName("DSQLFieldName")
  private String dSQLFieldName = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Hlavičkový objekt [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Hlavičkový objekt [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Evaluationcriteriondatasource posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Evaluationcriteriondatasource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Evaluationcriteriondatasource DSQLID(String DSQLID) {
    this.DSQLID = DSQLID;
    return this;
  }

   /**
   * Identifikace DynSQL příkazu [persistentní položka]
   * @return DSQLID
  **/
  @ApiModelProperty(example = "null", value = "Identifikace DynSQL příkazu [persistentní položka]")
  public String getDSQLID() {
    return DSQLID;
  }

  public void setDSQLID(String DSQLID) {
    this.DSQLID = DSQLID;
  }

  public Evaluationcriteriondatasource dSQLName(String dSQLName) {
    this.dSQLName = dSQLName;
    return this;
  }

   /**
   * Název DynSQL příkazu [persistentní položka]
   * @return dSQLName
  **/
  @ApiModelProperty(example = "null", value = "Název DynSQL příkazu [persistentní položka]")
  public String getDSQLName() {
    return dSQLName;
  }

  public void setDSQLName(String dSQLName) {
    this.dSQLName = dSQLName;
  }

  public Evaluationcriteriondatasource dSQLValues(byte[] dSQLValues) {
    this.dSQLValues = dSQLValues;
    return this;
  }

   /**
   * Definice omezení [persistentní položka]
   * @return dSQLValues
  **/
  @ApiModelProperty(example = "null", value = "Definice omezení [persistentní položka]")
  public byte[] getDSQLValues() {
    return dSQLValues;
  }

  public void setDSQLValues(byte[] dSQLValues) {
    this.dSQLValues = dSQLValues;
  }

  public Evaluationcriteriondatasource dSQLAggregateFunction(Integer dSQLAggregateFunction) {
    this.dSQLAggregateFunction = dSQLAggregateFunction;
    return this;
  }

   /**
   * Agregační funkce aplikováná na položku v DynSQL. [persistentní položka]
   * @return dSQLAggregateFunction
  **/
  @ApiModelProperty(example = "null", value = "Agregační funkce aplikováná na položku v DynSQL. [persistentní položka]")
  public Integer getDSQLAggregateFunction() {
    return dSQLAggregateFunction;
  }

  public void setDSQLAggregateFunction(Integer dSQLAggregateFunction) {
    this.dSQLAggregateFunction = dSQLAggregateFunction;
  }

  public Evaluationcriteriondatasource dSQLFieldName(String dSQLFieldName) {
    this.dSQLFieldName = dSQLFieldName;
    return this;
  }

   /**
   * Název položky z dat DynSQL příkazu [persistentní položka]
   * @return dSQLFieldName
  **/
  @ApiModelProperty(example = "null", value = "Název položky z dat DynSQL příkazu [persistentní položka]")
  public String getDSQLFieldName() {
    return dSQLFieldName;
  }

  public void setDSQLFieldName(String dSQLFieldName) {
    this.dSQLFieldName = dSQLFieldName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Evaluationcriteriondatasource evaluationcriteriondatasource = (Evaluationcriteriondatasource) o;
    return Objects.equals(this.displayName, evaluationcriteriondatasource.displayName) &&
        Objects.equals(this.ID, evaluationcriteriondatasource.ID) &&
        Objects.equals(this.classID, evaluationcriteriondatasource.classID) &&
        Objects.equals(this.objVersion, evaluationcriteriondatasource.objVersion) &&
        Objects.equals(this.parentID, evaluationcriteriondatasource.parentID) &&
        Objects.equals(this.posIndex, evaluationcriteriondatasource.posIndex) &&
        Objects.equals(this.name, evaluationcriteriondatasource.name) &&
        Objects.equals(this.DSQLID, evaluationcriteriondatasource.DSQLID) &&
        Objects.equals(this.dSQLName, evaluationcriteriondatasource.dSQLName) &&
        Objects.equals(this.dSQLValues, evaluationcriteriondatasource.dSQLValues) &&
        Objects.equals(this.dSQLAggregateFunction, evaluationcriteriondatasource.dSQLAggregateFunction) &&
        Objects.equals(this.dSQLFieldName, evaluationcriteriondatasource.dSQLFieldName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, name, DSQLID, dSQLName, dSQLValues, dSQLAggregateFunction, dSQLFieldName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Evaluationcriteriondatasource {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    DSQLID: ").append(toIndentedString(DSQLID)).append("\n");
    sb.append("    dSQLName: ").append(toIndentedString(dSQLName)).append("\n");
    sb.append("    dSQLValues: ").append(toIndentedString(dSQLValues)).append("\n");
    sb.append("    dSQLAggregateFunction: ").append(toIndentedString(dSQLAggregateFunction)).append("\n");
    sb.append("    dSQLFieldName: ").append(toIndentedString(dSQLFieldName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

