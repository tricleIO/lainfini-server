/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Docconfirmation
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Docconfirmation   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Docconfirmationrow> rows = new ArrayList<Docconfirmationrow>();

  @SerializedName("DocType")
  private String docType = null;

  @SerializedName("Document_ID")
  private String documentID = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("StartedDate$DATE")
  private DateTime startedDateDATE = null;

  @SerializedName("ConfirmationState")
  private Integer confirmationState = null;

  @SerializedName("ActualConfirmationRound")
  private Integer actualConfirmationRound = null;

  @SerializedName("FinishedDate$DATE")
  private DateTime finishedDateDATE = null;

  @SerializedName("ConfirmationStateDesc")
  private String confirmationStateDesc = null;

  @SerializedName("FinishedBy_ID")
  private String finishedByID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Docconfirmation rows(List<Docconfirmationrow> rows) {
    this.rows = rows;
    return this;
  }

  public Docconfirmation addRowsItem(Docconfirmationrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Schvalování dokladu - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Schvalování dokladu - řádek [nepersistentní položka]")
  public List<Docconfirmationrow> getRows() {
    return rows;
  }

  public void setRows(List<Docconfirmationrow> rows) {
    this.rows = rows;
  }

   /**
   * Typ dokladu [persistentní položka]
   * @return docType
  **/
  @ApiModelProperty(example = "null", value = "Typ dokladu [persistentní položka]")
  public String getDocType() {
    return docType;
  }

   /**
   * ID schvalovaného dokladu; ID objektu Dokument [persistentní položka]
   * @return documentID
  **/
  @ApiModelProperty(example = "null", value = "ID schvalovaného dokladu; ID objektu Dokument [persistentní položka]")
  public String getDocumentID() {
    return documentID;
  }

   /**
   * Schválení vyžádal; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Schválení vyžádal; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

   /**
   * Schvalování započato [persistentní položka]
   * @return startedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Schvalování započato [persistentní položka]")
  public DateTime getStartedDateDATE() {
    return startedDateDATE;
  }

   /**
   * Aktuální stav schvalování dokladu [persistentní položka]
   * @return confirmationState
  **/
  @ApiModelProperty(example = "null", value = "Aktuální stav schvalování dokladu [persistentní položka]")
  public Integer getConfirmationState() {
    return confirmationState;
  }

   /**
   * Kolo [persistentní položka]
   * @return actualConfirmationRound
  **/
  @ApiModelProperty(example = "null", value = "Kolo [persistentní položka]")
  public Integer getActualConfirmationRound() {
    return actualConfirmationRound;
  }

   /**
   * Schvalování dokončeno [persistentní položka]
   * @return finishedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Schvalování dokončeno [persistentní položka]")
  public DateTime getFinishedDateDATE() {
    return finishedDateDATE;
  }

  public Docconfirmation confirmationStateDesc(String confirmationStateDesc) {
    this.confirmationStateDesc = confirmationStateDesc;
    return this;
  }

   /**
   * Aktuální stav schvalování dokladu
   * @return confirmationStateDesc
  **/
  @ApiModelProperty(example = "null", value = "Aktuální stav schvalování dokladu")
  public String getConfirmationStateDesc() {
    return confirmationStateDesc;
  }

  public void setConfirmationStateDesc(String confirmationStateDesc) {
    this.confirmationStateDesc = confirmationStateDesc;
  }

   /**
   * Schvalování ukončil; ID objektu Uživatel [persistentní položka]
   * @return finishedByID
  **/
  @ApiModelProperty(example = "null", value = "Schvalování ukončil; ID objektu Uživatel [persistentní položka]")
  public String getFinishedByID() {
    return finishedByID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Docconfirmation docconfirmation = (Docconfirmation) o;
    return Objects.equals(this.displayName, docconfirmation.displayName) &&
        Objects.equals(this.ID, docconfirmation.ID) &&
        Objects.equals(this.classID, docconfirmation.classID) &&
        Objects.equals(this.objVersion, docconfirmation.objVersion) &&
        Objects.equals(this.rows, docconfirmation.rows) &&
        Objects.equals(this.docType, docconfirmation.docType) &&
        Objects.equals(this.documentID, docconfirmation.documentID) &&
        Objects.equals(this.createdByID, docconfirmation.createdByID) &&
        Objects.equals(this.startedDateDATE, docconfirmation.startedDateDATE) &&
        Objects.equals(this.confirmationState, docconfirmation.confirmationState) &&
        Objects.equals(this.actualConfirmationRound, docconfirmation.actualConfirmationRound) &&
        Objects.equals(this.finishedDateDATE, docconfirmation.finishedDateDATE) &&
        Objects.equals(this.confirmationStateDesc, docconfirmation.confirmationStateDesc) &&
        Objects.equals(this.finishedByID, docconfirmation.finishedByID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docType, documentID, createdByID, startedDateDATE, confirmationState, actualConfirmationRound, finishedDateDATE, confirmationStateDesc, finishedByID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Docconfirmation {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docType: ").append(toIndentedString(docType)).append("\n");
    sb.append("    documentID: ").append(toIndentedString(documentID)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    startedDateDATE: ").append(toIndentedString(startedDateDATE)).append("\n");
    sb.append("    confirmationState: ").append(toIndentedString(confirmationState)).append("\n");
    sb.append("    actualConfirmationRound: ").append(toIndentedString(actualConfirmationRound)).append("\n");
    sb.append("    finishedDateDATE: ").append(toIndentedString(finishedDateDATE)).append("\n");
    sb.append("    confirmationStateDesc: ").append(toIndentedString(confirmationStateDesc)).append("\n");
    sb.append("    finishedByID: ").append(toIndentedString(finishedByID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

