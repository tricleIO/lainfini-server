/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Scmdatasourcesetcolumnevolution
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Scmdatasourcesetcolumnevolution   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("Caption")
  private String caption = null;

  @SerializedName("FieldName")
  private String fieldName = null;

  @SerializedName("DisplayWidth")
  private Integer displayWidth = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Sada datových zdrojů [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Sada datových zdrojů [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Scmdatasourcesetcolumnevolution posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Scmdatasourcesetcolumnevolution caption(String caption) {
    this.caption = caption;
    return this;
  }

   /**
   * Popisek [persistentní položka]
   * @return caption
  **/
  @ApiModelProperty(example = "null", value = "Popisek [persistentní položka]")
  public String getCaption() {
    return caption;
  }

  public void setCaption(String caption) {
    this.caption = caption;
  }

  public Scmdatasourcesetcolumnevolution fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Sloupec [persistentní položka]
   * @return fieldName
  **/
  @ApiModelProperty(example = "null", value = "Sloupec [persistentní položka]")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public Scmdatasourcesetcolumnevolution displayWidth(Integer displayWidth) {
    this.displayWidth = displayWidth;
    return this;
  }

   /**
   * Zobrazovací velikost [persistentní položka]
   * @return displayWidth
  **/
  @ApiModelProperty(example = "null", value = "Zobrazovací velikost [persistentní položka]")
  public Integer getDisplayWidth() {
    return displayWidth;
  }

  public void setDisplayWidth(Integer displayWidth) {
    this.displayWidth = displayWidth;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scmdatasourcesetcolumnevolution scmdatasourcesetcolumnevolution = (Scmdatasourcesetcolumnevolution) o;
    return Objects.equals(this.displayName, scmdatasourcesetcolumnevolution.displayName) &&
        Objects.equals(this.ID, scmdatasourcesetcolumnevolution.ID) &&
        Objects.equals(this.classID, scmdatasourcesetcolumnevolution.classID) &&
        Objects.equals(this.objVersion, scmdatasourcesetcolumnevolution.objVersion) &&
        Objects.equals(this.parentID, scmdatasourcesetcolumnevolution.parentID) &&
        Objects.equals(this.posIndex, scmdatasourcesetcolumnevolution.posIndex) &&
        Objects.equals(this.caption, scmdatasourcesetcolumnevolution.caption) &&
        Objects.equals(this.fieldName, scmdatasourcesetcolumnevolution.fieldName) &&
        Objects.equals(this.displayWidth, scmdatasourcesetcolumnevolution.displayWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, caption, fieldName, displayWidth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scmdatasourcesetcolumnevolution {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    displayWidth: ").append(toIndentedString(displayWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

