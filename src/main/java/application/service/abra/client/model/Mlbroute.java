/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Mlbroute
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Mlbroute   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Mlbrouterow> rows = new ArrayList<Mlbrouterow>();

  @SerializedName("ThroughPlaces")
  private String throughPlaces = null;

  @SerializedName("DistanceCounted")
  private Double distanceCounted = null;

  @SerializedName("StartPlace_ID")
  private String startPlaceID = null;

  @SerializedName("EndPlace_ID")
  private String endPlaceID = null;

  @SerializedName("AndBack")
  private Boolean andBack = null;

  @SerializedName("Distance")
  private Double distance = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("FirmOffice_ID")
  private String firmOfficeID = null;

  @SerializedName("Purpose_ID")
  private String purposeID = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("DistanceDelta")
  private Double distanceDelta = null;

  @SerializedName("Duration$DATE")
  private DateTime durationDATE = null;

  @SerializedName("WaitingTimeMin$DATE")
  private DateTime waitingTimeMinDATE = null;

  @SerializedName("WaitingTimeMax$DATE")
  private DateTime waitingTimeMaxDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Mlbroute rows(List<Mlbrouterow> rows) {
    this.rows = rows;
    return this;
  }

  public Mlbroute addRowsItem(Mlbrouterow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Průjezdná místa [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Průjezdná místa [nepersistentní položka]")
  public List<Mlbrouterow> getRows() {
    return rows;
  }

  public void setRows(List<Mlbrouterow> rows) {
    this.rows = rows;
  }

  public Mlbroute throughPlaces(String throughPlaces) {
    this.throughPlaces = throughPlaces;
    return this;
  }

   /**
   * Průjezdná místa
   * @return throughPlaces
  **/
  @ApiModelProperty(example = "null", value = "Průjezdná místa")
  public String getThroughPlaces() {
    return throughPlaces;
  }

  public void setThroughPlaces(String throughPlaces) {
    this.throughPlaces = throughPlaces;
  }

  public Mlbroute distanceCounted(Double distanceCounted) {
    this.distanceCounted = distanceCounted;
    return this;
  }

   /**
   * Spočtená vzdálenost
   * @return distanceCounted
  **/
  @ApiModelProperty(example = "null", value = "Spočtená vzdálenost")
  public Double getDistanceCounted() {
    return distanceCounted;
  }

  public void setDistanceCounted(Double distanceCounted) {
    this.distanceCounted = distanceCounted;
  }

  public Mlbroute startPlaceID(String startPlaceID) {
    this.startPlaceID = startPlaceID;
    return this;
  }

   /**
   * Výchozí místo; ID objektu Místa [persistentní položka]
   * @return startPlaceID
  **/
  @ApiModelProperty(example = "null", value = "Výchozí místo; ID objektu Místa [persistentní položka]")
  public String getStartPlaceID() {
    return startPlaceID;
  }

  public void setStartPlaceID(String startPlaceID) {
    this.startPlaceID = startPlaceID;
  }

  public Mlbroute endPlaceID(String endPlaceID) {
    this.endPlaceID = endPlaceID;
    return this;
  }

   /**
   * Cílové místo; ID objektu Místa [persistentní položka]
   * @return endPlaceID
  **/
  @ApiModelProperty(example = "null", value = "Cílové místo; ID objektu Místa [persistentní položka]")
  public String getEndPlaceID() {
    return endPlaceID;
  }

  public void setEndPlaceID(String endPlaceID) {
    this.endPlaceID = endPlaceID;
  }

  public Mlbroute andBack(Boolean andBack) {
    this.andBack = andBack;
    return this;
  }

   /**
   * Zpět [persistentní položka]
   * @return andBack
  **/
  @ApiModelProperty(example = "null", value = "Zpět [persistentní položka]")
  public Boolean getAndBack() {
    return andBack;
  }

  public void setAndBack(Boolean andBack) {
    this.andBack = andBack;
  }

  public Mlbroute distance(Double distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Vzdálenost [persistentní položka]
   * @return distance
  **/
  @ApiModelProperty(example = "null", value = "Vzdálenost [persistentní položka]")
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }

  public Mlbroute firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Mlbroute firmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
    return this;
  }

   /**
   * Provozovna; ID objektu Provozovna [persistentní položka]
   * @return firmOfficeID
  **/
  @ApiModelProperty(example = "null", value = "Provozovna; ID objektu Provozovna [persistentní položka]")
  public String getFirmOfficeID() {
    return firmOfficeID;
  }

  public void setFirmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
  }

  public Mlbroute purposeID(String purposeID) {
    this.purposeID = purposeID;
    return this;
  }

   /**
   * Účel jízdy; ID objektu Účel jízdy [persistentní položka]
   * @return purposeID
  **/
  @ApiModelProperty(example = "null", value = "Účel jízdy; ID objektu Účel jízdy [persistentní položka]")
  public String getPurposeID() {
    return purposeID;
  }

  public void setPurposeID(String purposeID) {
    this.purposeID = purposeID;
  }

  public Mlbroute hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Mlbroute distanceDelta(Double distanceDelta) {
    this.distanceDelta = distanceDelta;
    return this;
  }

   /**
   * Odchylka [persistentní položka]
   * @return distanceDelta
  **/
  @ApiModelProperty(example = "null", value = "Odchylka [persistentní položka]")
  public Double getDistanceDelta() {
    return distanceDelta;
  }

  public void setDistanceDelta(Double distanceDelta) {
    this.distanceDelta = distanceDelta;
  }

  public Mlbroute durationDATE(DateTime durationDATE) {
    this.durationDATE = durationDATE;
    return this;
  }

   /**
   * Doba jízdy [persistentní položka]
   * @return durationDATE
  **/
  @ApiModelProperty(example = "null", value = "Doba jízdy [persistentní položka]")
  public DateTime getDurationDATE() {
    return durationDATE;
  }

  public void setDurationDATE(DateTime durationDATE) {
    this.durationDATE = durationDATE;
  }

  public Mlbroute waitingTimeMinDATE(DateTime waitingTimeMinDATE) {
    this.waitingTimeMinDATE = waitingTimeMinDATE;
    return this;
  }

   /**
   * Doba čekání min [persistentní položka]
   * @return waitingTimeMinDATE
  **/
  @ApiModelProperty(example = "null", value = "Doba čekání min [persistentní položka]")
  public DateTime getWaitingTimeMinDATE() {
    return waitingTimeMinDATE;
  }

  public void setWaitingTimeMinDATE(DateTime waitingTimeMinDATE) {
    this.waitingTimeMinDATE = waitingTimeMinDATE;
  }

  public Mlbroute waitingTimeMaxDATE(DateTime waitingTimeMaxDATE) {
    this.waitingTimeMaxDATE = waitingTimeMaxDATE;
    return this;
  }

   /**
   * Doba čekání max [persistentní položka]
   * @return waitingTimeMaxDATE
  **/
  @ApiModelProperty(example = "null", value = "Doba čekání max [persistentní položka]")
  public DateTime getWaitingTimeMaxDATE() {
    return waitingTimeMaxDATE;
  }

  public void setWaitingTimeMaxDATE(DateTime waitingTimeMaxDATE) {
    this.waitingTimeMaxDATE = waitingTimeMaxDATE;
  }

  public Mlbroute createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Uživatel; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Uživatel; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mlbroute mlbroute = (Mlbroute) o;
    return Objects.equals(this.displayName, mlbroute.displayName) &&
        Objects.equals(this.ID, mlbroute.ID) &&
        Objects.equals(this.classID, mlbroute.classID) &&
        Objects.equals(this.objVersion, mlbroute.objVersion) &&
        Objects.equals(this.rows, mlbroute.rows) &&
        Objects.equals(this.throughPlaces, mlbroute.throughPlaces) &&
        Objects.equals(this.distanceCounted, mlbroute.distanceCounted) &&
        Objects.equals(this.startPlaceID, mlbroute.startPlaceID) &&
        Objects.equals(this.endPlaceID, mlbroute.endPlaceID) &&
        Objects.equals(this.andBack, mlbroute.andBack) &&
        Objects.equals(this.distance, mlbroute.distance) &&
        Objects.equals(this.firmID, mlbroute.firmID) &&
        Objects.equals(this.firmOfficeID, mlbroute.firmOfficeID) &&
        Objects.equals(this.purposeID, mlbroute.purposeID) &&
        Objects.equals(this.hidden, mlbroute.hidden) &&
        Objects.equals(this.distanceDelta, mlbroute.distanceDelta) &&
        Objects.equals(this.durationDATE, mlbroute.durationDATE) &&
        Objects.equals(this.waitingTimeMinDATE, mlbroute.waitingTimeMinDATE) &&
        Objects.equals(this.waitingTimeMaxDATE, mlbroute.waitingTimeMaxDATE) &&
        Objects.equals(this.createdByID, mlbroute.createdByID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, throughPlaces, distanceCounted, startPlaceID, endPlaceID, andBack, distance, firmID, firmOfficeID, purposeID, hidden, distanceDelta, durationDATE, waitingTimeMinDATE, waitingTimeMaxDATE, createdByID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mlbroute {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    throughPlaces: ").append(toIndentedString(throughPlaces)).append("\n");
    sb.append("    distanceCounted: ").append(toIndentedString(distanceCounted)).append("\n");
    sb.append("    startPlaceID: ").append(toIndentedString(startPlaceID)).append("\n");
    sb.append("    endPlaceID: ").append(toIndentedString(endPlaceID)).append("\n");
    sb.append("    andBack: ").append(toIndentedString(andBack)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    firmOfficeID: ").append(toIndentedString(firmOfficeID)).append("\n");
    sb.append("    purposeID: ").append(toIndentedString(purposeID)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    distanceDelta: ").append(toIndentedString(distanceDelta)).append("\n");
    sb.append("    durationDATE: ").append(toIndentedString(durationDATE)).append("\n");
    sb.append("    waitingTimeMinDATE: ").append(toIndentedString(waitingTimeMinDATE)).append("\n");
    sb.append("    waitingTimeMaxDATE: ").append(toIndentedString(waitingTimeMaxDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

