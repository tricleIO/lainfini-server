/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Vatsummarydefinition
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Vatsummarydefinition   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Vatsummarydefinitionrow> rows = new ArrayList<Vatsummarydefinitionrow>();

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("country_id")
  private String countryId = null;

  @SerializedName("prefillexpressions")
  private List<Vatsummarydefinitionprefillexpression> prefillexpressions = new ArrayList<Vatsummarydefinitionprefillexpression>();

  @SerializedName("closingkind")
  private Integer closingkind = null;

  @SerializedName("closingkindastext")
  private String closingkindastext = null;

  @SerializedName("notforvatclosing")
  private Boolean notforvatclosing = null;

  public Vatsummarydefinition displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Vatsummarydefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Vatsummarydefinition classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Vatsummarydefinition objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Vatsummarydefinition rows(List<Vatsummarydefinitionrow> rows) {
    this.rows = rows;
    return this;
  }

  public Vatsummarydefinition addRowsItem(Vatsummarydefinitionrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo definice pro dph přiznání - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo definice pro dph přiznání - řádek [nepersistentní položka]")
  public List<Vatsummarydefinitionrow> getRows() {
    return rows;
  }

  public void setRows(List<Vatsummarydefinitionrow> rows) {
    this.rows = rows;
  }

  public Vatsummarydefinition hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Vatsummarydefinition code(String code) {
    this.code = code;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Vatsummarydefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Vatsummarydefinition countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

   /**
   * země; id objektu země [persistentní položka]
   * @return countryId
  **/
  @ApiModelProperty(example = "null", value = "země; id objektu země [persistentní položka]")
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }

  public Vatsummarydefinition prefillexpressions(List<Vatsummarydefinitionprefillexpression> prefillexpressions) {
    this.prefillexpressions = prefillexpressions;
    return this;
  }

  public Vatsummarydefinition addPrefillexpressionsItem(Vatsummarydefinitionprefillexpression prefillexpressionsItem) {
    this.prefillexpressions.add(prefillexpressionsItem);
    return this;
  }

   /**
   * předvyplnění; kolekce bo definice pro dph přiznání - předvyplnění [nepersistentní položka]
   * @return prefillexpressions
  **/
  @ApiModelProperty(example = "null", value = "předvyplnění; kolekce bo definice pro dph přiznání - předvyplnění [nepersistentní položka]")
  public List<Vatsummarydefinitionprefillexpression> getPrefillexpressions() {
    return prefillexpressions;
  }

  public void setPrefillexpressions(List<Vatsummarydefinitionprefillexpression> prefillexpressions) {
    this.prefillexpressions = prefillexpressions;
  }

  public Vatsummarydefinition closingkind(Integer closingkind) {
    this.closingkind = closingkind;
    return this;
  }

   /**
   * typ přiznání [persistentní položka]
   * @return closingkind
  **/
  @ApiModelProperty(example = "null", value = "typ přiznání [persistentní položka]")
  public Integer getClosingkind() {
    return closingkind;
  }

  public void setClosingkind(Integer closingkind) {
    this.closingkind = closingkind;
  }

  public Vatsummarydefinition closingkindastext(String closingkindastext) {
    this.closingkindastext = closingkindastext;
    return this;
  }

   /**
   * typ přiznání
   * @return closingkindastext
  **/
  @ApiModelProperty(example = "null", value = "typ přiznání")
  public String getClosingkindastext() {
    return closingkindastext;
  }

  public void setClosingkindastext(String closingkindastext) {
    this.closingkindastext = closingkindastext;
  }

  public Vatsummarydefinition notforvatclosing(Boolean notforvatclosing) {
    this.notforvatclosing = notforvatclosing;
    return this;
  }

   /**
   * ne pro uzávěrku dph [persistentní položka]
   * @return notforvatclosing
  **/
  @ApiModelProperty(example = "null", value = "ne pro uzávěrku dph [persistentní položka]")
  public Boolean getNotforvatclosing() {
    return notforvatclosing;
  }

  public void setNotforvatclosing(Boolean notforvatclosing) {
    this.notforvatclosing = notforvatclosing;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vatsummarydefinition vatsummarydefinition = (Vatsummarydefinition) o;
    return Objects.equals(this.displayname, vatsummarydefinition.displayname) &&
        Objects.equals(this.id, vatsummarydefinition.id) &&
        Objects.equals(this.classid, vatsummarydefinition.classid) &&
        Objects.equals(this.objversion, vatsummarydefinition.objversion) &&
        Objects.equals(this.rows, vatsummarydefinition.rows) &&
        Objects.equals(this.hidden, vatsummarydefinition.hidden) &&
        Objects.equals(this.code, vatsummarydefinition.code) &&
        Objects.equals(this.description, vatsummarydefinition.description) &&
        Objects.equals(this.countryId, vatsummarydefinition.countryId) &&
        Objects.equals(this.prefillexpressions, vatsummarydefinition.prefillexpressions) &&
        Objects.equals(this.closingkind, vatsummarydefinition.closingkind) &&
        Objects.equals(this.closingkindastext, vatsummarydefinition.closingkindastext) &&
        Objects.equals(this.notforvatclosing, vatsummarydefinition.notforvatclosing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, hidden, code, description, countryId, prefillexpressions, closingkind, closingkindastext, notforvatclosing);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vatsummarydefinition {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    prefillexpressions: ").append(toIndentedString(prefillexpressions)).append("\n");
    sb.append("    closingkind: ").append(toIndentedString(closingkind)).append("\n");
    sb.append("    closingkindastext: ").append(toIndentedString(closingkindastext)).append("\n");
    sb.append("    notforvatclosing: ").append(toIndentedString(notforvatclosing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

