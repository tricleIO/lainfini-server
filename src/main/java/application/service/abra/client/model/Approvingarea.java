/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.LocalDate;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Approvingarea
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Approvingarea   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Approvingareacriterion> rows = new ArrayList<Approvingareacriterion>();

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("StoreCards")
  private List<Approvingareastorecard> storeCards = new ArrayList<Approvingareastorecard>();

  @SerializedName("TypeDefinition")
  private Integer typeDefinition = null;

  @SerializedName("StoreMenus")
  private List<Approvingareastoremenu> storeMenus = new ArrayList<Approvingareastoremenu>();

  @SerializedName("ApprovalFromDate")
  private LocalDate approvalFromDate = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Approvingarea rows(List<Approvingareacriterion> rows) {
    this.rows = rows;
    return this;
  }

  public Approvingarea addRowsItem(Approvingareacriterion rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Oblast hodnocení - hodnotící kritérium [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Oblast hodnocení - hodnotící kritérium [nepersistentní položka]")
  public List<Approvingareacriterion> getRows() {
    return rows;
  }

  public void setRows(List<Approvingareacriterion> rows) {
    this.rows = rows;
  }

  public Approvingarea code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Approvingarea name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Approvingarea storeCards(List<Approvingareastorecard> storeCards) {
    this.storeCards = storeCards;
    return this;
  }

  public Approvingarea addStoreCardsItem(Approvingareastorecard storeCardsItem) {
    this.storeCards.add(storeCardsItem);
    return this;
  }

   /**
   * Skladové karty; kolekce BO Oblast hodnocení - skladová karta [nepersistentní položka]
   * @return storeCards
  **/
  @ApiModelProperty(example = "null", value = "Skladové karty; kolekce BO Oblast hodnocení - skladová karta [nepersistentní položka]")
  public List<Approvingareastorecard> getStoreCards() {
    return storeCards;
  }

  public void setStoreCards(List<Approvingareastorecard> storeCards) {
    this.storeCards = storeCards;
  }

  public Approvingarea typeDefinition(Integer typeDefinition) {
    this.typeDefinition = typeDefinition;
    return this;
  }

   /**
   * Typ vymezení [persistentní položka]
   * @return typeDefinition
  **/
  @ApiModelProperty(example = "null", value = "Typ vymezení [persistentní položka]")
  public Integer getTypeDefinition() {
    return typeDefinition;
  }

  public void setTypeDefinition(Integer typeDefinition) {
    this.typeDefinition = typeDefinition;
  }

  public Approvingarea storeMenus(List<Approvingareastoremenu> storeMenus) {
    this.storeMenus = storeMenus;
    return this;
  }

  public Approvingarea addStoreMenusItem(Approvingareastoremenu storeMenusItem) {
    this.storeMenus.add(storeMenusItem);
    return this;
  }

   /**
   * Skladové menu; kolekce BO Oblast hodnocení - skladové menu [nepersistentní položka]
   * @return storeMenus
  **/
  @ApiModelProperty(example = "null", value = "Skladové menu; kolekce BO Oblast hodnocení - skladové menu [nepersistentní položka]")
  public List<Approvingareastoremenu> getStoreMenus() {
    return storeMenus;
  }

  public void setStoreMenus(List<Approvingareastoremenu> storeMenus) {
    this.storeMenus = storeMenus;
  }

  public Approvingarea approvalFromDate(LocalDate approvalFromDate) {
    this.approvalFromDate = approvalFromDate;
    return this;
  }

   /**
   * Schvalování od [persistentní položka]
   * @return approvalFromDate
  **/
  @ApiModelProperty(example = "null", value = "Schvalování od [persistentní položka]")
  public LocalDate getApprovalFromDate() {
    return approvalFromDate;
  }

  public void setApprovalFromDate(LocalDate approvalFromDate) {
    this.approvalFromDate = approvalFromDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Approvingarea approvingarea = (Approvingarea) o;
    return Objects.equals(this.displayName, approvingarea.displayName) &&
        Objects.equals(this.ID, approvingarea.ID) &&
        Objects.equals(this.classID, approvingarea.classID) &&
        Objects.equals(this.objVersion, approvingarea.objVersion) &&
        Objects.equals(this.rows, approvingarea.rows) &&
        Objects.equals(this.code, approvingarea.code) &&
        Objects.equals(this.name, approvingarea.name) &&
        Objects.equals(this.storeCards, approvingarea.storeCards) &&
        Objects.equals(this.typeDefinition, approvingarea.typeDefinition) &&
        Objects.equals(this.storeMenus, approvingarea.storeMenus) &&
        Objects.equals(this.approvalFromDate, approvingarea.approvalFromDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, code, name, storeCards, typeDefinition, storeMenus, approvalFromDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Approvingarea {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    storeCards: ").append(toIndentedString(storeCards)).append("\n");
    sb.append("    typeDefinition: ").append(toIndentedString(typeDefinition)).append("\n");
    sb.append("    storeMenus: ").append(toIndentedString(storeMenus)).append("\n");
    sb.append("    approvalFromDate: ").append(toIndentedString(approvalFromDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

