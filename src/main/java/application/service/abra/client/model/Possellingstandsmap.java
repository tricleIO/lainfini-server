/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Possellingstandsmap
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Possellingstandsmap   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Possellingstandsmapspace> rows = new ArrayList<Possellingstandsmapspace>();

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Shop_ID")
  private String shopID = null;

  @SerializedName("Map")
  private byte[] map = null;

  @SerializedName("ScreenWidth")
  private Integer screenWidth = null;

  @SerializedName("ScreenHeigth")
  private Integer screenHeigth = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Possellingstandsmap rows(List<Possellingstandsmapspace> rows) {
    this.rows = rows;
    return this;
  }

  public Possellingstandsmap addRowsItem(Possellingstandsmapspace rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Plochy [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Plochy [nepersistentní položka]")
  public List<Possellingstandsmapspace> getRows() {
    return rows;
  }

  public void setRows(List<Possellingstandsmapspace> rows) {
    this.rows = rows;
  }

  public Possellingstandsmap name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Possellingstandsmap code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Possellingstandsmap shopID(String shopID) {
    this.shopID = shopID;
    return this;
  }

   /**
   * Provoz; ID objektu Nastavení provozu [persistentní položka]
   * @return shopID
  **/
  @ApiModelProperty(example = "null", value = "Provoz; ID objektu Nastavení provozu [persistentní položka]")
  public String getShopID() {
    return shopID;
  }

  public void setShopID(String shopID) {
    this.shopID = shopID;
  }

  public Possellingstandsmap map(byte[] map) {
    this.map = map;
    return this;
  }

   /**
   * Mapa [persistentní položka]
   * @return map
  **/
  @ApiModelProperty(example = "null", value = "Mapa [persistentní položka]")
  public byte[] getMap() {
    return map;
  }

  public void setMap(byte[] map) {
    this.map = map;
  }

  public Possellingstandsmap screenWidth(Integer screenWidth) {
    this.screenWidth = screenWidth;
    return this;
  }

   /**
   * Výška obrazovky [persistentní položka]
   * @return screenWidth
  **/
  @ApiModelProperty(example = "null", value = "Výška obrazovky [persistentní položka]")
  public Integer getScreenWidth() {
    return screenWidth;
  }

  public void setScreenWidth(Integer screenWidth) {
    this.screenWidth = screenWidth;
  }

  public Possellingstandsmap screenHeigth(Integer screenHeigth) {
    this.screenHeigth = screenHeigth;
    return this;
  }

   /**
   * Šířka obrazovky [persistentní položka]
   * @return screenHeigth
  **/
  @ApiModelProperty(example = "null", value = "Šířka obrazovky [persistentní položka]")
  public Integer getScreenHeigth() {
    return screenHeigth;
  }

  public void setScreenHeigth(Integer screenHeigth) {
    this.screenHeigth = screenHeigth;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Possellingstandsmap possellingstandsmap = (Possellingstandsmap) o;
    return Objects.equals(this.displayName, possellingstandsmap.displayName) &&
        Objects.equals(this.ID, possellingstandsmap.ID) &&
        Objects.equals(this.classID, possellingstandsmap.classID) &&
        Objects.equals(this.objVersion, possellingstandsmap.objVersion) &&
        Objects.equals(this.rows, possellingstandsmap.rows) &&
        Objects.equals(this.name, possellingstandsmap.name) &&
        Objects.equals(this.code, possellingstandsmap.code) &&
        Objects.equals(this.shopID, possellingstandsmap.shopID) &&
        Objects.equals(this.map, possellingstandsmap.map) &&
        Objects.equals(this.screenWidth, possellingstandsmap.screenWidth) &&
        Objects.equals(this.screenHeigth, possellingstandsmap.screenHeigth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, name, code, shopID, map, screenWidth, screenHeigth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Possellingstandsmap {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    shopID: ").append(toIndentedString(shopID)).append("\n");
    sb.append("    map: ").append(toIndentedString(map)).append("\n");
    sb.append("    screenWidth: ").append(toIndentedString(screenWidth)).append("\n");
    sb.append("    screenHeigth: ").append(toIndentedString(screenHeigth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

