/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Storesubbatch
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Storesubbatch   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("StoreBatch_ID")
  private String storeBatchID = null;

  @SerializedName("Store_ID")
  private String storeID = null;

  @SerializedName("Quantity")
  private Double quantity = null;

  @SerializedName("MainUnitCode")
  private String mainUnitCode = null;

  @SerializedName("MainUnitQuantity")
  private Double mainUnitQuantity = null;

  @SerializedName("Location_ID")
  private String locationID = null;

  @SerializedName("GuaranteeEndDate$DATE")
  private DateTime guaranteeEndDateDATE = null;

  @SerializedName("GuaranteeEndDateAsText")
  private String guaranteeEndDateAsText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Storesubbatch storeBatchID(String storeBatchID) {
    this.storeBatchID = storeBatchID;
    return this;
  }

   /**
   * Šarže; ID objektu Šarže/sériové číslo [persistentní položka]
   * @return storeBatchID
  **/
  @ApiModelProperty(example = "null", value = "Šarže; ID objektu Šarže/sériové číslo [persistentní položka]")
  public String getStoreBatchID() {
    return storeBatchID;
  }

  public void setStoreBatchID(String storeBatchID) {
    this.storeBatchID = storeBatchID;
  }

  public Storesubbatch storeID(String storeID) {
    this.storeID = storeID;
    return this;
  }

   /**
   * Sklad; ID objektu Sklad [persistentní položka]
   * @return storeID
  **/
  @ApiModelProperty(example = "null", value = "Sklad; ID objektu Sklad [persistentní položka]")
  public String getStoreID() {
    return storeID;
  }

  public void setStoreID(String storeID) {
    this.storeID = storeID;
  }

  public Storesubbatch quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Počet [persistentní položka]
   * @return quantity
  **/
  @ApiModelProperty(example = "null", value = "Počet [persistentní položka]")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

   /**
   * Hlavní jednotka
   * @return mainUnitCode
  **/
  @ApiModelProperty(example = "null", value = "Hlavní jednotka")
  public String getMainUnitCode() {
    return mainUnitCode;
  }

   /**
   * Množství v hl. jednotce
   * @return mainUnitQuantity
  **/
  @ApiModelProperty(example = "null", value = "Množství v hl. jednotce")
  public Double getMainUnitQuantity() {
    return mainUnitQuantity;
  }

  public Storesubbatch locationID(String locationID) {
    this.locationID = locationID;
    return this;
  }

   /**
   * Místo; ID objektu Skladové místo [persistentní položka]
   * @return locationID
  **/
  @ApiModelProperty(example = "null", value = "Místo; ID objektu Skladové místo [persistentní položka]")
  public String getLocationID() {
    return locationID;
  }

  public void setLocationID(String locationID) {
    this.locationID = locationID;
  }

  public Storesubbatch guaranteeEndDateDATE(DateTime guaranteeEndDateDATE) {
    this.guaranteeEndDateDATE = guaranteeEndDateDATE;
    return this;
  }

   /**
   * Datum záruky [persistentní položka]
   * @return guaranteeEndDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum záruky [persistentní položka]")
  public DateTime getGuaranteeEndDateDATE() {
    return guaranteeEndDateDATE;
  }

  public void setGuaranteeEndDateDATE(DateTime guaranteeEndDateDATE) {
    this.guaranteeEndDateDATE = guaranteeEndDateDATE;
  }

   /**
   * Datum záruky
   * @return guaranteeEndDateAsText
  **/
  @ApiModelProperty(example = "null", value = "Datum záruky")
  public String getGuaranteeEndDateAsText() {
    return guaranteeEndDateAsText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Storesubbatch storesubbatch = (Storesubbatch) o;
    return Objects.equals(this.displayName, storesubbatch.displayName) &&
        Objects.equals(this.ID, storesubbatch.ID) &&
        Objects.equals(this.classID, storesubbatch.classID) &&
        Objects.equals(this.objVersion, storesubbatch.objVersion) &&
        Objects.equals(this.storeBatchID, storesubbatch.storeBatchID) &&
        Objects.equals(this.storeID, storesubbatch.storeID) &&
        Objects.equals(this.quantity, storesubbatch.quantity) &&
        Objects.equals(this.mainUnitCode, storesubbatch.mainUnitCode) &&
        Objects.equals(this.mainUnitQuantity, storesubbatch.mainUnitQuantity) &&
        Objects.equals(this.locationID, storesubbatch.locationID) &&
        Objects.equals(this.guaranteeEndDateDATE, storesubbatch.guaranteeEndDateDATE) &&
        Objects.equals(this.guaranteeEndDateAsText, storesubbatch.guaranteeEndDateAsText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, storeBatchID, storeID, quantity, mainUnitCode, mainUnitQuantity, locationID, guaranteeEndDateDATE, guaranteeEndDateAsText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Storesubbatch {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    storeBatchID: ").append(toIndentedString(storeBatchID)).append("\n");
    sb.append("    storeID: ").append(toIndentedString(storeID)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    mainUnitCode: ").append(toIndentedString(mainUnitCode)).append("\n");
    sb.append("    mainUnitQuantity: ").append(toIndentedString(mainUnitQuantity)).append("\n");
    sb.append("    locationID: ").append(toIndentedString(locationID)).append("\n");
    sb.append("    guaranteeEndDateDATE: ").append(toIndentedString(guaranteeEndDateDATE)).append("\n");
    sb.append("    guaranteeEndDateAsText: ").append(toIndentedString(guaranteeEndDateAsText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

