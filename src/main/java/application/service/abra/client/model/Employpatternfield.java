/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Employpatternfield
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Employpatternfield   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("clsid")
  private String clsid = null;

  @SerializedName("fieldcode")
  private Integer fieldcode = null;

  @SerializedName("initialvalue")
  private String initialvalue = null;

  @SerializedName("fieldname")
  private String fieldname = null;

  @SerializedName("fieldlabel")
  private String fieldlabel = null;

  @SerializedName("fielddatatype")
  private Integer fielddatatype = null;

  public Employpatternfield displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Employpatternfield id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Employpatternfield classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Employpatternfield objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Employpatternfield parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu druh pracovního poměru [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu druh pracovního poměru [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Employpatternfield clsid(String clsid) {
    this.clsid = clsid;
    return this;
  }

   /**
   * třída [persistentní položka]
   * @return clsid
  **/
  @ApiModelProperty(example = "null", value = "třída [persistentní položka]")
  public String getClsid() {
    return clsid;
  }

  public void setClsid(String clsid) {
    this.clsid = clsid;
  }

  public Employpatternfield fieldcode(Integer fieldcode) {
    this.fieldcode = fieldcode;
    return this;
  }

   /**
   * položka [persistentní položka]
   * @return fieldcode
  **/
  @ApiModelProperty(example = "null", value = "položka [persistentní položka]")
  public Integer getFieldcode() {
    return fieldcode;
  }

  public void setFieldcode(Integer fieldcode) {
    this.fieldcode = fieldcode;
  }

  public Employpatternfield initialvalue(String initialvalue) {
    this.initialvalue = initialvalue;
    return this;
  }

   /**
   * výchozí hodnota [persistentní položka]
   * @return initialvalue
  **/
  @ApiModelProperty(example = "null", value = "výchozí hodnota [persistentní položka]")
  public String getInitialvalue() {
    return initialvalue;
  }

  public void setInitialvalue(String initialvalue) {
    this.initialvalue = initialvalue;
  }

  public Employpatternfield fieldname(String fieldname) {
    this.fieldname = fieldname;
    return this;
  }

   /**
   * položka
   * @return fieldname
  **/
  @ApiModelProperty(example = "null", value = "položka")
  public String getFieldname() {
    return fieldname;
  }

  public void setFieldname(String fieldname) {
    this.fieldname = fieldname;
  }

  public Employpatternfield fieldlabel(String fieldlabel) {
    this.fieldlabel = fieldlabel;
    return this;
  }

   /**
   * položka
   * @return fieldlabel
  **/
  @ApiModelProperty(example = "null", value = "položka")
  public String getFieldlabel() {
    return fieldlabel;
  }

  public void setFieldlabel(String fieldlabel) {
    this.fieldlabel = fieldlabel;
  }

  public Employpatternfield fielddatatype(Integer fielddatatype) {
    this.fielddatatype = fielddatatype;
    return this;
  }

   /**
   * dat. typ
   * @return fielddatatype
  **/
  @ApiModelProperty(example = "null", value = "dat. typ")
  public Integer getFielddatatype() {
    return fielddatatype;
  }

  public void setFielddatatype(Integer fielddatatype) {
    this.fielddatatype = fielddatatype;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Employpatternfield employpatternfield = (Employpatternfield) o;
    return Objects.equals(this.displayname, employpatternfield.displayname) &&
        Objects.equals(this.id, employpatternfield.id) &&
        Objects.equals(this.classid, employpatternfield.classid) &&
        Objects.equals(this.objversion, employpatternfield.objversion) &&
        Objects.equals(this.parentId, employpatternfield.parentId) &&
        Objects.equals(this.clsid, employpatternfield.clsid) &&
        Objects.equals(this.fieldcode, employpatternfield.fieldcode) &&
        Objects.equals(this.initialvalue, employpatternfield.initialvalue) &&
        Objects.equals(this.fieldname, employpatternfield.fieldname) &&
        Objects.equals(this.fieldlabel, employpatternfield.fieldlabel) &&
        Objects.equals(this.fielddatatype, employpatternfield.fielddatatype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, clsid, fieldcode, initialvalue, fieldname, fieldlabel, fielddatatype);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Employpatternfield {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    clsid: ").append(toIndentedString(clsid)).append("\n");
    sb.append("    fieldcode: ").append(toIndentedString(fieldcode)).append("\n");
    sb.append("    initialvalue: ").append(toIndentedString(initialvalue)).append("\n");
    sb.append("    fieldname: ").append(toIndentedString(fieldname)).append("\n");
    sb.append("    fieldlabel: ").append(toIndentedString(fieldlabel)).append("\n");
    sb.append("    fielddatatype: ").append(toIndentedString(fielddatatype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

