/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Installsetversion
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Installsetversion   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("Version")
  private Integer version = null;

  @SerializedName("VersionAuthor")
  private String versionAuthor = null;

  @SerializedName("VersionDate$DATE")
  private DateTime versionDateDATE = null;

  @SerializedName("VersionDescription")
  private String versionDescription = null;

  @SerializedName("VersionItems")
  private List<Installsetversion> versionItems = new ArrayList<Installsetversion>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Instalační sada [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Instalační sada [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Installsetversion version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Číslo verze [persistentní položka]
   * @return version
  **/
  @ApiModelProperty(example = "null", value = "Číslo verze [persistentní položka]")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public Installsetversion versionAuthor(String versionAuthor) {
    this.versionAuthor = versionAuthor;
    return this;
  }

   /**
   * Autor verze [persistentní položka]
   * @return versionAuthor
  **/
  @ApiModelProperty(example = "null", value = "Autor verze [persistentní položka]")
  public String getVersionAuthor() {
    return versionAuthor;
  }

  public void setVersionAuthor(String versionAuthor) {
    this.versionAuthor = versionAuthor;
  }

  public Installsetversion versionDateDATE(DateTime versionDateDATE) {
    this.versionDateDATE = versionDateDATE;
    return this;
  }

   /**
   * Datum verze [persistentní položka]
   * @return versionDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum verze [persistentní položka]")
  public DateTime getVersionDateDATE() {
    return versionDateDATE;
  }

  public void setVersionDateDATE(DateTime versionDateDATE) {
    this.versionDateDATE = versionDateDATE;
  }

  public Installsetversion versionDescription(String versionDescription) {
    this.versionDescription = versionDescription;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return versionDescription
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getVersionDescription() {
    return versionDescription;
  }

  public void setVersionDescription(String versionDescription) {
    this.versionDescription = versionDescription;
  }

  public Installsetversion versionItems(List<Installsetversion> versionItems) {
    this.versionItems = versionItems;
    return this;
  }

  public Installsetversion addVersionItemsItem(Installsetversion versionItemsItem) {
    this.versionItems.add(versionItemsItem);
    return this;
  }

   /**
   * Položka instalační sady ve verzi; kolekce BO Verze instalační sady [nepersistentní položka]
   * @return versionItems
  **/
  @ApiModelProperty(example = "null", value = "Položka instalační sady ve verzi; kolekce BO Verze instalační sady [nepersistentní položka]")
  public List<Installsetversion> getVersionItems() {
    return versionItems;
  }

  public void setVersionItems(List<Installsetversion> versionItems) {
    this.versionItems = versionItems;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Installsetversion installsetversion = (Installsetversion) o;
    return Objects.equals(this.displayName, installsetversion.displayName) &&
        Objects.equals(this.ID, installsetversion.ID) &&
        Objects.equals(this.classID, installsetversion.classID) &&
        Objects.equals(this.objVersion, installsetversion.objVersion) &&
        Objects.equals(this.parentID, installsetversion.parentID) &&
        Objects.equals(this.version, installsetversion.version) &&
        Objects.equals(this.versionAuthor, installsetversion.versionAuthor) &&
        Objects.equals(this.versionDateDATE, installsetversion.versionDateDATE) &&
        Objects.equals(this.versionDescription, installsetversion.versionDescription) &&
        Objects.equals(this.versionItems, installsetversion.versionItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, version, versionAuthor, versionDateDATE, versionDescription, versionItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Installsetversion {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionAuthor: ").append(toIndentedString(versionAuthor)).append("\n");
    sb.append("    versionDateDATE: ").append(toIndentedString(versionDateDATE)).append("\n");
    sb.append("    versionDescription: ").append(toIndentedString(versionDescription)).append("\n");
    sb.append("    versionItems: ").append(toIndentedString(versionItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

