/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Logstorecontent
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Logstorecontent   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("StoreCard_ID")
  private String storeCardID = null;

  @SerializedName("StoreBatch_ID")
  private String storeBatchID = null;

  @SerializedName("QUnit")
  private String qUnit = null;

  @SerializedName("UnitRate")
  private Double unitRate = null;

  @SerializedName("Quantity")
  private Double quantity = null;

  @SerializedName("QuantityReserved")
  private Double quantityReserved = null;

  @SerializedName("QuantityAwaited")
  private Double quantityAwaited = null;

  @SerializedName("DateOfStorage$DATE")
  private DateTime dateOfStorageDATE = null;

  @SerializedName("InvQuantity")
  private Double invQuantity = null;

  @SerializedName("InvChange")
  private Boolean invChange = null;

  @SerializedName("UnitQuantity")
  private Double unitQuantity = null;

  @SerializedName("UnitQuantityReserved")
  private Double unitQuantityReserved = null;

  @SerializedName("UnitQuantityAwaited")
  private Double unitQuantityAwaited = null;

  @SerializedName("UnitEditInvQuantity")
  private Double unitEditInvQuantity = null;

  @SerializedName("InvUnitQuantity")
  private Double invUnitQuantity = null;

  @SerializedName("TotalCapacity")
  private Double totalCapacity = null;

  @SerializedName("CapacityUnit")
  private Integer capacityUnit = null;

  @SerializedName("TotalWeight")
  private Double totalWeight = null;

  @SerializedName("WeightUnit")
  private Integer weightUnit = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Skladová pozice [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Skladová pozice [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Logstorecontent storeCardID(String storeCardID) {
    this.storeCardID = storeCardID;
    return this;
  }

   /**
   * Skladová karta; ID objektu Skladová karta [persistentní položka]
   * @return storeCardID
  **/
  @ApiModelProperty(example = "null", value = "Skladová karta; ID objektu Skladová karta [persistentní položka]")
  public String getStoreCardID() {
    return storeCardID;
  }

  public void setStoreCardID(String storeCardID) {
    this.storeCardID = storeCardID;
  }

  public Logstorecontent storeBatchID(String storeBatchID) {
    this.storeBatchID = storeBatchID;
    return this;
  }

   /**
   * Sériové číslo/šarže; ID objektu Šarže/sériové číslo [persistentní položka]
   * @return storeBatchID
  **/
  @ApiModelProperty(example = "null", value = "Sériové číslo/šarže; ID objektu Šarže/sériové číslo [persistentní položka]")
  public String getStoreBatchID() {
    return storeBatchID;
  }

  public void setStoreBatchID(String storeBatchID) {
    this.storeBatchID = storeBatchID;
  }

  public Logstorecontent qUnit(String qUnit) {
    this.qUnit = qUnit;
    return this;
  }

   /**
   * Jednotka [persistentní položka]
   * @return qUnit
  **/
  @ApiModelProperty(example = "null", value = "Jednotka [persistentní položka]")
  public String getQUnit() {
    return qUnit;
  }

  public void setQUnit(String qUnit) {
    this.qUnit = qUnit;
  }

  public Logstorecontent unitRate(Double unitRate) {
    this.unitRate = unitRate;
    return this;
  }

   /**
   * Převodní vztah jedn. [persistentní položka]
   * @return unitRate
  **/
  @ApiModelProperty(example = "null", value = "Převodní vztah jedn. [persistentní položka]")
  public Double getUnitRate() {
    return unitRate;
  }

  public void setUnitRate(Double unitRate) {
    this.unitRate = unitRate;
  }

  public Logstorecontent quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Množství [persistentní položka]
   * @return quantity
  **/
  @ApiModelProperty(example = "null", value = "Množství [persistentní položka]")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public Logstorecontent quantityReserved(Double quantityReserved) {
    this.quantityReserved = quantityReserved;
    return this;
  }

   /**
   * Rezervované množství [persistentní položka]
   * @return quantityReserved
  **/
  @ApiModelProperty(example = "null", value = "Rezervované množství [persistentní položka]")
  public Double getQuantityReserved() {
    return quantityReserved;
  }

  public void setQuantityReserved(Double quantityReserved) {
    this.quantityReserved = quantityReserved;
  }

  public Logstorecontent quantityAwaited(Double quantityAwaited) {
    this.quantityAwaited = quantityAwaited;
    return this;
  }

   /**
   * Očekávané množství [persistentní položka]
   * @return quantityAwaited
  **/
  @ApiModelProperty(example = "null", value = "Očekávané množství [persistentní položka]")
  public Double getQuantityAwaited() {
    return quantityAwaited;
  }

  public void setQuantityAwaited(Double quantityAwaited) {
    this.quantityAwaited = quantityAwaited;
  }

  public Logstorecontent dateOfStorageDATE(DateTime dateOfStorageDATE) {
    this.dateOfStorageDATE = dateOfStorageDATE;
    return this;
  }

   /**
   * Datum naskladnění [persistentní položka]
   * @return dateOfStorageDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum naskladnění [persistentní položka]")
  public DateTime getDateOfStorageDATE() {
    return dateOfStorageDATE;
  }

  public void setDateOfStorageDATE(DateTime dateOfStorageDATE) {
    this.dateOfStorageDATE = dateOfStorageDATE;
  }

  public Logstorecontent invQuantity(Double invQuantity) {
    this.invQuantity = invQuantity;
    return this;
  }

   /**
   * Skutečné množství [persistentní položka]
   * @return invQuantity
  **/
  @ApiModelProperty(example = "null", value = "Skutečné množství [persistentní položka]")
  public Double getInvQuantity() {
    return invQuantity;
  }

  public void setInvQuantity(Double invQuantity) {
    this.invQuantity = invQuantity;
  }

  public Logstorecontent invChange(Boolean invChange) {
    this.invChange = invChange;
    return this;
  }

   /**
   * Změna v průběhu inventury [persistentní položka]
   * @return invChange
  **/
  @ApiModelProperty(example = "null", value = "Změna v průběhu inventury [persistentní položka]")
  public Boolean getInvChange() {
    return invChange;
  }

  public void setInvChange(Boolean invChange) {
    this.invChange = invChange;
  }

   /**
   * Množství v jednotce
   * @return unitQuantity
  **/
  @ApiModelProperty(example = "null", value = "Množství v jednotce")
  public Double getUnitQuantity() {
    return unitQuantity;
  }

   /**
   * Rezervované množství v jednotce
   * @return unitQuantityReserved
  **/
  @ApiModelProperty(example = "null", value = "Rezervované množství v jednotce")
  public Double getUnitQuantityReserved() {
    return unitQuantityReserved;
  }

   /**
   * Očekávané množství v jednotce
   * @return unitQuantityAwaited
  **/
  @ApiModelProperty(example = "null", value = "Očekávané množství v jednotce")
  public Double getUnitQuantityAwaited() {
    return unitQuantityAwaited;
  }

  public Logstorecontent unitEditInvQuantity(Double unitEditInvQuantity) {
    this.unitEditInvQuantity = unitEditInvQuantity;
    return this;
  }

   /**
   * Skutečné množství (pro editaci) v jednotce
   * @return unitEditInvQuantity
  **/
  @ApiModelProperty(example = "null", value = "Skutečné množství (pro editaci) v jednotce")
  public Double getUnitEditInvQuantity() {
    return unitEditInvQuantity;
  }

  public void setUnitEditInvQuantity(Double unitEditInvQuantity) {
    this.unitEditInvQuantity = unitEditInvQuantity;
  }

  public Logstorecontent invUnitQuantity(Double invUnitQuantity) {
    this.invUnitQuantity = invUnitQuantity;
    return this;
  }

   /**
   * Skutečné množství v jednotce
   * @return invUnitQuantity
  **/
  @ApiModelProperty(example = "null", value = "Skutečné množství v jednotce")
  public Double getInvUnitQuantity() {
    return invUnitQuantity;
  }

  public void setInvUnitQuantity(Double invUnitQuantity) {
    this.invUnitQuantity = invUnitQuantity;
  }

  public Logstorecontent totalCapacity(Double totalCapacity) {
    this.totalCapacity = totalCapacity;
    return this;
  }

   /**
   * Celkový objem v jednotce [persistentní položka]
   * @return totalCapacity
  **/
  @ApiModelProperty(example = "null", value = "Celkový objem v jednotce [persistentní položka]")
  public Double getTotalCapacity() {
    return totalCapacity;
  }

  public void setTotalCapacity(Double totalCapacity) {
    this.totalCapacity = totalCapacity;
  }

  public Logstorecontent capacityUnit(Integer capacityUnit) {
    this.capacityUnit = capacityUnit;
    return this;
  }

   /**
   * Jednotka objemu [persistentní položka]
   * @return capacityUnit
  **/
  @ApiModelProperty(example = "null", value = "Jednotka objemu [persistentní položka]")
  public Integer getCapacityUnit() {
    return capacityUnit;
  }

  public void setCapacityUnit(Integer capacityUnit) {
    this.capacityUnit = capacityUnit;
  }

  public Logstorecontent totalWeight(Double totalWeight) {
    this.totalWeight = totalWeight;
    return this;
  }

   /**
   * Celková váha [persistentní položka]
   * @return totalWeight
  **/
  @ApiModelProperty(example = "null", value = "Celková váha [persistentní položka]")
  public Double getTotalWeight() {
    return totalWeight;
  }

  public void setTotalWeight(Double totalWeight) {
    this.totalWeight = totalWeight;
  }

  public Logstorecontent weightUnit(Integer weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

   /**
   * Jednotka hmotnosti [persistentní položka]
   * @return weightUnit
  **/
  @ApiModelProperty(example = "null", value = "Jednotka hmotnosti [persistentní položka]")
  public Integer getWeightUnit() {
    return weightUnit;
  }

  public void setWeightUnit(Integer weightUnit) {
    this.weightUnit = weightUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Logstorecontent logstorecontent = (Logstorecontent) o;
    return Objects.equals(this.displayName, logstorecontent.displayName) &&
        Objects.equals(this.ID, logstorecontent.ID) &&
        Objects.equals(this.classID, logstorecontent.classID) &&
        Objects.equals(this.objVersion, logstorecontent.objVersion) &&
        Objects.equals(this.parentID, logstorecontent.parentID) &&
        Objects.equals(this.storeCardID, logstorecontent.storeCardID) &&
        Objects.equals(this.storeBatchID, logstorecontent.storeBatchID) &&
        Objects.equals(this.qUnit, logstorecontent.qUnit) &&
        Objects.equals(this.unitRate, logstorecontent.unitRate) &&
        Objects.equals(this.quantity, logstorecontent.quantity) &&
        Objects.equals(this.quantityReserved, logstorecontent.quantityReserved) &&
        Objects.equals(this.quantityAwaited, logstorecontent.quantityAwaited) &&
        Objects.equals(this.dateOfStorageDATE, logstorecontent.dateOfStorageDATE) &&
        Objects.equals(this.invQuantity, logstorecontent.invQuantity) &&
        Objects.equals(this.invChange, logstorecontent.invChange) &&
        Objects.equals(this.unitQuantity, logstorecontent.unitQuantity) &&
        Objects.equals(this.unitQuantityReserved, logstorecontent.unitQuantityReserved) &&
        Objects.equals(this.unitQuantityAwaited, logstorecontent.unitQuantityAwaited) &&
        Objects.equals(this.unitEditInvQuantity, logstorecontent.unitEditInvQuantity) &&
        Objects.equals(this.invUnitQuantity, logstorecontent.invUnitQuantity) &&
        Objects.equals(this.totalCapacity, logstorecontent.totalCapacity) &&
        Objects.equals(this.capacityUnit, logstorecontent.capacityUnit) &&
        Objects.equals(this.totalWeight, logstorecontent.totalWeight) &&
        Objects.equals(this.weightUnit, logstorecontent.weightUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, storeCardID, storeBatchID, qUnit, unitRate, quantity, quantityReserved, quantityAwaited, dateOfStorageDATE, invQuantity, invChange, unitQuantity, unitQuantityReserved, unitQuantityAwaited, unitEditInvQuantity, invUnitQuantity, totalCapacity, capacityUnit, totalWeight, weightUnit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Logstorecontent {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    storeCardID: ").append(toIndentedString(storeCardID)).append("\n");
    sb.append("    storeBatchID: ").append(toIndentedString(storeBatchID)).append("\n");
    sb.append("    qUnit: ").append(toIndentedString(qUnit)).append("\n");
    sb.append("    unitRate: ").append(toIndentedString(unitRate)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    quantityReserved: ").append(toIndentedString(quantityReserved)).append("\n");
    sb.append("    quantityAwaited: ").append(toIndentedString(quantityAwaited)).append("\n");
    sb.append("    dateOfStorageDATE: ").append(toIndentedString(dateOfStorageDATE)).append("\n");
    sb.append("    invQuantity: ").append(toIndentedString(invQuantity)).append("\n");
    sb.append("    invChange: ").append(toIndentedString(invChange)).append("\n");
    sb.append("    unitQuantity: ").append(toIndentedString(unitQuantity)).append("\n");
    sb.append("    unitQuantityReserved: ").append(toIndentedString(unitQuantityReserved)).append("\n");
    sb.append("    unitQuantityAwaited: ").append(toIndentedString(unitQuantityAwaited)).append("\n");
    sb.append("    unitEditInvQuantity: ").append(toIndentedString(unitEditInvQuantity)).append("\n");
    sb.append("    invUnitQuantity: ").append(toIndentedString(invUnitQuantity)).append("\n");
    sb.append("    totalCapacity: ").append(toIndentedString(totalCapacity)).append("\n");
    sb.append("    capacityUnit: ").append(toIndentedString(capacityUnit)).append("\n");
    sb.append("    totalWeight: ").append(toIndentedString(totalWeight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

