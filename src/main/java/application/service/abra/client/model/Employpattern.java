/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Employpattern
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Employpattern   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("CalcPriority")
  private Integer calcPriority = null;

  @SerializedName("FieldCLSID")
  private String fieldCLSID = null;

  @SerializedName("ChartCLSID")
  private String chartCLSID = null;

  @SerializedName("Fields")
  private List<Employpatternfield> fields = new ArrayList<Employpatternfield>();

  @SerializedName("Charts")
  private List<Employpatternchart> charts = new ArrayList<Employpatternchart>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Employpattern hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Employpattern code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Employpattern name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Employpattern calcPriority(Integer calcPriority) {
    this.calcPriority = calcPriority;
    return this;
  }

   /**
   * Priorita [persistentní položka]
   * @return calcPriority
  **/
  @ApiModelProperty(example = "null", value = "Priorita [persistentní položka]")
  public Integer getCalcPriority() {
    return calcPriority;
  }

  public void setCalcPriority(Integer calcPriority) {
    this.calcPriority = calcPriority;
  }

  public Employpattern fieldCLSID(String fieldCLSID) {
    this.fieldCLSID = fieldCLSID;
    return this;
  }

   /**
   * Třída hodnot
   * @return fieldCLSID
  **/
  @ApiModelProperty(example = "null", value = "Třída hodnot")
  public String getFieldCLSID() {
    return fieldCLSID;
  }

  public void setFieldCLSID(String fieldCLSID) {
    this.fieldCLSID = fieldCLSID;
  }

  public Employpattern chartCLSID(String chartCLSID) {
    this.chartCLSID = chartCLSID;
    return this;
  }

   /**
   * Třída schémat
   * @return chartCLSID
  **/
  @ApiModelProperty(example = "null", value = "Třída schémat")
  public String getChartCLSID() {
    return chartCLSID;
  }

  public void setChartCLSID(String chartCLSID) {
    this.chartCLSID = chartCLSID;
  }

  public Employpattern fields(List<Employpatternfield> fields) {
    this.fields = fields;
    return this;
  }

  public Employpattern addFieldsItem(Employpatternfield fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Hodnoty; kolekce BO Výchozí hodnota [nepersistentní položka]
   * @return fields
  **/
  @ApiModelProperty(example = "null", value = "Hodnoty; kolekce BO Výchozí hodnota [nepersistentní položka]")
  public List<Employpatternfield> getFields() {
    return fields;
  }

  public void setFields(List<Employpatternfield> fields) {
    this.fields = fields;
  }

  public Employpattern charts(List<Employpatternchart> charts) {
    this.charts = charts;
    return this;
  }

  public Employpattern addChartsItem(Employpatternchart chartsItem) {
    this.charts.add(chartsItem);
    return this;
  }

   /**
   * Schémata; kolekce BO Výpočtové schéma pracovního poměru [nepersistentní položka]
   * @return charts
  **/
  @ApiModelProperty(example = "null", value = "Schémata; kolekce BO Výpočtové schéma pracovního poměru [nepersistentní položka]")
  public List<Employpatternchart> getCharts() {
    return charts;
  }

  public void setCharts(List<Employpatternchart> charts) {
    this.charts = charts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Employpattern employpattern = (Employpattern) o;
    return Objects.equals(this.displayName, employpattern.displayName) &&
        Objects.equals(this.ID, employpattern.ID) &&
        Objects.equals(this.classID, employpattern.classID) &&
        Objects.equals(this.objVersion, employpattern.objVersion) &&
        Objects.equals(this.hidden, employpattern.hidden) &&
        Objects.equals(this.code, employpattern.code) &&
        Objects.equals(this.name, employpattern.name) &&
        Objects.equals(this.calcPriority, employpattern.calcPriority) &&
        Objects.equals(this.fieldCLSID, employpattern.fieldCLSID) &&
        Objects.equals(this.chartCLSID, employpattern.chartCLSID) &&
        Objects.equals(this.fields, employpattern.fields) &&
        Objects.equals(this.charts, employpattern.charts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, calcPriority, fieldCLSID, chartCLSID, fields, charts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Employpattern {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    calcPriority: ").append(toIndentedString(calcPriority)).append("\n");
    sb.append("    fieldCLSID: ").append(toIndentedString(fieldCLSID)).append("\n");
    sb.append("    chartCLSID: ").append(toIndentedString(chartCLSID)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    charts: ").append(toIndentedString(charts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

