/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Servicedocstate
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Servicedocstate   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("isdefault")
  private Boolean isdefault = null;

  @SerializedName("isfinished")
  private Boolean isfinished = null;

  @SerializedName("isclosed")
  private Boolean isclosed = null;

  @SerializedName("isinvoiced")
  private Boolean isinvoiced = null;

  public Servicedocstate displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Servicedocstate id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Servicedocstate classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Servicedocstate objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Servicedocstate hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Servicedocstate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název stavu [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název stavu [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Servicedocstate posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Servicedocstate isdefault(Boolean isdefault) {
    this.isdefault = isdefault;
    return this;
  }

   /**
   * výchozí [persistentní položka]
   * @return isdefault
  **/
  @ApiModelProperty(example = "null", value = "výchozí [persistentní položka]")
  public Boolean getIsdefault() {
    return isdefault;
  }

  public void setIsdefault(Boolean isdefault) {
    this.isdefault = isdefault;
  }

  public Servicedocstate isfinished(Boolean isfinished) {
    this.isfinished = isfinished;
    return this;
  }

   /**
   * ukončený [persistentní položka]
   * @return isfinished
  **/
  @ApiModelProperty(example = "null", value = "ukončený [persistentní položka]")
  public Boolean getIsfinished() {
    return isfinished;
  }

  public void setIsfinished(Boolean isfinished) {
    this.isfinished = isfinished;
  }

  public Servicedocstate isclosed(Boolean isclosed) {
    this.isclosed = isclosed;
    return this;
  }

   /**
   * uzavřený [persistentní položka]
   * @return isclosed
  **/
  @ApiModelProperty(example = "null", value = "uzavřený [persistentní položka]")
  public Boolean getIsclosed() {
    return isclosed;
  }

  public void setIsclosed(Boolean isclosed) {
    this.isclosed = isclosed;
  }

  public Servicedocstate isinvoiced(Boolean isinvoiced) {
    this.isinvoiced = isinvoiced;
    return this;
  }

   /**
   * fakturovaný [persistentní položka]
   * @return isinvoiced
  **/
  @ApiModelProperty(example = "null", value = "fakturovaný [persistentní položka]")
  public Boolean getIsinvoiced() {
    return isinvoiced;
  }

  public void setIsinvoiced(Boolean isinvoiced) {
    this.isinvoiced = isinvoiced;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Servicedocstate servicedocstate = (Servicedocstate) o;
    return Objects.equals(this.displayname, servicedocstate.displayname) &&
        Objects.equals(this.id, servicedocstate.id) &&
        Objects.equals(this.classid, servicedocstate.classid) &&
        Objects.equals(this.objversion, servicedocstate.objversion) &&
        Objects.equals(this.hidden, servicedocstate.hidden) &&
        Objects.equals(this.name, servicedocstate.name) &&
        Objects.equals(this.posindex, servicedocstate.posindex) &&
        Objects.equals(this.isdefault, servicedocstate.isdefault) &&
        Objects.equals(this.isfinished, servicedocstate.isfinished) &&
        Objects.equals(this.isclosed, servicedocstate.isclosed) &&
        Objects.equals(this.isinvoiced, servicedocstate.isinvoiced);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, name, posindex, isdefault, isfinished, isclosed, isinvoiced);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Servicedocstate {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    isdefault: ").append(toIndentedString(isdefault)).append("\n");
    sb.append("    isfinished: ").append(toIndentedString(isfinished)).append("\n");
    sb.append("    isclosed: ").append(toIndentedString(isclosed)).append("\n");
    sb.append("    isinvoiced: ").append(toIndentedString(isinvoiced)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

