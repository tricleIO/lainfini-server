/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Paymentorderrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Paymentorderrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("DueDate$DATE")
  private DateTime dueDateDATE = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("Country_ID")
  private String countryID = null;

  @SerializedName("ForeignIssue")
  private Integer foreignIssue = null;

  @SerializedName("Urgent")
  private Integer urgent = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("TargetBankAccount")
  private String targetBankAccount = null;

  @SerializedName("TargetBankName")
  private String targetBankName = null;

  @SerializedName("TargetBankStreet")
  private String targetBankStreet = null;

  @SerializedName("TargetBankCity")
  private String targetBankCity = null;

  @SerializedName("TargetBankPostCode")
  private String targetBankPostCode = null;

  @SerializedName("TargetBankCountry")
  private String targetBankCountry = null;

  @SerializedName("TargetBankCountry_ID")
  private String targetBankCountryID = null;

  @SerializedName("VarSymbol")
  private String varSymbol = null;

  @SerializedName("ConstSymbol_ID")
  private String constSymbolID = null;

  @SerializedName("SpecSymbol")
  private String specSymbol = null;

  @SerializedName("SwiftCode")
  private String swiftCode = null;

  @SerializedName("BankAccount_ID")
  private String bankAccountID = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("BDocument_ID")
  private String bDocumentID = null;

  @SerializedName("IsNotOk")
  private Boolean isNotOk = null;

  @SerializedName("PaymentOrderDocuments")
  private List<Paymentorderdocument> paymentOrderDocuments = new ArrayList<Paymentorderdocument>();

  @SerializedName("PDocumentDisplayName")
  private String pDocumentDisplayName = null;

  @SerializedName("FakeAmount")
  private Double fakeAmount = null;

  @SerializedName("PDocumentDescription")
  private String pDocumentDescription = null;

  @SerializedName("PaymentType")
  private Integer paymentType = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Platební příkaz [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Platební příkaz [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Paymentorderrow posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Paymentorderrow dueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
    return this;
  }

   /**
   * Datum spl. [persistentní položka]
   * @return dueDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum spl. [persistentní položka]")
  public DateTime getDueDateDATE() {
    return dueDateDATE;
  }

  public void setDueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
  }

  public Paymentorderrow description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Paymentorderrow amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Paymentorderrow currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Paymentorderrow countryID(String countryID) {
    this.countryID = countryID;
    return this;
  }

   /**
   * Země; ID objektu Země [persistentní položka]
   * @return countryID
  **/
  @ApiModelProperty(example = "null", value = "Země; ID objektu Země [persistentní položka]")
  public String getCountryID() {
    return countryID;
  }

  public void setCountryID(String countryID) {
    this.countryID = countryID;
  }

  public Paymentorderrow foreignIssue(Integer foreignIssue) {
    this.foreignIssue = foreignIssue;
    return this;
  }

   /**
   * Způsob úhrady dod.popl. [persistentní položka]
   * @return foreignIssue
  **/
  @ApiModelProperty(example = "null", value = "Způsob úhrady dod.popl. [persistentní položka]")
  public Integer getForeignIssue() {
    return foreignIssue;
  }

  public void setForeignIssue(Integer foreignIssue) {
    this.foreignIssue = foreignIssue;
  }

  public Paymentorderrow urgent(Integer urgent) {
    this.urgent = urgent;
    return this;
  }

   /**
   * Způsob provedení platby [persistentní položka]
   * @return urgent
  **/
  @ApiModelProperty(example = "null", value = "Způsob provedení platby [persistentní položka]")
  public Integer getUrgent() {
    return urgent;
  }

  public void setUrgent(Integer urgent) {
    this.urgent = urgent;
  }

  public Paymentorderrow firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Paymentorderrow targetBankAccount(String targetBankAccount) {
    this.targetBankAccount = targetBankAccount;
    return this;
  }

   /**
   * Bankovní účet [persistentní položka]
   * @return targetBankAccount
  **/
  @ApiModelProperty(example = "null", value = "Bankovní účet [persistentní položka]")
  public String getTargetBankAccount() {
    return targetBankAccount;
  }

  public void setTargetBankAccount(String targetBankAccount) {
    this.targetBankAccount = targetBankAccount;
  }

  public Paymentorderrow targetBankName(String targetBankName) {
    this.targetBankName = targetBankName;
    return this;
  }

   /**
   * Název banky [persistentní položka]
   * @return targetBankName
  **/
  @ApiModelProperty(example = "null", value = "Název banky [persistentní položka]")
  public String getTargetBankName() {
    return targetBankName;
  }

  public void setTargetBankName(String targetBankName) {
    this.targetBankName = targetBankName;
  }

  public Paymentorderrow targetBankStreet(String targetBankStreet) {
    this.targetBankStreet = targetBankStreet;
    return this;
  }

   /**
   * Ulice adresy cílové banky [persistentní položka]
   * @return targetBankStreet
  **/
  @ApiModelProperty(example = "null", value = "Ulice adresy cílové banky [persistentní položka]")
  public String getTargetBankStreet() {
    return targetBankStreet;
  }

  public void setTargetBankStreet(String targetBankStreet) {
    this.targetBankStreet = targetBankStreet;
  }

  public Paymentorderrow targetBankCity(String targetBankCity) {
    this.targetBankCity = targetBankCity;
    return this;
  }

   /**
   * Město adresy cílové banky [persistentní položka]
   * @return targetBankCity
  **/
  @ApiModelProperty(example = "null", value = "Město adresy cílové banky [persistentní položka]")
  public String getTargetBankCity() {
    return targetBankCity;
  }

  public void setTargetBankCity(String targetBankCity) {
    this.targetBankCity = targetBankCity;
  }

  public Paymentorderrow targetBankPostCode(String targetBankPostCode) {
    this.targetBankPostCode = targetBankPostCode;
    return this;
  }

   /**
   * PSČ adresy cílové banky [persistentní položka]
   * @return targetBankPostCode
  **/
  @ApiModelProperty(example = "null", value = "PSČ adresy cílové banky [persistentní položka]")
  public String getTargetBankPostCode() {
    return targetBankPostCode;
  }

  public void setTargetBankPostCode(String targetBankPostCode) {
    this.targetBankPostCode = targetBankPostCode;
  }

  public Paymentorderrow targetBankCountry(String targetBankCountry) {
    this.targetBankCountry = targetBankCountry;
    return this;
  }

   /**
   * Země adresy cílové banky [persistentní položka]
   * @return targetBankCountry
  **/
  @ApiModelProperty(example = "null", value = "Země adresy cílové banky [persistentní položka]")
  public String getTargetBankCountry() {
    return targetBankCountry;
  }

  public void setTargetBankCountry(String targetBankCountry) {
    this.targetBankCountry = targetBankCountry;
  }

  public Paymentorderrow targetBankCountryID(String targetBankCountryID) {
    this.targetBankCountryID = targetBankCountryID;
    return this;
  }

   /**
   * Země cílové banky; ID objektu Země [persistentní položka]
   * @return targetBankCountryID
  **/
  @ApiModelProperty(example = "null", value = "Země cílové banky; ID objektu Země [persistentní položka]")
  public String getTargetBankCountryID() {
    return targetBankCountryID;
  }

  public void setTargetBankCountryID(String targetBankCountryID) {
    this.targetBankCountryID = targetBankCountryID;
  }

  public Paymentorderrow varSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
    return this;
  }

   /**
   * Var. symbol [persistentní položka]
   * @return varSymbol
  **/
  @ApiModelProperty(example = "null", value = "Var. symbol [persistentní položka]")
  public String getVarSymbol() {
    return varSymbol;
  }

  public void setVarSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
  }

  public Paymentorderrow constSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
    return this;
  }

   /**
   * Konst. symbol; ID objektu Konstantní symbol [persistentní položka]
   * @return constSymbolID
  **/
  @ApiModelProperty(example = "null", value = "Konst. symbol; ID objektu Konstantní symbol [persistentní položka]")
  public String getConstSymbolID() {
    return constSymbolID;
  }

  public void setConstSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
  }

  public Paymentorderrow specSymbol(String specSymbol) {
    this.specSymbol = specSymbol;
    return this;
  }

   /**
   * Spec.symbol [persistentní položka]
   * @return specSymbol
  **/
  @ApiModelProperty(example = "null", value = "Spec.symbol [persistentní položka]")
  public String getSpecSymbol() {
    return specSymbol;
  }

  public void setSpecSymbol(String specSymbol) {
    this.specSymbol = specSymbol;
  }

  public Paymentorderrow swiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
    return this;
  }

   /**
   * SWIFT [persistentní položka]
   * @return swiftCode
  **/
  @ApiModelProperty(example = "null", value = "SWIFT [persistentní položka]")
  public String getSwiftCode() {
    return swiftCode;
  }

  public void setSwiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
  }

  public Paymentorderrow bankAccountID(String bankAccountID) {
    this.bankAccountID = bankAccountID;
    return this;
  }

   /**
   * Převod z účtu; ID objektu Bankovní účet [persistentní položka]
   * @return bankAccountID
  **/
  @ApiModelProperty(example = "null", value = "Převod z účtu; ID objektu Bankovní účet [persistentní položka]")
  public String getBankAccountID() {
    return bankAccountID;
  }

  public void setBankAccountID(String bankAccountID) {
    this.bankAccountID = bankAccountID;
  }

  public Paymentorderrow createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Paymentorderrow correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Paymentorderrow bDocumentID(String bDocumentID) {
    this.bDocumentID = bDocumentID;
    return this;
  }

   /**
   * Řádek bank.výpisu; ID objektu Bankovní výpis - řádek [persistentní položka]
   * @return bDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Řádek bank.výpisu; ID objektu Bankovní výpis - řádek [persistentní položka]")
  public String getBDocumentID() {
    return bDocumentID;
  }

  public void setBDocumentID(String bDocumentID) {
    this.bDocumentID = bDocumentID;
  }

  public Paymentorderrow isNotOk(Boolean isNotOk) {
    this.isNotOk = isNotOk;
    return this;
  }

   /**
   * Není OK [persistentní položka]
   * @return isNotOk
  **/
  @ApiModelProperty(example = "null", value = "Není OK [persistentní položka]")
  public Boolean getIsNotOk() {
    return isNotOk;
  }

  public void setIsNotOk(Boolean isNotOk) {
    this.isNotOk = isNotOk;
  }

  public Paymentorderrow paymentOrderDocuments(List<Paymentorderdocument> paymentOrderDocuments) {
    this.paymentOrderDocuments = paymentOrderDocuments;
    return this;
  }

  public Paymentorderrow addPaymentOrderDocumentsItem(Paymentorderdocument paymentOrderDocumentsItem) {
    this.paymentOrderDocuments.add(paymentOrderDocumentsItem);
    return this;
  }

   /**
   * Dílčí platby; kolekce BO Platební příkaz - dílčí platba [nepersistentní položka]
   * @return paymentOrderDocuments
  **/
  @ApiModelProperty(example = "null", value = "Dílčí platby; kolekce BO Platební příkaz - dílčí platba [nepersistentní položka]")
  public List<Paymentorderdocument> getPaymentOrderDocuments() {
    return paymentOrderDocuments;
  }

  public void setPaymentOrderDocuments(List<Paymentorderdocument> paymentOrderDocuments) {
    this.paymentOrderDocuments = paymentOrderDocuments;
  }

  public Paymentorderrow pDocumentDisplayName(String pDocumentDisplayName) {
    this.pDocumentDisplayName = pDocumentDisplayName;
    return this;
  }

   /**
   * Placený doklad
   * @return pDocumentDisplayName
  **/
  @ApiModelProperty(example = "null", value = "Placený doklad")
  public String getPDocumentDisplayName() {
    return pDocumentDisplayName;
  }

  public void setPDocumentDisplayName(String pDocumentDisplayName) {
    this.pDocumentDisplayName = pDocumentDisplayName;
  }

  public Paymentorderrow fakeAmount(Double fakeAmount) {
    this.fakeAmount = fakeAmount;
    return this;
  }

   /**
   * Částka
   * @return fakeAmount
  **/
  @ApiModelProperty(example = "null", value = "Částka")
  public Double getFakeAmount() {
    return fakeAmount;
  }

  public void setFakeAmount(Double fakeAmount) {
    this.fakeAmount = fakeAmount;
  }

  public Paymentorderrow pDocumentDescription(String pDocumentDescription) {
    this.pDocumentDescription = pDocumentDescription;
    return this;
  }

   /**
   * Placený doklad - popis
   * @return pDocumentDescription
  **/
  @ApiModelProperty(example = "null", value = "Placený doklad - popis")
  public String getPDocumentDescription() {
    return pDocumentDescription;
  }

  public void setPDocumentDescription(String pDocumentDescription) {
    this.pDocumentDescription = pDocumentDescription;
  }

  public Paymentorderrow paymentType(Integer paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Typ platby [persistentní položka]
   * @return paymentType
  **/
  @ApiModelProperty(example = "null", value = "Typ platby [persistentní položka]")
  public Integer getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(Integer paymentType) {
    this.paymentType = paymentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paymentorderrow paymentorderrow = (Paymentorderrow) o;
    return Objects.equals(this.displayName, paymentorderrow.displayName) &&
        Objects.equals(this.ID, paymentorderrow.ID) &&
        Objects.equals(this.classID, paymentorderrow.classID) &&
        Objects.equals(this.objVersion, paymentorderrow.objVersion) &&
        Objects.equals(this.parentID, paymentorderrow.parentID) &&
        Objects.equals(this.posIndex, paymentorderrow.posIndex) &&
        Objects.equals(this.dueDateDATE, paymentorderrow.dueDateDATE) &&
        Objects.equals(this.description, paymentorderrow.description) &&
        Objects.equals(this.amount, paymentorderrow.amount) &&
        Objects.equals(this.currencyID, paymentorderrow.currencyID) &&
        Objects.equals(this.countryID, paymentorderrow.countryID) &&
        Objects.equals(this.foreignIssue, paymentorderrow.foreignIssue) &&
        Objects.equals(this.urgent, paymentorderrow.urgent) &&
        Objects.equals(this.firmID, paymentorderrow.firmID) &&
        Objects.equals(this.targetBankAccount, paymentorderrow.targetBankAccount) &&
        Objects.equals(this.targetBankName, paymentorderrow.targetBankName) &&
        Objects.equals(this.targetBankStreet, paymentorderrow.targetBankStreet) &&
        Objects.equals(this.targetBankCity, paymentorderrow.targetBankCity) &&
        Objects.equals(this.targetBankPostCode, paymentorderrow.targetBankPostCode) &&
        Objects.equals(this.targetBankCountry, paymentorderrow.targetBankCountry) &&
        Objects.equals(this.targetBankCountryID, paymentorderrow.targetBankCountryID) &&
        Objects.equals(this.varSymbol, paymentorderrow.varSymbol) &&
        Objects.equals(this.constSymbolID, paymentorderrow.constSymbolID) &&
        Objects.equals(this.specSymbol, paymentorderrow.specSymbol) &&
        Objects.equals(this.swiftCode, paymentorderrow.swiftCode) &&
        Objects.equals(this.bankAccountID, paymentorderrow.bankAccountID) &&
        Objects.equals(this.createdByID, paymentorderrow.createdByID) &&
        Objects.equals(this.correctedByID, paymentorderrow.correctedByID) &&
        Objects.equals(this.bDocumentID, paymentorderrow.bDocumentID) &&
        Objects.equals(this.isNotOk, paymentorderrow.isNotOk) &&
        Objects.equals(this.paymentOrderDocuments, paymentorderrow.paymentOrderDocuments) &&
        Objects.equals(this.pDocumentDisplayName, paymentorderrow.pDocumentDisplayName) &&
        Objects.equals(this.fakeAmount, paymentorderrow.fakeAmount) &&
        Objects.equals(this.pDocumentDescription, paymentorderrow.pDocumentDescription) &&
        Objects.equals(this.paymentType, paymentorderrow.paymentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, dueDateDATE, description, amount, currencyID, countryID, foreignIssue, urgent, firmID, targetBankAccount, targetBankName, targetBankStreet, targetBankCity, targetBankPostCode, targetBankCountry, targetBankCountryID, varSymbol, constSymbolID, specSymbol, swiftCode, bankAccountID, createdByID, correctedByID, bDocumentID, isNotOk, paymentOrderDocuments, pDocumentDisplayName, fakeAmount, pDocumentDescription, paymentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paymentorderrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    dueDateDATE: ").append(toIndentedString(dueDateDATE)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    countryID: ").append(toIndentedString(countryID)).append("\n");
    sb.append("    foreignIssue: ").append(toIndentedString(foreignIssue)).append("\n");
    sb.append("    urgent: ").append(toIndentedString(urgent)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    targetBankAccount: ").append(toIndentedString(targetBankAccount)).append("\n");
    sb.append("    targetBankName: ").append(toIndentedString(targetBankName)).append("\n");
    sb.append("    targetBankStreet: ").append(toIndentedString(targetBankStreet)).append("\n");
    sb.append("    targetBankCity: ").append(toIndentedString(targetBankCity)).append("\n");
    sb.append("    targetBankPostCode: ").append(toIndentedString(targetBankPostCode)).append("\n");
    sb.append("    targetBankCountry: ").append(toIndentedString(targetBankCountry)).append("\n");
    sb.append("    targetBankCountryID: ").append(toIndentedString(targetBankCountryID)).append("\n");
    sb.append("    varSymbol: ").append(toIndentedString(varSymbol)).append("\n");
    sb.append("    constSymbolID: ").append(toIndentedString(constSymbolID)).append("\n");
    sb.append("    specSymbol: ").append(toIndentedString(specSymbol)).append("\n");
    sb.append("    swiftCode: ").append(toIndentedString(swiftCode)).append("\n");
    sb.append("    bankAccountID: ").append(toIndentedString(bankAccountID)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    bDocumentID: ").append(toIndentedString(bDocumentID)).append("\n");
    sb.append("    isNotOk: ").append(toIndentedString(isNotOk)).append("\n");
    sb.append("    paymentOrderDocuments: ").append(toIndentedString(paymentOrderDocuments)).append("\n");
    sb.append("    pDocumentDisplayName: ").append(toIndentedString(pDocumentDisplayName)).append("\n");
    sb.append("    fakeAmount: ").append(toIndentedString(fakeAmount)).append("\n");
    sb.append("    pDocumentDescription: ").append(toIndentedString(pDocumentDescription)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

