/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Posdocumentpayment
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Posdocumentpayment   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("PaymentType_ID")
  private String paymentTypeID = null;

  @SerializedName("IssuedDepositInvoice_ID")
  private String issuedDepositInvoiceID = null;

  @SerializedName("Payment")
  private Double payment = null;

  @SerializedName("Refund")
  private Double refund = null;

  @SerializedName("LocalPayment")
  private Double localPayment = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("AuthCode")
  private String authCode = null;

  @SerializedName("TransactionData")
  private String transactionData = null;

  @SerializedName("IsCanceled")
  private Boolean isCanceled = null;

  @SerializedName("LocalVATAmount")
  private Double localVATAmount = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Účtenka [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Účtenka [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Posdocumentpayment currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Posdocumentpayment paymentTypeID(String paymentTypeID) {
    this.paymentTypeID = paymentTypeID;
    return this;
  }

   /**
   * Způsob platby; ID objektu Způsob úhrady [persistentní položka]
   * @return paymentTypeID
  **/
  @ApiModelProperty(example = "null", value = "Způsob platby; ID objektu Způsob úhrady [persistentní položka]")
  public String getPaymentTypeID() {
    return paymentTypeID;
  }

  public void setPaymentTypeID(String paymentTypeID) {
    this.paymentTypeID = paymentTypeID;
  }

  public Posdocumentpayment issuedDepositInvoiceID(String issuedDepositInvoiceID) {
    this.issuedDepositInvoiceID = issuedDepositInvoiceID;
    return this;
  }

   /**
   * Zálohový list; ID objektu Zálohový list vydaný [persistentní položka]
   * @return issuedDepositInvoiceID
  **/
  @ApiModelProperty(example = "null", value = "Zálohový list; ID objektu Zálohový list vydaný [persistentní položka]")
  public String getIssuedDepositInvoiceID() {
    return issuedDepositInvoiceID;
  }

  public void setIssuedDepositInvoiceID(String issuedDepositInvoiceID) {
    this.issuedDepositInvoiceID = issuedDepositInvoiceID;
  }

  public Posdocumentpayment payment(Double payment) {
    this.payment = payment;
    return this;
  }

   /**
   * Placeno [persistentní položka]
   * @return payment
  **/
  @ApiModelProperty(example = "null", value = "Placeno [persistentní položka]")
  public Double getPayment() {
    return payment;
  }

  public void setPayment(Double payment) {
    this.payment = payment;
  }

  public Posdocumentpayment refund(Double refund) {
    this.refund = refund;
    return this;
  }

   /**
   * Vráceno [persistentní položka]
   * @return refund
  **/
  @ApiModelProperty(example = "null", value = "Vráceno [persistentní položka]")
  public Double getRefund() {
    return refund;
  }

  public void setRefund(Double refund) {
    this.refund = refund;
  }

  public Posdocumentpayment localPayment(Double localPayment) {
    this.localPayment = localPayment;
    return this;
  }

   /**
   * Zaplaceno [persistentní položka]
   * @return localPayment
  **/
  @ApiModelProperty(example = "null", value = "Zaplaceno [persistentní položka]")
  public Double getLocalPayment() {
    return localPayment;
  }

  public void setLocalPayment(Double localPayment) {
    this.localPayment = localPayment;
  }

  public Posdocumentpayment description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Komentář [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Komentář [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Posdocumentpayment authCode(String authCode) {
    this.authCode = authCode;
    return this;
  }

   /**
   * Autorizační kód [persistentní položka]
   * @return authCode
  **/
  @ApiModelProperty(example = "null", value = "Autorizační kód [persistentní položka]")
  public String getAuthCode() {
    return authCode;
  }

  public void setAuthCode(String authCode) {
    this.authCode = authCode;
  }

  public Posdocumentpayment transactionData(String transactionData) {
    this.transactionData = transactionData;
    return this;
  }

   /**
   * Transakční data [persistentní položka]
   * @return transactionData
  **/
  @ApiModelProperty(example = "null", value = "Transakční data [persistentní položka]")
  public String getTransactionData() {
    return transactionData;
  }

  public void setTransactionData(String transactionData) {
    this.transactionData = transactionData;
  }

  public Posdocumentpayment isCanceled(Boolean isCanceled) {
    this.isCanceled = isCanceled;
    return this;
  }

   /**
   * Stornováno [persistentní položka]
   * @return isCanceled
  **/
  @ApiModelProperty(example = "null", value = "Stornováno [persistentní položka]")
  public Boolean getIsCanceled() {
    return isCanceled;
  }

  public void setIsCanceled(Boolean isCanceled) {
    this.isCanceled = isCanceled;
  }

   /**
   * DPH v lokální měně [persistentní položka]
   * @return localVATAmount
  **/
  @ApiModelProperty(example = "null", value = "DPH v lokální měně [persistentní položka]")
  public Double getLocalVATAmount() {
    return localVATAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Posdocumentpayment posdocumentpayment = (Posdocumentpayment) o;
    return Objects.equals(this.displayName, posdocumentpayment.displayName) &&
        Objects.equals(this.ID, posdocumentpayment.ID) &&
        Objects.equals(this.classID, posdocumentpayment.classID) &&
        Objects.equals(this.objVersion, posdocumentpayment.objVersion) &&
        Objects.equals(this.parentID, posdocumentpayment.parentID) &&
        Objects.equals(this.currencyID, posdocumentpayment.currencyID) &&
        Objects.equals(this.paymentTypeID, posdocumentpayment.paymentTypeID) &&
        Objects.equals(this.issuedDepositInvoiceID, posdocumentpayment.issuedDepositInvoiceID) &&
        Objects.equals(this.payment, posdocumentpayment.payment) &&
        Objects.equals(this.refund, posdocumentpayment.refund) &&
        Objects.equals(this.localPayment, posdocumentpayment.localPayment) &&
        Objects.equals(this.description, posdocumentpayment.description) &&
        Objects.equals(this.authCode, posdocumentpayment.authCode) &&
        Objects.equals(this.transactionData, posdocumentpayment.transactionData) &&
        Objects.equals(this.isCanceled, posdocumentpayment.isCanceled) &&
        Objects.equals(this.localVATAmount, posdocumentpayment.localVATAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, currencyID, paymentTypeID, issuedDepositInvoiceID, payment, refund, localPayment, description, authCode, transactionData, isCanceled, localVATAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Posdocumentpayment {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    paymentTypeID: ").append(toIndentedString(paymentTypeID)).append("\n");
    sb.append("    issuedDepositInvoiceID: ").append(toIndentedString(issuedDepositInvoiceID)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("    refund: ").append(toIndentedString(refund)).append("\n");
    sb.append("    localPayment: ").append(toIndentedString(localPayment)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    transactionData: ").append(toIndentedString(transactionData)).append("\n");
    sb.append("    isCanceled: ").append(toIndentedString(isCanceled)).append("\n");
    sb.append("    localVATAmount: ").append(toIndentedString(localVATAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

