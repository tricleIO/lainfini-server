/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Insuranceperiod
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Insuranceperiod   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("InsuranceBaseType")
  private Integer insuranceBaseType = null;

  @SerializedName("PeriodBegin$DATE")
  private DateTime periodBeginDATE = null;

  @SerializedName("PeriodEnd$DATE")
  private DateTime periodEndDATE = null;

  @SerializedName("InsuranceCode")
  private String insuranceCode = null;

  @SerializedName("InsurancePeriodType")
  private Integer insurancePeriodType = null;

  @SerializedName("InsurancePeriodTypeAsText")
  private String insurancePeriodTypeAsText = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("InsuranceBase")
  private Double insuranceBase = null;

  @SerializedName("ExcludedDaysInsBase")
  private Double excludedDaysInsBase = null;

  @SerializedName("ExcludedDays")
  private Integer excludedDays = null;

  @SerializedName("InsuranceDetails")
  private List<Insuranceperioddetail> insuranceDetails = new ArrayList<Insuranceperioddetail>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Hlavičkový objekt [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Hlavičkový objekt [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Insuranceperiod insuranceBaseType(Integer insuranceBaseType) {
    this.insuranceBaseType = insuranceBaseType;
    return this;
  }

   /**
   * Typ pojištění [persistentní položka]
   * @return insuranceBaseType
  **/
  @ApiModelProperty(example = "null", value = "Typ pojištění [persistentní položka]")
  public Integer getInsuranceBaseType() {
    return insuranceBaseType;
  }

  public void setInsuranceBaseType(Integer insuranceBaseType) {
    this.insuranceBaseType = insuranceBaseType;
  }

  public Insuranceperiod periodBeginDATE(DateTime periodBeginDATE) {
    this.periodBeginDATE = periodBeginDATE;
    return this;
  }

   /**
   * Začátek [persistentní položka]
   * @return periodBeginDATE
  **/
  @ApiModelProperty(example = "null", value = "Začátek [persistentní položka]")
  public DateTime getPeriodBeginDATE() {
    return periodBeginDATE;
  }

  public void setPeriodBeginDATE(DateTime periodBeginDATE) {
    this.periodBeginDATE = periodBeginDATE;
  }

  public Insuranceperiod periodEndDATE(DateTime periodEndDATE) {
    this.periodEndDATE = periodEndDATE;
    return this;
  }

   /**
   * Konec [persistentní položka]
   * @return periodEndDATE
  **/
  @ApiModelProperty(example = "null", value = "Konec [persistentní položka]")
  public DateTime getPeriodEndDATE() {
    return periodEndDATE;
  }

  public void setPeriodEndDATE(DateTime periodEndDATE) {
    this.periodEndDATE = periodEndDATE;
  }

  public Insuranceperiod insuranceCode(String insuranceCode) {
    this.insuranceCode = insuranceCode;
    return this;
  }

   /**
   * Kód pojištění [persistentní položka]
   * @return insuranceCode
  **/
  @ApiModelProperty(example = "null", value = "Kód pojištění [persistentní položka]")
  public String getInsuranceCode() {
    return insuranceCode;
  }

  public void setInsuranceCode(String insuranceCode) {
    this.insuranceCode = insuranceCode;
  }

  public Insuranceperiod insurancePeriodType(Integer insurancePeriodType) {
    this.insurancePeriodType = insurancePeriodType;
    return this;
  }

   /**
   * Typ doby [persistentní položka]
   * @return insurancePeriodType
  **/
  @ApiModelProperty(example = "null", value = "Typ doby [persistentní položka]")
  public Integer getInsurancePeriodType() {
    return insurancePeriodType;
  }

  public void setInsurancePeriodType(Integer insurancePeriodType) {
    this.insurancePeriodType = insurancePeriodType;
  }

  public Insuranceperiod insurancePeriodTypeAsText(String insurancePeriodTypeAsText) {
    this.insurancePeriodTypeAsText = insurancePeriodTypeAsText;
    return this;
  }

   /**
   * Typ doby
   * @return insurancePeriodTypeAsText
  **/
  @ApiModelProperty(example = "null", value = "Typ doby")
  public String getInsurancePeriodTypeAsText() {
    return insurancePeriodTypeAsText;
  }

  public void setInsurancePeriodTypeAsText(String insurancePeriodTypeAsText) {
    this.insurancePeriodTypeAsText = insurancePeriodTypeAsText;
  }

  public Insuranceperiod note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Insuranceperiod insuranceBase(Double insuranceBase) {
    this.insuranceBase = insuranceBase;
    return this;
  }

   /**
   * Vym.základ
   * @return insuranceBase
  **/
  @ApiModelProperty(example = "null", value = "Vym.základ")
  public Double getInsuranceBase() {
    return insuranceBase;
  }

  public void setInsuranceBase(Double insuranceBase) {
    this.insuranceBase = insuranceBase;
  }

  public Insuranceperiod excludedDaysInsBase(Double excludedDaysInsBase) {
    this.excludedDaysInsBase = excludedDaysInsBase;
    return this;
  }

   /**
   * Vym.z.při vyl.d.
   * @return excludedDaysInsBase
  **/
  @ApiModelProperty(example = "null", value = "Vym.z.při vyl.d.")
  public Double getExcludedDaysInsBase() {
    return excludedDaysInsBase;
  }

  public void setExcludedDaysInsBase(Double excludedDaysInsBase) {
    this.excludedDaysInsBase = excludedDaysInsBase;
  }

  public Insuranceperiod excludedDays(Integer excludedDays) {
    this.excludedDays = excludedDays;
    return this;
  }

   /**
   * Vyl.doba
   * @return excludedDays
  **/
  @ApiModelProperty(example = "null", value = "Vyl.doba")
  public Integer getExcludedDays() {
    return excludedDays;
  }

  public void setExcludedDays(Integer excludedDays) {
    this.excludedDays = excludedDays;
  }

  public Insuranceperiod insuranceDetails(List<Insuranceperioddetail> insuranceDetails) {
    this.insuranceDetails = insuranceDetails;
    return this;
  }

  public Insuranceperiod addInsuranceDetailsItem(Insuranceperioddetail insuranceDetailsItem) {
    this.insuranceDetails.add(insuranceDetailsItem);
    return this;
  }

   /**
   * Detail průběhu pojištění; kolekce BO Detail období pojištění [nepersistentní položka]
   * @return insuranceDetails
  **/
  @ApiModelProperty(example = "null", value = "Detail průběhu pojištění; kolekce BO Detail období pojištění [nepersistentní položka]")
  public List<Insuranceperioddetail> getInsuranceDetails() {
    return insuranceDetails;
  }

  public void setInsuranceDetails(List<Insuranceperioddetail> insuranceDetails) {
    this.insuranceDetails = insuranceDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Insuranceperiod insuranceperiod = (Insuranceperiod) o;
    return Objects.equals(this.displayName, insuranceperiod.displayName) &&
        Objects.equals(this.ID, insuranceperiod.ID) &&
        Objects.equals(this.classID, insuranceperiod.classID) &&
        Objects.equals(this.objVersion, insuranceperiod.objVersion) &&
        Objects.equals(this.parentID, insuranceperiod.parentID) &&
        Objects.equals(this.insuranceBaseType, insuranceperiod.insuranceBaseType) &&
        Objects.equals(this.periodBeginDATE, insuranceperiod.periodBeginDATE) &&
        Objects.equals(this.periodEndDATE, insuranceperiod.periodEndDATE) &&
        Objects.equals(this.insuranceCode, insuranceperiod.insuranceCode) &&
        Objects.equals(this.insurancePeriodType, insuranceperiod.insurancePeriodType) &&
        Objects.equals(this.insurancePeriodTypeAsText, insuranceperiod.insurancePeriodTypeAsText) &&
        Objects.equals(this.note, insuranceperiod.note) &&
        Objects.equals(this.insuranceBase, insuranceperiod.insuranceBase) &&
        Objects.equals(this.excludedDaysInsBase, insuranceperiod.excludedDaysInsBase) &&
        Objects.equals(this.excludedDays, insuranceperiod.excludedDays) &&
        Objects.equals(this.insuranceDetails, insuranceperiod.insuranceDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, insuranceBaseType, periodBeginDATE, periodEndDATE, insuranceCode, insurancePeriodType, insurancePeriodTypeAsText, note, insuranceBase, excludedDaysInsBase, excludedDays, insuranceDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Insuranceperiod {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    insuranceBaseType: ").append(toIndentedString(insuranceBaseType)).append("\n");
    sb.append("    periodBeginDATE: ").append(toIndentedString(periodBeginDATE)).append("\n");
    sb.append("    periodEndDATE: ").append(toIndentedString(periodEndDATE)).append("\n");
    sb.append("    insuranceCode: ").append(toIndentedString(insuranceCode)).append("\n");
    sb.append("    insurancePeriodType: ").append(toIndentedString(insurancePeriodType)).append("\n");
    sb.append("    insurancePeriodTypeAsText: ").append(toIndentedString(insurancePeriodTypeAsText)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    insuranceBase: ").append(toIndentedString(insuranceBase)).append("\n");
    sb.append("    excludedDaysInsBase: ").append(toIndentedString(excludedDaysInsBase)).append("\n");
    sb.append("    excludedDays: ").append(toIndentedString(excludedDays)).append("\n");
    sb.append("    insuranceDetails: ").append(toIndentedString(insuranceDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

