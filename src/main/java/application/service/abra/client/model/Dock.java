/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Dock
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Dock   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Definition_ID")
  private String definitionID = null;

  @SerializedName("Employee_ID")
  private String employeeID = null;

  @SerializedName("WagePeriod_ID")
  private String wagePeriodID = null;

  @SerializedName("DockType_ID")
  private String dockTypeID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("BaseType")
  private Integer baseType = null;

  @SerializedName("Internal")
  private Boolean internal = null;

  @SerializedName("DebtCorrect")
  private Boolean debtCorrect = null;

  @SerializedName("OfMinimum")
  private Boolean ofMinimum = null;

  @SerializedName("Partial")
  private Boolean partial = null;

  @SerializedName("Priority")
  private Integer priority = null;

  @SerializedName("PrintGroup")
  private String printGroup = null;

  @SerializedName("Destination")
  private String destination = null;

  @SerializedName("SWIFTCode")
  private String sWIFTCode = null;

  @SerializedName("ExecAuthority")
  private String execAuthority = null;

  @SerializedName("ExecRefNumber")
  private String execRefNumber = null;

  @SerializedName("ExecRecipient")
  private String execRecipient = null;

  @SerializedName("Source_ID")
  private String sourceID = null;

  @SerializedName("VarSymbol")
  private String varSymbol = null;

  @SerializedName("SpecSymbol")
  private String specSymbol = null;

  @SerializedName("ConstSymbol_ID")
  private String constSymbolID = null;

  @SerializedName("Required")
  private Double required = null;

  @SerializedName("IsPercent")
  private Boolean isPercent = null;

  @SerializedName("Realized")
  private Double realized = null;

  @SerializedName("PercentOfCode")
  private Integer percentOfCode = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CLSIDForPercent")
  private String cLSIDForPercent = null;

  @SerializedName("IsDebt")
  private Boolean isDebt = null;

  @SerializedName("DueDate$DATE")
  private DateTime dueDateDATE = null;

  @SerializedName("RequiredAmount")
  private Double requiredAmount = null;

  @SerializedName("ItIsGeneratedDebt")
  private Boolean itIsGeneratedDebt = null;

  @SerializedName("BusOrder_ID")
  private String busOrderID = null;

  @SerializedName("BusTransaction_ID")
  private String busTransactionID = null;

  @SerializedName("Flag")
  private String flag = null;

  @SerializedName("Division_ID")
  private String divisionID = null;

  @SerializedName("BaseType_Text")
  private String baseTypeText = null;

  @SerializedName("PercentOfName")
  private String percentOfName = null;

  @SerializedName("PercentOfLabel")
  private String percentOfLabel = null;

  @SerializedName("Per_PersonalNumber")
  private String perPersonalNumber = null;

  @SerializedName("NumPersonalNumber")
  private Integer numPersonalNumber = null;

  @SerializedName("AllowedMaxToRealize")
  private Double allowedMaxToRealize = null;

  @SerializedName("ItIsGenerated")
  private Boolean itIsGenerated = null;

  @SerializedName("BusProject_ID")
  private String busProjectID = null;

  @SerializedName("AgreementDock")
  private Boolean agreementDock = null;

  @SerializedName("TargetBankCountry_ID")
  private String targetBankCountryID = null;

  @SerializedName("DockFromAgreements")
  private Boolean dockFromAgreements = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Dock definitionID(String definitionID) {
    this.definitionID = definitionID;
    return this;
  }

   /**
   * Definice; ID objektu Opakovaná srážka [persistentní položka]
   * @return definitionID
  **/
  @ApiModelProperty(example = "null", value = "Definice; ID objektu Opakovaná srážka [persistentní položka]")
  public String getDefinitionID() {
    return definitionID;
  }

  public void setDefinitionID(String definitionID) {
    this.definitionID = definitionID;
  }

  public Dock employeeID(String employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Zaměstnanec; ID objektu Zaměstnanec [persistentní položka]
   * @return employeeID
  **/
  @ApiModelProperty(example = "null", value = "Zaměstnanec; ID objektu Zaměstnanec [persistentní položka]")
  public String getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(String employeeID) {
    this.employeeID = employeeID;
  }

  public Dock wagePeriodID(String wagePeriodID) {
    this.wagePeriodID = wagePeriodID;
    return this;
  }

   /**
   * Mzdové období; ID objektu Mzdové období [persistentní položka]
   * @return wagePeriodID
  **/
  @ApiModelProperty(example = "null", value = "Mzdové období; ID objektu Mzdové období [persistentní položka]")
  public String getWagePeriodID() {
    return wagePeriodID;
  }

  public void setWagePeriodID(String wagePeriodID) {
    this.wagePeriodID = wagePeriodID;
  }

  public Dock dockTypeID(String dockTypeID) {
    this.dockTypeID = dockTypeID;
    return this;
  }

   /**
   * Druh srážky; ID objektu Druh srážky [persistentní položka]
   * @return dockTypeID
  **/
  @ApiModelProperty(example = "null", value = "Druh srážky; ID objektu Druh srážky [persistentní položka]")
  public String getDockTypeID() {
    return dockTypeID;
  }

  public void setDockTypeID(String dockTypeID) {
    this.dockTypeID = dockTypeID;
  }

  public Dock description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Dock baseType(Integer baseType) {
    this.baseType = baseType;
    return this;
  }

   /**
   * Zákl.typ [persistentní položka]
   * @return baseType
  **/
  @ApiModelProperty(example = "null", value = "Zákl.typ [persistentní položka]")
  public Integer getBaseType() {
    return baseType;
  }

  public void setBaseType(Integer baseType) {
    this.baseType = baseType;
  }

  public Dock internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Interní [persistentní položka]
   * @return internal
  **/
  @ApiModelProperty(example = "null", value = "Interní [persistentní položka]")
  public Boolean getInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }

  public Dock debtCorrect(Boolean debtCorrect) {
    this.debtCorrect = debtCorrect;
    return this;
  }

   /**
   * Vyr.dluž.částku [persistentní položka]
   * @return debtCorrect
  **/
  @ApiModelProperty(example = "null", value = "Vyr.dluž.částku [persistentní položka]")
  public Boolean getDebtCorrect() {
    return debtCorrect;
  }

  public void setDebtCorrect(Boolean debtCorrect) {
    this.debtCorrect = debtCorrect;
  }

  public Dock ofMinimum(Boolean ofMinimum) {
    this.ofMinimum = ofMinimum;
    return this;
  }

   /**
   * Por.s minimem [persistentní položka]
   * @return ofMinimum
  **/
  @ApiModelProperty(example = "null", value = "Por.s minimem [persistentní položka]")
  public Boolean getOfMinimum() {
    return ofMinimum;
  }

  public void setOfMinimum(Boolean ofMinimum) {
    this.ofMinimum = ofMinimum;
  }

  public Dock partial(Boolean partial) {
    this.partial = partial;
    return this;
  }

   /**
   * I část [persistentní položka]
   * @return partial
  **/
  @ApiModelProperty(example = "null", value = "I část [persistentní položka]")
  public Boolean getPartial() {
    return partial;
  }

  public void setPartial(Boolean partial) {
    this.partial = partial;
  }

  public Dock priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priorita [persistentní položka]
   * @return priority
  **/
  @ApiModelProperty(example = "null", value = "Priorita [persistentní položka]")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Dock printGroup(String printGroup) {
    this.printGroup = printGroup;
    return this;
  }

   /**
   * Tisk.skup. [persistentní položka]
   * @return printGroup
  **/
  @ApiModelProperty(example = "null", value = "Tisk.skup. [persistentní položka]")
  public String getPrintGroup() {
    return printGroup;
  }

  public void setPrintGroup(String printGroup) {
    this.printGroup = printGroup;
  }

  public Dock destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Cílový účet [persistentní položka]
   * @return destination
  **/
  @ApiModelProperty(example = "null", value = "Cílový účet [persistentní položka]")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public Dock sWIFTCode(String sWIFTCode) {
    this.sWIFTCode = sWIFTCode;
    return this;
  }

   /**
   * SWIFT kód [persistentní položka]
   * @return sWIFTCode
  **/
  @ApiModelProperty(example = "null", value = "SWIFT kód [persistentní položka]")
  public String getSWIFTCode() {
    return sWIFTCode;
  }

  public void setSWIFTCode(String sWIFTCode) {
    this.sWIFTCode = sWIFTCode;
  }

  public Dock execAuthority(String execAuthority) {
    this.execAuthority = execAuthority;
    return this;
  }

   /**
   * Exekuci nařídil [persistentní položka]
   * @return execAuthority
  **/
  @ApiModelProperty(example = "null", value = "Exekuci nařídil [persistentní položka]")
  public String getExecAuthority() {
    return execAuthority;
  }

  public void setExecAuthority(String execAuthority) {
    this.execAuthority = execAuthority;
  }

  public Dock execRefNumber(String execRefNumber) {
    this.execRefNumber = execRefNumber;
    return this;
  }

   /**
   * Číslo jednací [persistentní položka]
   * @return execRefNumber
  **/
  @ApiModelProperty(example = "null", value = "Číslo jednací [persistentní položka]")
  public String getExecRefNumber() {
    return execRefNumber;
  }

  public void setExecRefNumber(String execRefNumber) {
    this.execRefNumber = execRefNumber;
  }

  public Dock execRecipient(String execRecipient) {
    this.execRecipient = execRecipient;
    return this;
  }

   /**
   * Oprávněný [persistentní položka]
   * @return execRecipient
  **/
  @ApiModelProperty(example = "null", value = "Oprávněný [persistentní položka]")
  public String getExecRecipient() {
    return execRecipient;
  }

  public void setExecRecipient(String execRecipient) {
    this.execRecipient = execRecipient;
  }

  public Dock sourceID(String sourceID) {
    this.sourceID = sourceID;
    return this;
  }

   /**
   * Zdrojový účet; ID objektu Bankovní účet [persistentní položka]
   * @return sourceID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojový účet; ID objektu Bankovní účet [persistentní položka]")
  public String getSourceID() {
    return sourceID;
  }

  public void setSourceID(String sourceID) {
    this.sourceID = sourceID;
  }

  public Dock varSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
    return this;
  }

   /**
   * Var.symbol [persistentní položka]
   * @return varSymbol
  **/
  @ApiModelProperty(example = "null", value = "Var.symbol [persistentní položka]")
  public String getVarSymbol() {
    return varSymbol;
  }

  public void setVarSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
  }

  public Dock specSymbol(String specSymbol) {
    this.specSymbol = specSymbol;
    return this;
  }

   /**
   * Spec.symbol [persistentní položka]
   * @return specSymbol
  **/
  @ApiModelProperty(example = "null", value = "Spec.symbol [persistentní položka]")
  public String getSpecSymbol() {
    return specSymbol;
  }

  public void setSpecSymbol(String specSymbol) {
    this.specSymbol = specSymbol;
  }

  public Dock constSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
    return this;
  }

   /**
   * Konst.symbol; ID objektu Konstantní symbol [persistentní položka]
   * @return constSymbolID
  **/
  @ApiModelProperty(example = "null", value = "Konst.symbol; ID objektu Konstantní symbol [persistentní položka]")
  public String getConstSymbolID() {
    return constSymbolID;
  }

  public void setConstSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
  }

  public Dock required(Double required) {
    this.required = required;
    return this;
  }

   /**
   * Předepsáno [persistentní položka]
   * @return required
  **/
  @ApiModelProperty(example = "null", value = "Předepsáno [persistentní položka]")
  public Double getRequired() {
    return required;
  }

  public void setRequired(Double required) {
    this.required = required;
  }

  public Dock isPercent(Boolean isPercent) {
    this.isPercent = isPercent;
    return this;
  }

   /**
   * Procentem [persistentní položka]
   * @return isPercent
  **/
  @ApiModelProperty(example = "null", value = "Procentem [persistentní položka]")
  public Boolean getIsPercent() {
    return isPercent;
  }

  public void setIsPercent(Boolean isPercent) {
    this.isPercent = isPercent;
  }

  public Dock realized(Double realized) {
    this.realized = realized;
    return this;
  }

   /**
   * Realizováno [persistentní položka]
   * @return realized
  **/
  @ApiModelProperty(example = "null", value = "Realizováno [persistentní položka]")
  public Double getRealized() {
    return realized;
  }

  public void setRealized(Double realized) {
    this.realized = realized;
  }

  public Dock percentOfCode(Integer percentOfCode) {
    this.percentOfCode = percentOfCode;
    return this;
  }

   /**
   * Položka ML [persistentní položka]
   * @return percentOfCode
  **/
  @ApiModelProperty(example = "null", value = "Položka ML [persistentní položka]")
  public Integer getPercentOfCode() {
    return percentOfCode;
  }

  public void setPercentOfCode(Integer percentOfCode) {
    this.percentOfCode = percentOfCode;
  }

  public Dock createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Dock correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Dock cLSIDForPercent(String cLSIDForPercent) {
    this.cLSIDForPercent = cLSIDForPercent;
    return this;
  }

   /**
   * Třída objektu [persistentní položka]
   * @return cLSIDForPercent
  **/
  @ApiModelProperty(example = "null", value = "Třída objektu [persistentní položka]")
  public String getCLSIDForPercent() {
    return cLSIDForPercent;
  }

  public void setCLSIDForPercent(String cLSIDForPercent) {
    this.cLSIDForPercent = cLSIDForPercent;
  }

  public Dock isDebt(Boolean isDebt) {
    this.isDebt = isDebt;
    return this;
  }

   /**
   * Dluh [persistentní položka]
   * @return isDebt
  **/
  @ApiModelProperty(example = "null", value = "Dluh [persistentní položka]")
  public Boolean getIsDebt() {
    return isDebt;
  }

  public void setIsDebt(Boolean isDebt) {
    this.isDebt = isDebt;
  }

  public Dock dueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
    return this;
  }

   /**
   * Datum splatnosti [persistentní položka]
   * @return dueDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum splatnosti [persistentní položka]")
  public DateTime getDueDateDATE() {
    return dueDateDATE;
  }

  public void setDueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
  }

  public Dock requiredAmount(Double requiredAmount) {
    this.requiredAmount = requiredAmount;
    return this;
  }

   /**
   * Předepsaná částka [persistentní položka]
   * @return requiredAmount
  **/
  @ApiModelProperty(example = "null", value = "Předepsaná částka [persistentní položka]")
  public Double getRequiredAmount() {
    return requiredAmount;
  }

  public void setRequiredAmount(Double requiredAmount) {
    this.requiredAmount = requiredAmount;
  }

  public Dock itIsGeneratedDebt(Boolean itIsGeneratedDebt) {
    this.itIsGeneratedDebt = itIsGeneratedDebt;
    return this;
  }

   /**
   * Generovaný dluh [persistentní položka]
   * @return itIsGeneratedDebt
  **/
  @ApiModelProperty(example = "null", value = "Generovaný dluh [persistentní položka]")
  public Boolean getItIsGeneratedDebt() {
    return itIsGeneratedDebt;
  }

  public void setItIsGeneratedDebt(Boolean itIsGeneratedDebt) {
    this.itIsGeneratedDebt = itIsGeneratedDebt;
  }

  public Dock busOrderID(String busOrderID) {
    this.busOrderID = busOrderID;
    return this;
  }

   /**
   * Obch. případ; ID objektu Zakázka [persistentní položka]
   * @return busOrderID
  **/
  @ApiModelProperty(example = "null", value = "Obch. případ; ID objektu Zakázka [persistentní položka]")
  public String getBusOrderID() {
    return busOrderID;
  }

  public void setBusOrderID(String busOrderID) {
    this.busOrderID = busOrderID;
  }

  public Dock busTransactionID(String busTransactionID) {
    this.busTransactionID = busTransactionID;
    return this;
  }

   /**
   * Zakázka; ID objektu Obchodní případ [persistentní položka]
   * @return busTransactionID
  **/
  @ApiModelProperty(example = "null", value = "Zakázka; ID objektu Obchodní případ [persistentní položka]")
  public String getBusTransactionID() {
    return busTransactionID;
  }

  public void setBusTransactionID(String busTransactionID) {
    this.busTransactionID = busTransactionID;
  }

  public Dock flag(String flag) {
    this.flag = flag;
    return this;
  }

   /**
   * Rozl. řetězec [persistentní položka]
   * @return flag
  **/
  @ApiModelProperty(example = "null", value = "Rozl. řetězec [persistentní položka]")
  public String getFlag() {
    return flag;
  }

  public void setFlag(String flag) {
    this.flag = flag;
  }

  public Dock divisionID(String divisionID) {
    this.divisionID = divisionID;
    return this;
  }

   /**
   * Středisko; ID objektu Středisko [persistentní položka]
   * @return divisionID
  **/
  @ApiModelProperty(example = "null", value = "Středisko; ID objektu Středisko [persistentní položka]")
  public String getDivisionID() {
    return divisionID;
  }

  public void setDivisionID(String divisionID) {
    this.divisionID = divisionID;
  }

   /**
   * Zákl.typ
   * @return baseTypeText
  **/
  @ApiModelProperty(example = "null", value = "Zákl.typ")
  public String getBaseTypeText() {
    return baseTypeText;
  }

  public Dock percentOfName(String percentOfName) {
    this.percentOfName = percentOfName;
    return this;
  }

   /**
   * Položka - jméno
   * @return percentOfName
  **/
  @ApiModelProperty(example = "null", value = "Položka - jméno")
  public String getPercentOfName() {
    return percentOfName;
  }

  public void setPercentOfName(String percentOfName) {
    this.percentOfName = percentOfName;
  }

  public Dock percentOfLabel(String percentOfLabel) {
    this.percentOfLabel = percentOfLabel;
    return this;
  }

   /**
   * Položka - popis
   * @return percentOfLabel
  **/
  @ApiModelProperty(example = "null", value = "Položka - popis")
  public String getPercentOfLabel() {
    return percentOfLabel;
  }

  public void setPercentOfLabel(String percentOfLabel) {
    this.percentOfLabel = percentOfLabel;
  }

   /**
   * Os.číslo
   * @return perPersonalNumber
  **/
  @ApiModelProperty(example = "null", value = "Os.číslo")
  public String getPerPersonalNumber() {
    return perPersonalNumber;
  }

   /**
   * Os.číslo numericky
   * @return numPersonalNumber
  **/
  @ApiModelProperty(example = "null", value = "Os.číslo numericky")
  public Integer getNumPersonalNumber() {
    return numPersonalNumber;
  }

  public Dock allowedMaxToRealize(Double allowedMaxToRealize) {
    this.allowedMaxToRealize = allowedMaxToRealize;
    return this;
  }

   /**
   * Maximálně povoleno srazit. [persistentní položka]
   * @return allowedMaxToRealize
  **/
  @ApiModelProperty(example = "null", value = "Maximálně povoleno srazit. [persistentní položka]")
  public Double getAllowedMaxToRealize() {
    return allowedMaxToRealize;
  }

  public void setAllowedMaxToRealize(Double allowedMaxToRealize) {
    this.allowedMaxToRealize = allowedMaxToRealize;
  }

  public Dock itIsGenerated(Boolean itIsGenerated) {
    this.itIsGenerated = itIsGenerated;
    return this;
  }

   /**
   * Generovaná srážka
   * @return itIsGenerated
  **/
  @ApiModelProperty(example = "null", value = "Generovaná srážka")
  public Boolean getItIsGenerated() {
    return itIsGenerated;
  }

  public void setItIsGenerated(Boolean itIsGenerated) {
    this.itIsGenerated = itIsGenerated;
  }

  public Dock busProjectID(String busProjectID) {
    this.busProjectID = busProjectID;
    return this;
  }

   /**
   * Projekt; ID objektu Projekt [persistentní položka]
   * @return busProjectID
  **/
  @ApiModelProperty(example = "null", value = "Projekt; ID objektu Projekt [persistentní položka]")
  public String getBusProjectID() {
    return busProjectID;
  }

  public void setBusProjectID(String busProjectID) {
    this.busProjectID = busProjectID;
  }

  public Dock agreementDock(Boolean agreementDock) {
    this.agreementDock = agreementDock;
    return this;
  }

   /**
   * Smluvní srážka [persistentní položka]
   * @return agreementDock
  **/
  @ApiModelProperty(example = "null", value = "Smluvní srážka [persistentní položka]")
  public Boolean getAgreementDock() {
    return agreementDock;
  }

  public void setAgreementDock(Boolean agreementDock) {
    this.agreementDock = agreementDock;
  }

  public Dock targetBankCountryID(String targetBankCountryID) {
    this.targetBankCountryID = targetBankCountryID;
    return this;
  }

   /**
   * Země banky; ID objektu Země [persistentní položka]
   * @return targetBankCountryID
  **/
  @ApiModelProperty(example = "null", value = "Země banky; ID objektu Země [persistentní položka]")
  public String getTargetBankCountryID() {
    return targetBankCountryID;
  }

  public void setTargetBankCountryID(String targetBankCountryID) {
    this.targetBankCountryID = targetBankCountryID;
  }

  public Dock dockFromAgreements(Boolean dockFromAgreements) {
    this.dockFromAgreements = dockFromAgreements;
    return this;
  }

   /**
   * Srážet i z dohod [persistentní položka]
   * @return dockFromAgreements
  **/
  @ApiModelProperty(example = "null", value = "Srážet i z dohod [persistentní položka]")
  public Boolean getDockFromAgreements() {
    return dockFromAgreements;
  }

  public void setDockFromAgreements(Boolean dockFromAgreements) {
    this.dockFromAgreements = dockFromAgreements;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dock dock = (Dock) o;
    return Objects.equals(this.displayName, dock.displayName) &&
        Objects.equals(this.ID, dock.ID) &&
        Objects.equals(this.classID, dock.classID) &&
        Objects.equals(this.objVersion, dock.objVersion) &&
        Objects.equals(this.definitionID, dock.definitionID) &&
        Objects.equals(this.employeeID, dock.employeeID) &&
        Objects.equals(this.wagePeriodID, dock.wagePeriodID) &&
        Objects.equals(this.dockTypeID, dock.dockTypeID) &&
        Objects.equals(this.description, dock.description) &&
        Objects.equals(this.baseType, dock.baseType) &&
        Objects.equals(this.internal, dock.internal) &&
        Objects.equals(this.debtCorrect, dock.debtCorrect) &&
        Objects.equals(this.ofMinimum, dock.ofMinimum) &&
        Objects.equals(this.partial, dock.partial) &&
        Objects.equals(this.priority, dock.priority) &&
        Objects.equals(this.printGroup, dock.printGroup) &&
        Objects.equals(this.destination, dock.destination) &&
        Objects.equals(this.sWIFTCode, dock.sWIFTCode) &&
        Objects.equals(this.execAuthority, dock.execAuthority) &&
        Objects.equals(this.execRefNumber, dock.execRefNumber) &&
        Objects.equals(this.execRecipient, dock.execRecipient) &&
        Objects.equals(this.sourceID, dock.sourceID) &&
        Objects.equals(this.varSymbol, dock.varSymbol) &&
        Objects.equals(this.specSymbol, dock.specSymbol) &&
        Objects.equals(this.constSymbolID, dock.constSymbolID) &&
        Objects.equals(this.required, dock.required) &&
        Objects.equals(this.isPercent, dock.isPercent) &&
        Objects.equals(this.realized, dock.realized) &&
        Objects.equals(this.percentOfCode, dock.percentOfCode) &&
        Objects.equals(this.createdByID, dock.createdByID) &&
        Objects.equals(this.correctedByID, dock.correctedByID) &&
        Objects.equals(this.cLSIDForPercent, dock.cLSIDForPercent) &&
        Objects.equals(this.isDebt, dock.isDebt) &&
        Objects.equals(this.dueDateDATE, dock.dueDateDATE) &&
        Objects.equals(this.requiredAmount, dock.requiredAmount) &&
        Objects.equals(this.itIsGeneratedDebt, dock.itIsGeneratedDebt) &&
        Objects.equals(this.busOrderID, dock.busOrderID) &&
        Objects.equals(this.busTransactionID, dock.busTransactionID) &&
        Objects.equals(this.flag, dock.flag) &&
        Objects.equals(this.divisionID, dock.divisionID) &&
        Objects.equals(this.baseTypeText, dock.baseTypeText) &&
        Objects.equals(this.percentOfName, dock.percentOfName) &&
        Objects.equals(this.percentOfLabel, dock.percentOfLabel) &&
        Objects.equals(this.perPersonalNumber, dock.perPersonalNumber) &&
        Objects.equals(this.numPersonalNumber, dock.numPersonalNumber) &&
        Objects.equals(this.allowedMaxToRealize, dock.allowedMaxToRealize) &&
        Objects.equals(this.itIsGenerated, dock.itIsGenerated) &&
        Objects.equals(this.busProjectID, dock.busProjectID) &&
        Objects.equals(this.agreementDock, dock.agreementDock) &&
        Objects.equals(this.targetBankCountryID, dock.targetBankCountryID) &&
        Objects.equals(this.dockFromAgreements, dock.dockFromAgreements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, definitionID, employeeID, wagePeriodID, dockTypeID, description, baseType, internal, debtCorrect, ofMinimum, partial, priority, printGroup, destination, sWIFTCode, execAuthority, execRefNumber, execRecipient, sourceID, varSymbol, specSymbol, constSymbolID, required, isPercent, realized, percentOfCode, createdByID, correctedByID, cLSIDForPercent, isDebt, dueDateDATE, requiredAmount, itIsGeneratedDebt, busOrderID, busTransactionID, flag, divisionID, baseTypeText, percentOfName, percentOfLabel, perPersonalNumber, numPersonalNumber, allowedMaxToRealize, itIsGenerated, busProjectID, agreementDock, targetBankCountryID, dockFromAgreements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dock {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    definitionID: ").append(toIndentedString(definitionID)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    wagePeriodID: ").append(toIndentedString(wagePeriodID)).append("\n");
    sb.append("    dockTypeID: ").append(toIndentedString(dockTypeID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    baseType: ").append(toIndentedString(baseType)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    debtCorrect: ").append(toIndentedString(debtCorrect)).append("\n");
    sb.append("    ofMinimum: ").append(toIndentedString(ofMinimum)).append("\n");
    sb.append("    partial: ").append(toIndentedString(partial)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    printGroup: ").append(toIndentedString(printGroup)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    sWIFTCode: ").append(toIndentedString(sWIFTCode)).append("\n");
    sb.append("    execAuthority: ").append(toIndentedString(execAuthority)).append("\n");
    sb.append("    execRefNumber: ").append(toIndentedString(execRefNumber)).append("\n");
    sb.append("    execRecipient: ").append(toIndentedString(execRecipient)).append("\n");
    sb.append("    sourceID: ").append(toIndentedString(sourceID)).append("\n");
    sb.append("    varSymbol: ").append(toIndentedString(varSymbol)).append("\n");
    sb.append("    specSymbol: ").append(toIndentedString(specSymbol)).append("\n");
    sb.append("    constSymbolID: ").append(toIndentedString(constSymbolID)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    isPercent: ").append(toIndentedString(isPercent)).append("\n");
    sb.append("    realized: ").append(toIndentedString(realized)).append("\n");
    sb.append("    percentOfCode: ").append(toIndentedString(percentOfCode)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    cLSIDForPercent: ").append(toIndentedString(cLSIDForPercent)).append("\n");
    sb.append("    isDebt: ").append(toIndentedString(isDebt)).append("\n");
    sb.append("    dueDateDATE: ").append(toIndentedString(dueDateDATE)).append("\n");
    sb.append("    requiredAmount: ").append(toIndentedString(requiredAmount)).append("\n");
    sb.append("    itIsGeneratedDebt: ").append(toIndentedString(itIsGeneratedDebt)).append("\n");
    sb.append("    busOrderID: ").append(toIndentedString(busOrderID)).append("\n");
    sb.append("    busTransactionID: ").append(toIndentedString(busTransactionID)).append("\n");
    sb.append("    flag: ").append(toIndentedString(flag)).append("\n");
    sb.append("    divisionID: ").append(toIndentedString(divisionID)).append("\n");
    sb.append("    baseTypeText: ").append(toIndentedString(baseTypeText)).append("\n");
    sb.append("    percentOfName: ").append(toIndentedString(percentOfName)).append("\n");
    sb.append("    percentOfLabel: ").append(toIndentedString(percentOfLabel)).append("\n");
    sb.append("    perPersonalNumber: ").append(toIndentedString(perPersonalNumber)).append("\n");
    sb.append("    numPersonalNumber: ").append(toIndentedString(numPersonalNumber)).append("\n");
    sb.append("    allowedMaxToRealize: ").append(toIndentedString(allowedMaxToRealize)).append("\n");
    sb.append("    itIsGenerated: ").append(toIndentedString(itIsGenerated)).append("\n");
    sb.append("    busProjectID: ").append(toIndentedString(busProjectID)).append("\n");
    sb.append("    agreementDock: ").append(toIndentedString(agreementDock)).append("\n");
    sb.append("    targetBankCountryID: ").append(toIndentedString(targetBankCountryID)).append("\n");
    sb.append("    dockFromAgreements: ").append(toIndentedString(dockFromAgreements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

