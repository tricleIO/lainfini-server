/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Docktype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Docktype   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("basetype")
  private Integer basetype = null;

  @SerializedName("periodicity")
  private Integer periodicity = null;

  @SerializedName("internaldock")
  private Boolean internaldock = null;

  @SerializedName("debtcorrect")
  private Boolean debtcorrect = null;

  @SerializedName("comptominimum")
  private Boolean comptominimum = null;

  @SerializedName("partialdock")
  private Boolean partialdock = null;

  @SerializedName("printgroup")
  private String printgroup = null;

  @SerializedName("basetypetext")
  private String basetypetext = null;

  @SerializedName("agreementdock")
  private Boolean agreementdock = null;

  @SerializedName("dockfromagreements")
  private Boolean dockfromagreements = null;

  public Docktype displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Docktype id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Docktype classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Docktype objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Docktype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Docktype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Docktype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Docktype basetype(Integer basetype) {
    this.basetype = basetype;
    return this;
  }

   /**
   * typ [persistentní položka]
   * @return basetype
  **/
  @ApiModelProperty(example = "null", value = "typ [persistentní položka]")
  public Integer getBasetype() {
    return basetype;
  }

  public void setBasetype(Integer basetype) {
    this.basetype = basetype;
  }

  public Docktype periodicity(Integer periodicity) {
    this.periodicity = periodicity;
    return this;
  }

   /**
   * perioda [persistentní položka]
   * @return periodicity
  **/
  @ApiModelProperty(example = "null", value = "perioda [persistentní položka]")
  public Integer getPeriodicity() {
    return periodicity;
  }

  public void setPeriodicity(Integer periodicity) {
    this.periodicity = periodicity;
  }

  public Docktype internaldock(Boolean internaldock) {
    this.internaldock = internaldock;
    return this;
  }

   /**
   * interní [persistentní položka]
   * @return internaldock
  **/
  @ApiModelProperty(example = "null", value = "interní [persistentní položka]")
  public Boolean getInternaldock() {
    return internaldock;
  }

  public void setInternaldock(Boolean internaldock) {
    this.internaldock = internaldock;
  }

  public Docktype debtcorrect(Boolean debtcorrect) {
    this.debtcorrect = debtcorrect;
    return this;
  }

   /**
   * dluh [persistentní položka]
   * @return debtcorrect
  **/
  @ApiModelProperty(example = "null", value = "dluh [persistentní položka]")
  public Boolean getDebtcorrect() {
    return debtcorrect;
  }

  public void setDebtcorrect(Boolean debtcorrect) {
    this.debtcorrect = debtcorrect;
  }

  public Docktype comptominimum(Boolean comptominimum) {
    this.comptominimum = comptominimum;
    return this;
  }

   /**
   * minimum [persistentní položka]
   * @return comptominimum
  **/
  @ApiModelProperty(example = "null", value = "minimum [persistentní položka]")
  public Boolean getComptominimum() {
    return comptominimum;
  }

  public void setComptominimum(Boolean comptominimum) {
    this.comptominimum = comptominimum;
  }

  public Docktype partialdock(Boolean partialdock) {
    this.partialdock = partialdock;
    return this;
  }

   /**
   * Část [persistentní položka]
   * @return partialdock
  **/
  @ApiModelProperty(example = "null", value = "Část [persistentní položka]")
  public Boolean getPartialdock() {
    return partialdock;
  }

  public void setPartialdock(Boolean partialdock) {
    this.partialdock = partialdock;
  }

  public Docktype printgroup(String printgroup) {
    this.printgroup = printgroup;
    return this;
  }

   /**
   * tisk [persistentní položka]
   * @return printgroup
  **/
  @ApiModelProperty(example = "null", value = "tisk [persistentní položka]")
  public String getPrintgroup() {
    return printgroup;
  }

  public void setPrintgroup(String printgroup) {
    this.printgroup = printgroup;
  }

  public Docktype basetypetext(String basetypetext) {
    this.basetypetext = basetypetext;
    return this;
  }

   /**
   * typ
   * @return basetypetext
  **/
  @ApiModelProperty(example = "null", value = "typ")
  public String getBasetypetext() {
    return basetypetext;
  }

  public void setBasetypetext(String basetypetext) {
    this.basetypetext = basetypetext;
  }

  public Docktype agreementdock(Boolean agreementdock) {
    this.agreementdock = agreementdock;
    return this;
  }

   /**
   * srážka dohodou [persistentní položka]
   * @return agreementdock
  **/
  @ApiModelProperty(example = "null", value = "srážka dohodou [persistentní položka]")
  public Boolean getAgreementdock() {
    return agreementdock;
  }

  public void setAgreementdock(Boolean agreementdock) {
    this.agreementdock = agreementdock;
  }

  public Docktype dockfromagreements(Boolean dockfromagreements) {
    this.dockfromagreements = dockfromagreements;
    return this;
  }

   /**
   * srážet i z dohod [persistentní položka]
   * @return dockfromagreements
  **/
  @ApiModelProperty(example = "null", value = "srážet i z dohod [persistentní položka]")
  public Boolean getDockfromagreements() {
    return dockfromagreements;
  }

  public void setDockfromagreements(Boolean dockfromagreements) {
    this.dockfromagreements = dockfromagreements;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Docktype docktype = (Docktype) o;
    return Objects.equals(this.displayname, docktype.displayname) &&
        Objects.equals(this.id, docktype.id) &&
        Objects.equals(this.classid, docktype.classid) &&
        Objects.equals(this.objversion, docktype.objversion) &&
        Objects.equals(this.hidden, docktype.hidden) &&
        Objects.equals(this.code, docktype.code) &&
        Objects.equals(this.name, docktype.name) &&
        Objects.equals(this.basetype, docktype.basetype) &&
        Objects.equals(this.periodicity, docktype.periodicity) &&
        Objects.equals(this.internaldock, docktype.internaldock) &&
        Objects.equals(this.debtcorrect, docktype.debtcorrect) &&
        Objects.equals(this.comptominimum, docktype.comptominimum) &&
        Objects.equals(this.partialdock, docktype.partialdock) &&
        Objects.equals(this.printgroup, docktype.printgroup) &&
        Objects.equals(this.basetypetext, docktype.basetypetext) &&
        Objects.equals(this.agreementdock, docktype.agreementdock) &&
        Objects.equals(this.dockfromagreements, docktype.dockfromagreements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, code, name, basetype, periodicity, internaldock, debtcorrect, comptominimum, partialdock, printgroup, basetypetext, agreementdock, dockfromagreements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Docktype {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    basetype: ").append(toIndentedString(basetype)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    internaldock: ").append(toIndentedString(internaldock)).append("\n");
    sb.append("    debtcorrect: ").append(toIndentedString(debtcorrect)).append("\n");
    sb.append("    comptominimum: ").append(toIndentedString(comptominimum)).append("\n");
    sb.append("    partialdock: ").append(toIndentedString(partialdock)).append("\n");
    sb.append("    printgroup: ").append(toIndentedString(printgroup)).append("\n");
    sb.append("    basetypetext: ").append(toIndentedString(basetypetext)).append("\n");
    sb.append("    agreementdock: ").append(toIndentedString(agreementdock)).append("\n");
    sb.append("    dockfromagreements: ").append(toIndentedString(dockfromagreements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

