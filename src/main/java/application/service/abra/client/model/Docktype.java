/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Docktype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Docktype   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("BaseType")
  private Integer baseType = null;

  @SerializedName("Periodicity")
  private Integer periodicity = null;

  @SerializedName("InternalDock")
  private Boolean internalDock = null;

  @SerializedName("DebtCorrect")
  private Boolean debtCorrect = null;

  @SerializedName("CompToMinimum")
  private Boolean compToMinimum = null;

  @SerializedName("PartialDock")
  private Boolean partialDock = null;

  @SerializedName("PrintGroup")
  private String printGroup = null;

  @SerializedName("BaseTypeText")
  private String baseTypeText = null;

  @SerializedName("AgreementDock")
  private Boolean agreementDock = null;

  @SerializedName("DockFromAgreements")
  private Boolean dockFromAgreements = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Docktype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Docktype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Docktype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Docktype baseType(Integer baseType) {
    this.baseType = baseType;
    return this;
  }

   /**
   * Typ [persistentní položka]
   * @return baseType
  **/
  @ApiModelProperty(example = "null", value = "Typ [persistentní položka]")
  public Integer getBaseType() {
    return baseType;
  }

  public void setBaseType(Integer baseType) {
    this.baseType = baseType;
  }

  public Docktype periodicity(Integer periodicity) {
    this.periodicity = periodicity;
    return this;
  }

   /**
   * Perioda [persistentní položka]
   * @return periodicity
  **/
  @ApiModelProperty(example = "null", value = "Perioda [persistentní položka]")
  public Integer getPeriodicity() {
    return periodicity;
  }

  public void setPeriodicity(Integer periodicity) {
    this.periodicity = periodicity;
  }

  public Docktype internalDock(Boolean internalDock) {
    this.internalDock = internalDock;
    return this;
  }

   /**
   * Interní [persistentní položka]
   * @return internalDock
  **/
  @ApiModelProperty(example = "null", value = "Interní [persistentní položka]")
  public Boolean getInternalDock() {
    return internalDock;
  }

  public void setInternalDock(Boolean internalDock) {
    this.internalDock = internalDock;
  }

  public Docktype debtCorrect(Boolean debtCorrect) {
    this.debtCorrect = debtCorrect;
    return this;
  }

   /**
   * Dluh [persistentní položka]
   * @return debtCorrect
  **/
  @ApiModelProperty(example = "null", value = "Dluh [persistentní položka]")
  public Boolean getDebtCorrect() {
    return debtCorrect;
  }

  public void setDebtCorrect(Boolean debtCorrect) {
    this.debtCorrect = debtCorrect;
  }

  public Docktype compToMinimum(Boolean compToMinimum) {
    this.compToMinimum = compToMinimum;
    return this;
  }

   /**
   * Minimum [persistentní položka]
   * @return compToMinimum
  **/
  @ApiModelProperty(example = "null", value = "Minimum [persistentní položka]")
  public Boolean getCompToMinimum() {
    return compToMinimum;
  }

  public void setCompToMinimum(Boolean compToMinimum) {
    this.compToMinimum = compToMinimum;
  }

  public Docktype partialDock(Boolean partialDock) {
    this.partialDock = partialDock;
    return this;
  }

   /**
   * Část [persistentní položka]
   * @return partialDock
  **/
  @ApiModelProperty(example = "null", value = "Část [persistentní položka]")
  public Boolean getPartialDock() {
    return partialDock;
  }

  public void setPartialDock(Boolean partialDock) {
    this.partialDock = partialDock;
  }

  public Docktype printGroup(String printGroup) {
    this.printGroup = printGroup;
    return this;
  }

   /**
   * Tisk [persistentní položka]
   * @return printGroup
  **/
  @ApiModelProperty(example = "null", value = "Tisk [persistentní položka]")
  public String getPrintGroup() {
    return printGroup;
  }

  public void setPrintGroup(String printGroup) {
    this.printGroup = printGroup;
  }

  public Docktype baseTypeText(String baseTypeText) {
    this.baseTypeText = baseTypeText;
    return this;
  }

   /**
   * Typ
   * @return baseTypeText
  **/
  @ApiModelProperty(example = "null", value = "Typ")
  public String getBaseTypeText() {
    return baseTypeText;
  }

  public void setBaseTypeText(String baseTypeText) {
    this.baseTypeText = baseTypeText;
  }

  public Docktype agreementDock(Boolean agreementDock) {
    this.agreementDock = agreementDock;
    return this;
  }

   /**
   * Srážka dohodou [persistentní položka]
   * @return agreementDock
  **/
  @ApiModelProperty(example = "null", value = "Srážka dohodou [persistentní položka]")
  public Boolean getAgreementDock() {
    return agreementDock;
  }

  public void setAgreementDock(Boolean agreementDock) {
    this.agreementDock = agreementDock;
  }

  public Docktype dockFromAgreements(Boolean dockFromAgreements) {
    this.dockFromAgreements = dockFromAgreements;
    return this;
  }

   /**
   * Srážet i z dohod [persistentní položka]
   * @return dockFromAgreements
  **/
  @ApiModelProperty(example = "null", value = "Srážet i z dohod [persistentní položka]")
  public Boolean getDockFromAgreements() {
    return dockFromAgreements;
  }

  public void setDockFromAgreements(Boolean dockFromAgreements) {
    this.dockFromAgreements = dockFromAgreements;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Docktype docktype = (Docktype) o;
    return Objects.equals(this.displayName, docktype.displayName) &&
        Objects.equals(this.ID, docktype.ID) &&
        Objects.equals(this.classID, docktype.classID) &&
        Objects.equals(this.objVersion, docktype.objVersion) &&
        Objects.equals(this.hidden, docktype.hidden) &&
        Objects.equals(this.code, docktype.code) &&
        Objects.equals(this.name, docktype.name) &&
        Objects.equals(this.baseType, docktype.baseType) &&
        Objects.equals(this.periodicity, docktype.periodicity) &&
        Objects.equals(this.internalDock, docktype.internalDock) &&
        Objects.equals(this.debtCorrect, docktype.debtCorrect) &&
        Objects.equals(this.compToMinimum, docktype.compToMinimum) &&
        Objects.equals(this.partialDock, docktype.partialDock) &&
        Objects.equals(this.printGroup, docktype.printGroup) &&
        Objects.equals(this.baseTypeText, docktype.baseTypeText) &&
        Objects.equals(this.agreementDock, docktype.agreementDock) &&
        Objects.equals(this.dockFromAgreements, docktype.dockFromAgreements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, baseType, periodicity, internalDock, debtCorrect, compToMinimum, partialDock, printGroup, baseTypeText, agreementDock, dockFromAgreements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Docktype {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    baseType: ").append(toIndentedString(baseType)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    internalDock: ").append(toIndentedString(internalDock)).append("\n");
    sb.append("    debtCorrect: ").append(toIndentedString(debtCorrect)).append("\n");
    sb.append("    compToMinimum: ").append(toIndentedString(compToMinimum)).append("\n");
    sb.append("    partialDock: ").append(toIndentedString(partialDock)).append("\n");
    sb.append("    printGroup: ").append(toIndentedString(printGroup)).append("\n");
    sb.append("    baseTypeText: ").append(toIndentedString(baseTypeText)).append("\n");
    sb.append("    agreementDock: ").append(toIndentedString(agreementDock)).append("\n");
    sb.append("    dockFromAgreements: ").append(toIndentedString(dockFromAgreements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

