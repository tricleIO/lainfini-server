/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Evaluationcriterion
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Evaluationcriterion   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Evaluationcriteriondescscore> rows = new ArrayList<Evaluationcriteriondescscore>();

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("CriterionType")
  private Integer criterionType = null;

  @SerializedName("Expression")
  private String expression = null;

  @SerializedName("MinScore")
  private Integer minScore = null;

  @SerializedName("MaxScore")
  private Integer maxScore = null;

  @SerializedName("SatisfactoryScore")
  private Integer satisfactoryScore = null;

  @SerializedName("DataSources")
  private List<Evaluationcriteriondatasource> dataSources = new ArrayList<Evaluationcriteriondatasource>();

  @SerializedName("ConditionForTakeover")
  private String conditionForTakeover = null;

  @SerializedName("System")
  private Boolean system = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Evaluationcriterion rows(List<Evaluationcriteriondescscore> rows) {
    this.rows = rows;
    return this;
  }

  public Evaluationcriterion addRowsItem(Evaluationcriteriondescscore rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Hodnotící kritérium - popisy bodového hodnocení [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Hodnotící kritérium - popisy bodového hodnocení [nepersistentní položka]")
  public List<Evaluationcriteriondescscore> getRows() {
    return rows;
  }

  public void setRows(List<Evaluationcriteriondescscore> rows) {
    this.rows = rows;
  }

  public Evaluationcriterion code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Evaluationcriterion name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Evaluationcriterion description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Evaluationcriterion criterionType(Integer criterionType) {
    this.criterionType = criterionType;
    return this;
  }

   /**
   * Typ kritéria [persistentní položka]
   * @return criterionType
  **/
  @ApiModelProperty(example = "null", value = "Typ kritéria [persistentní položka]")
  public Integer getCriterionType() {
    return criterionType;
  }

  public void setCriterionType(Integer criterionType) {
    this.criterionType = criterionType;
  }

  public Evaluationcriterion expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Výraz [persistentní položka]
   * @return expression
  **/
  @ApiModelProperty(example = "null", value = "Výraz [persistentní položka]")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public Evaluationcriterion minScore(Integer minScore) {
    this.minScore = minScore;
    return this;
  }

   /**
   * Minimální počet bodů [persistentní položka]
   * @return minScore
  **/
  @ApiModelProperty(example = "null", value = "Minimální počet bodů [persistentní položka]")
  public Integer getMinScore() {
    return minScore;
  }

  public void setMinScore(Integer minScore) {
    this.minScore = minScore;
  }

  public Evaluationcriterion maxScore(Integer maxScore) {
    this.maxScore = maxScore;
    return this;
  }

   /**
   * Maximální počet bodů [persistentní položka]
   * @return maxScore
  **/
  @ApiModelProperty(example = "null", value = "Maximální počet bodů [persistentní položka]")
  public Integer getMaxScore() {
    return maxScore;
  }

  public void setMaxScore(Integer maxScore) {
    this.maxScore = maxScore;
  }

  public Evaluationcriterion satisfactoryScore(Integer satisfactoryScore) {
    this.satisfactoryScore = satisfactoryScore;
    return this;
  }

   /**
   * Počet bodů postačujících ke schválení [persistentní položka]
   * @return satisfactoryScore
  **/
  @ApiModelProperty(example = "null", value = "Počet bodů postačujících ke schválení [persistentní položka]")
  public Integer getSatisfactoryScore() {
    return satisfactoryScore;
  }

  public void setSatisfactoryScore(Integer satisfactoryScore) {
    this.satisfactoryScore = satisfactoryScore;
  }

  public Evaluationcriterion dataSources(List<Evaluationcriteriondatasource> dataSources) {
    this.dataSources = dataSources;
    return this;
  }

  public Evaluationcriterion addDataSourcesItem(Evaluationcriteriondatasource dataSourcesItem) {
    this.dataSources.add(dataSourcesItem);
    return this;
  }

   /**
   * Datové zdroje; kolekce BO Hodnotící kritérium - datové zdroje [nepersistentní položka]
   * @return dataSources
  **/
  @ApiModelProperty(example = "null", value = "Datové zdroje; kolekce BO Hodnotící kritérium - datové zdroje [nepersistentní položka]")
  public List<Evaluationcriteriondatasource> getDataSources() {
    return dataSources;
  }

  public void setDataSources(List<Evaluationcriteriondatasource> dataSources) {
    this.dataSources = dataSources;
  }

  public Evaluationcriterion conditionForTakeover(String conditionForTakeover) {
    this.conditionForTakeover = conditionForTakeover;
    return this;
  }

   /**
   * Podmínka pro převzetí [persistentní položka]
   * @return conditionForTakeover
  **/
  @ApiModelProperty(example = "null", value = "Podmínka pro převzetí [persistentní položka]")
  public String getConditionForTakeover() {
    return conditionForTakeover;
  }

  public void setConditionForTakeover(String conditionForTakeover) {
    this.conditionForTakeover = conditionForTakeover;
  }

  public Evaluationcriterion system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Systémový [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "Systémový [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Evaluationcriterion evaluationcriterion = (Evaluationcriterion) o;
    return Objects.equals(this.displayName, evaluationcriterion.displayName) &&
        Objects.equals(this.ID, evaluationcriterion.ID) &&
        Objects.equals(this.classID, evaluationcriterion.classID) &&
        Objects.equals(this.objVersion, evaluationcriterion.objVersion) &&
        Objects.equals(this.rows, evaluationcriterion.rows) &&
        Objects.equals(this.code, evaluationcriterion.code) &&
        Objects.equals(this.name, evaluationcriterion.name) &&
        Objects.equals(this.description, evaluationcriterion.description) &&
        Objects.equals(this.criterionType, evaluationcriterion.criterionType) &&
        Objects.equals(this.expression, evaluationcriterion.expression) &&
        Objects.equals(this.minScore, evaluationcriterion.minScore) &&
        Objects.equals(this.maxScore, evaluationcriterion.maxScore) &&
        Objects.equals(this.satisfactoryScore, evaluationcriterion.satisfactoryScore) &&
        Objects.equals(this.dataSources, evaluationcriterion.dataSources) &&
        Objects.equals(this.conditionForTakeover, evaluationcriterion.conditionForTakeover) &&
        Objects.equals(this.system, evaluationcriterion.system);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, code, name, description, criterionType, expression, minScore, maxScore, satisfactoryScore, dataSources, conditionForTakeover, system);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Evaluationcriterion {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    criterionType: ").append(toIndentedString(criterionType)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    minScore: ").append(toIndentedString(minScore)).append("\n");
    sb.append("    maxScore: ").append(toIndentedString(maxScore)).append("\n");
    sb.append("    satisfactoryScore: ").append(toIndentedString(satisfactoryScore)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    conditionForTakeover: ").append(toIndentedString(conditionForTakeover)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

