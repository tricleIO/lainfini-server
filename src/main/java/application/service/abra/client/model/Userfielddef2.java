/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Userfielddef2
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Userfielddef2   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("FieldName")
  private String fieldName = null;

  @SerializedName("FieldCode")
  private Integer fieldCode = null;

  @SerializedName("FieldKind")
  private Integer fieldKind = null;

  @SerializedName("FieldDataType")
  private Integer fieldDataType = null;

  @SerializedName("FieldSize")
  private Integer fieldSize = null;

  @SerializedName("FieldPrecision")
  private Integer fieldPrecision = null;

  @SerializedName("FieldDisplayLabel")
  private String fieldDisplayLabel = null;

  @SerializedName("FieldDisplayHint")
  private String fieldDisplayHint = null;

  @SerializedName("FieldDisplayWidth")
  private Integer fieldDisplayWidth = null;

  @SerializedName("FieldRollCLSID")
  private String fieldRollCLSID = null;

  @SerializedName("FieldCLSID")
  private String fieldCLSID = null;

  @SerializedName("FieldDisplayFormat")
  private String fieldDisplayFormat = null;

  @SerializedName("FieldAlignment")
  private Integer fieldAlignment = null;

  @SerializedName("EditMethod")
  private Integer editMethod = null;

  @SerializedName("Enumeration")
  private String enumeration = null;

  @SerializedName("IsReadOnly")
  private Boolean isReadOnly = null;

  @SerializedName("HasHistory")
  private Boolean hasHistory = null;

  @SerializedName("DefaultValue")
  private String defaultValue = null;

  @SerializedName("Flags")
  private String flags = null;

  @SerializedName("FieldDataTypeText")
  private String fieldDataTypeText = null;

  @SerializedName("EditMethodText")
  private String editMethodText = null;

  @SerializedName("UseInDynSQL")
  private Boolean useInDynSQL = null;

  @SerializedName("ForcedField")
  private Boolean forcedField = null;

  @SerializedName("Replicatable")
  private Boolean replicatable = null;

  @SerializedName("Importable")
  private Boolean importable = null;

  @SerializedName("TextField")
  private String textField = null;

  @SerializedName("System")
  private Boolean system = null;

  @SerializedName("ExtraField")
  private Boolean extraField = null;

  @SerializedName("FieldPrefix")
  private String fieldPrefix = null;

  @SerializedName("FieldSuffix")
  private String fieldSuffix = null;

  @SerializedName("IsSortable")
  private Boolean isSortable = null;

  @SerializedName("DefaultValueInteger")
  private Integer defaultValueInteger = null;

  @SerializedName("DefaultValueFloat")
  private Double defaultValueFloat = null;

  @SerializedName("DefaultValueDateTime")
  private DateTime defaultValueDateTime = null;

  @SerializedName("DefaultValueBoolean")
  private Boolean defaultValueBoolean = null;

  @SerializedName("SortableRollFields")
  private String sortableRollFields = null;

  @SerializedName("MinValue")
  private String minValue = null;

  @SerializedName("MaxValue")
  private String maxValue = null;

  @SerializedName("MaxValueInteger")
  private Integer maxValueInteger = null;

  @SerializedName("MinValueInteger")
  private Integer minValueInteger = null;

  @SerializedName("MaxValueFloat")
  private Double maxValueFloat = null;

  @SerializedName("MinValueFloat")
  private Double minValueFloat = null;

  @SerializedName("IsIndexed")
  private Boolean isIndexed = null;

  @SerializedName("HasForeignKey")
  private Boolean hasForeignKey = null;

  @SerializedName("IndexName")
  private String indexName = null;

  @SerializedName("CurrencySourcePath")
  private String currencySourcePath = null;

  @SerializedName("FirstValue")
  private Integer firstValue = null;

  @SerializedName("ShowTime")
  private Boolean showTime = null;

  @SerializedName("IsMultiChangeable")
  private Boolean isMultiChangeable = null;

  @SerializedName("IsCaseSensitive")
  private Boolean isCaseSensitive = null;

  @SerializedName("FieldDBType")
  private Integer fieldDBType = null;

  @SerializedName("FieldDBTypeText")
  private String fieldDBTypeText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Sada definovatelných položek [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Sada definovatelných položek [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Userfielddef2 posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Userfielddef2 fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Název položky [persistentní položka]
   * @return fieldName
  **/
  @ApiModelProperty(example = "null", value = "Název položky [persistentní položka]")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public Userfielddef2 fieldCode(Integer fieldCode) {
    this.fieldCode = fieldCode;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return fieldCode
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public Integer getFieldCode() {
    return fieldCode;
  }

  public void setFieldCode(Integer fieldCode) {
    this.fieldCode = fieldCode;
  }

  public Userfielddef2 fieldKind(Integer fieldKind) {
    this.fieldKind = fieldKind;
    return this;
  }

   /**
   * Typ čísla [persistentní položka]
   * @return fieldKind
  **/
  @ApiModelProperty(example = "null", value = "Typ čísla [persistentní položka]")
  public Integer getFieldKind() {
    return fieldKind;
  }

  public void setFieldKind(Integer fieldKind) {
    this.fieldKind = fieldKind;
  }

  public Userfielddef2 fieldDataType(Integer fieldDataType) {
    this.fieldDataType = fieldDataType;
    return this;
  }

   /**
   * Datový typ [persistentní položka]
   * @return fieldDataType
  **/
  @ApiModelProperty(example = "null", value = "Datový typ [persistentní položka]")
  public Integer getFieldDataType() {
    return fieldDataType;
  }

  public void setFieldDataType(Integer fieldDataType) {
    this.fieldDataType = fieldDataType;
  }

  public Userfielddef2 fieldSize(Integer fieldSize) {
    this.fieldSize = fieldSize;
    return this;
  }

   /**
   * Velikost [persistentní položka]
   * @return fieldSize
  **/
  @ApiModelProperty(example = "null", value = "Velikost [persistentní položka]")
  public Integer getFieldSize() {
    return fieldSize;
  }

  public void setFieldSize(Integer fieldSize) {
    this.fieldSize = fieldSize;
  }

  public Userfielddef2 fieldPrecision(Integer fieldPrecision) {
    this.fieldPrecision = fieldPrecision;
    return this;
  }

   /**
   * Desetiny [persistentní položka]
   * @return fieldPrecision
  **/
  @ApiModelProperty(example = "null", value = "Desetiny [persistentní položka]")
  public Integer getFieldPrecision() {
    return fieldPrecision;
  }

  public void setFieldPrecision(Integer fieldPrecision) {
    this.fieldPrecision = fieldPrecision;
  }

  public Userfielddef2 fieldDisplayLabel(String fieldDisplayLabel) {
    this.fieldDisplayLabel = fieldDisplayLabel;
    return this;
  }

   /**
   * Popis položky [persistentní položka]
   * @return fieldDisplayLabel
  **/
  @ApiModelProperty(example = "null", value = "Popis položky [persistentní položka]")
  public String getFieldDisplayLabel() {
    return fieldDisplayLabel;
  }

  public void setFieldDisplayLabel(String fieldDisplayLabel) {
    this.fieldDisplayLabel = fieldDisplayLabel;
  }

  public Userfielddef2 fieldDisplayHint(String fieldDisplayHint) {
    this.fieldDisplayHint = fieldDisplayHint;
    return this;
  }

   /**
   * Popiska položky [persistentní položka]
   * @return fieldDisplayHint
  **/
  @ApiModelProperty(example = "null", value = "Popiska položky [persistentní položka]")
  public String getFieldDisplayHint() {
    return fieldDisplayHint;
  }

  public void setFieldDisplayHint(String fieldDisplayHint) {
    this.fieldDisplayHint = fieldDisplayHint;
  }

  public Userfielddef2 fieldDisplayWidth(Integer fieldDisplayWidth) {
    this.fieldDisplayWidth = fieldDisplayWidth;
    return this;
  }

   /**
   * Zobrazovací velikost [persistentní položka]
   * @return fieldDisplayWidth
  **/
  @ApiModelProperty(example = "null", value = "Zobrazovací velikost [persistentní položka]")
  public Integer getFieldDisplayWidth() {
    return fieldDisplayWidth;
  }

  public void setFieldDisplayWidth(Integer fieldDisplayWidth) {
    this.fieldDisplayWidth = fieldDisplayWidth;
  }

  public Userfielddef2 fieldRollCLSID(String fieldRollCLSID) {
    this.fieldRollCLSID = fieldRollCLSID;
    return this;
  }

   /**
   * Číselník [persistentní položka]
   * @return fieldRollCLSID
  **/
  @ApiModelProperty(example = "null", value = "Číselník [persistentní položka]")
  public String getFieldRollCLSID() {
    return fieldRollCLSID;
  }

  public void setFieldRollCLSID(String fieldRollCLSID) {
    this.fieldRollCLSID = fieldRollCLSID;
  }

   /**
   * Třída objektu [persistentní položka]
   * @return fieldCLSID
  **/
  @ApiModelProperty(example = "null", value = "Třída objektu [persistentní položka]")
  public String getFieldCLSID() {
    return fieldCLSID;
  }

  public Userfielddef2 fieldDisplayFormat(String fieldDisplayFormat) {
    this.fieldDisplayFormat = fieldDisplayFormat;
    return this;
  }

   /**
   * Formát [persistentní položka]
   * @return fieldDisplayFormat
  **/
  @ApiModelProperty(example = "null", value = "Formát [persistentní položka]")
  public String getFieldDisplayFormat() {
    return fieldDisplayFormat;
  }

  public void setFieldDisplayFormat(String fieldDisplayFormat) {
    this.fieldDisplayFormat = fieldDisplayFormat;
  }

  public Userfielddef2 fieldAlignment(Integer fieldAlignment) {
    this.fieldAlignment = fieldAlignment;
    return this;
  }

   /**
   * Zarovnání [persistentní položka]
   * @return fieldAlignment
  **/
  @ApiModelProperty(example = "null", value = "Zarovnání [persistentní položka]")
  public Integer getFieldAlignment() {
    return fieldAlignment;
  }

  public void setFieldAlignment(Integer fieldAlignment) {
    this.fieldAlignment = fieldAlignment;
  }

  public Userfielddef2 editMethod(Integer editMethod) {
    this.editMethod = editMethod;
    return this;
  }

   /**
   * Editace [persistentní položka]
   * @return editMethod
  **/
  @ApiModelProperty(example = "null", value = "Editace [persistentní položka]")
  public Integer getEditMethod() {
    return editMethod;
  }

  public void setEditMethod(Integer editMethod) {
    this.editMethod = editMethod;
  }

  public Userfielddef2 enumeration(String enumeration) {
    this.enumeration = enumeration;
    return this;
  }

   /**
   * Výčet [persistentní položka]
   * @return enumeration
  **/
  @ApiModelProperty(example = "null", value = "Výčet [persistentní položka]")
  public String getEnumeration() {
    return enumeration;
  }

  public void setEnumeration(String enumeration) {
    this.enumeration = enumeration;
  }

  public Userfielddef2 isReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
    return this;
  }

   /**
   * Jen ke čtení [persistentní položka]
   * @return isReadOnly
  **/
  @ApiModelProperty(example = "null", value = "Jen ke čtení [persistentní položka]")
  public Boolean getIsReadOnly() {
    return isReadOnly;
  }

  public void setIsReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
  }

  public Userfielddef2 hasHistory(Boolean hasHistory) {
    this.hasHistory = hasHistory;
    return this;
  }

   /**
   * Historie [persistentní položka]
   * @return hasHistory
  **/
  @ApiModelProperty(example = "null", value = "Historie [persistentní položka]")
  public Boolean getHasHistory() {
    return hasHistory;
  }

  public void setHasHistory(Boolean hasHistory) {
    this.hasHistory = hasHistory;
  }

  public Userfielddef2 defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Výchozí hodnota [persistentní položka]
   * @return defaultValue
  **/
  @ApiModelProperty(example = "null", value = "Výchozí hodnota [persistentní položka]")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public Userfielddef2 flags(String flags) {
    this.flags = flags;
    return this;
  }

   /**
   * Příznaky [persistentní položka]
   * @return flags
  **/
  @ApiModelProperty(example = "null", value = "Příznaky [persistentní položka]")
  public String getFlags() {
    return flags;
  }

  public void setFlags(String flags) {
    this.flags = flags;
  }

  public Userfielddef2 fieldDataTypeText(String fieldDataTypeText) {
    this.fieldDataTypeText = fieldDataTypeText;
    return this;
  }

   /**
   * Datový typ
   * @return fieldDataTypeText
  **/
  @ApiModelProperty(example = "null", value = "Datový typ")
  public String getFieldDataTypeText() {
    return fieldDataTypeText;
  }

  public void setFieldDataTypeText(String fieldDataTypeText) {
    this.fieldDataTypeText = fieldDataTypeText;
  }

  public Userfielddef2 editMethodText(String editMethodText) {
    this.editMethodText = editMethodText;
    return this;
  }

   /**
   * Editace
   * @return editMethodText
  **/
  @ApiModelProperty(example = "null", value = "Editace")
  public String getEditMethodText() {
    return editMethodText;
  }

  public void setEditMethodText(String editMethodText) {
    this.editMethodText = editMethodText;
  }

  public Userfielddef2 useInDynSQL(Boolean useInDynSQL) {
    this.useInDynSQL = useInDynSQL;
    return this;
  }

   /**
   * Výběry [persistentní položka]
   * @return useInDynSQL
  **/
  @ApiModelProperty(example = "null", value = "Výběry [persistentní položka]")
  public Boolean getUseInDynSQL() {
    return useInDynSQL;
  }

  public void setUseInDynSQL(Boolean useInDynSQL) {
    this.useInDynSQL = useInDynSQL;
  }

  public Userfielddef2 forcedField(Boolean forcedField) {
    this.forcedField = forcedField;
    return this;
  }

   /**
   * Povinná [persistentní položka]
   * @return forcedField
  **/
  @ApiModelProperty(example = "null", value = "Povinná [persistentní položka]")
  public Boolean getForcedField() {
    return forcedField;
  }

  public void setForcedField(Boolean forcedField) {
    this.forcedField = forcedField;
  }

  public Userfielddef2 replicatable(Boolean replicatable) {
    this.replicatable = replicatable;
    return this;
  }

   /**
   * Přenos [persistentní položka]
   * @return replicatable
  **/
  @ApiModelProperty(example = "null", value = "Přenos [persistentní položka]")
  public Boolean getReplicatable() {
    return replicatable;
  }

  public void setReplicatable(Boolean replicatable) {
    this.replicatable = replicatable;
  }

  public Userfielddef2 importable(Boolean importable) {
    this.importable = importable;
    return this;
  }

   /**
   * Přenos při importech [persistentní položka]
   * @return importable
  **/
  @ApiModelProperty(example = "null", value = "Přenos při importech [persistentní položka]")
  public Boolean getImportable() {
    return importable;
  }

  public void setImportable(Boolean importable) {
    this.importable = importable;
  }

  public Userfielddef2 textField(String textField) {
    this.textField = textField;
    return this;
  }

   /**
   * Textová položka [persistentní položka]
   * @return textField
  **/
  @ApiModelProperty(example = "null", value = "Textová položka [persistentní položka]")
  public String getTextField() {
    return textField;
  }

  public void setTextField(String textField) {
    this.textField = textField;
  }

  public Userfielddef2 system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Systémová [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "Systémová [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Userfielddef2 extraField(Boolean extraField) {
    this.extraField = extraField;
    return this;
  }

   /**
   * Extra položka [persistentní položka]
   * @return extraField
  **/
  @ApiModelProperty(example = "null", value = "Extra položka [persistentní položka]")
  public Boolean getExtraField() {
    return extraField;
  }

  public void setExtraField(Boolean extraField) {
    this.extraField = extraField;
  }

  public Userfielddef2 fieldPrefix(String fieldPrefix) {
    this.fieldPrefix = fieldPrefix;
    return this;
  }

   /**
   * Prefix položky
   * @return fieldPrefix
  **/
  @ApiModelProperty(example = "null", value = "Prefix položky")
  public String getFieldPrefix() {
    return fieldPrefix;
  }

  public void setFieldPrefix(String fieldPrefix) {
    this.fieldPrefix = fieldPrefix;
  }

  public Userfielddef2 fieldSuffix(String fieldSuffix) {
    this.fieldSuffix = fieldSuffix;
    return this;
  }

   /**
   * Suffix položky
   * @return fieldSuffix
  **/
  @ApiModelProperty(example = "null", value = "Suffix položky")
  public String getFieldSuffix() {
    return fieldSuffix;
  }

  public void setFieldSuffix(String fieldSuffix) {
    this.fieldSuffix = fieldSuffix;
  }

  public Userfielddef2 isSortable(Boolean isSortable) {
    this.isSortable = isSortable;
    return this;
  }

   /**
   * Tříditelná [persistentní položka]
   * @return isSortable
  **/
  @ApiModelProperty(example = "null", value = "Tříditelná [persistentní položka]")
  public Boolean getIsSortable() {
    return isSortable;
  }

  public void setIsSortable(Boolean isSortable) {
    this.isSortable = isSortable;
  }

  public Userfielddef2 defaultValueInteger(Integer defaultValueInteger) {
    this.defaultValueInteger = defaultValueInteger;
    return this;
  }

   /**
   * Výchozí hodnota
   * @return defaultValueInteger
  **/
  @ApiModelProperty(example = "null", value = "Výchozí hodnota")
  public Integer getDefaultValueInteger() {
    return defaultValueInteger;
  }

  public void setDefaultValueInteger(Integer defaultValueInteger) {
    this.defaultValueInteger = defaultValueInteger;
  }

  public Userfielddef2 defaultValueFloat(Double defaultValueFloat) {
    this.defaultValueFloat = defaultValueFloat;
    return this;
  }

   /**
   * Výchozí hodnota
   * @return defaultValueFloat
  **/
  @ApiModelProperty(example = "null", value = "Výchozí hodnota")
  public Double getDefaultValueFloat() {
    return defaultValueFloat;
  }

  public void setDefaultValueFloat(Double defaultValueFloat) {
    this.defaultValueFloat = defaultValueFloat;
  }

  public Userfielddef2 defaultValueDateTime(DateTime defaultValueDateTime) {
    this.defaultValueDateTime = defaultValueDateTime;
    return this;
  }

   /**
   * Výchozí hodnota
   * @return defaultValueDateTime
  **/
  @ApiModelProperty(example = "null", value = "Výchozí hodnota")
  public DateTime getDefaultValueDateTime() {
    return defaultValueDateTime;
  }

  public void setDefaultValueDateTime(DateTime defaultValueDateTime) {
    this.defaultValueDateTime = defaultValueDateTime;
  }

  public Userfielddef2 defaultValueBoolean(Boolean defaultValueBoolean) {
    this.defaultValueBoolean = defaultValueBoolean;
    return this;
  }

   /**
   * Výchozí hodnota
   * @return defaultValueBoolean
  **/
  @ApiModelProperty(example = "null", value = "Výchozí hodnota")
  public Boolean getDefaultValueBoolean() {
    return defaultValueBoolean;
  }

  public void setDefaultValueBoolean(Boolean defaultValueBoolean) {
    this.defaultValueBoolean = defaultValueBoolean;
  }

  public Userfielddef2 sortableRollFields(String sortableRollFields) {
    this.sortableRollFields = sortableRollFields;
    return this;
  }

   /**
   * Tříditelné položky číselníku [persistentní položka]
   * @return sortableRollFields
  **/
  @ApiModelProperty(example = "null", value = "Tříditelné položky číselníku [persistentní položka]")
  public String getSortableRollFields() {
    return sortableRollFields;
  }

  public void setSortableRollFields(String sortableRollFields) {
    this.sortableRollFields = sortableRollFields;
  }

  public Userfielddef2 minValue(String minValue) {
    this.minValue = minValue;
    return this;
  }

   /**
   * Minimální hodnota [persistentní položka]
   * @return minValue
  **/
  @ApiModelProperty(example = "null", value = "Minimální hodnota [persistentní položka]")
  public String getMinValue() {
    return minValue;
  }

  public void setMinValue(String minValue) {
    this.minValue = minValue;
  }

  public Userfielddef2 maxValue(String maxValue) {
    this.maxValue = maxValue;
    return this;
  }

   /**
   * Maximální hodnota [persistentní položka]
   * @return maxValue
  **/
  @ApiModelProperty(example = "null", value = "Maximální hodnota [persistentní položka]")
  public String getMaxValue() {
    return maxValue;
  }

  public void setMaxValue(String maxValue) {
    this.maxValue = maxValue;
  }

  public Userfielddef2 maxValueInteger(Integer maxValueInteger) {
    this.maxValueInteger = maxValueInteger;
    return this;
  }

   /**
   * Maximální hodnota
   * @return maxValueInteger
  **/
  @ApiModelProperty(example = "null", value = "Maximální hodnota")
  public Integer getMaxValueInteger() {
    return maxValueInteger;
  }

  public void setMaxValueInteger(Integer maxValueInteger) {
    this.maxValueInteger = maxValueInteger;
  }

  public Userfielddef2 minValueInteger(Integer minValueInteger) {
    this.minValueInteger = minValueInteger;
    return this;
  }

   /**
   * Minimální hodnota
   * @return minValueInteger
  **/
  @ApiModelProperty(example = "null", value = "Minimální hodnota")
  public Integer getMinValueInteger() {
    return minValueInteger;
  }

  public void setMinValueInteger(Integer minValueInteger) {
    this.minValueInteger = minValueInteger;
  }

  public Userfielddef2 maxValueFloat(Double maxValueFloat) {
    this.maxValueFloat = maxValueFloat;
    return this;
  }

   /**
   * Maximální hodnota
   * @return maxValueFloat
  **/
  @ApiModelProperty(example = "null", value = "Maximální hodnota")
  public Double getMaxValueFloat() {
    return maxValueFloat;
  }

  public void setMaxValueFloat(Double maxValueFloat) {
    this.maxValueFloat = maxValueFloat;
  }

  public Userfielddef2 minValueFloat(Double minValueFloat) {
    this.minValueFloat = minValueFloat;
    return this;
  }

   /**
   * Minimální hodnota
   * @return minValueFloat
  **/
  @ApiModelProperty(example = "null", value = "Minimální hodnota")
  public Double getMinValueFloat() {
    return minValueFloat;
  }

  public void setMinValueFloat(Double minValueFloat) {
    this.minValueFloat = minValueFloat;
  }

  public Userfielddef2 isIndexed(Boolean isIndexed) {
    this.isIndexed = isIndexed;
    return this;
  }

   /**
   * Indexováno [persistentní položka]
   * @return isIndexed
  **/
  @ApiModelProperty(example = "null", value = "Indexováno [persistentní položka]")
  public Boolean getIsIndexed() {
    return isIndexed;
  }

  public void setIsIndexed(Boolean isIndexed) {
    this.isIndexed = isIndexed;
  }

  public Userfielddef2 hasForeignKey(Boolean hasForeignKey) {
    this.hasForeignKey = hasForeignKey;
    return this;
  }

   /**
   * Cizí klíč [persistentní položka]
   * @return hasForeignKey
  **/
  @ApiModelProperty(example = "null", value = "Cizí klíč [persistentní položka]")
  public Boolean getHasForeignKey() {
    return hasForeignKey;
  }

  public void setHasForeignKey(Boolean hasForeignKey) {
    this.hasForeignKey = hasForeignKey;
  }

  public Userfielddef2 indexName(String indexName) {
    this.indexName = indexName;
    return this;
  }

   /**
   * Název indexu [persistentní položka]
   * @return indexName
  **/
  @ApiModelProperty(example = "null", value = "Název indexu [persistentní položka]")
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(String indexName) {
    this.indexName = indexName;
  }

  public Userfielddef2 currencySourcePath(String currencySourcePath) {
    this.currencySourcePath = currencySourcePath;
    return this;
  }

   /**
   * Zdroj měny [persistentní položka]
   * @return currencySourcePath
  **/
  @ApiModelProperty(example = "null", value = "Zdroj měny [persistentní položka]")
  public String getCurrencySourcePath() {
    return currencySourcePath;
  }

  public void setCurrencySourcePath(String currencySourcePath) {
    this.currencySourcePath = currencySourcePath;
  }

  public Userfielddef2 firstValue(Integer firstValue) {
    this.firstValue = firstValue;
    return this;
  }

   /**
   * Počítat od [persistentní položka]
   * @return firstValue
  **/
  @ApiModelProperty(example = "null", value = "Počítat od [persistentní položka]")
  public Integer getFirstValue() {
    return firstValue;
  }

  public void setFirstValue(Integer firstValue) {
    this.firstValue = firstValue;
  }

  public Userfielddef2 showTime(Boolean showTime) {
    this.showTime = showTime;
    return this;
  }

   /**
   * Zobrazovat čas [persistentní položka]
   * @return showTime
  **/
  @ApiModelProperty(example = "null", value = "Zobrazovat čas [persistentní položka]")
  public Boolean getShowTime() {
    return showTime;
  }

  public void setShowTime(Boolean showTime) {
    this.showTime = showTime;
  }

  public Userfielddef2 isMultiChangeable(Boolean isMultiChangeable) {
    this.isMultiChangeable = isMultiChangeable;
    return this;
  }

   /**
   * Povolit hromadnou změnu [persistentní položka]
   * @return isMultiChangeable
  **/
  @ApiModelProperty(example = "null", value = "Povolit hromadnou změnu [persistentní položka]")
  public Boolean getIsMultiChangeable() {
    return isMultiChangeable;
  }

  public void setIsMultiChangeable(Boolean isMultiChangeable) {
    this.isMultiChangeable = isMultiChangeable;
  }

  public Userfielddef2 isCaseSensitive(Boolean isCaseSensitive) {
    this.isCaseSensitive = isCaseSensitive;
    return this;
  }

   /**
   * Rozlišovat velikost písmen [persistentní položka]
   * @return isCaseSensitive
  **/
  @ApiModelProperty(example = "null", value = "Rozlišovat velikost písmen [persistentní položka]")
  public Boolean getIsCaseSensitive() {
    return isCaseSensitive;
  }

  public void setIsCaseSensitive(Boolean isCaseSensitive) {
    this.isCaseSensitive = isCaseSensitive;
  }

  public Userfielddef2 fieldDBType(Integer fieldDBType) {
    this.fieldDBType = fieldDBType;
    return this;
  }

   /**
   * Databázový typ [persistentní položka]
   * @return fieldDBType
  **/
  @ApiModelProperty(example = "null", value = "Databázový typ [persistentní položka]")
  public Integer getFieldDBType() {
    return fieldDBType;
  }

  public void setFieldDBType(Integer fieldDBType) {
    this.fieldDBType = fieldDBType;
  }

  public Userfielddef2 fieldDBTypeText(String fieldDBTypeText) {
    this.fieldDBTypeText = fieldDBTypeText;
    return this;
  }

   /**
   * Databázový typ
   * @return fieldDBTypeText
  **/
  @ApiModelProperty(example = "null", value = "Databázový typ")
  public String getFieldDBTypeText() {
    return fieldDBTypeText;
  }

  public void setFieldDBTypeText(String fieldDBTypeText) {
    this.fieldDBTypeText = fieldDBTypeText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Userfielddef2 userfielddef2 = (Userfielddef2) o;
    return Objects.equals(this.displayName, userfielddef2.displayName) &&
        Objects.equals(this.ID, userfielddef2.ID) &&
        Objects.equals(this.classID, userfielddef2.classID) &&
        Objects.equals(this.objVersion, userfielddef2.objVersion) &&
        Objects.equals(this.parentID, userfielddef2.parentID) &&
        Objects.equals(this.posIndex, userfielddef2.posIndex) &&
        Objects.equals(this.fieldName, userfielddef2.fieldName) &&
        Objects.equals(this.fieldCode, userfielddef2.fieldCode) &&
        Objects.equals(this.fieldKind, userfielddef2.fieldKind) &&
        Objects.equals(this.fieldDataType, userfielddef2.fieldDataType) &&
        Objects.equals(this.fieldSize, userfielddef2.fieldSize) &&
        Objects.equals(this.fieldPrecision, userfielddef2.fieldPrecision) &&
        Objects.equals(this.fieldDisplayLabel, userfielddef2.fieldDisplayLabel) &&
        Objects.equals(this.fieldDisplayHint, userfielddef2.fieldDisplayHint) &&
        Objects.equals(this.fieldDisplayWidth, userfielddef2.fieldDisplayWidth) &&
        Objects.equals(this.fieldRollCLSID, userfielddef2.fieldRollCLSID) &&
        Objects.equals(this.fieldCLSID, userfielddef2.fieldCLSID) &&
        Objects.equals(this.fieldDisplayFormat, userfielddef2.fieldDisplayFormat) &&
        Objects.equals(this.fieldAlignment, userfielddef2.fieldAlignment) &&
        Objects.equals(this.editMethod, userfielddef2.editMethod) &&
        Objects.equals(this.enumeration, userfielddef2.enumeration) &&
        Objects.equals(this.isReadOnly, userfielddef2.isReadOnly) &&
        Objects.equals(this.hasHistory, userfielddef2.hasHistory) &&
        Objects.equals(this.defaultValue, userfielddef2.defaultValue) &&
        Objects.equals(this.flags, userfielddef2.flags) &&
        Objects.equals(this.fieldDataTypeText, userfielddef2.fieldDataTypeText) &&
        Objects.equals(this.editMethodText, userfielddef2.editMethodText) &&
        Objects.equals(this.useInDynSQL, userfielddef2.useInDynSQL) &&
        Objects.equals(this.forcedField, userfielddef2.forcedField) &&
        Objects.equals(this.replicatable, userfielddef2.replicatable) &&
        Objects.equals(this.importable, userfielddef2.importable) &&
        Objects.equals(this.textField, userfielddef2.textField) &&
        Objects.equals(this.system, userfielddef2.system) &&
        Objects.equals(this.extraField, userfielddef2.extraField) &&
        Objects.equals(this.fieldPrefix, userfielddef2.fieldPrefix) &&
        Objects.equals(this.fieldSuffix, userfielddef2.fieldSuffix) &&
        Objects.equals(this.isSortable, userfielddef2.isSortable) &&
        Objects.equals(this.defaultValueInteger, userfielddef2.defaultValueInteger) &&
        Objects.equals(this.defaultValueFloat, userfielddef2.defaultValueFloat) &&
        Objects.equals(this.defaultValueDateTime, userfielddef2.defaultValueDateTime) &&
        Objects.equals(this.defaultValueBoolean, userfielddef2.defaultValueBoolean) &&
        Objects.equals(this.sortableRollFields, userfielddef2.sortableRollFields) &&
        Objects.equals(this.minValue, userfielddef2.minValue) &&
        Objects.equals(this.maxValue, userfielddef2.maxValue) &&
        Objects.equals(this.maxValueInteger, userfielddef2.maxValueInteger) &&
        Objects.equals(this.minValueInteger, userfielddef2.minValueInteger) &&
        Objects.equals(this.maxValueFloat, userfielddef2.maxValueFloat) &&
        Objects.equals(this.minValueFloat, userfielddef2.minValueFloat) &&
        Objects.equals(this.isIndexed, userfielddef2.isIndexed) &&
        Objects.equals(this.hasForeignKey, userfielddef2.hasForeignKey) &&
        Objects.equals(this.indexName, userfielddef2.indexName) &&
        Objects.equals(this.currencySourcePath, userfielddef2.currencySourcePath) &&
        Objects.equals(this.firstValue, userfielddef2.firstValue) &&
        Objects.equals(this.showTime, userfielddef2.showTime) &&
        Objects.equals(this.isMultiChangeable, userfielddef2.isMultiChangeable) &&
        Objects.equals(this.isCaseSensitive, userfielddef2.isCaseSensitive) &&
        Objects.equals(this.fieldDBType, userfielddef2.fieldDBType) &&
        Objects.equals(this.fieldDBTypeText, userfielddef2.fieldDBTypeText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, fieldName, fieldCode, fieldKind, fieldDataType, fieldSize, fieldPrecision, fieldDisplayLabel, fieldDisplayHint, fieldDisplayWidth, fieldRollCLSID, fieldCLSID, fieldDisplayFormat, fieldAlignment, editMethod, enumeration, isReadOnly, hasHistory, defaultValue, flags, fieldDataTypeText, editMethodText, useInDynSQL, forcedField, replicatable, importable, textField, system, extraField, fieldPrefix, fieldSuffix, isSortable, defaultValueInteger, defaultValueFloat, defaultValueDateTime, defaultValueBoolean, sortableRollFields, minValue, maxValue, maxValueInteger, minValueInteger, maxValueFloat, minValueFloat, isIndexed, hasForeignKey, indexName, currencySourcePath, firstValue, showTime, isMultiChangeable, isCaseSensitive, fieldDBType, fieldDBTypeText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Userfielddef2 {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    fieldCode: ").append(toIndentedString(fieldCode)).append("\n");
    sb.append("    fieldKind: ").append(toIndentedString(fieldKind)).append("\n");
    sb.append("    fieldDataType: ").append(toIndentedString(fieldDataType)).append("\n");
    sb.append("    fieldSize: ").append(toIndentedString(fieldSize)).append("\n");
    sb.append("    fieldPrecision: ").append(toIndentedString(fieldPrecision)).append("\n");
    sb.append("    fieldDisplayLabel: ").append(toIndentedString(fieldDisplayLabel)).append("\n");
    sb.append("    fieldDisplayHint: ").append(toIndentedString(fieldDisplayHint)).append("\n");
    sb.append("    fieldDisplayWidth: ").append(toIndentedString(fieldDisplayWidth)).append("\n");
    sb.append("    fieldRollCLSID: ").append(toIndentedString(fieldRollCLSID)).append("\n");
    sb.append("    fieldCLSID: ").append(toIndentedString(fieldCLSID)).append("\n");
    sb.append("    fieldDisplayFormat: ").append(toIndentedString(fieldDisplayFormat)).append("\n");
    sb.append("    fieldAlignment: ").append(toIndentedString(fieldAlignment)).append("\n");
    sb.append("    editMethod: ").append(toIndentedString(editMethod)).append("\n");
    sb.append("    enumeration: ").append(toIndentedString(enumeration)).append("\n");
    sb.append("    isReadOnly: ").append(toIndentedString(isReadOnly)).append("\n");
    sb.append("    hasHistory: ").append(toIndentedString(hasHistory)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    fieldDataTypeText: ").append(toIndentedString(fieldDataTypeText)).append("\n");
    sb.append("    editMethodText: ").append(toIndentedString(editMethodText)).append("\n");
    sb.append("    useInDynSQL: ").append(toIndentedString(useInDynSQL)).append("\n");
    sb.append("    forcedField: ").append(toIndentedString(forcedField)).append("\n");
    sb.append("    replicatable: ").append(toIndentedString(replicatable)).append("\n");
    sb.append("    importable: ").append(toIndentedString(importable)).append("\n");
    sb.append("    textField: ").append(toIndentedString(textField)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    extraField: ").append(toIndentedString(extraField)).append("\n");
    sb.append("    fieldPrefix: ").append(toIndentedString(fieldPrefix)).append("\n");
    sb.append("    fieldSuffix: ").append(toIndentedString(fieldSuffix)).append("\n");
    sb.append("    isSortable: ").append(toIndentedString(isSortable)).append("\n");
    sb.append("    defaultValueInteger: ").append(toIndentedString(defaultValueInteger)).append("\n");
    sb.append("    defaultValueFloat: ").append(toIndentedString(defaultValueFloat)).append("\n");
    sb.append("    defaultValueDateTime: ").append(toIndentedString(defaultValueDateTime)).append("\n");
    sb.append("    defaultValueBoolean: ").append(toIndentedString(defaultValueBoolean)).append("\n");
    sb.append("    sortableRollFields: ").append(toIndentedString(sortableRollFields)).append("\n");
    sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
    sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
    sb.append("    maxValueInteger: ").append(toIndentedString(maxValueInteger)).append("\n");
    sb.append("    minValueInteger: ").append(toIndentedString(minValueInteger)).append("\n");
    sb.append("    maxValueFloat: ").append(toIndentedString(maxValueFloat)).append("\n");
    sb.append("    minValueFloat: ").append(toIndentedString(minValueFloat)).append("\n");
    sb.append("    isIndexed: ").append(toIndentedString(isIndexed)).append("\n");
    sb.append("    hasForeignKey: ").append(toIndentedString(hasForeignKey)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    currencySourcePath: ").append(toIndentedString(currencySourcePath)).append("\n");
    sb.append("    firstValue: ").append(toIndentedString(firstValue)).append("\n");
    sb.append("    showTime: ").append(toIndentedString(showTime)).append("\n");
    sb.append("    isMultiChangeable: ").append(toIndentedString(isMultiChangeable)).append("\n");
    sb.append("    isCaseSensitive: ").append(toIndentedString(isCaseSensitive)).append("\n");
    sb.append("    fieldDBType: ").append(toIndentedString(fieldDBType)).append("\n");
    sb.append("    fieldDBTypeText: ").append(toIndentedString(fieldDBTypeText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

