/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Storebatch
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Storebatch   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("storecard_id")
  private String storecardId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("expirationdate$date")
  private DateTime expirationdatedate = null;

  @SerializedName("serialnumber")
  private Boolean serialnumber = null;

  @SerializedName("prefixcode")
  private String prefixcode = null;

  @SerializedName("suffixcode")
  private String suffixcode = null;

  @SerializedName("bodycode")
  private String bodycode = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("specification")
  private String specification = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("skipnewcode")
  private Boolean skipnewcode = null;

  @SerializedName("productiondate$date")
  private DateTime productiondatedate = null;

  public Storebatch displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Storebatch id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Storebatch classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Storebatch objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Storebatch hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Storebatch storecardId(String storecardId) {
    this.storecardId = storecardId;
    return this;
  }

   /**
   * skl. karta; id objektu skladová karta [persistentní položka]
   * @return storecardId
  **/
  @ApiModelProperty(example = "null", value = "skl. karta; id objektu skladová karta [persistentní položka]")
  public String getStorecardId() {
    return storecardId;
  }

  public void setStorecardId(String storecardId) {
    this.storecardId = storecardId;
  }

  public Storebatch name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Storebatch expirationdatedate(DateTime expirationdatedate) {
    this.expirationdatedate = expirationdatedate;
    return this;
  }

   /**
   * datum expirace [persistentní položka]
   * @return expirationdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum expirace [persistentní položka]")
  public DateTime getExpirationdatedate() {
    return expirationdatedate;
  }

  public void setExpirationdatedate(DateTime expirationdatedate) {
    this.expirationdatedate = expirationdatedate;
  }

  public Storebatch serialnumber(Boolean serialnumber) {
    this.serialnumber = serialnumber;
    return this;
  }

   /**
   * sér. číslo [persistentní položka]
   * @return serialnumber
  **/
  @ApiModelProperty(example = "null", value = "sér. číslo [persistentní položka]")
  public Boolean getSerialnumber() {
    return serialnumber;
  }

  public void setSerialnumber(Boolean serialnumber) {
    this.serialnumber = serialnumber;
  }

  public Storebatch prefixcode(String prefixcode) {
    this.prefixcode = prefixcode;
    return this;
  }

   /**
   * prefix kódu
   * @return prefixcode
  **/
  @ApiModelProperty(example = "null", value = "prefix kódu")
  public String getPrefixcode() {
    return prefixcode;
  }

  public void setPrefixcode(String prefixcode) {
    this.prefixcode = prefixcode;
  }

  public Storebatch suffixcode(String suffixcode) {
    this.suffixcode = suffixcode;
    return this;
  }

   /**
   * sufix kódu
   * @return suffixcode
  **/
  @ApiModelProperty(example = "null", value = "sufix kódu")
  public String getSuffixcode() {
    return suffixcode;
  }

  public void setSuffixcode(String suffixcode) {
    this.suffixcode = suffixcode;
  }

  public Storebatch bodycode(String bodycode) {
    this.bodycode = bodycode;
    return this;
  }

   /**
   * Číslo kódu
   * @return bodycode
  **/
  @ApiModelProperty(example = "null", value = "Číslo kódu")
  public String getBodycode() {
    return bodycode;
  }

  public void setBodycode(String bodycode) {
    this.bodycode = bodycode;
  }

  public Storebatch note(String note) {
    this.note = note;
    return this;
  }

   /**
   * poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Storebatch specification(String specification) {
    this.specification = specification;
    return this;
  }

   /**
   * specifikace [persistentní položka]
   * @return specification
  **/
  @ApiModelProperty(example = "null", value = "specifikace [persistentní položka]")
  public String getSpecification() {
    return specification;
  }

  public void setSpecification(String specification) {
    this.specification = specification;
  }

  public Storebatch comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * poznámka
   * @return comment
  **/
  @ApiModelProperty(example = "null", value = "poznámka")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Storebatch skipnewcode(Boolean skipnewcode) {
    this.skipnewcode = skipnewcode;
    return this;
  }

   /**
   * negeneruj nový kód
   * @return skipnewcode
  **/
  @ApiModelProperty(example = "null", value = "negeneruj nový kód")
  public Boolean getSkipnewcode() {
    return skipnewcode;
  }

  public void setSkipnewcode(Boolean skipnewcode) {
    this.skipnewcode = skipnewcode;
  }

  public Storebatch productiondatedate(DateTime productiondatedate) {
    this.productiondatedate = productiondatedate;
    return this;
  }

   /**
   * datum a čas výroby [persistentní položka]
   * @return productiondatedate
  **/
  @ApiModelProperty(example = "null", value = "datum a čas výroby [persistentní položka]")
  public DateTime getProductiondatedate() {
    return productiondatedate;
  }

  public void setProductiondatedate(DateTime productiondatedate) {
    this.productiondatedate = productiondatedate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Storebatch storebatch = (Storebatch) o;
    return Objects.equals(this.displayname, storebatch.displayname) &&
        Objects.equals(this.id, storebatch.id) &&
        Objects.equals(this.classid, storebatch.classid) &&
        Objects.equals(this.objversion, storebatch.objversion) &&
        Objects.equals(this.hidden, storebatch.hidden) &&
        Objects.equals(this.storecardId, storebatch.storecardId) &&
        Objects.equals(this.name, storebatch.name) &&
        Objects.equals(this.expirationdatedate, storebatch.expirationdatedate) &&
        Objects.equals(this.serialnumber, storebatch.serialnumber) &&
        Objects.equals(this.prefixcode, storebatch.prefixcode) &&
        Objects.equals(this.suffixcode, storebatch.suffixcode) &&
        Objects.equals(this.bodycode, storebatch.bodycode) &&
        Objects.equals(this.note, storebatch.note) &&
        Objects.equals(this.specification, storebatch.specification) &&
        Objects.equals(this.comment, storebatch.comment) &&
        Objects.equals(this.skipnewcode, storebatch.skipnewcode) &&
        Objects.equals(this.productiondatedate, storebatch.productiondatedate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, storecardId, name, expirationdatedate, serialnumber, prefixcode, suffixcode, bodycode, note, specification, comment, skipnewcode, productiondatedate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Storebatch {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    storecardId: ").append(toIndentedString(storecardId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    expirationdatedate: ").append(toIndentedString(expirationdatedate)).append("\n");
    sb.append("    serialnumber: ").append(toIndentedString(serialnumber)).append("\n");
    sb.append("    prefixcode: ").append(toIndentedString(prefixcode)).append("\n");
    sb.append("    suffixcode: ").append(toIndentedString(suffixcode)).append("\n");
    sb.append("    bodycode: ").append(toIndentedString(bodycode)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    specification: ").append(toIndentedString(specification)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    skipnewcode: ").append(toIndentedString(skipnewcode)).append("\n");
    sb.append("    productiondatedate: ").append(toIndentedString(productiondatedate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

