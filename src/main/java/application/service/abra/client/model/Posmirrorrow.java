/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Posmirrorrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Posmirrorrow   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("storecard_id")
  private String storecardId = null;

  @SerializedName("store_id")
  private String storeId = null;

  @SerializedName("qunit")
  private String qunit = null;

  @SerializedName("unitrate")
  private Double unitrate = null;

  @SerializedName("requestedquantity")
  private Double requestedquantity = null;

  @SerializedName("realquantity")
  private Double realquantity = null;

  @SerializedName("realquantityoriginal")
  private Double realquantityoriginal = null;

  @SerializedName("quantitydifferencevsoriginal")
  private Double quantitydifferencevsoriginal = null;

  @SerializedName("quantitydifferenceoriginal")
  private Double quantitydifferenceoriginal = null;

  @SerializedName("shortfalltamountoriginal")
  private Double shortfalltamountoriginal = null;

  @SerializedName("shortfalltamountvsoriginal")
  private Double shortfalltamountvsoriginal = null;

  @SerializedName("quantitydifference")
  private Double quantitydifference = null;

  @SerializedName("shortfallprice")
  private Double shortfallprice = null;

  @SerializedName("shortfalltamount")
  private Double shortfalltamount = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("shortfallexcluded")
  private Boolean shortfallexcluded = null;

  public Posmirrorrow displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Posmirrorrow id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Posmirrorrow classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Posmirrorrow objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Posmirrorrow parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu zrcadlo [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu zrcadlo [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Posmirrorrow posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Posmirrorrow storecardId(String storecardId) {
    this.storecardId = storecardId;
    return this;
  }

   /**
   * skladová karta; id objektu skladová karta [persistentní položka]
   * @return storecardId
  **/
  @ApiModelProperty(example = "null", value = "skladová karta; id objektu skladová karta [persistentní položka]")
  public String getStorecardId() {
    return storecardId;
  }

  public void setStorecardId(String storecardId) {
    this.storecardId = storecardId;
  }

  public Posmirrorrow storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

   /**
   * sklad; id objektu sklad [persistentní položka]
   * @return storeId
  **/
  @ApiModelProperty(example = "null", value = "sklad; id objektu sklad [persistentní položka]")
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  public Posmirrorrow qunit(String qunit) {
    this.qunit = qunit;
    return this;
  }

   /**
   * jednotka [persistentní položka]
   * @return qunit
  **/
  @ApiModelProperty(example = "null", value = "jednotka [persistentní položka]")
  public String getQunit() {
    return qunit;
  }

  public void setQunit(String qunit) {
    this.qunit = qunit;
  }

  public Posmirrorrow unitrate(Double unitrate) {
    this.unitrate = unitrate;
    return this;
  }

   /**
   * vztah [persistentní položka]
   * @return unitrate
  **/
  @ApiModelProperty(example = "null", value = "vztah [persistentní položka]")
  public Double getUnitrate() {
    return unitrate;
  }

  public void setUnitrate(Double unitrate) {
    this.unitrate = unitrate;
  }

  public Posmirrorrow requestedquantity(Double requestedquantity) {
    this.requestedquantity = requestedquantity;
    return this;
  }

   /**
   * počet (očekáváno) [persistentní položka]
   * @return requestedquantity
  **/
  @ApiModelProperty(example = "null", value = "počet (očekáváno) [persistentní položka]")
  public Double getRequestedquantity() {
    return requestedquantity;
  }

  public void setRequestedquantity(Double requestedquantity) {
    this.requestedquantity = requestedquantity;
  }

  public Posmirrorrow realquantity(Double realquantity) {
    this.realquantity = realquantity;
    return this;
  }

   /**
   * skuteč. počet (nalezeno) [persistentní položka]
   * @return realquantity
  **/
  @ApiModelProperty(example = "null", value = "skuteč. počet (nalezeno) [persistentní položka]")
  public Double getRealquantity() {
    return realquantity;
  }

  public void setRealquantity(Double realquantity) {
    this.realquantity = realquantity;
  }

  public Posmirrorrow realquantityoriginal(Double realquantityoriginal) {
    this.realquantityoriginal = realquantityoriginal;
    return this;
  }

   /**
   * původně nalezeno
   * @return realquantityoriginal
  **/
  @ApiModelProperty(example = "null", value = "původně nalezeno")
  public Double getRealquantityoriginal() {
    return realquantityoriginal;
  }

  public void setRealquantityoriginal(Double realquantityoriginal) {
    this.realquantityoriginal = realquantityoriginal;
  }

  public Posmirrorrow quantitydifferencevsoriginal(Double quantitydifferencevsoriginal) {
    this.quantitydifferencevsoriginal = quantitydifferencevsoriginal;
    return this;
  }

   /**
   * změna rozdílu
   * @return quantitydifferencevsoriginal
  **/
  @ApiModelProperty(example = "null", value = "změna rozdílu")
  public Double getQuantitydifferencevsoriginal() {
    return quantitydifferencevsoriginal;
  }

  public void setQuantitydifferencevsoriginal(Double quantitydifferencevsoriginal) {
    this.quantitydifferencevsoriginal = quantitydifferencevsoriginal;
  }

  public Posmirrorrow quantitydifferenceoriginal(Double quantitydifferenceoriginal) {
    this.quantitydifferenceoriginal = quantitydifferenceoriginal;
    return this;
  }

   /**
   * původní rozdíl
   * @return quantitydifferenceoriginal
  **/
  @ApiModelProperty(example = "null", value = "původní rozdíl")
  public Double getQuantitydifferenceoriginal() {
    return quantitydifferenceoriginal;
  }

  public void setQuantitydifferenceoriginal(Double quantitydifferenceoriginal) {
    this.quantitydifferenceoriginal = quantitydifferenceoriginal;
  }

  public Posmirrorrow shortfalltamountoriginal(Double shortfalltamountoriginal) {
    this.shortfalltamountoriginal = shortfalltamountoriginal;
    return this;
  }

   /**
   * původní cena manka
   * @return shortfalltamountoriginal
  **/
  @ApiModelProperty(example = "null", value = "původní cena manka")
  public Double getShortfalltamountoriginal() {
    return shortfalltamountoriginal;
  }

  public void setShortfalltamountoriginal(Double shortfalltamountoriginal) {
    this.shortfalltamountoriginal = shortfalltamountoriginal;
  }

  public Posmirrorrow shortfalltamountvsoriginal(Double shortfalltamountvsoriginal) {
    this.shortfalltamountvsoriginal = shortfalltamountvsoriginal;
    return this;
  }

   /**
   * změna ceny manka
   * @return shortfalltamountvsoriginal
  **/
  @ApiModelProperty(example = "null", value = "změna ceny manka")
  public Double getShortfalltamountvsoriginal() {
    return shortfalltamountvsoriginal;
  }

  public void setShortfalltamountvsoriginal(Double shortfalltamountvsoriginal) {
    this.shortfalltamountvsoriginal = shortfalltamountvsoriginal;
  }

  public Posmirrorrow quantitydifference(Double quantitydifference) {
    this.quantitydifference = quantitydifference;
    return this;
  }

   /**
   * rozdíl
   * @return quantitydifference
  **/
  @ApiModelProperty(example = "null", value = "rozdíl")
  public Double getQuantitydifference() {
    return quantitydifference;
  }

  public void setQuantitydifference(Double quantitydifference) {
    this.quantitydifference = quantitydifference;
  }

  public Posmirrorrow shortfallprice(Double shortfallprice) {
    this.shortfallprice = shortfallprice;
    return this;
  }

   /**
   * prodejní cena u manka [persistentní položka]
   * @return shortfallprice
  **/
  @ApiModelProperty(example = "null", value = "prodejní cena u manka [persistentní položka]")
  public Double getShortfallprice() {
    return shortfallprice;
  }

  public void setShortfallprice(Double shortfallprice) {
    this.shortfallprice = shortfallprice;
  }

  public Posmirrorrow shortfalltamount(Double shortfalltamount) {
    this.shortfalltamount = shortfalltamount;
    return this;
  }

   /**
   * cena manka [persistentní položka]
   * @return shortfalltamount
  **/
  @ApiModelProperty(example = "null", value = "cena manka [persistentní položka]")
  public Double getShortfalltamount() {
    return shortfalltamount;
  }

  public void setShortfalltamount(Double shortfalltamount) {
    this.shortfalltamount = shortfalltamount;
  }

  public Posmirrorrow text(String text) {
    this.text = text;
    return this;
  }

   /**
   * poznámka [persistentní položka]
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "poznámka [persistentní položka]")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Posmirrorrow shortfallexcluded(Boolean shortfallexcluded) {
    this.shortfallexcluded = shortfallexcluded;
    return this;
  }

   /**
   * vyjmuto z tržeb [persistentní položka]
   * @return shortfallexcluded
  **/
  @ApiModelProperty(example = "null", value = "vyjmuto z tržeb [persistentní položka]")
  public Boolean getShortfallexcluded() {
    return shortfallexcluded;
  }

  public void setShortfallexcluded(Boolean shortfallexcluded) {
    this.shortfallexcluded = shortfallexcluded;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Posmirrorrow posmirrorrow = (Posmirrorrow) o;
    return Objects.equals(this.displayname, posmirrorrow.displayname) &&
        Objects.equals(this.id, posmirrorrow.id) &&
        Objects.equals(this.classid, posmirrorrow.classid) &&
        Objects.equals(this.objversion, posmirrorrow.objversion) &&
        Objects.equals(this.parentId, posmirrorrow.parentId) &&
        Objects.equals(this.posindex, posmirrorrow.posindex) &&
        Objects.equals(this.storecardId, posmirrorrow.storecardId) &&
        Objects.equals(this.storeId, posmirrorrow.storeId) &&
        Objects.equals(this.qunit, posmirrorrow.qunit) &&
        Objects.equals(this.unitrate, posmirrorrow.unitrate) &&
        Objects.equals(this.requestedquantity, posmirrorrow.requestedquantity) &&
        Objects.equals(this.realquantity, posmirrorrow.realquantity) &&
        Objects.equals(this.realquantityoriginal, posmirrorrow.realquantityoriginal) &&
        Objects.equals(this.quantitydifferencevsoriginal, posmirrorrow.quantitydifferencevsoriginal) &&
        Objects.equals(this.quantitydifferenceoriginal, posmirrorrow.quantitydifferenceoriginal) &&
        Objects.equals(this.shortfalltamountoriginal, posmirrorrow.shortfalltamountoriginal) &&
        Objects.equals(this.shortfalltamountvsoriginal, posmirrorrow.shortfalltamountvsoriginal) &&
        Objects.equals(this.quantitydifference, posmirrorrow.quantitydifference) &&
        Objects.equals(this.shortfallprice, posmirrorrow.shortfallprice) &&
        Objects.equals(this.shortfalltamount, posmirrorrow.shortfalltamount) &&
        Objects.equals(this.text, posmirrorrow.text) &&
        Objects.equals(this.shortfallexcluded, posmirrorrow.shortfallexcluded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, storecardId, storeId, qunit, unitrate, requestedquantity, realquantity, realquantityoriginal, quantitydifferencevsoriginal, quantitydifferenceoriginal, shortfalltamountoriginal, shortfalltamountvsoriginal, quantitydifference, shortfallprice, shortfalltamount, text, shortfallexcluded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Posmirrorrow {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    storecardId: ").append(toIndentedString(storecardId)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    qunit: ").append(toIndentedString(qunit)).append("\n");
    sb.append("    unitrate: ").append(toIndentedString(unitrate)).append("\n");
    sb.append("    requestedquantity: ").append(toIndentedString(requestedquantity)).append("\n");
    sb.append("    realquantity: ").append(toIndentedString(realquantity)).append("\n");
    sb.append("    realquantityoriginal: ").append(toIndentedString(realquantityoriginal)).append("\n");
    sb.append("    quantitydifferencevsoriginal: ").append(toIndentedString(quantitydifferencevsoriginal)).append("\n");
    sb.append("    quantitydifferenceoriginal: ").append(toIndentedString(quantitydifferenceoriginal)).append("\n");
    sb.append("    shortfalltamountoriginal: ").append(toIndentedString(shortfalltamountoriginal)).append("\n");
    sb.append("    shortfalltamountvsoriginal: ").append(toIndentedString(shortfalltamountvsoriginal)).append("\n");
    sb.append("    quantitydifference: ").append(toIndentedString(quantitydifference)).append("\n");
    sb.append("    shortfallprice: ").append(toIndentedString(shortfallprice)).append("\n");
    sb.append("    shortfalltamount: ").append(toIndentedString(shortfalltamount)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    shortfallexcluded: ").append(toIndentedString(shortfallexcluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

