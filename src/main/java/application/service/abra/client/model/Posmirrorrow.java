/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Posmirrorrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Posmirrorrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("StoreCard_ID")
  private String storeCardID = null;

  @SerializedName("Store_ID")
  private String storeID = null;

  @SerializedName("QUnit")
  private String qUnit = null;

  @SerializedName("UnitRate")
  private Double unitRate = null;

  @SerializedName("RequestedQuantity")
  private Double requestedQuantity = null;

  @SerializedName("RealQuantity")
  private Double realQuantity = null;

  @SerializedName("RealQuantityOriginal")
  private Double realQuantityOriginal = null;

  @SerializedName("QuantityDifferenceVSOriginal")
  private Double quantityDifferenceVSOriginal = null;

  @SerializedName("QuantityDifferenceOriginal")
  private Double quantityDifferenceOriginal = null;

  @SerializedName("ShortFallTAmountOriginal")
  private Double shortFallTAmountOriginal = null;

  @SerializedName("ShortFallTAmountVSOriginal")
  private Double shortFallTAmountVSOriginal = null;

  @SerializedName("QuantityDifference")
  private Double quantityDifference = null;

  @SerializedName("ShortFallPrice")
  private Double shortFallPrice = null;

  @SerializedName("ShortFallTAmount")
  private Double shortFallTAmount = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("ShortFallExcluded")
  private Boolean shortFallExcluded = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Zrcadlo [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Zrcadlo [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Posmirrorrow posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Posmirrorrow storeCardID(String storeCardID) {
    this.storeCardID = storeCardID;
    return this;
  }

   /**
   * Skladová karta; ID objektu Skladová karta [persistentní položka]
   * @return storeCardID
  **/
  @ApiModelProperty(example = "null", value = "Skladová karta; ID objektu Skladová karta [persistentní položka]")
  public String getStoreCardID() {
    return storeCardID;
  }

  public void setStoreCardID(String storeCardID) {
    this.storeCardID = storeCardID;
  }

  public Posmirrorrow storeID(String storeID) {
    this.storeID = storeID;
    return this;
  }

   /**
   * Sklad; ID objektu Sklad [persistentní položka]
   * @return storeID
  **/
  @ApiModelProperty(example = "null", value = "Sklad; ID objektu Sklad [persistentní položka]")
  public String getStoreID() {
    return storeID;
  }

  public void setStoreID(String storeID) {
    this.storeID = storeID;
  }

  public Posmirrorrow qUnit(String qUnit) {
    this.qUnit = qUnit;
    return this;
  }

   /**
   * Jednotka [persistentní položka]
   * @return qUnit
  **/
  @ApiModelProperty(example = "null", value = "Jednotka [persistentní položka]")
  public String getQUnit() {
    return qUnit;
  }

  public void setQUnit(String qUnit) {
    this.qUnit = qUnit;
  }

  public Posmirrorrow unitRate(Double unitRate) {
    this.unitRate = unitRate;
    return this;
  }

   /**
   * Vztah [persistentní položka]
   * @return unitRate
  **/
  @ApiModelProperty(example = "null", value = "Vztah [persistentní položka]")
  public Double getUnitRate() {
    return unitRate;
  }

  public void setUnitRate(Double unitRate) {
    this.unitRate = unitRate;
  }

  public Posmirrorrow requestedQuantity(Double requestedQuantity) {
    this.requestedQuantity = requestedQuantity;
    return this;
  }

   /**
   * Počet (očekáváno) [persistentní položka]
   * @return requestedQuantity
  **/
  @ApiModelProperty(example = "null", value = "Počet (očekáváno) [persistentní položka]")
  public Double getRequestedQuantity() {
    return requestedQuantity;
  }

  public void setRequestedQuantity(Double requestedQuantity) {
    this.requestedQuantity = requestedQuantity;
  }

  public Posmirrorrow realQuantity(Double realQuantity) {
    this.realQuantity = realQuantity;
    return this;
  }

   /**
   * Skuteč. počet (nalezeno) [persistentní položka]
   * @return realQuantity
  **/
  @ApiModelProperty(example = "null", value = "Skuteč. počet (nalezeno) [persistentní položka]")
  public Double getRealQuantity() {
    return realQuantity;
  }

  public void setRealQuantity(Double realQuantity) {
    this.realQuantity = realQuantity;
  }

  public Posmirrorrow realQuantityOriginal(Double realQuantityOriginal) {
    this.realQuantityOriginal = realQuantityOriginal;
    return this;
  }

   /**
   * Původně nalezeno
   * @return realQuantityOriginal
  **/
  @ApiModelProperty(example = "null", value = "Původně nalezeno")
  public Double getRealQuantityOriginal() {
    return realQuantityOriginal;
  }

  public void setRealQuantityOriginal(Double realQuantityOriginal) {
    this.realQuantityOriginal = realQuantityOriginal;
  }

  public Posmirrorrow quantityDifferenceVSOriginal(Double quantityDifferenceVSOriginal) {
    this.quantityDifferenceVSOriginal = quantityDifferenceVSOriginal;
    return this;
  }

   /**
   * Změna rozdílu
   * @return quantityDifferenceVSOriginal
  **/
  @ApiModelProperty(example = "null", value = "Změna rozdílu")
  public Double getQuantityDifferenceVSOriginal() {
    return quantityDifferenceVSOriginal;
  }

  public void setQuantityDifferenceVSOriginal(Double quantityDifferenceVSOriginal) {
    this.quantityDifferenceVSOriginal = quantityDifferenceVSOriginal;
  }

  public Posmirrorrow quantityDifferenceOriginal(Double quantityDifferenceOriginal) {
    this.quantityDifferenceOriginal = quantityDifferenceOriginal;
    return this;
  }

   /**
   * Původní rozdíl
   * @return quantityDifferenceOriginal
  **/
  @ApiModelProperty(example = "null", value = "Původní rozdíl")
  public Double getQuantityDifferenceOriginal() {
    return quantityDifferenceOriginal;
  }

  public void setQuantityDifferenceOriginal(Double quantityDifferenceOriginal) {
    this.quantityDifferenceOriginal = quantityDifferenceOriginal;
  }

  public Posmirrorrow shortFallTAmountOriginal(Double shortFallTAmountOriginal) {
    this.shortFallTAmountOriginal = shortFallTAmountOriginal;
    return this;
  }

   /**
   * Původní cena manka
   * @return shortFallTAmountOriginal
  **/
  @ApiModelProperty(example = "null", value = "Původní cena manka")
  public Double getShortFallTAmountOriginal() {
    return shortFallTAmountOriginal;
  }

  public void setShortFallTAmountOriginal(Double shortFallTAmountOriginal) {
    this.shortFallTAmountOriginal = shortFallTAmountOriginal;
  }

  public Posmirrorrow shortFallTAmountVSOriginal(Double shortFallTAmountVSOriginal) {
    this.shortFallTAmountVSOriginal = shortFallTAmountVSOriginal;
    return this;
  }

   /**
   * Změna ceny manka
   * @return shortFallTAmountVSOriginal
  **/
  @ApiModelProperty(example = "null", value = "Změna ceny manka")
  public Double getShortFallTAmountVSOriginal() {
    return shortFallTAmountVSOriginal;
  }

  public void setShortFallTAmountVSOriginal(Double shortFallTAmountVSOriginal) {
    this.shortFallTAmountVSOriginal = shortFallTAmountVSOriginal;
  }

  public Posmirrorrow quantityDifference(Double quantityDifference) {
    this.quantityDifference = quantityDifference;
    return this;
  }

   /**
   * Rozdíl
   * @return quantityDifference
  **/
  @ApiModelProperty(example = "null", value = "Rozdíl")
  public Double getQuantityDifference() {
    return quantityDifference;
  }

  public void setQuantityDifference(Double quantityDifference) {
    this.quantityDifference = quantityDifference;
  }

  public Posmirrorrow shortFallPrice(Double shortFallPrice) {
    this.shortFallPrice = shortFallPrice;
    return this;
  }

   /**
   * Prodejní cena u manka [persistentní položka]
   * @return shortFallPrice
  **/
  @ApiModelProperty(example = "null", value = "Prodejní cena u manka [persistentní položka]")
  public Double getShortFallPrice() {
    return shortFallPrice;
  }

  public void setShortFallPrice(Double shortFallPrice) {
    this.shortFallPrice = shortFallPrice;
  }

  public Posmirrorrow shortFallTAmount(Double shortFallTAmount) {
    this.shortFallTAmount = shortFallTAmount;
    return this;
  }

   /**
   * Cena manka [persistentní položka]
   * @return shortFallTAmount
  **/
  @ApiModelProperty(example = "null", value = "Cena manka [persistentní položka]")
  public Double getShortFallTAmount() {
    return shortFallTAmount;
  }

  public void setShortFallTAmount(Double shortFallTAmount) {
    this.shortFallTAmount = shortFallTAmount;
  }

  public Posmirrorrow text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Posmirrorrow shortFallExcluded(Boolean shortFallExcluded) {
    this.shortFallExcluded = shortFallExcluded;
    return this;
  }

   /**
   * Vyjmuto z tržeb [persistentní položka]
   * @return shortFallExcluded
  **/
  @ApiModelProperty(example = "null", value = "Vyjmuto z tržeb [persistentní položka]")
  public Boolean getShortFallExcluded() {
    return shortFallExcluded;
  }

  public void setShortFallExcluded(Boolean shortFallExcluded) {
    this.shortFallExcluded = shortFallExcluded;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Posmirrorrow posmirrorrow = (Posmirrorrow) o;
    return Objects.equals(this.displayName, posmirrorrow.displayName) &&
        Objects.equals(this.ID, posmirrorrow.ID) &&
        Objects.equals(this.classID, posmirrorrow.classID) &&
        Objects.equals(this.objVersion, posmirrorrow.objVersion) &&
        Objects.equals(this.parentID, posmirrorrow.parentID) &&
        Objects.equals(this.posIndex, posmirrorrow.posIndex) &&
        Objects.equals(this.storeCardID, posmirrorrow.storeCardID) &&
        Objects.equals(this.storeID, posmirrorrow.storeID) &&
        Objects.equals(this.qUnit, posmirrorrow.qUnit) &&
        Objects.equals(this.unitRate, posmirrorrow.unitRate) &&
        Objects.equals(this.requestedQuantity, posmirrorrow.requestedQuantity) &&
        Objects.equals(this.realQuantity, posmirrorrow.realQuantity) &&
        Objects.equals(this.realQuantityOriginal, posmirrorrow.realQuantityOriginal) &&
        Objects.equals(this.quantityDifferenceVSOriginal, posmirrorrow.quantityDifferenceVSOriginal) &&
        Objects.equals(this.quantityDifferenceOriginal, posmirrorrow.quantityDifferenceOriginal) &&
        Objects.equals(this.shortFallTAmountOriginal, posmirrorrow.shortFallTAmountOriginal) &&
        Objects.equals(this.shortFallTAmountVSOriginal, posmirrorrow.shortFallTAmountVSOriginal) &&
        Objects.equals(this.quantityDifference, posmirrorrow.quantityDifference) &&
        Objects.equals(this.shortFallPrice, posmirrorrow.shortFallPrice) &&
        Objects.equals(this.shortFallTAmount, posmirrorrow.shortFallTAmount) &&
        Objects.equals(this.text, posmirrorrow.text) &&
        Objects.equals(this.shortFallExcluded, posmirrorrow.shortFallExcluded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, storeCardID, storeID, qUnit, unitRate, requestedQuantity, realQuantity, realQuantityOriginal, quantityDifferenceVSOriginal, quantityDifferenceOriginal, shortFallTAmountOriginal, shortFallTAmountVSOriginal, quantityDifference, shortFallPrice, shortFallTAmount, text, shortFallExcluded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Posmirrorrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    storeCardID: ").append(toIndentedString(storeCardID)).append("\n");
    sb.append("    storeID: ").append(toIndentedString(storeID)).append("\n");
    sb.append("    qUnit: ").append(toIndentedString(qUnit)).append("\n");
    sb.append("    unitRate: ").append(toIndentedString(unitRate)).append("\n");
    sb.append("    requestedQuantity: ").append(toIndentedString(requestedQuantity)).append("\n");
    sb.append("    realQuantity: ").append(toIndentedString(realQuantity)).append("\n");
    sb.append("    realQuantityOriginal: ").append(toIndentedString(realQuantityOriginal)).append("\n");
    sb.append("    quantityDifferenceVSOriginal: ").append(toIndentedString(quantityDifferenceVSOriginal)).append("\n");
    sb.append("    quantityDifferenceOriginal: ").append(toIndentedString(quantityDifferenceOriginal)).append("\n");
    sb.append("    shortFallTAmountOriginal: ").append(toIndentedString(shortFallTAmountOriginal)).append("\n");
    sb.append("    shortFallTAmountVSOriginal: ").append(toIndentedString(shortFallTAmountVSOriginal)).append("\n");
    sb.append("    quantityDifference: ").append(toIndentedString(quantityDifference)).append("\n");
    sb.append("    shortFallPrice: ").append(toIndentedString(shortFallPrice)).append("\n");
    sb.append("    shortFallTAmount: ").append(toIndentedString(shortFallTAmount)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    shortFallExcluded: ").append(toIndentedString(shortFallExcluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

