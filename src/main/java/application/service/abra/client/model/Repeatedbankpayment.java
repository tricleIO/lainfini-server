/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Repeatedbankpayment
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Repeatedbankpayment   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("RepetitionCount")
  private Integer repetitionCount = null;

  @SerializedName("RepetitionKind")
  private Integer repetitionKind = null;

  @SerializedName("RepeatToDate$DATE")
  private DateTime repeatToDateDATE = null;

  @SerializedName("LastGenDate$DATE")
  private DateTime lastGenDateDATE = null;

  @SerializedName("RepetitionPeriod")
  private Integer repetitionPeriod = null;

  @SerializedName("RepetitionDay")
  private Integer repetitionDay = null;

  @SerializedName("RepetitionMonth")
  private Integer repetitionMonth = null;

  @SerializedName("WeekendCorrection")
  private Integer weekendCorrection = null;

  @SerializedName("RepetitionDaysInWeek")
  private String repetitionDaysInWeek = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("Country_ID")
  private String countryID = null;

  @SerializedName("ForeignIssue")
  private Integer foreignIssue = null;

  @SerializedName("Urgent")
  private Integer urgent = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("TargetBankAccount")
  private String targetBankAccount = null;

  @SerializedName("TargetBankName")
  private String targetBankName = null;

  @SerializedName("VarSymbol")
  private String varSymbol = null;

  @SerializedName("ConstSymbol_ID")
  private String constSymbolID = null;

  @SerializedName("SpecSymbol")
  private String specSymbol = null;

  @SerializedName("SwiftCode")
  private String swiftCode = null;

  @SerializedName("BankAccount_ID")
  private String bankAccountID = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("IsActive")
  private Boolean isActive = null;

  @SerializedName("TargetBankStreet")
  private String targetBankStreet = null;

  @SerializedName("TargetBankCity")
  private String targetBankCity = null;

  @SerializedName("TargetBankPostCode")
  private String targetBankPostCode = null;

  @SerializedName("TargetBankCountry")
  private String targetBankCountry = null;

  @SerializedName("TargetBankCountry_ID")
  private String targetBankCountryID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Repeatedbankpayment repetitionCount(Integer repetitionCount) {
    this.repetitionCount = repetitionCount;
    return this;
  }

   /**
   * Opakování [persistentní položka]
   * @return repetitionCount
  **/
  @ApiModelProperty(example = "null", value = "Opakování [persistentní položka]")
  public Integer getRepetitionCount() {
    return repetitionCount;
  }

  public void setRepetitionCount(Integer repetitionCount) {
    this.repetitionCount = repetitionCount;
  }

  public Repeatedbankpayment repetitionKind(Integer repetitionKind) {
    this.repetitionKind = repetitionKind;
    return this;
  }

   /**
   * Způsob opakování [persistentní položka]
   * @return repetitionKind
  **/
  @ApiModelProperty(example = "null", value = "Způsob opakování [persistentní položka]")
  public Integer getRepetitionKind() {
    return repetitionKind;
  }

  public void setRepetitionKind(Integer repetitionKind) {
    this.repetitionKind = repetitionKind;
  }

  public Repeatedbankpayment repeatToDateDATE(DateTime repeatToDateDATE) {
    this.repeatToDateDATE = repeatToDateDATE;
    return this;
  }

   /**
   * Do data [persistentní položka]
   * @return repeatToDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Do data [persistentní položka]")
  public DateTime getRepeatToDateDATE() {
    return repeatToDateDATE;
  }

  public void setRepeatToDateDATE(DateTime repeatToDateDATE) {
    this.repeatToDateDATE = repeatToDateDATE;
  }

  public Repeatedbankpayment lastGenDateDATE(DateTime lastGenDateDATE) {
    this.lastGenDateDATE = lastGenDateDATE;
    return this;
  }

   /**
   * Generováno [persistentní položka]
   * @return lastGenDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Generováno [persistentní položka]")
  public DateTime getLastGenDateDATE() {
    return lastGenDateDATE;
  }

  public void setLastGenDateDATE(DateTime lastGenDateDATE) {
    this.lastGenDateDATE = lastGenDateDATE;
  }

  public Repeatedbankpayment repetitionPeriod(Integer repetitionPeriod) {
    this.repetitionPeriod = repetitionPeriod;
    return this;
  }

   /**
   * Jak často [persistentní položka]
   * @return repetitionPeriod
  **/
  @ApiModelProperty(example = "null", value = "Jak často [persistentní položka]")
  public Integer getRepetitionPeriod() {
    return repetitionPeriod;
  }

  public void setRepetitionPeriod(Integer repetitionPeriod) {
    this.repetitionPeriod = repetitionPeriod;
  }

  public Repeatedbankpayment repetitionDay(Integer repetitionDay) {
    this.repetitionDay = repetitionDay;
    return this;
  }

   /**
   * Den [persistentní položka]
   * @return repetitionDay
  **/
  @ApiModelProperty(example = "null", value = "Den [persistentní položka]")
  public Integer getRepetitionDay() {
    return repetitionDay;
  }

  public void setRepetitionDay(Integer repetitionDay) {
    this.repetitionDay = repetitionDay;
  }

  public Repeatedbankpayment repetitionMonth(Integer repetitionMonth) {
    this.repetitionMonth = repetitionMonth;
    return this;
  }

   /**
   * Měsíc [persistentní položka]
   * @return repetitionMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc [persistentní položka]")
  public Integer getRepetitionMonth() {
    return repetitionMonth;
  }

  public void setRepetitionMonth(Integer repetitionMonth) {
    this.repetitionMonth = repetitionMonth;
  }

  public Repeatedbankpayment weekendCorrection(Integer weekendCorrection) {
    this.weekendCorrection = weekendCorrection;
    return this;
  }

   /**
   * Korekce [persistentní položka]
   * @return weekendCorrection
  **/
  @ApiModelProperty(example = "null", value = "Korekce [persistentní položka]")
  public Integer getWeekendCorrection() {
    return weekendCorrection;
  }

  public void setWeekendCorrection(Integer weekendCorrection) {
    this.weekendCorrection = weekendCorrection;
  }

  public Repeatedbankpayment repetitionDaysInWeek(String repetitionDaysInWeek) {
    this.repetitionDaysInWeek = repetitionDaysInWeek;
    return this;
  }

   /**
   * Dny v týdnu [persistentní položka]
   * @return repetitionDaysInWeek
  **/
  @ApiModelProperty(example = "null", value = "Dny v týdnu [persistentní položka]")
  public String getRepetitionDaysInWeek() {
    return repetitionDaysInWeek;
  }

  public void setRepetitionDaysInWeek(String repetitionDaysInWeek) {
    this.repetitionDaysInWeek = repetitionDaysInWeek;
  }

  public Repeatedbankpayment description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Repeatedbankpayment amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Repeatedbankpayment currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Repeatedbankpayment countryID(String countryID) {
    this.countryID = countryID;
    return this;
  }

   /**
   * Země; ID objektu Země [persistentní položka]
   * @return countryID
  **/
  @ApiModelProperty(example = "null", value = "Země; ID objektu Země [persistentní položka]")
  public String getCountryID() {
    return countryID;
  }

  public void setCountryID(String countryID) {
    this.countryID = countryID;
  }

  public Repeatedbankpayment foreignIssue(Integer foreignIssue) {
    this.foreignIssue = foreignIssue;
    return this;
  }

   /**
   * Způsob úhrady dod.popl [persistentní položka]
   * @return foreignIssue
  **/
  @ApiModelProperty(example = "null", value = "Způsob úhrady dod.popl [persistentní položka]")
  public Integer getForeignIssue() {
    return foreignIssue;
  }

  public void setForeignIssue(Integer foreignIssue) {
    this.foreignIssue = foreignIssue;
  }

  public Repeatedbankpayment urgent(Integer urgent) {
    this.urgent = urgent;
    return this;
  }

   /**
   * Urgence [persistentní položka]
   * @return urgent
  **/
  @ApiModelProperty(example = "null", value = "Urgence [persistentní položka]")
  public Integer getUrgent() {
    return urgent;
  }

  public void setUrgent(Integer urgent) {
    this.urgent = urgent;
  }

  public Repeatedbankpayment firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Repeatedbankpayment targetBankAccount(String targetBankAccount) {
    this.targetBankAccount = targetBankAccount;
    return this;
  }

   /**
   * Bankovní účet [persistentní položka]
   * @return targetBankAccount
  **/
  @ApiModelProperty(example = "null", value = "Bankovní účet [persistentní položka]")
  public String getTargetBankAccount() {
    return targetBankAccount;
  }

  public void setTargetBankAccount(String targetBankAccount) {
    this.targetBankAccount = targetBankAccount;
  }

  public Repeatedbankpayment targetBankName(String targetBankName) {
    this.targetBankName = targetBankName;
    return this;
  }

   /**
   * Název banky [persistentní položka]
   * @return targetBankName
  **/
  @ApiModelProperty(example = "null", value = "Název banky [persistentní položka]")
  public String getTargetBankName() {
    return targetBankName;
  }

  public void setTargetBankName(String targetBankName) {
    this.targetBankName = targetBankName;
  }

  public Repeatedbankpayment varSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
    return this;
  }

   /**
   * Var. symbol [persistentní položka]
   * @return varSymbol
  **/
  @ApiModelProperty(example = "null", value = "Var. symbol [persistentní položka]")
  public String getVarSymbol() {
    return varSymbol;
  }

  public void setVarSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
  }

  public Repeatedbankpayment constSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
    return this;
  }

   /**
   * Konst. symbol; ID objektu Konstantní symbol [persistentní položka]
   * @return constSymbolID
  **/
  @ApiModelProperty(example = "null", value = "Konst. symbol; ID objektu Konstantní symbol [persistentní položka]")
  public String getConstSymbolID() {
    return constSymbolID;
  }

  public void setConstSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
  }

  public Repeatedbankpayment specSymbol(String specSymbol) {
    this.specSymbol = specSymbol;
    return this;
  }

   /**
   * Spec. symbol [persistentní položka]
   * @return specSymbol
  **/
  @ApiModelProperty(example = "null", value = "Spec. symbol [persistentní položka]")
  public String getSpecSymbol() {
    return specSymbol;
  }

  public void setSpecSymbol(String specSymbol) {
    this.specSymbol = specSymbol;
  }

  public Repeatedbankpayment swiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
    return this;
  }

   /**
   * SWIFT [persistentní položka]
   * @return swiftCode
  **/
  @ApiModelProperty(example = "null", value = "SWIFT [persistentní položka]")
  public String getSwiftCode() {
    return swiftCode;
  }

  public void setSwiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
  }

  public Repeatedbankpayment bankAccountID(String bankAccountID) {
    this.bankAccountID = bankAccountID;
    return this;
  }

   /**
   * Vlastní účet; ID objektu Bankovní účet [persistentní položka]
   * @return bankAccountID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní účet; ID objektu Bankovní účet [persistentní položka]")
  public String getBankAccountID() {
    return bankAccountID;
  }

  public void setBankAccountID(String bankAccountID) {
    this.bankAccountID = bankAccountID;
  }

  public Repeatedbankpayment createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Repeatedbankpayment correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

   /**
   * Aktivní
   * @return isActive
  **/
  @ApiModelProperty(example = "null", value = "Aktivní")
  public Boolean getIsActive() {
    return isActive;
  }

  public Repeatedbankpayment targetBankStreet(String targetBankStreet) {
    this.targetBankStreet = targetBankStreet;
    return this;
  }

   /**
   * Ulice adresy cílové banky [persistentní položka]
   * @return targetBankStreet
  **/
  @ApiModelProperty(example = "null", value = "Ulice adresy cílové banky [persistentní položka]")
  public String getTargetBankStreet() {
    return targetBankStreet;
  }

  public void setTargetBankStreet(String targetBankStreet) {
    this.targetBankStreet = targetBankStreet;
  }

  public Repeatedbankpayment targetBankCity(String targetBankCity) {
    this.targetBankCity = targetBankCity;
    return this;
  }

   /**
   * Město adresy cílové banky [persistentní položka]
   * @return targetBankCity
  **/
  @ApiModelProperty(example = "null", value = "Město adresy cílové banky [persistentní položka]")
  public String getTargetBankCity() {
    return targetBankCity;
  }

  public void setTargetBankCity(String targetBankCity) {
    this.targetBankCity = targetBankCity;
  }

  public Repeatedbankpayment targetBankPostCode(String targetBankPostCode) {
    this.targetBankPostCode = targetBankPostCode;
    return this;
  }

   /**
   * PSČ/ZIP adresy cílové banky [persistentní položka]
   * @return targetBankPostCode
  **/
  @ApiModelProperty(example = "null", value = "PSČ/ZIP adresy cílové banky [persistentní položka]")
  public String getTargetBankPostCode() {
    return targetBankPostCode;
  }

  public void setTargetBankPostCode(String targetBankPostCode) {
    this.targetBankPostCode = targetBankPostCode;
  }

  public Repeatedbankpayment targetBankCountry(String targetBankCountry) {
    this.targetBankCountry = targetBankCountry;
    return this;
  }

   /**
   * Země adresy cílové banky [persistentní položka]
   * @return targetBankCountry
  **/
  @ApiModelProperty(example = "null", value = "Země adresy cílové banky [persistentní položka]")
  public String getTargetBankCountry() {
    return targetBankCountry;
  }

  public void setTargetBankCountry(String targetBankCountry) {
    this.targetBankCountry = targetBankCountry;
  }

  public Repeatedbankpayment targetBankCountryID(String targetBankCountryID) {
    this.targetBankCountryID = targetBankCountryID;
    return this;
  }

   /**
   * Země cílové banky; ID objektu Země [persistentní položka]
   * @return targetBankCountryID
  **/
  @ApiModelProperty(example = "null", value = "Země cílové banky; ID objektu Země [persistentní položka]")
  public String getTargetBankCountryID() {
    return targetBankCountryID;
  }

  public void setTargetBankCountryID(String targetBankCountryID) {
    this.targetBankCountryID = targetBankCountryID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Repeatedbankpayment repeatedbankpayment = (Repeatedbankpayment) o;
    return Objects.equals(this.displayName, repeatedbankpayment.displayName) &&
        Objects.equals(this.ID, repeatedbankpayment.ID) &&
        Objects.equals(this.classID, repeatedbankpayment.classID) &&
        Objects.equals(this.objVersion, repeatedbankpayment.objVersion) &&
        Objects.equals(this.repetitionCount, repeatedbankpayment.repetitionCount) &&
        Objects.equals(this.repetitionKind, repeatedbankpayment.repetitionKind) &&
        Objects.equals(this.repeatToDateDATE, repeatedbankpayment.repeatToDateDATE) &&
        Objects.equals(this.lastGenDateDATE, repeatedbankpayment.lastGenDateDATE) &&
        Objects.equals(this.repetitionPeriod, repeatedbankpayment.repetitionPeriod) &&
        Objects.equals(this.repetitionDay, repeatedbankpayment.repetitionDay) &&
        Objects.equals(this.repetitionMonth, repeatedbankpayment.repetitionMonth) &&
        Objects.equals(this.weekendCorrection, repeatedbankpayment.weekendCorrection) &&
        Objects.equals(this.repetitionDaysInWeek, repeatedbankpayment.repetitionDaysInWeek) &&
        Objects.equals(this.description, repeatedbankpayment.description) &&
        Objects.equals(this.amount, repeatedbankpayment.amount) &&
        Objects.equals(this.currencyID, repeatedbankpayment.currencyID) &&
        Objects.equals(this.countryID, repeatedbankpayment.countryID) &&
        Objects.equals(this.foreignIssue, repeatedbankpayment.foreignIssue) &&
        Objects.equals(this.urgent, repeatedbankpayment.urgent) &&
        Objects.equals(this.firmID, repeatedbankpayment.firmID) &&
        Objects.equals(this.targetBankAccount, repeatedbankpayment.targetBankAccount) &&
        Objects.equals(this.targetBankName, repeatedbankpayment.targetBankName) &&
        Objects.equals(this.varSymbol, repeatedbankpayment.varSymbol) &&
        Objects.equals(this.constSymbolID, repeatedbankpayment.constSymbolID) &&
        Objects.equals(this.specSymbol, repeatedbankpayment.specSymbol) &&
        Objects.equals(this.swiftCode, repeatedbankpayment.swiftCode) &&
        Objects.equals(this.bankAccountID, repeatedbankpayment.bankAccountID) &&
        Objects.equals(this.createdByID, repeatedbankpayment.createdByID) &&
        Objects.equals(this.correctedByID, repeatedbankpayment.correctedByID) &&
        Objects.equals(this.isActive, repeatedbankpayment.isActive) &&
        Objects.equals(this.targetBankStreet, repeatedbankpayment.targetBankStreet) &&
        Objects.equals(this.targetBankCity, repeatedbankpayment.targetBankCity) &&
        Objects.equals(this.targetBankPostCode, repeatedbankpayment.targetBankPostCode) &&
        Objects.equals(this.targetBankCountry, repeatedbankpayment.targetBankCountry) &&
        Objects.equals(this.targetBankCountryID, repeatedbankpayment.targetBankCountryID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, repetitionCount, repetitionKind, repeatToDateDATE, lastGenDateDATE, repetitionPeriod, repetitionDay, repetitionMonth, weekendCorrection, repetitionDaysInWeek, description, amount, currencyID, countryID, foreignIssue, urgent, firmID, targetBankAccount, targetBankName, varSymbol, constSymbolID, specSymbol, swiftCode, bankAccountID, createdByID, correctedByID, isActive, targetBankStreet, targetBankCity, targetBankPostCode, targetBankCountry, targetBankCountryID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Repeatedbankpayment {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    repetitionCount: ").append(toIndentedString(repetitionCount)).append("\n");
    sb.append("    repetitionKind: ").append(toIndentedString(repetitionKind)).append("\n");
    sb.append("    repeatToDateDATE: ").append(toIndentedString(repeatToDateDATE)).append("\n");
    sb.append("    lastGenDateDATE: ").append(toIndentedString(lastGenDateDATE)).append("\n");
    sb.append("    repetitionPeriod: ").append(toIndentedString(repetitionPeriod)).append("\n");
    sb.append("    repetitionDay: ").append(toIndentedString(repetitionDay)).append("\n");
    sb.append("    repetitionMonth: ").append(toIndentedString(repetitionMonth)).append("\n");
    sb.append("    weekendCorrection: ").append(toIndentedString(weekendCorrection)).append("\n");
    sb.append("    repetitionDaysInWeek: ").append(toIndentedString(repetitionDaysInWeek)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    countryID: ").append(toIndentedString(countryID)).append("\n");
    sb.append("    foreignIssue: ").append(toIndentedString(foreignIssue)).append("\n");
    sb.append("    urgent: ").append(toIndentedString(urgent)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    targetBankAccount: ").append(toIndentedString(targetBankAccount)).append("\n");
    sb.append("    targetBankName: ").append(toIndentedString(targetBankName)).append("\n");
    sb.append("    varSymbol: ").append(toIndentedString(varSymbol)).append("\n");
    sb.append("    constSymbolID: ").append(toIndentedString(constSymbolID)).append("\n");
    sb.append("    specSymbol: ").append(toIndentedString(specSymbol)).append("\n");
    sb.append("    swiftCode: ").append(toIndentedString(swiftCode)).append("\n");
    sb.append("    bankAccountID: ").append(toIndentedString(bankAccountID)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    targetBankStreet: ").append(toIndentedString(targetBankStreet)).append("\n");
    sb.append("    targetBankCity: ").append(toIndentedString(targetBankCity)).append("\n");
    sb.append("    targetBankPostCode: ").append(toIndentedString(targetBankPostCode)).append("\n");
    sb.append("    targetBankCountry: ").append(toIndentedString(targetBankCountry)).append("\n");
    sb.append("    targetBankCountryID: ").append(toIndentedString(targetBankCountryID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

