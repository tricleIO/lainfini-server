/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Customsdeclaration
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Customsdeclaration   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Customsdeclarationrow> rows = new ArrayList<Customsdeclarationrow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("AccPresetDef_ID")
  private String accPresetDefID = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("FirmOffice_ID")
  private String firmOfficeID = null;

  @SerializedName("Person_ID")
  private String personID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("AccDate$DATE")
  private DateTime accDateDATE = null;

  @SerializedName("AccDocQueue_ID")
  private String accDocQueueID = null;

  @SerializedName("AccountingType")
  private Integer accountingType = null;

  @SerializedName("IsAccounted")
  private Boolean isAccounted = null;

  @SerializedName("Dirty")
  private Boolean dirty = null;

  @SerializedName("Country_ID")
  private String countryID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("CurrRate")
  private Double currRate = null;

  @SerializedName("RefCurrRate")
  private Double refCurrRate = null;

  @SerializedName("Coef")
  private Integer coef = null;

  @SerializedName("LocalCoef")
  private Integer localCoef = null;

  @SerializedName("Zone_ID")
  private String zoneID = null;

  @SerializedName("LocalZone_ID")
  private String localZoneID = null;

  @SerializedName("RefCurrency_ID")
  private String refCurrencyID = null;

  @SerializedName("LocalRefCurrency_ID")
  private String localRefCurrencyID = null;

  @SerializedName("CurrRateInfo")
  private String currRateInfo = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("LocalAmount")
  private Double localAmount = null;

  @SerializedName("VATDocument")
  private Boolean vATDocument = null;

  @SerializedName("FirmBankAccount_ID")
  private String firmBankAccountID = null;

  @SerializedName("DueDate$DATE")
  private DateTime dueDateDATE = null;

  @SerializedName("VATDate$DATE")
  private DateTime vATDateDATE = null;

  @SerializedName("ConstSymbol_ID")
  private String constSymbolID = null;

  @SerializedName("PaidAmount")
  private Double paidAmount = null;

  @SerializedName("LocalPaidAmount")
  private Double localPaidAmount = null;

  @SerializedName("ExternalNumber")
  private String externalNumber = null;

  @SerializedName("VarSymbol")
  private String varSymbol = null;

  @SerializedName("Invoice_ID")
  private String invoiceID = null;

  @SerializedName("CustomsAmount")
  private Double customsAmount = null;

  @SerializedName("ImportTax")
  private Double importTax = null;

  @SerializedName("SpendingTax")
  private Double spendingTax = null;

  @SerializedName("VATAmount")
  private Double vATAmount = null;

  @SerializedName("VATBaseAmount")
  private Double vATBaseAmount = null;

  @SerializedName("NotPaidAmount")
  private Double notPaidAmount = null;

  @SerializedName("LocalNotPaidAmount")
  private Double localNotPaidAmount = null;

  @SerializedName("ClosingPeriod_ID")
  private String closingPeriodID = null;

  @SerializedName("LastPaymentPeriod_ID")
  private String lastPaymentPeriodID = null;

  @SerializedName("IsProfit")
  private Boolean isProfit = null;

  @SerializedName("GatherAmountWithVAT")
  private Boolean gatherAmountWithVAT = null;

  @SerializedName("IsReverseChargeDeclared")
  private Boolean isReverseChargeDeclared = null;

  @SerializedName("VATBaseCorrection")
  private Double vATBaseCorrection = null;

  @SerializedName("IsAccountedLaterVAT")
  private Boolean isAccountedLaterVAT = null;

  @SerializedName("VATAdmitDate$DATE")
  private DateTime vATAdmitDateDATE = null;

  @SerializedName("VATReportPreference")
  private String vATReportPreference = null;

  @SerializedName("VATReportReference")
  private String vATReportReference = null;

  @SerializedName("CreatedAt$DATE")
  private DateTime createdAtDATE = null;

  @SerializedName("CorrectedAt$DATE")
  private DateTime correctedAtDATE = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Customsdeclaration rows(List<Customsdeclarationrow> rows) {
    this.rows = rows;
    return this;
  }

  public Customsdeclaration addRowsItem(Customsdeclarationrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Celní prohlášení - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Celní prohlášení - řádek [nepersistentní položka]")
  public List<Customsdeclarationrow> getRows() {
    return rows;
  }

  public void setRows(List<Customsdeclarationrow> rows) {
    this.rows = rows;
  }

  public Customsdeclaration docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Customsdeclaration periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Customsdeclaration ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Customsdeclaration docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Customsdeclaration createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Customsdeclaration correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Customsdeclaration newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Customsdeclaration newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Customsdeclaration accPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
    return this;
  }

   /**
   * Předkontace; ID objektu Účetní předkontace [persistentní položka]
   * @return accPresetDefID
  **/
  @ApiModelProperty(example = "null", value = "Předkontace; ID objektu Účetní předkontace [persistentní položka]")
  public String getAccPresetDefID() {
    return accPresetDefID;
  }

  public void setAccPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
  }

  public Customsdeclaration firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Customsdeclaration firmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
    return this;
  }

   /**
   * Provozovna; ID objektu Provozovna [persistentní položka]
   * @return firmOfficeID
  **/
  @ApiModelProperty(example = "null", value = "Provozovna; ID objektu Provozovna [persistentní položka]")
  public String getFirmOfficeID() {
    return firmOfficeID;
  }

  public void setFirmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
  }

  public Customsdeclaration personID(String personID) {
    this.personID = personID;
    return this;
  }

   /**
   * Osoba; ID objektu Osoba [persistentní položka]
   * @return personID
  **/
  @ApiModelProperty(example = "null", value = "Osoba; ID objektu Osoba [persistentní položka]")
  public String getPersonID() {
    return personID;
  }

  public void setPersonID(String personID) {
    this.personID = personID;
  }

  public Customsdeclaration description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Customsdeclaration accDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
    return this;
  }

   /**
   * Datum účt. [persistentní položka]
   * @return accDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum účt. [persistentní položka]")
  public DateTime getAccDateDATE() {
    return accDateDATE;
  }

  public void setAccDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
  }

  public Customsdeclaration accDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
    return this;
  }

   /**
   * Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]
   * @return accDocQueueID
  **/
  @ApiModelProperty(example = "null", value = "Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]")
  public String getAccDocQueueID() {
    return accDocQueueID;
  }

  public void setAccDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
  }

  public Customsdeclaration accountingType(Integer accountingType) {
    this.accountingType = accountingType;
    return this;
  }

   /**
   * Jak účtovat
   * @return accountingType
  **/
  @ApiModelProperty(example = "null", value = "Jak účtovat")
  public Integer getAccountingType() {
    return accountingType;
  }

  public void setAccountingType(Integer accountingType) {
    this.accountingType = accountingType;
  }

  public Customsdeclaration isAccounted(Boolean isAccounted) {
    this.isAccounted = isAccounted;
    return this;
  }

   /**
   * Účtováno
   * @return isAccounted
  **/
  @ApiModelProperty(example = "null", value = "Účtováno")
  public Boolean getIsAccounted() {
    return isAccounted;
  }

  public void setIsAccounted(Boolean isAccounted) {
    this.isAccounted = isAccounted;
  }

  public Customsdeclaration dirty(Boolean dirty) {
    this.dirty = dirty;
    return this;
  }

   /**
   * Zakázané přepočítání [persistentní položka]
   * @return dirty
  **/
  @ApiModelProperty(example = "null", value = "Zakázané přepočítání [persistentní položka]")
  public Boolean getDirty() {
    return dirty;
  }

  public void setDirty(Boolean dirty) {
    this.dirty = dirty;
  }

  public Customsdeclaration countryID(String countryID) {
    this.countryID = countryID;
    return this;
  }

   /**
   * Země; ID objektu Země [persistentní položka]
   * @return countryID
  **/
  @ApiModelProperty(example = "null", value = "Země; ID objektu Země [persistentní položka]")
  public String getCountryID() {
    return countryID;
  }

  public void setCountryID(String countryID) {
    this.countryID = countryID;
  }

  public Customsdeclaration currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Customsdeclaration currRate(Double currRate) {
    this.currRate = currRate;
    return this;
  }

   /**
   * Kurz měny [persistentní položka]
   * @return currRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz měny [persistentní položka]")
  public Double getCurrRate() {
    return currRate;
  }

  public void setCurrRate(Double currRate) {
    this.currRate = currRate;
  }

  public Customsdeclaration refCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
    return this;
  }

   /**
   * Kurz vztažný [persistentní položka]
   * @return refCurrRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz vztažný [persistentní položka]")
  public Double getRefCurrRate() {
    return refCurrRate;
  }

  public void setRefCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
  }

  public Customsdeclaration coef(Integer coef) {
    this.coef = coef;
    return this;
  }

   /**
   * Koeficient [persistentní položka]
   * @return coef
  **/
  @ApiModelProperty(example = "null", value = "Koeficient [persistentní položka]")
  public Integer getCoef() {
    return coef;
  }

  public void setCoef(Integer coef) {
    this.coef = coef;
  }

  public Customsdeclaration localCoef(Integer localCoef) {
    this.localCoef = localCoef;
    return this;
  }

   /**
   * Lokální koeficient [persistentní položka]
   * @return localCoef
  **/
  @ApiModelProperty(example = "null", value = "Lokální koeficient [persistentní položka]")
  public Integer getLocalCoef() {
    return localCoef;
  }

  public void setLocalCoef(Integer localCoef) {
    this.localCoef = localCoef;
  }

  public Customsdeclaration zoneID(String zoneID) {
    this.zoneID = zoneID;
    return this;
  }

   /**
   * Zóna; ID objektu Měna [persistentní položka]
   * @return zoneID
  **/
  @ApiModelProperty(example = "null", value = "Zóna; ID objektu Měna [persistentní položka]")
  public String getZoneID() {
    return zoneID;
  }

  public void setZoneID(String zoneID) {
    this.zoneID = zoneID;
  }

  public Customsdeclaration localZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
    return this;
  }

   /**
   * Lokální zóna; ID objektu Měna [persistentní položka]
   * @return localZoneID
  **/
  @ApiModelProperty(example = "null", value = "Lokální zóna; ID objektu Měna [persistentní položka]")
  public String getLocalZoneID() {
    return localZoneID;
  }

  public void setLocalZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
  }

   /**
   * Ref.měna; ID objektu Měna
   * @return refCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Ref.měna; ID objektu Měna")
  public String getRefCurrencyID() {
    return refCurrencyID;
  }

   /**
   * Lok.ref.měna; ID objektu Měna
   * @return localRefCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Lok.ref.měna; ID objektu Měna")
  public String getLocalRefCurrencyID() {
    return localRefCurrencyID;
  }

   /**
   * Kurz měny textově
   * @return currRateInfo
  **/
  @ApiModelProperty(example = "null", value = "Kurz měny textově")
  public String getCurrRateInfo() {
    return currRateInfo;
  }

  public Customsdeclaration amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Celkem [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Celkem [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Customsdeclaration localAmount(Double localAmount) {
    this.localAmount = localAmount;
    return this;
  }

   /**
   * Celkem lokálně [persistentní položka]
   * @return localAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně [persistentní položka]")
  public Double getLocalAmount() {
    return localAmount;
  }

  public void setLocalAmount(Double localAmount) {
    this.localAmount = localAmount;
  }

  public Customsdeclaration vATDocument(Boolean vATDocument) {
    this.vATDocument = vATDocument;
    return this;
  }

   /**
   * DPH doklad [persistentní položka]
   * @return vATDocument
  **/
  @ApiModelProperty(example = "null", value = "DPH doklad [persistentní položka]")
  public Boolean getVATDocument() {
    return vATDocument;
  }

  public void setVATDocument(Boolean vATDocument) {
    this.vATDocument = vATDocument;
  }

  public Customsdeclaration firmBankAccountID(String firmBankAccountID) {
    this.firmBankAccountID = firmBankAccountID;
    return this;
  }

   /**
   * Banka; ID objektu Bankovní účet firmy [persistentní položka]
   * @return firmBankAccountID
  **/
  @ApiModelProperty(example = "null", value = "Banka; ID objektu Bankovní účet firmy [persistentní položka]")
  public String getFirmBankAccountID() {
    return firmBankAccountID;
  }

  public void setFirmBankAccountID(String firmBankAccountID) {
    this.firmBankAccountID = firmBankAccountID;
  }

  public Customsdeclaration dueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
    return this;
  }

   /**
   * Datum spl. [persistentní položka]
   * @return dueDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum spl. [persistentní položka]")
  public DateTime getDueDateDATE() {
    return dueDateDATE;
  }

  public void setDueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
  }

  public Customsdeclaration vATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
    return this;
  }

   /**
   * Datum upl. odp. [persistentní položka]
   * @return vATDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum upl. odp. [persistentní položka]")
  public DateTime getVATDateDATE() {
    return vATDateDATE;
  }

  public void setVATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
  }

  public Customsdeclaration constSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
    return this;
  }

   /**
   * Konst. symbol; ID objektu Konstantní symbol [persistentní položka]
   * @return constSymbolID
  **/
  @ApiModelProperty(example = "null", value = "Konst. symbol; ID objektu Konstantní symbol [persistentní položka]")
  public String getConstSymbolID() {
    return constSymbolID;
  }

  public void setConstSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
  }

   /**
   * Celkem zapl. [persistentní položka]
   * @return paidAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem zapl. [persistentní položka]")
  public Double getPaidAmount() {
    return paidAmount;
  }

   /**
   * Zaplaceno lokálně [persistentní položka]
   * @return localPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Zaplaceno lokálně [persistentní položka]")
  public Double getLocalPaidAmount() {
    return localPaidAmount;
  }

  public Customsdeclaration externalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
    return this;
  }

   /**
   * Externí číslo [persistentní položka]
   * @return externalNumber
  **/
  @ApiModelProperty(example = "null", value = "Externí číslo [persistentní položka]")
  public String getExternalNumber() {
    return externalNumber;
  }

  public void setExternalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
  }

  public Customsdeclaration varSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
    return this;
  }

   /**
   * Var. symbol [persistentní položka]
   * @return varSymbol
  **/
  @ApiModelProperty(example = "null", value = "Var. symbol [persistentní položka]")
  public String getVarSymbol() {
    return varSymbol;
  }

  public void setVarSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
  }

  public Customsdeclaration invoiceID(String invoiceID) {
    this.invoiceID = invoiceID;
    return this;
  }

   /**
   * Faktura; ID objektu Faktura přijatá [persistentní položka]
   * @return invoiceID
  **/
  @ApiModelProperty(example = "null", value = "Faktura; ID objektu Faktura přijatá [persistentní položka]")
  public String getInvoiceID() {
    return invoiceID;
  }

  public void setInvoiceID(String invoiceID) {
    this.invoiceID = invoiceID;
  }

   /**
   * Clo
   * @return customsAmount
  **/
  @ApiModelProperty(example = "null", value = "Clo")
  public Double getCustomsAmount() {
    return customsAmount;
  }

   /**
   * Dovozní přirážka
   * @return importTax
  **/
  @ApiModelProperty(example = "null", value = "Dovozní přirážka")
  public Double getImportTax() {
    return importTax;
  }

   /**
   * Spotřební daň
   * @return spendingTax
  **/
  @ApiModelProperty(example = "null", value = "Spotřební daň")
  public Double getSpendingTax() {
    return spendingTax;
  }

   /**
   * DPH
   * @return vATAmount
  **/
  @ApiModelProperty(example = "null", value = "DPH")
  public Double getVATAmount() {
    return vATAmount;
  }

   /**
   * Základ cla
   * @return vATBaseAmount
  **/
  @ApiModelProperty(example = "null", value = "Základ cla")
  public Double getVATBaseAmount() {
    return vATBaseAmount;
  }

  public Customsdeclaration notPaidAmount(Double notPaidAmount) {
    this.notPaidAmount = notPaidAmount;
    return this;
  }

   /**
   * Nezaplaceno
   * @return notPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplaceno")
  public Double getNotPaidAmount() {
    return notPaidAmount;
  }

  public void setNotPaidAmount(Double notPaidAmount) {
    this.notPaidAmount = notPaidAmount;
  }

  public Customsdeclaration localNotPaidAmount(Double localNotPaidAmount) {
    this.localNotPaidAmount = localNotPaidAmount;
    return this;
  }

   /**
   * Nezaplaceno lokálně
   * @return localNotPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplaceno lokálně")
  public Double getLocalNotPaidAmount() {
    return localNotPaidAmount;
  }

  public void setLocalNotPaidAmount(Double localNotPaidAmount) {
    this.localNotPaidAmount = localNotPaidAmount;
  }

   /**
   * Období uzávěrky; ID objektu Období [persistentní položka]
   * @return closingPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období uzávěrky; ID objektu Období [persistentní položka]")
  public String getClosingPeriodID() {
    return closingPeriodID;
  }

   /**
   * Období posl. platby; ID objektu Období [persistentní položka]
   * @return lastPaymentPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období posl. platby; ID objektu Období [persistentní položka]")
  public String getLastPaymentPeriodID() {
    return lastPaymentPeriodID;
  }

  public Customsdeclaration isProfit(Boolean isProfit) {
    this.isProfit = isProfit;
    return this;
  }

   /**
   * Výnos
   * @return isProfit
  **/
  @ApiModelProperty(example = "null", value = "Výnos")
  public Boolean getIsProfit() {
    return isProfit;
  }

  public void setIsProfit(Boolean isProfit) {
    this.isProfit = isProfit;
  }

  public Customsdeclaration gatherAmountWithVAT(Boolean gatherAmountWithVAT) {
    this.gatherAmountWithVAT = gatherAmountWithVAT;
    return this;
  }

   /**
   * Čerpání s DPH [persistentní položka]
   * @return gatherAmountWithVAT
  **/
  @ApiModelProperty(example = "null", value = "Čerpání s DPH [persistentní položka]")
  public Boolean getGatherAmountWithVAT() {
    return gatherAmountWithVAT;
  }

  public void setGatherAmountWithVAT(Boolean gatherAmountWithVAT) {
    this.gatherAmountWithVAT = gatherAmountWithVAT;
  }

  public Customsdeclaration isReverseChargeDeclared(Boolean isReverseChargeDeclared) {
    this.isReverseChargeDeclared = isReverseChargeDeclared;
    return this;
  }

   /**
   * Generovat DRC [persistentní položka]
   * @return isReverseChargeDeclared
  **/
  @ApiModelProperty(example = "null", value = "Generovat DRC [persistentní položka]")
  public Boolean getIsReverseChargeDeclared() {
    return isReverseChargeDeclared;
  }

  public void setIsReverseChargeDeclared(Boolean isReverseChargeDeclared) {
    this.isReverseChargeDeclared = isReverseChargeDeclared;
  }

   /**
   * Opr. zákl. DPH
   * @return vATBaseCorrection
  **/
  @ApiModelProperty(example = "null", value = "Opr. zákl. DPH")
  public Double getVATBaseCorrection() {
    return vATBaseCorrection;
  }

  public Customsdeclaration isAccountedLaterVAT(Boolean isAccountedLaterVAT) {
    this.isAccountedLaterVAT = isAccountedLaterVAT;
    return this;
  }

   /**
   * DPH-pozdější odpočet
   * @return isAccountedLaterVAT
  **/
  @ApiModelProperty(example = "null", value = "DPH-pozdější odpočet")
  public Boolean getIsAccountedLaterVAT() {
    return isAccountedLaterVAT;
  }

  public void setIsAccountedLaterVAT(Boolean isAccountedLaterVAT) {
    this.isAccountedLaterVAT = isAccountedLaterVAT;
  }

  public Customsdeclaration vATAdmitDateDATE(DateTime vATAdmitDateDATE) {
    this.vATAdmitDateDATE = vATAdmitDateDATE;
    return this;
  }

   /**
   * Datum plnění [persistentní položka]
   * @return vATAdmitDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum plnění [persistentní položka]")
  public DateTime getVATAdmitDateDATE() {
    return vATAdmitDateDATE;
  }

  public void setVATAdmitDateDATE(DateTime vATAdmitDateDATE) {
    this.vATAdmitDateDATE = vATAdmitDateDATE;
  }

  public Customsdeclaration vATReportPreference(String vATReportPreference) {
    this.vATReportPreference = vATReportPreference;
    return this;
  }

   /**
   * Preference výkazu DPH [persistentní položka]
   * @return vATReportPreference
  **/
  @ApiModelProperty(example = "null", value = "Preference výkazu DPH [persistentní položka]")
  public String getVATReportPreference() {
    return vATReportPreference;
  }

  public void setVATReportPreference(String vATReportPreference) {
    this.vATReportPreference = vATReportPreference;
  }

  public Customsdeclaration vATReportReference(String vATReportReference) {
    this.vATReportReference = vATReportReference;
    return this;
  }

   /**
   * Reference [persistentní položka]
   * @return vATReportReference
  **/
  @ApiModelProperty(example = "null", value = "Reference [persistentní položka]")
  public String getVATReportReference() {
    return vATReportReference;
  }

  public void setVATReportReference(String vATReportReference) {
    this.vATReportReference = vATReportReference;
  }

  public Customsdeclaration createdAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return createdAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreatedAtDATE() {
    return createdAtDATE;
  }

  public void setCreatedAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
  }

  public Customsdeclaration correctedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
    return this;
  }

   /**
   * Opraveno [persistentní položka]
   * @return correctedAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraveno [persistentní položka]")
  public DateTime getCorrectedAtDATE() {
    return correctedAtDATE;
  }

  public void setCorrectedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customsdeclaration customsdeclaration = (Customsdeclaration) o;
    return Objects.equals(this.displayName, customsdeclaration.displayName) &&
        Objects.equals(this.ID, customsdeclaration.ID) &&
        Objects.equals(this.classID, customsdeclaration.classID) &&
        Objects.equals(this.objVersion, customsdeclaration.objVersion) &&
        Objects.equals(this.rows, customsdeclaration.rows) &&
        Objects.equals(this.docQueueID, customsdeclaration.docQueueID) &&
        Objects.equals(this.periodID, customsdeclaration.periodID) &&
        Objects.equals(this.ordNumber, customsdeclaration.ordNumber) &&
        Objects.equals(this.docDateDATE, customsdeclaration.docDateDATE) &&
        Objects.equals(this.createdByID, customsdeclaration.createdByID) &&
        Objects.equals(this.correctedByID, customsdeclaration.correctedByID) &&
        Objects.equals(this.newRelatedType, customsdeclaration.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, customsdeclaration.newRelatedDocumentID) &&
        Objects.equals(this.accPresetDefID, customsdeclaration.accPresetDefID) &&
        Objects.equals(this.firmID, customsdeclaration.firmID) &&
        Objects.equals(this.firmOfficeID, customsdeclaration.firmOfficeID) &&
        Objects.equals(this.personID, customsdeclaration.personID) &&
        Objects.equals(this.description, customsdeclaration.description) &&
        Objects.equals(this.accDateDATE, customsdeclaration.accDateDATE) &&
        Objects.equals(this.accDocQueueID, customsdeclaration.accDocQueueID) &&
        Objects.equals(this.accountingType, customsdeclaration.accountingType) &&
        Objects.equals(this.isAccounted, customsdeclaration.isAccounted) &&
        Objects.equals(this.dirty, customsdeclaration.dirty) &&
        Objects.equals(this.countryID, customsdeclaration.countryID) &&
        Objects.equals(this.currencyID, customsdeclaration.currencyID) &&
        Objects.equals(this.currRate, customsdeclaration.currRate) &&
        Objects.equals(this.refCurrRate, customsdeclaration.refCurrRate) &&
        Objects.equals(this.coef, customsdeclaration.coef) &&
        Objects.equals(this.localCoef, customsdeclaration.localCoef) &&
        Objects.equals(this.zoneID, customsdeclaration.zoneID) &&
        Objects.equals(this.localZoneID, customsdeclaration.localZoneID) &&
        Objects.equals(this.refCurrencyID, customsdeclaration.refCurrencyID) &&
        Objects.equals(this.localRefCurrencyID, customsdeclaration.localRefCurrencyID) &&
        Objects.equals(this.currRateInfo, customsdeclaration.currRateInfo) &&
        Objects.equals(this.amount, customsdeclaration.amount) &&
        Objects.equals(this.localAmount, customsdeclaration.localAmount) &&
        Objects.equals(this.vATDocument, customsdeclaration.vATDocument) &&
        Objects.equals(this.firmBankAccountID, customsdeclaration.firmBankAccountID) &&
        Objects.equals(this.dueDateDATE, customsdeclaration.dueDateDATE) &&
        Objects.equals(this.vATDateDATE, customsdeclaration.vATDateDATE) &&
        Objects.equals(this.constSymbolID, customsdeclaration.constSymbolID) &&
        Objects.equals(this.paidAmount, customsdeclaration.paidAmount) &&
        Objects.equals(this.localPaidAmount, customsdeclaration.localPaidAmount) &&
        Objects.equals(this.externalNumber, customsdeclaration.externalNumber) &&
        Objects.equals(this.varSymbol, customsdeclaration.varSymbol) &&
        Objects.equals(this.invoiceID, customsdeclaration.invoiceID) &&
        Objects.equals(this.customsAmount, customsdeclaration.customsAmount) &&
        Objects.equals(this.importTax, customsdeclaration.importTax) &&
        Objects.equals(this.spendingTax, customsdeclaration.spendingTax) &&
        Objects.equals(this.vATAmount, customsdeclaration.vATAmount) &&
        Objects.equals(this.vATBaseAmount, customsdeclaration.vATBaseAmount) &&
        Objects.equals(this.notPaidAmount, customsdeclaration.notPaidAmount) &&
        Objects.equals(this.localNotPaidAmount, customsdeclaration.localNotPaidAmount) &&
        Objects.equals(this.closingPeriodID, customsdeclaration.closingPeriodID) &&
        Objects.equals(this.lastPaymentPeriodID, customsdeclaration.lastPaymentPeriodID) &&
        Objects.equals(this.isProfit, customsdeclaration.isProfit) &&
        Objects.equals(this.gatherAmountWithVAT, customsdeclaration.gatherAmountWithVAT) &&
        Objects.equals(this.isReverseChargeDeclared, customsdeclaration.isReverseChargeDeclared) &&
        Objects.equals(this.vATBaseCorrection, customsdeclaration.vATBaseCorrection) &&
        Objects.equals(this.isAccountedLaterVAT, customsdeclaration.isAccountedLaterVAT) &&
        Objects.equals(this.vATAdmitDateDATE, customsdeclaration.vATAdmitDateDATE) &&
        Objects.equals(this.vATReportPreference, customsdeclaration.vATReportPreference) &&
        Objects.equals(this.vATReportReference, customsdeclaration.vATReportReference) &&
        Objects.equals(this.createdAtDATE, customsdeclaration.createdAtDATE) &&
        Objects.equals(this.correctedAtDATE, customsdeclaration.correctedAtDATE);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, accPresetDefID, firmID, firmOfficeID, personID, description, accDateDATE, accDocQueueID, accountingType, isAccounted, dirty, countryID, currencyID, currRate, refCurrRate, coef, localCoef, zoneID, localZoneID, refCurrencyID, localRefCurrencyID, currRateInfo, amount, localAmount, vATDocument, firmBankAccountID, dueDateDATE, vATDateDATE, constSymbolID, paidAmount, localPaidAmount, externalNumber, varSymbol, invoiceID, customsAmount, importTax, spendingTax, vATAmount, vATBaseAmount, notPaidAmount, localNotPaidAmount, closingPeriodID, lastPaymentPeriodID, isProfit, gatherAmountWithVAT, isReverseChargeDeclared, vATBaseCorrection, isAccountedLaterVAT, vATAdmitDateDATE, vATReportPreference, vATReportReference, createdAtDATE, correctedAtDATE);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customsdeclaration {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    accPresetDefID: ").append(toIndentedString(accPresetDefID)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    firmOfficeID: ").append(toIndentedString(firmOfficeID)).append("\n");
    sb.append("    personID: ").append(toIndentedString(personID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accDateDATE: ").append(toIndentedString(accDateDATE)).append("\n");
    sb.append("    accDocQueueID: ").append(toIndentedString(accDocQueueID)).append("\n");
    sb.append("    accountingType: ").append(toIndentedString(accountingType)).append("\n");
    sb.append("    isAccounted: ").append(toIndentedString(isAccounted)).append("\n");
    sb.append("    dirty: ").append(toIndentedString(dirty)).append("\n");
    sb.append("    countryID: ").append(toIndentedString(countryID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    currRate: ").append(toIndentedString(currRate)).append("\n");
    sb.append("    refCurrRate: ").append(toIndentedString(refCurrRate)).append("\n");
    sb.append("    coef: ").append(toIndentedString(coef)).append("\n");
    sb.append("    localCoef: ").append(toIndentedString(localCoef)).append("\n");
    sb.append("    zoneID: ").append(toIndentedString(zoneID)).append("\n");
    sb.append("    localZoneID: ").append(toIndentedString(localZoneID)).append("\n");
    sb.append("    refCurrencyID: ").append(toIndentedString(refCurrencyID)).append("\n");
    sb.append("    localRefCurrencyID: ").append(toIndentedString(localRefCurrencyID)).append("\n");
    sb.append("    currRateInfo: ").append(toIndentedString(currRateInfo)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    vATDocument: ").append(toIndentedString(vATDocument)).append("\n");
    sb.append("    firmBankAccountID: ").append(toIndentedString(firmBankAccountID)).append("\n");
    sb.append("    dueDateDATE: ").append(toIndentedString(dueDateDATE)).append("\n");
    sb.append("    vATDateDATE: ").append(toIndentedString(vATDateDATE)).append("\n");
    sb.append("    constSymbolID: ").append(toIndentedString(constSymbolID)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    localPaidAmount: ").append(toIndentedString(localPaidAmount)).append("\n");
    sb.append("    externalNumber: ").append(toIndentedString(externalNumber)).append("\n");
    sb.append("    varSymbol: ").append(toIndentedString(varSymbol)).append("\n");
    sb.append("    invoiceID: ").append(toIndentedString(invoiceID)).append("\n");
    sb.append("    customsAmount: ").append(toIndentedString(customsAmount)).append("\n");
    sb.append("    importTax: ").append(toIndentedString(importTax)).append("\n");
    sb.append("    spendingTax: ").append(toIndentedString(spendingTax)).append("\n");
    sb.append("    vATAmount: ").append(toIndentedString(vATAmount)).append("\n");
    sb.append("    vATBaseAmount: ").append(toIndentedString(vATBaseAmount)).append("\n");
    sb.append("    notPaidAmount: ").append(toIndentedString(notPaidAmount)).append("\n");
    sb.append("    localNotPaidAmount: ").append(toIndentedString(localNotPaidAmount)).append("\n");
    sb.append("    closingPeriodID: ").append(toIndentedString(closingPeriodID)).append("\n");
    sb.append("    lastPaymentPeriodID: ").append(toIndentedString(lastPaymentPeriodID)).append("\n");
    sb.append("    isProfit: ").append(toIndentedString(isProfit)).append("\n");
    sb.append("    gatherAmountWithVAT: ").append(toIndentedString(gatherAmountWithVAT)).append("\n");
    sb.append("    isReverseChargeDeclared: ").append(toIndentedString(isReverseChargeDeclared)).append("\n");
    sb.append("    vATBaseCorrection: ").append(toIndentedString(vATBaseCorrection)).append("\n");
    sb.append("    isAccountedLaterVAT: ").append(toIndentedString(isAccountedLaterVAT)).append("\n");
    sb.append("    vATAdmitDateDATE: ").append(toIndentedString(vATAdmitDateDATE)).append("\n");
    sb.append("    vATReportPreference: ").append(toIndentedString(vATReportPreference)).append("\n");
    sb.append("    vATReportReference: ").append(toIndentedString(vATReportReference)).append("\n");
    sb.append("    createdAtDATE: ").append(toIndentedString(createdAtDATE)).append("\n");
    sb.append("    correctedAtDATE: ").append(toIndentedString(correctedAtDATE)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

