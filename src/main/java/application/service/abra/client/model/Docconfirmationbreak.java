/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Docconfirmationbreak
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Docconfirmationbreak   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("DocType")
  private String docType = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CanEditConfirmedDoc")
  private Boolean canEditConfirmedDoc = null;

  @SerializedName("CanEditRefusedDoc")
  private Boolean canEditRefusedDoc = null;

  @SerializedName("UseDecisiveFields")
  private Boolean useDecisiveFields = null;

  @SerializedName("DecisiveFields")
  private List<Docconfbreakdecisivefield> decisiveFields = new ArrayList<Docconfbreakdecisivefield>();

  @SerializedName("KindDecisiveFields")
  private Integer kindDecisiveFields = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Docconfirmationbreak docType(String docType) {
    this.docType = docType;
    return this;
  }

   /**
   * Typ dokladu [persistentní položka]
   * @return docType
  **/
  @ApiModelProperty(example = "null", value = "Typ dokladu [persistentní položka]")
  public String getDocType() {
    return docType;
  }

  public void setDocType(String docType) {
    this.docType = docType;
  }

  public Docconfirmationbreak docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Řada dokladů; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Řada dokladů; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Docconfirmationbreak createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Docconfirmationbreak correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Docconfirmationbreak canEditConfirmedDoc(Boolean canEditConfirmedDoc) {
    this.canEditConfirmedDoc = canEditConfirmedDoc;
    return this;
  }

   /**
   * Povoleno pro schválený [persistentní položka]
   * @return canEditConfirmedDoc
  **/
  @ApiModelProperty(example = "null", value = "Povoleno pro schválený [persistentní položka]")
  public Boolean getCanEditConfirmedDoc() {
    return canEditConfirmedDoc;
  }

  public void setCanEditConfirmedDoc(Boolean canEditConfirmedDoc) {
    this.canEditConfirmedDoc = canEditConfirmedDoc;
  }

  public Docconfirmationbreak canEditRefusedDoc(Boolean canEditRefusedDoc) {
    this.canEditRefusedDoc = canEditRefusedDoc;
    return this;
  }

   /**
   * Povoleno pro zamítnutý [persistentní položka]
   * @return canEditRefusedDoc
  **/
  @ApiModelProperty(example = "null", value = "Povoleno pro zamítnutý [persistentní položka]")
  public Boolean getCanEditRefusedDoc() {
    return canEditRefusedDoc;
  }

  public void setCanEditRefusedDoc(Boolean canEditRefusedDoc) {
    this.canEditRefusedDoc = canEditRefusedDoc;
  }

  public Docconfirmationbreak useDecisiveFields(Boolean useDecisiveFields) {
    this.useDecisiveFields = useDecisiveFields;
    return this;
  }

   /**
   * Používat rozhodné položky [persistentní položka]
   * @return useDecisiveFields
  **/
  @ApiModelProperty(example = "null", value = "Používat rozhodné položky [persistentní položka]")
  public Boolean getUseDecisiveFields() {
    return useDecisiveFields;
  }

  public void setUseDecisiveFields(Boolean useDecisiveFields) {
    this.useDecisiveFields = useDecisiveFields;
  }

  public Docconfirmationbreak decisiveFields(List<Docconfbreakdecisivefield> decisiveFields) {
    this.decisiveFields = decisiveFields;
    return this;
  }

  public Docconfirmationbreak addDecisiveFieldsItem(Docconfbreakdecisivefield decisiveFieldsItem) {
    this.decisiveFields.add(decisiveFieldsItem);
    return this;
  }

   /**
   * Rozhodné položky; kolekce BO Povolení oprav - rozhodné položky pro schválení při opravě [nepersistentní položka]
   * @return decisiveFields
  **/
  @ApiModelProperty(example = "null", value = "Rozhodné položky; kolekce BO Povolení oprav - rozhodné položky pro schválení při opravě [nepersistentní položka]")
  public List<Docconfbreakdecisivefield> getDecisiveFields() {
    return decisiveFields;
  }

  public void setDecisiveFields(List<Docconfbreakdecisivefield> decisiveFields) {
    this.decisiveFields = decisiveFields;
  }

  public Docconfirmationbreak kindDecisiveFields(Integer kindDecisiveFields) {
    this.kindDecisiveFields = kindDecisiveFields;
    return this;
  }

   /**
   * Druh rozhodných položek [persistentní položka]
   * @return kindDecisiveFields
  **/
  @ApiModelProperty(example = "null", value = "Druh rozhodných položek [persistentní položka]")
  public Integer getKindDecisiveFields() {
    return kindDecisiveFields;
  }

  public void setKindDecisiveFields(Integer kindDecisiveFields) {
    this.kindDecisiveFields = kindDecisiveFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Docconfirmationbreak docconfirmationbreak = (Docconfirmationbreak) o;
    return Objects.equals(this.displayName, docconfirmationbreak.displayName) &&
        Objects.equals(this.ID, docconfirmationbreak.ID) &&
        Objects.equals(this.classID, docconfirmationbreak.classID) &&
        Objects.equals(this.objVersion, docconfirmationbreak.objVersion) &&
        Objects.equals(this.docType, docconfirmationbreak.docType) &&
        Objects.equals(this.docQueueID, docconfirmationbreak.docQueueID) &&
        Objects.equals(this.createdByID, docconfirmationbreak.createdByID) &&
        Objects.equals(this.correctedByID, docconfirmationbreak.correctedByID) &&
        Objects.equals(this.canEditConfirmedDoc, docconfirmationbreak.canEditConfirmedDoc) &&
        Objects.equals(this.canEditRefusedDoc, docconfirmationbreak.canEditRefusedDoc) &&
        Objects.equals(this.useDecisiveFields, docconfirmationbreak.useDecisiveFields) &&
        Objects.equals(this.decisiveFields, docconfirmationbreak.decisiveFields) &&
        Objects.equals(this.kindDecisiveFields, docconfirmationbreak.kindDecisiveFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, docType, docQueueID, createdByID, correctedByID, canEditConfirmedDoc, canEditRefusedDoc, useDecisiveFields, decisiveFields, kindDecisiveFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Docconfirmationbreak {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    docType: ").append(toIndentedString(docType)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    canEditConfirmedDoc: ").append(toIndentedString(canEditConfirmedDoc)).append("\n");
    sb.append("    canEditRefusedDoc: ").append(toIndentedString(canEditRefusedDoc)).append("\n");
    sb.append("    useDecisiveFields: ").append(toIndentedString(useDecisiveFields)).append("\n");
    sb.append("    decisiveFields: ").append(toIndentedString(decisiveFields)).append("\n");
    sb.append("    kindDecisiveFields: ").append(toIndentedString(kindDecisiveFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

