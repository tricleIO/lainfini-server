/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Wlclosingrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Wlclosingrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("Worker_ID")
  private String workerID = null;

  @SerializedName("TransferType")
  private Integer transferType = null;

  @SerializedName("FieldCode")
  private Integer fieldCode = null;

  @SerializedName("WageOperation_ID")
  private String wageOperationID = null;

  @SerializedName("Absence_ID")
  private String absenceID = null;

  @SerializedName("SickBenefit_ID")
  private String sickBenefitID = null;

  @SerializedName("SickBenefitRow_ID")
  private String sickBenefitRowID = null;

  @SerializedName("WageListPartial_ID")
  private String wageListPartialID = null;

  @SerializedName("ClosedValue")
  private Double closedValue = null;

  @SerializedName("TotalValue")
  private Double totalValue = null;

  @SerializedName("ScriptParams")
  private byte[] scriptParams = null;

  @SerializedName("ScriptIdentifyString")
  private String scriptIdentifyString = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Docházka - uzávěrka [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Docházka - uzávěrka [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Wlclosingrow workerID(String workerID) {
    this.workerID = workerID;
    return this;
  }

   /**
   * Pracovník; ID objektu Docházka - pracovníci [persistentní položka]
   * @return workerID
  **/
  @ApiModelProperty(example = "null", value = "Pracovník; ID objektu Docházka - pracovníci [persistentní položka]")
  public String getWorkerID() {
    return workerID;
  }

  public void setWorkerID(String workerID) {
    this.workerID = workerID;
  }

  public Wlclosingrow transferType(Integer transferType) {
    this.transferType = transferType;
    return this;
  }

   /**
   * Způsob přenosu [persistentní položka]
   * @return transferType
  **/
  @ApiModelProperty(example = "null", value = "Způsob přenosu [persistentní položka]")
  public Integer getTransferType() {
    return transferType;
  }

  public void setTransferType(Integer transferType) {
    this.transferType = transferType;
  }

  public Wlclosingrow fieldCode(Integer fieldCode) {
    this.fieldCode = fieldCode;
    return this;
  }

   /**
   * FieldCode cílové položky [persistentní položka]
   * @return fieldCode
  **/
  @ApiModelProperty(example = "null", value = "FieldCode cílové položky [persistentní položka]")
  public Integer getFieldCode() {
    return fieldCode;
  }

  public void setFieldCode(Integer fieldCode) {
    this.fieldCode = fieldCode;
  }

  public Wlclosingrow wageOperationID(String wageOperationID) {
    this.wageOperationID = wageOperationID;
    return this;
  }

   /**
   * Odkaz na výkon; ID objektu Výkon [persistentní položka]
   * @return wageOperationID
  **/
  @ApiModelProperty(example = "null", value = "Odkaz na výkon; ID objektu Výkon [persistentní položka]")
  public String getWageOperationID() {
    return wageOperationID;
  }

  public void setWageOperationID(String wageOperationID) {
    this.wageOperationID = wageOperationID;
  }

  public Wlclosingrow absenceID(String absenceID) {
    this.absenceID = absenceID;
    return this;
  }

   /**
   * Odkaz na Nepřítomnost; ID objektu Nepřítomnost [persistentní položka]
   * @return absenceID
  **/
  @ApiModelProperty(example = "null", value = "Odkaz na Nepřítomnost; ID objektu Nepřítomnost [persistentní položka]")
  public String getAbsenceID() {
    return absenceID;
  }

  public void setAbsenceID(String absenceID) {
    this.absenceID = absenceID;
  }

  public Wlclosingrow sickBenefitID(String sickBenefitID) {
    this.sickBenefitID = sickBenefitID;
    return this;
  }

   /**
   * Odkaz na Nemoc.dávku; ID objektu Nemocenská dávka [persistentní položka]
   * @return sickBenefitID
  **/
  @ApiModelProperty(example = "null", value = "Odkaz na Nemoc.dávku; ID objektu Nemocenská dávka [persistentní položka]")
  public String getSickBenefitID() {
    return sickBenefitID;
  }

  public void setSickBenefitID(String sickBenefitID) {
    this.sickBenefitID = sickBenefitID;
  }

  public Wlclosingrow sickBenefitRowID(String sickBenefitRowID) {
    this.sickBenefitRowID = sickBenefitRowID;
    return this;
  }

   /**
   * Odkaz na řádek Nemoc.dávky; ID objektu Řádek ND [persistentní položka]
   * @return sickBenefitRowID
  **/
  @ApiModelProperty(example = "null", value = "Odkaz na řádek Nemoc.dávky; ID objektu Řádek ND [persistentní položka]")
  public String getSickBenefitRowID() {
    return sickBenefitRowID;
  }

  public void setSickBenefitRowID(String sickBenefitRowID) {
    this.sickBenefitRowID = sickBenefitRowID;
  }

  public Wlclosingrow wageListPartialID(String wageListPartialID) {
    this.wageListPartialID = wageListPartialID;
    return this;
  }

   /**
   * Odkaz na dílčí mzdový list; ID objektu Mzdový list dílčí [persistentní položka]
   * @return wageListPartialID
  **/
  @ApiModelProperty(example = "null", value = "Odkaz na dílčí mzdový list; ID objektu Mzdový list dílčí [persistentní položka]")
  public String getWageListPartialID() {
    return wageListPartialID;
  }

  public void setWageListPartialID(String wageListPartialID) {
    this.wageListPartialID = wageListPartialID;
  }

  public Wlclosingrow closedValue(Double closedValue) {
    this.closedValue = closedValue;
    return this;
  }

   /**
   * Hodnota uzávěrky [persistentní položka]
   * @return closedValue
  **/
  @ApiModelProperty(example = "null", value = "Hodnota uzávěrky [persistentní položka]")
  public Double getClosedValue() {
    return closedValue;
  }

  public void setClosedValue(Double closedValue) {
    this.closedValue = closedValue;
  }

  public Wlclosingrow totalValue(Double totalValue) {
    this.totalValue = totalValue;
    return this;
  }

   /**
   * Hodnota před korekcí [persistentní položka]
   * @return totalValue
  **/
  @ApiModelProperty(example = "null", value = "Hodnota před korekcí [persistentní položka]")
  public Double getTotalValue() {
    return totalValue;
  }

  public void setTotalValue(Double totalValue) {
    this.totalValue = totalValue;
  }

  public Wlclosingrow scriptParams(byte[] scriptParams) {
    this.scriptParams = scriptParams;
    return this;
  }

   /**
   * Parametry pro skript [persistentní položka]
   * @return scriptParams
  **/
  @ApiModelProperty(example = "null", value = "Parametry pro skript [persistentní položka]")
  public byte[] getScriptParams() {
    return scriptParams;
  }

  public void setScriptParams(byte[] scriptParams) {
    this.scriptParams = scriptParams;
  }

  public Wlclosingrow scriptIdentifyString(String scriptIdentifyString) {
    this.scriptIdentifyString = scriptIdentifyString;
    return this;
  }

   /**
   * Identifikace skriptu [persistentní položka]
   * @return scriptIdentifyString
  **/
  @ApiModelProperty(example = "null", value = "Identifikace skriptu [persistentní položka]")
  public String getScriptIdentifyString() {
    return scriptIdentifyString;
  }

  public void setScriptIdentifyString(String scriptIdentifyString) {
    this.scriptIdentifyString = scriptIdentifyString;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wlclosingrow wlclosingrow = (Wlclosingrow) o;
    return Objects.equals(this.displayName, wlclosingrow.displayName) &&
        Objects.equals(this.ID, wlclosingrow.ID) &&
        Objects.equals(this.classID, wlclosingrow.classID) &&
        Objects.equals(this.objVersion, wlclosingrow.objVersion) &&
        Objects.equals(this.parentID, wlclosingrow.parentID) &&
        Objects.equals(this.workerID, wlclosingrow.workerID) &&
        Objects.equals(this.transferType, wlclosingrow.transferType) &&
        Objects.equals(this.fieldCode, wlclosingrow.fieldCode) &&
        Objects.equals(this.wageOperationID, wlclosingrow.wageOperationID) &&
        Objects.equals(this.absenceID, wlclosingrow.absenceID) &&
        Objects.equals(this.sickBenefitID, wlclosingrow.sickBenefitID) &&
        Objects.equals(this.sickBenefitRowID, wlclosingrow.sickBenefitRowID) &&
        Objects.equals(this.wageListPartialID, wlclosingrow.wageListPartialID) &&
        Objects.equals(this.closedValue, wlclosingrow.closedValue) &&
        Objects.equals(this.totalValue, wlclosingrow.totalValue) &&
        Objects.equals(this.scriptParams, wlclosingrow.scriptParams) &&
        Objects.equals(this.scriptIdentifyString, wlclosingrow.scriptIdentifyString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, workerID, transferType, fieldCode, wageOperationID, absenceID, sickBenefitID, sickBenefitRowID, wageListPartialID, closedValue, totalValue, scriptParams, scriptIdentifyString);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wlclosingrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    workerID: ").append(toIndentedString(workerID)).append("\n");
    sb.append("    transferType: ").append(toIndentedString(transferType)).append("\n");
    sb.append("    fieldCode: ").append(toIndentedString(fieldCode)).append("\n");
    sb.append("    wageOperationID: ").append(toIndentedString(wageOperationID)).append("\n");
    sb.append("    absenceID: ").append(toIndentedString(absenceID)).append("\n");
    sb.append("    sickBenefitID: ").append(toIndentedString(sickBenefitID)).append("\n");
    sb.append("    sickBenefitRowID: ").append(toIndentedString(sickBenefitRowID)).append("\n");
    sb.append("    wageListPartialID: ").append(toIndentedString(wageListPartialID)).append("\n");
    sb.append("    closedValue: ").append(toIndentedString(closedValue)).append("\n");
    sb.append("    totalValue: ").append(toIndentedString(totalValue)).append("\n");
    sb.append("    scriptParams: ").append(toIndentedString(scriptParams)).append("\n");
    sb.append("    scriptIdentifyString: ").append(toIndentedString(scriptIdentifyString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

