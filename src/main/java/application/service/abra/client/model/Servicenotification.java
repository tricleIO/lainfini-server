/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Servicenotification
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Servicenotification   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("servicedobject_id")
  private String servicedobjectId = null;

  @SerializedName("fromservicedocstate_id")
  private String fromservicedocstateId = null;

  @SerializedName("toservicedocstate_id")
  private String toservicedocstateId = null;

  @SerializedName("isactive")
  private Boolean isactive = null;

  @SerializedName("confirmationrequired")
  private Boolean confirmationrequired = null;

  @SerializedName("sendimmediately")
  private Boolean sendimmediately = null;

  @SerializedName("emailaccount_id")
  private String emailaccountId = null;

  @SerializedName("rows")
  private List<Servicenotificationrow> rows = new ArrayList<Servicenotificationrow>();

  public Servicenotification displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Servicenotification id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Servicenotification classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Servicenotification objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Servicenotification hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Servicenotification servicedobjectId(String servicedobjectId) {
    this.servicedobjectId = servicedobjectId;
    return this;
  }

   /**
   * servisovaný předmět; id objektu servisovaný předmět [persistentní položka]
   * @return servicedobjectId
  **/
  @ApiModelProperty(example = "null", value = "servisovaný předmět; id objektu servisovaný předmět [persistentní položka]")
  public String getServicedobjectId() {
    return servicedobjectId;
  }

  public void setServicedobjectId(String servicedobjectId) {
    this.servicedobjectId = servicedobjectId;
  }

  public Servicenotification fromservicedocstateId(String fromservicedocstateId) {
    this.fromservicedocstateId = fromservicedocstateId;
    return this;
  }

   /**
   * výchozí stav serv.listu; id objektu stav servisního listu [persistentní položka]
   * @return fromservicedocstateId
  **/
  @ApiModelProperty(example = "null", value = "výchozí stav serv.listu; id objektu stav servisního listu [persistentní položka]")
  public String getFromservicedocstateId() {
    return fromservicedocstateId;
  }

  public void setFromservicedocstateId(String fromservicedocstateId) {
    this.fromservicedocstateId = fromservicedocstateId;
  }

  public Servicenotification toservicedocstateId(String toservicedocstateId) {
    this.toservicedocstateId = toservicedocstateId;
    return this;
  }

   /**
   * aktuální stav serv.listu; id objektu stav servisního listu [persistentní položka]
   * @return toservicedocstateId
  **/
  @ApiModelProperty(example = "null", value = "aktuální stav serv.listu; id objektu stav servisního listu [persistentní položka]")
  public String getToservicedocstateId() {
    return toservicedocstateId;
  }

  public void setToservicedocstateId(String toservicedocstateId) {
    this.toservicedocstateId = toservicedocstateId;
  }

  public Servicenotification isactive(Boolean isactive) {
    this.isactive = isactive;
    return this;
  }

   /**
   * aktivní [persistentní položka]
   * @return isactive
  **/
  @ApiModelProperty(example = "null", value = "aktivní [persistentní položka]")
  public Boolean getIsactive() {
    return isactive;
  }

  public void setIsactive(Boolean isactive) {
    this.isactive = isactive;
  }

  public Servicenotification confirmationrequired(Boolean confirmationrequired) {
    this.confirmationrequired = confirmationrequired;
    return this;
  }

   /**
   * potvrdit [persistentní položka]
   * @return confirmationrequired
  **/
  @ApiModelProperty(example = "null", value = "potvrdit [persistentní položka]")
  public Boolean getConfirmationrequired() {
    return confirmationrequired;
  }

  public void setConfirmationrequired(Boolean confirmationrequired) {
    this.confirmationrequired = confirmationrequired;
  }

  public Servicenotification sendimmediately(Boolean sendimmediately) {
    this.sendimmediately = sendimmediately;
    return this;
  }

   /**
   * odeslat ihned [persistentní položka]
   * @return sendimmediately
  **/
  @ApiModelProperty(example = "null", value = "odeslat ihned [persistentní položka]")
  public Boolean getSendimmediately() {
    return sendimmediately;
  }

  public void setSendimmediately(Boolean sendimmediately) {
    this.sendimmediately = sendimmediately;
  }

  public Servicenotification emailaccountId(String emailaccountId) {
    this.emailaccountId = emailaccountId;
    return this;
  }

   /**
   * e-mailový účet; id objektu e-mailový účet [persistentní položka]
   * @return emailaccountId
  **/
  @ApiModelProperty(example = "null", value = "e-mailový účet; id objektu e-mailový účet [persistentní položka]")
  public String getEmailaccountId() {
    return emailaccountId;
  }

  public void setEmailaccountId(String emailaccountId) {
    this.emailaccountId = emailaccountId;
  }

  public Servicenotification rows(List<Servicenotificationrow> rows) {
    this.rows = rows;
    return this;
  }

  public Servicenotification addRowsItem(Servicenotificationrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádek notifikace; kolekce bo Řádek notifikace stavu serv.listu [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádek notifikace; kolekce bo Řádek notifikace stavu serv.listu [nepersistentní položka]")
  public List<Servicenotificationrow> getRows() {
    return rows;
  }

  public void setRows(List<Servicenotificationrow> rows) {
    this.rows = rows;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Servicenotification servicenotification = (Servicenotification) o;
    return Objects.equals(this.displayname, servicenotification.displayname) &&
        Objects.equals(this.id, servicenotification.id) &&
        Objects.equals(this.classid, servicenotification.classid) &&
        Objects.equals(this.objversion, servicenotification.objversion) &&
        Objects.equals(this.hidden, servicenotification.hidden) &&
        Objects.equals(this.servicedobjectId, servicenotification.servicedobjectId) &&
        Objects.equals(this.fromservicedocstateId, servicenotification.fromservicedocstateId) &&
        Objects.equals(this.toservicedocstateId, servicenotification.toservicedocstateId) &&
        Objects.equals(this.isactive, servicenotification.isactive) &&
        Objects.equals(this.confirmationrequired, servicenotification.confirmationrequired) &&
        Objects.equals(this.sendimmediately, servicenotification.sendimmediately) &&
        Objects.equals(this.emailaccountId, servicenotification.emailaccountId) &&
        Objects.equals(this.rows, servicenotification.rows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, servicedobjectId, fromservicedocstateId, toservicedocstateId, isactive, confirmationrequired, sendimmediately, emailaccountId, rows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Servicenotification {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    servicedobjectId: ").append(toIndentedString(servicedobjectId)).append("\n");
    sb.append("    fromservicedocstateId: ").append(toIndentedString(fromservicedocstateId)).append("\n");
    sb.append("    toservicedocstateId: ").append(toIndentedString(toservicedocstateId)).append("\n");
    sb.append("    isactive: ").append(toIndentedString(isactive)).append("\n");
    sb.append("    confirmationrequired: ").append(toIndentedString(confirmationrequired)).append("\n");
    sb.append("    sendimmediately: ").append(toIndentedString(sendimmediately)).append("\n");
    sb.append("    emailaccountId: ").append(toIndentedString(emailaccountId)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

