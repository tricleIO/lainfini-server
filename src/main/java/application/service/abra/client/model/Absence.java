/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Absence
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Absence   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("WorkingRelation_ID")
  private String workingRelationID = null;

  @SerializedName("Absence_ID")
  private String absenceID = null;

  @SerializedName("AbsenceBaseType")
  private Integer absenceBaseType = null;

  @SerializedName("AbsentFrom$DATE")
  private DateTime absentFromDATE = null;

  @SerializedName("AbsentTo$DATE")
  private DateTime absentToDATE = null;

  @SerializedName("FirstDay")
  private Double firstDay = null;

  @SerializedName("GiveCalendarDays")
  private Boolean giveCalendarDays = null;

  @SerializedName("NoEvidenceState")
  private Boolean noEvidenceState = null;

  @SerializedName("NoCalculation")
  private Boolean noCalculation = null;

  @SerializedName("ExTimeType")
  private Integer exTimeType = null;

  @SerializedName("NoInsurance")
  private Boolean noInsurance = null;

  @SerializedName("PaidFreeType")
  private Integer paidFreeType = null;

  @SerializedName("ImportSource_ID")
  private String importSourceID = null;

  @SerializedName("Employee_ID")
  private String employeeID = null;

  @SerializedName("AbsenceBaseType_Text")
  private String absenceBaseTypeText = null;

  @SerializedName("ExTimeType_Text")
  private String exTimeTypeText = null;

  @SerializedName("EmployeeName")
  private String employeeName = null;

  @SerializedName("PERS_PersonalNumber")
  private String pERSPersonalNumber = null;

  @SerializedName("PaidFreeTypeText")
  private String paidFreeTypeText = null;

  @SerializedName("LastDay")
  private Double lastDay = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Absence docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Absence periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Absence ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Absence docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Absence createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Absence correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Absence newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Absence newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Absence workingRelationID(String workingRelationID) {
    this.workingRelationID = workingRelationID;
    return this;
  }

   /**
   * Pracovní poměr; ID objektu Pracovní poměr [persistentní položka]
   * @return workingRelationID
  **/
  @ApiModelProperty(example = "null", value = "Pracovní poměr; ID objektu Pracovní poměr [persistentní položka]")
  public String getWorkingRelationID() {
    return workingRelationID;
  }

  public void setWorkingRelationID(String workingRelationID) {
    this.workingRelationID = workingRelationID;
  }

  public Absence absenceID(String absenceID) {
    this.absenceID = absenceID;
    return this;
  }

   /**
   * Druh nepřítomnosti; ID objektu Druh nepřítomnosti [persistentní položka]
   * @return absenceID
  **/
  @ApiModelProperty(example = "null", value = "Druh nepřítomnosti; ID objektu Druh nepřítomnosti [persistentní položka]")
  public String getAbsenceID() {
    return absenceID;
  }

  public void setAbsenceID(String absenceID) {
    this.absenceID = absenceID;
  }

  public Absence absenceBaseType(Integer absenceBaseType) {
    this.absenceBaseType = absenceBaseType;
    return this;
  }

   /**
   * Základní typ [persistentní položka]
   * @return absenceBaseType
  **/
  @ApiModelProperty(example = "null", value = "Základní typ [persistentní položka]")
  public Integer getAbsenceBaseType() {
    return absenceBaseType;
  }

  public void setAbsenceBaseType(Integer absenceBaseType) {
    this.absenceBaseType = absenceBaseType;
  }

  public Absence absentFromDATE(DateTime absentFromDATE) {
    this.absentFromDATE = absentFromDATE;
    return this;
  }

   /**
   * Počátek nepřítomnosti [persistentní položka]
   * @return absentFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Počátek nepřítomnosti [persistentní položka]")
  public DateTime getAbsentFromDATE() {
    return absentFromDATE;
  }

  public void setAbsentFromDATE(DateTime absentFromDATE) {
    this.absentFromDATE = absentFromDATE;
  }

  public Absence absentToDATE(DateTime absentToDATE) {
    this.absentToDATE = absentToDATE;
    return this;
  }

   /**
   * Konec nepřítomnosti [persistentní položka]
   * @return absentToDATE
  **/
  @ApiModelProperty(example = "null", value = "Konec nepřítomnosti [persistentní položka]")
  public DateTime getAbsentToDATE() {
    return absentToDATE;
  }

  public void setAbsentToDATE(DateTime absentToDATE) {
    this.absentToDATE = absentToDATE;
  }

  public Absence firstDay(Double firstDay) {
    this.firstDay = firstDay;
    return this;
  }

   /**
   * Nepřítomnost v prvém dni [persistentní položka]
   * @return firstDay
  **/
  @ApiModelProperty(example = "null", value = "Nepřítomnost v prvém dni [persistentní položka]")
  public Double getFirstDay() {
    return firstDay;
  }

  public void setFirstDay(Double firstDay) {
    this.firstDay = firstDay;
  }

  public Absence giveCalendarDays(Boolean giveCalendarDays) {
    this.giveCalendarDays = giveCalendarDays;
    return this;
  }

   /**
   * Počítat kalendářní dny [persistentní položka]
   * @return giveCalendarDays
  **/
  @ApiModelProperty(example = "null", value = "Počítat kalendářní dny [persistentní položka]")
  public Boolean getGiveCalendarDays() {
    return giveCalendarDays;
  }

  public void setGiveCalendarDays(Boolean giveCalendarDays) {
    this.giveCalendarDays = giveCalendarDays;
  }

  public Absence noEvidenceState(Boolean noEvidenceState) {
    this.noEvidenceState = noEvidenceState;
    return this;
  }

   /**
   * Mimo evidenční stav [persistentní položka]
   * @return noEvidenceState
  **/
  @ApiModelProperty(example = "null", value = "Mimo evidenční stav [persistentní položka]")
  public Boolean getNoEvidenceState() {
    return noEvidenceState;
  }

  public void setNoEvidenceState(Boolean noEvidenceState) {
    this.noEvidenceState = noEvidenceState;
  }

  public Absence noCalculation(Boolean noCalculation) {
    this.noCalculation = noCalculation;
    return this;
  }

   /**
   * Nepočítat mzdu [persistentní položka]
   * @return noCalculation
  **/
  @ApiModelProperty(example = "null", value = "Nepočítat mzdu [persistentní položka]")
  public Boolean getNoCalculation() {
    return noCalculation;
  }

  public void setNoCalculation(Boolean noCalculation) {
    this.noCalculation = noCalculation;
  }

  public Absence exTimeType(Integer exTimeType) {
    this.exTimeType = exTimeType;
    return this;
  }

   /**
   * Dlouhodobá nepřítomnost [persistentní položka]
   * @return exTimeType
  **/
  @ApiModelProperty(example = "null", value = "Dlouhodobá nepřítomnost [persistentní položka]")
  public Integer getExTimeType() {
    return exTimeType;
  }

  public void setExTimeType(Integer exTimeType) {
    this.exTimeType = exTimeType;
  }

  public Absence noInsurance(Boolean noInsurance) {
    this.noInsurance = noInsurance;
    return this;
  }

   /**
   * Bez pojištění [persistentní položka]
   * @return noInsurance
  **/
  @ApiModelProperty(example = "null", value = "Bez pojištění [persistentní položka]")
  public Boolean getNoInsurance() {
    return noInsurance;
  }

  public void setNoInsurance(Boolean noInsurance) {
    this.noInsurance = noInsurance;
  }

  public Absence paidFreeType(Integer paidFreeType) {
    this.paidFreeType = paidFreeType;
    return this;
  }

   /**
   * Kat. plac. volna [persistentní položka]
   * @return paidFreeType
  **/
  @ApiModelProperty(example = "null", value = "Kat. plac. volna [persistentní položka]")
  public Integer getPaidFreeType() {
    return paidFreeType;
  }

  public void setPaidFreeType(Integer paidFreeType) {
    this.paidFreeType = paidFreeType;
  }

  public Absence importSourceID(String importSourceID) {
    this.importSourceID = importSourceID;
    return this;
  }

   /**
   * Zdroj importu; ID objektu Import do Nepřítomností [persistentní položka]
   * @return importSourceID
  **/
  @ApiModelProperty(example = "null", value = "Zdroj importu; ID objektu Import do Nepřítomností [persistentní položka]")
  public String getImportSourceID() {
    return importSourceID;
  }

  public void setImportSourceID(String importSourceID) {
    this.importSourceID = importSourceID;
  }

  public Absence employeeID(String employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Zaměstnanec; ID objektu Zaměstnanec
   * @return employeeID
  **/
  @ApiModelProperty(example = "null", value = "Zaměstnanec; ID objektu Zaměstnanec")
  public String getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(String employeeID) {
    this.employeeID = employeeID;
  }

   /**
   * Druh nepřítomnosti
   * @return absenceBaseTypeText
  **/
  @ApiModelProperty(example = "null", value = "Druh nepřítomnosti")
  public String getAbsenceBaseTypeText() {
    return absenceBaseTypeText;
  }

   /**
   * Dlouhodobá nepřítomnost
   * @return exTimeTypeText
  **/
  @ApiModelProperty(example = "null", value = "Dlouhodobá nepřítomnost")
  public String getExTimeTypeText() {
    return exTimeTypeText;
  }

   /**
   * Příjmení a jméno
   * @return employeeName
  **/
  @ApiModelProperty(example = "null", value = "Příjmení a jméno")
  public String getEmployeeName() {
    return employeeName;
  }

   /**
   * Osobní číslo
   * @return pERSPersonalNumber
  **/
  @ApiModelProperty(example = "null", value = "Osobní číslo")
  public String getPERSPersonalNumber() {
    return pERSPersonalNumber;
  }

  public Absence paidFreeTypeText(String paidFreeTypeText) {
    this.paidFreeTypeText = paidFreeTypeText;
    return this;
  }

   /**
   * Kat. plac. volna
   * @return paidFreeTypeText
  **/
  @ApiModelProperty(example = "null", value = "Kat. plac. volna")
  public String getPaidFreeTypeText() {
    return paidFreeTypeText;
  }

  public void setPaidFreeTypeText(String paidFreeTypeText) {
    this.paidFreeTypeText = paidFreeTypeText;
  }

  public Absence lastDay(Double lastDay) {
    this.lastDay = lastDay;
    return this;
  }

   /**
   * Nepřítomnost v posledním dni [persistentní položka]
   * @return lastDay
  **/
  @ApiModelProperty(example = "null", value = "Nepřítomnost v posledním dni [persistentní položka]")
  public Double getLastDay() {
    return lastDay;
  }

  public void setLastDay(Double lastDay) {
    this.lastDay = lastDay;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Absence absence = (Absence) o;
    return Objects.equals(this.displayName, absence.displayName) &&
        Objects.equals(this.ID, absence.ID) &&
        Objects.equals(this.classID, absence.classID) &&
        Objects.equals(this.objVersion, absence.objVersion) &&
        Objects.equals(this.docQueueID, absence.docQueueID) &&
        Objects.equals(this.periodID, absence.periodID) &&
        Objects.equals(this.ordNumber, absence.ordNumber) &&
        Objects.equals(this.docDateDATE, absence.docDateDATE) &&
        Objects.equals(this.createdByID, absence.createdByID) &&
        Objects.equals(this.correctedByID, absence.correctedByID) &&
        Objects.equals(this.newRelatedType, absence.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, absence.newRelatedDocumentID) &&
        Objects.equals(this.workingRelationID, absence.workingRelationID) &&
        Objects.equals(this.absenceID, absence.absenceID) &&
        Objects.equals(this.absenceBaseType, absence.absenceBaseType) &&
        Objects.equals(this.absentFromDATE, absence.absentFromDATE) &&
        Objects.equals(this.absentToDATE, absence.absentToDATE) &&
        Objects.equals(this.firstDay, absence.firstDay) &&
        Objects.equals(this.giveCalendarDays, absence.giveCalendarDays) &&
        Objects.equals(this.noEvidenceState, absence.noEvidenceState) &&
        Objects.equals(this.noCalculation, absence.noCalculation) &&
        Objects.equals(this.exTimeType, absence.exTimeType) &&
        Objects.equals(this.noInsurance, absence.noInsurance) &&
        Objects.equals(this.paidFreeType, absence.paidFreeType) &&
        Objects.equals(this.importSourceID, absence.importSourceID) &&
        Objects.equals(this.employeeID, absence.employeeID) &&
        Objects.equals(this.absenceBaseTypeText, absence.absenceBaseTypeText) &&
        Objects.equals(this.exTimeTypeText, absence.exTimeTypeText) &&
        Objects.equals(this.employeeName, absence.employeeName) &&
        Objects.equals(this.pERSPersonalNumber, absence.pERSPersonalNumber) &&
        Objects.equals(this.paidFreeTypeText, absence.paidFreeTypeText) &&
        Objects.equals(this.lastDay, absence.lastDay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, workingRelationID, absenceID, absenceBaseType, absentFromDATE, absentToDATE, firstDay, giveCalendarDays, noEvidenceState, noCalculation, exTimeType, noInsurance, paidFreeType, importSourceID, employeeID, absenceBaseTypeText, exTimeTypeText, employeeName, pERSPersonalNumber, paidFreeTypeText, lastDay);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Absence {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    workingRelationID: ").append(toIndentedString(workingRelationID)).append("\n");
    sb.append("    absenceID: ").append(toIndentedString(absenceID)).append("\n");
    sb.append("    absenceBaseType: ").append(toIndentedString(absenceBaseType)).append("\n");
    sb.append("    absentFromDATE: ").append(toIndentedString(absentFromDATE)).append("\n");
    sb.append("    absentToDATE: ").append(toIndentedString(absentToDATE)).append("\n");
    sb.append("    firstDay: ").append(toIndentedString(firstDay)).append("\n");
    sb.append("    giveCalendarDays: ").append(toIndentedString(giveCalendarDays)).append("\n");
    sb.append("    noEvidenceState: ").append(toIndentedString(noEvidenceState)).append("\n");
    sb.append("    noCalculation: ").append(toIndentedString(noCalculation)).append("\n");
    sb.append("    exTimeType: ").append(toIndentedString(exTimeType)).append("\n");
    sb.append("    noInsurance: ").append(toIndentedString(noInsurance)).append("\n");
    sb.append("    paidFreeType: ").append(toIndentedString(paidFreeType)).append("\n");
    sb.append("    importSourceID: ").append(toIndentedString(importSourceID)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    absenceBaseTypeText: ").append(toIndentedString(absenceBaseTypeText)).append("\n");
    sb.append("    exTimeTypeText: ").append(toIndentedString(exTimeTypeText)).append("\n");
    sb.append("    employeeName: ").append(toIndentedString(employeeName)).append("\n");
    sb.append("    pERSPersonalNumber: ").append(toIndentedString(pERSPersonalNumber)).append("\n");
    sb.append("    paidFreeTypeText: ").append(toIndentedString(paidFreeTypeText)).append("\n");
    sb.append("    lastDay: ").append(toIndentedString(lastDay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

