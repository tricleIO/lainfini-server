/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Shiftcalendarrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Shiftcalendarrow   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("shiftdate$date")
  private DateTime shiftdatedate = null;

  @SerializedName("shiftgencode")
  private String shiftgencode = null;

  @SerializedName("shiftbasetype")
  private Integer shiftbasetype = null;

  @SerializedName("initialhour")
  private Double initialhour = null;

  @SerializedName("hoursshift")
  private Double hoursshift = null;

  @SerializedName("hourscount")
  private Double hourscount = null;

  @SerializedName("hoursnight")
  private Double hoursnight = null;

  @SerializedName("hoursenvir")
  private Double hoursenvir = null;

  @SerializedName("hoursholiday")
  private Double hoursholiday = null;

  @SerializedName("hourspausestotal")
  private Double hourspausestotal = null;

  @SerializedName("shiftbasetypetext")
  private String shiftbasetypetext = null;

  @SerializedName("origindate")
  private DateTime origindate = null;

  @SerializedName("pauses")
  private List<Shiftcalendarpause> pauses = new ArrayList<Shiftcalendarpause>();

  @SerializedName("initialhourstr")
  private String initialhourstr = null;

  public Shiftcalendarrow displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Shiftcalendarrow id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Shiftcalendarrow classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Shiftcalendarrow objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Shiftcalendarrow parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu pracovní kalendář [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu pracovní kalendář [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Shiftcalendarrow shiftdatedate(DateTime shiftdatedate) {
    this.shiftdatedate = shiftdatedate;
    return this;
  }

   /**
   * datum [persistentní položka]
   * @return shiftdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum [persistentní položka]")
  public DateTime getShiftdatedate() {
    return shiftdatedate;
  }

  public void setShiftdatedate(DateTime shiftdatedate) {
    this.shiftdatedate = shiftdatedate;
  }

  public Shiftcalendarrow shiftgencode(String shiftgencode) {
    this.shiftgencode = shiftgencode;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return shiftgencode
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getShiftgencode() {
    return shiftgencode;
  }

  public void setShiftgencode(String shiftgencode) {
    this.shiftgencode = shiftgencode;
  }

  public Shiftcalendarrow shiftbasetype(Integer shiftbasetype) {
    this.shiftbasetype = shiftbasetype;
    return this;
  }

   /**
   * typ [persistentní položka]
   * @return shiftbasetype
  **/
  @ApiModelProperty(example = "null", value = "typ [persistentní položka]")
  public Integer getShiftbasetype() {
    return shiftbasetype;
  }

  public void setShiftbasetype(Integer shiftbasetype) {
    this.shiftbasetype = shiftbasetype;
  }

  public Shiftcalendarrow initialhour(Double initialhour) {
    this.initialhour = initialhour;
    return this;
  }

   /**
   * hodina od [persistentní položka]
   * @return initialhour
  **/
  @ApiModelProperty(example = "null", value = "hodina od [persistentní položka]")
  public Double getInitialhour() {
    return initialhour;
  }

  public void setInitialhour(Double initialhour) {
    this.initialhour = initialhour;
  }

  public Shiftcalendarrow hoursshift(Double hoursshift) {
    this.hoursshift = hoursshift;
    return this;
  }

   /**
   * délka [persistentní položka]
   * @return hoursshift
  **/
  @ApiModelProperty(example = "null", value = "délka [persistentní položka]")
  public Double getHoursshift() {
    return hoursshift;
  }

  public void setHoursshift(Double hoursshift) {
    this.hoursshift = hoursshift;
  }

  public Shiftcalendarrow hourscount(Double hourscount) {
    this.hourscount = hourscount;
    return this;
  }

   /**
   * hodiny [persistentní položka]
   * @return hourscount
  **/
  @ApiModelProperty(example = "null", value = "hodiny [persistentní položka]")
  public Double getHourscount() {
    return hourscount;
  }

  public void setHourscount(Double hourscount) {
    this.hourscount = hourscount;
  }

  public Shiftcalendarrow hoursnight(Double hoursnight) {
    this.hoursnight = hoursnight;
    return this;
  }

   /**
   * v noci [persistentní položka]
   * @return hoursnight
  **/
  @ApiModelProperty(example = "null", value = "v noci [persistentní položka]")
  public Double getHoursnight() {
    return hoursnight;
  }

  public void setHoursnight(Double hoursnight) {
    this.hoursnight = hoursnight;
  }

  public Shiftcalendarrow hoursenvir(Double hoursenvir) {
    this.hoursenvir = hoursenvir;
    return this;
  }

   /**
   * v prostředí [persistentní položka]
   * @return hoursenvir
  **/
  @ApiModelProperty(example = "null", value = "v prostředí [persistentní položka]")
  public Double getHoursenvir() {
    return hoursenvir;
  }

  public void setHoursenvir(Double hoursenvir) {
    this.hoursenvir = hoursenvir;
  }

  public Shiftcalendarrow hoursholiday(Double hoursholiday) {
    this.hoursholiday = hoursholiday;
    return this;
  }

   /**
   * svátek [persistentní položka]
   * @return hoursholiday
  **/
  @ApiModelProperty(example = "null", value = "svátek [persistentní položka]")
  public Double getHoursholiday() {
    return hoursholiday;
  }

  public void setHoursholiday(Double hoursholiday) {
    this.hoursholiday = hoursholiday;
  }

  public Shiftcalendarrow hourspausestotal(Double hourspausestotal) {
    this.hourspausestotal = hourspausestotal;
    return this;
  }

   /**
   * přestávky celkem
   * @return hourspausestotal
  **/
  @ApiModelProperty(example = "null", value = "přestávky celkem")
  public Double getHourspausestotal() {
    return hourspausestotal;
  }

  public void setHourspausestotal(Double hourspausestotal) {
    this.hourspausestotal = hourspausestotal;
  }

  public Shiftcalendarrow shiftbasetypetext(String shiftbasetypetext) {
    this.shiftbasetypetext = shiftbasetypetext;
    return this;
  }

   /**
   * základní typ
   * @return shiftbasetypetext
  **/
  @ApiModelProperty(example = "null", value = "základní typ")
  public String getShiftbasetypetext() {
    return shiftbasetypetext;
  }

  public void setShiftbasetypetext(String shiftbasetypetext) {
    this.shiftbasetypetext = shiftbasetypetext;
  }

  public Shiftcalendarrow origindate(DateTime origindate) {
    this.origindate = origindate;
    return this;
  }

   /**
   * datum
   * @return origindate
  **/
  @ApiModelProperty(example = "null", value = "datum")
  public DateTime getOrigindate() {
    return origindate;
  }

  public void setOrigindate(DateTime origindate) {
    this.origindate = origindate;
  }

  public Shiftcalendarrow pauses(List<Shiftcalendarpause> pauses) {
    this.pauses = pauses;
    return this;
  }

  public Shiftcalendarrow addPausesItem(Shiftcalendarpause pausesItem) {
    this.pauses.add(pausesItem);
    return this;
  }

   /**
   * přestávky; kolekce bo přestávka v plánované směně [nepersistentní položka]
   * @return pauses
  **/
  @ApiModelProperty(example = "null", value = "přestávky; kolekce bo přestávka v plánované směně [nepersistentní položka]")
  public List<Shiftcalendarpause> getPauses() {
    return pauses;
  }

  public void setPauses(List<Shiftcalendarpause> pauses) {
    this.pauses = pauses;
  }

  public Shiftcalendarrow initialhourstr(String initialhourstr) {
    this.initialhourstr = initialhourstr;
    return this;
  }

   /**
   * hodina od
   * @return initialhourstr
  **/
  @ApiModelProperty(example = "null", value = "hodina od")
  public String getInitialhourstr() {
    return initialhourstr;
  }

  public void setInitialhourstr(String initialhourstr) {
    this.initialhourstr = initialhourstr;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Shiftcalendarrow shiftcalendarrow = (Shiftcalendarrow) o;
    return Objects.equals(this.displayname, shiftcalendarrow.displayname) &&
        Objects.equals(this.id, shiftcalendarrow.id) &&
        Objects.equals(this.classid, shiftcalendarrow.classid) &&
        Objects.equals(this.objversion, shiftcalendarrow.objversion) &&
        Objects.equals(this.parentId, shiftcalendarrow.parentId) &&
        Objects.equals(this.shiftdatedate, shiftcalendarrow.shiftdatedate) &&
        Objects.equals(this.shiftgencode, shiftcalendarrow.shiftgencode) &&
        Objects.equals(this.shiftbasetype, shiftcalendarrow.shiftbasetype) &&
        Objects.equals(this.initialhour, shiftcalendarrow.initialhour) &&
        Objects.equals(this.hoursshift, shiftcalendarrow.hoursshift) &&
        Objects.equals(this.hourscount, shiftcalendarrow.hourscount) &&
        Objects.equals(this.hoursnight, shiftcalendarrow.hoursnight) &&
        Objects.equals(this.hoursenvir, shiftcalendarrow.hoursenvir) &&
        Objects.equals(this.hoursholiday, shiftcalendarrow.hoursholiday) &&
        Objects.equals(this.hourspausestotal, shiftcalendarrow.hourspausestotal) &&
        Objects.equals(this.shiftbasetypetext, shiftcalendarrow.shiftbasetypetext) &&
        Objects.equals(this.origindate, shiftcalendarrow.origindate) &&
        Objects.equals(this.pauses, shiftcalendarrow.pauses) &&
        Objects.equals(this.initialhourstr, shiftcalendarrow.initialhourstr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, shiftdatedate, shiftgencode, shiftbasetype, initialhour, hoursshift, hourscount, hoursnight, hoursenvir, hoursholiday, hourspausestotal, shiftbasetypetext, origindate, pauses, initialhourstr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Shiftcalendarrow {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    shiftdatedate: ").append(toIndentedString(shiftdatedate)).append("\n");
    sb.append("    shiftgencode: ").append(toIndentedString(shiftgencode)).append("\n");
    sb.append("    shiftbasetype: ").append(toIndentedString(shiftbasetype)).append("\n");
    sb.append("    initialhour: ").append(toIndentedString(initialhour)).append("\n");
    sb.append("    hoursshift: ").append(toIndentedString(hoursshift)).append("\n");
    sb.append("    hourscount: ").append(toIndentedString(hourscount)).append("\n");
    sb.append("    hoursnight: ").append(toIndentedString(hoursnight)).append("\n");
    sb.append("    hoursenvir: ").append(toIndentedString(hoursenvir)).append("\n");
    sb.append("    hoursholiday: ").append(toIndentedString(hoursholiday)).append("\n");
    sb.append("    hourspausestotal: ").append(toIndentedString(hourspausestotal)).append("\n");
    sb.append("    shiftbasetypetext: ").append(toIndentedString(shiftbasetypetext)).append("\n");
    sb.append("    origindate: ").append(toIndentedString(origindate)).append("\n");
    sb.append("    pauses: ").append(toIndentedString(pauses)).append("\n");
    sb.append("    initialhourstr: ").append(toIndentedString(initialhourstr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

