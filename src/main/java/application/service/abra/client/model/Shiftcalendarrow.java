/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Shiftcalendarrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Shiftcalendarrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("ShiftDate$DATE")
  private DateTime shiftDateDATE = null;

  @SerializedName("ShiftGenCode")
  private String shiftGenCode = null;

  @SerializedName("ShiftBaseType")
  private Integer shiftBaseType = null;

  @SerializedName("InitialHour")
  private Double initialHour = null;

  @SerializedName("HoursShift")
  private Double hoursShift = null;

  @SerializedName("HoursCount")
  private Double hoursCount = null;

  @SerializedName("HoursNight")
  private Double hoursNight = null;

  @SerializedName("HoursEnvir")
  private Double hoursEnvir = null;

  @SerializedName("HoursHoliday")
  private Double hoursHoliday = null;

  @SerializedName("HoursPausesTotal")
  private Double hoursPausesTotal = null;

  @SerializedName("ShiftBaseTypeText")
  private String shiftBaseTypeText = null;

  @SerializedName("OriginDate")
  private DateTime originDate = null;

  @SerializedName("Pauses")
  private List<Shiftcalendarpause> pauses = new ArrayList<Shiftcalendarpause>();

  @SerializedName("InitialHourStr")
  private String initialHourStr = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Pracovní kalendář [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Pracovní kalendář [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Shiftcalendarrow shiftDateDATE(DateTime shiftDateDATE) {
    this.shiftDateDATE = shiftDateDATE;
    return this;
  }

   /**
   * Datum [persistentní položka]
   * @return shiftDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum [persistentní položka]")
  public DateTime getShiftDateDATE() {
    return shiftDateDATE;
  }

  public void setShiftDateDATE(DateTime shiftDateDATE) {
    this.shiftDateDATE = shiftDateDATE;
  }

  public Shiftcalendarrow shiftGenCode(String shiftGenCode) {
    this.shiftGenCode = shiftGenCode;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return shiftGenCode
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getShiftGenCode() {
    return shiftGenCode;
  }

  public void setShiftGenCode(String shiftGenCode) {
    this.shiftGenCode = shiftGenCode;
  }

  public Shiftcalendarrow shiftBaseType(Integer shiftBaseType) {
    this.shiftBaseType = shiftBaseType;
    return this;
  }

   /**
   * Typ [persistentní položka]
   * @return shiftBaseType
  **/
  @ApiModelProperty(example = "null", value = "Typ [persistentní položka]")
  public Integer getShiftBaseType() {
    return shiftBaseType;
  }

  public void setShiftBaseType(Integer shiftBaseType) {
    this.shiftBaseType = shiftBaseType;
  }

  public Shiftcalendarrow initialHour(Double initialHour) {
    this.initialHour = initialHour;
    return this;
  }

   /**
   * Hodina od [persistentní položka]
   * @return initialHour
  **/
  @ApiModelProperty(example = "null", value = "Hodina od [persistentní položka]")
  public Double getInitialHour() {
    return initialHour;
  }

  public void setInitialHour(Double initialHour) {
    this.initialHour = initialHour;
  }

  public Shiftcalendarrow hoursShift(Double hoursShift) {
    this.hoursShift = hoursShift;
    return this;
  }

   /**
   * Délka [persistentní položka]
   * @return hoursShift
  **/
  @ApiModelProperty(example = "null", value = "Délka [persistentní položka]")
  public Double getHoursShift() {
    return hoursShift;
  }

  public void setHoursShift(Double hoursShift) {
    this.hoursShift = hoursShift;
  }

  public Shiftcalendarrow hoursCount(Double hoursCount) {
    this.hoursCount = hoursCount;
    return this;
  }

   /**
   * Hodiny [persistentní položka]
   * @return hoursCount
  **/
  @ApiModelProperty(example = "null", value = "Hodiny [persistentní položka]")
  public Double getHoursCount() {
    return hoursCount;
  }

  public void setHoursCount(Double hoursCount) {
    this.hoursCount = hoursCount;
  }

  public Shiftcalendarrow hoursNight(Double hoursNight) {
    this.hoursNight = hoursNight;
    return this;
  }

   /**
   * V noci [persistentní položka]
   * @return hoursNight
  **/
  @ApiModelProperty(example = "null", value = "V noci [persistentní položka]")
  public Double getHoursNight() {
    return hoursNight;
  }

  public void setHoursNight(Double hoursNight) {
    this.hoursNight = hoursNight;
  }

  public Shiftcalendarrow hoursEnvir(Double hoursEnvir) {
    this.hoursEnvir = hoursEnvir;
    return this;
  }

   /**
   * V prostředí [persistentní položka]
   * @return hoursEnvir
  **/
  @ApiModelProperty(example = "null", value = "V prostředí [persistentní položka]")
  public Double getHoursEnvir() {
    return hoursEnvir;
  }

  public void setHoursEnvir(Double hoursEnvir) {
    this.hoursEnvir = hoursEnvir;
  }

  public Shiftcalendarrow hoursHoliday(Double hoursHoliday) {
    this.hoursHoliday = hoursHoliday;
    return this;
  }

   /**
   * Svátek [persistentní položka]
   * @return hoursHoliday
  **/
  @ApiModelProperty(example = "null", value = "Svátek [persistentní položka]")
  public Double getHoursHoliday() {
    return hoursHoliday;
  }

  public void setHoursHoliday(Double hoursHoliday) {
    this.hoursHoliday = hoursHoliday;
  }

  public Shiftcalendarrow hoursPausesTotal(Double hoursPausesTotal) {
    this.hoursPausesTotal = hoursPausesTotal;
    return this;
  }

   /**
   * Přestávky celkem
   * @return hoursPausesTotal
  **/
  @ApiModelProperty(example = "null", value = "Přestávky celkem")
  public Double getHoursPausesTotal() {
    return hoursPausesTotal;
  }

  public void setHoursPausesTotal(Double hoursPausesTotal) {
    this.hoursPausesTotal = hoursPausesTotal;
  }

  public Shiftcalendarrow shiftBaseTypeText(String shiftBaseTypeText) {
    this.shiftBaseTypeText = shiftBaseTypeText;
    return this;
  }

   /**
   * Základní typ
   * @return shiftBaseTypeText
  **/
  @ApiModelProperty(example = "null", value = "Základní typ")
  public String getShiftBaseTypeText() {
    return shiftBaseTypeText;
  }

  public void setShiftBaseTypeText(String shiftBaseTypeText) {
    this.shiftBaseTypeText = shiftBaseTypeText;
  }

  public Shiftcalendarrow originDate(DateTime originDate) {
    this.originDate = originDate;
    return this;
  }

   /**
   * Datum
   * @return originDate
  **/
  @ApiModelProperty(example = "null", value = "Datum")
  public DateTime getOriginDate() {
    return originDate;
  }

  public void setOriginDate(DateTime originDate) {
    this.originDate = originDate;
  }

  public Shiftcalendarrow pauses(List<Shiftcalendarpause> pauses) {
    this.pauses = pauses;
    return this;
  }

  public Shiftcalendarrow addPausesItem(Shiftcalendarpause pausesItem) {
    this.pauses.add(pausesItem);
    return this;
  }

   /**
   * Přestávky; kolekce BO Přestávka v plánované směně [nepersistentní položka]
   * @return pauses
  **/
  @ApiModelProperty(example = "null", value = "Přestávky; kolekce BO Přestávka v plánované směně [nepersistentní položka]")
  public List<Shiftcalendarpause> getPauses() {
    return pauses;
  }

  public void setPauses(List<Shiftcalendarpause> pauses) {
    this.pauses = pauses;
  }

  public Shiftcalendarrow initialHourStr(String initialHourStr) {
    this.initialHourStr = initialHourStr;
    return this;
  }

   /**
   * Hodina od
   * @return initialHourStr
  **/
  @ApiModelProperty(example = "null", value = "Hodina od")
  public String getInitialHourStr() {
    return initialHourStr;
  }

  public void setInitialHourStr(String initialHourStr) {
    this.initialHourStr = initialHourStr;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Shiftcalendarrow shiftcalendarrow = (Shiftcalendarrow) o;
    return Objects.equals(this.displayName, shiftcalendarrow.displayName) &&
        Objects.equals(this.ID, shiftcalendarrow.ID) &&
        Objects.equals(this.classID, shiftcalendarrow.classID) &&
        Objects.equals(this.objVersion, shiftcalendarrow.objVersion) &&
        Objects.equals(this.parentID, shiftcalendarrow.parentID) &&
        Objects.equals(this.shiftDateDATE, shiftcalendarrow.shiftDateDATE) &&
        Objects.equals(this.shiftGenCode, shiftcalendarrow.shiftGenCode) &&
        Objects.equals(this.shiftBaseType, shiftcalendarrow.shiftBaseType) &&
        Objects.equals(this.initialHour, shiftcalendarrow.initialHour) &&
        Objects.equals(this.hoursShift, shiftcalendarrow.hoursShift) &&
        Objects.equals(this.hoursCount, shiftcalendarrow.hoursCount) &&
        Objects.equals(this.hoursNight, shiftcalendarrow.hoursNight) &&
        Objects.equals(this.hoursEnvir, shiftcalendarrow.hoursEnvir) &&
        Objects.equals(this.hoursHoliday, shiftcalendarrow.hoursHoliday) &&
        Objects.equals(this.hoursPausesTotal, shiftcalendarrow.hoursPausesTotal) &&
        Objects.equals(this.shiftBaseTypeText, shiftcalendarrow.shiftBaseTypeText) &&
        Objects.equals(this.originDate, shiftcalendarrow.originDate) &&
        Objects.equals(this.pauses, shiftcalendarrow.pauses) &&
        Objects.equals(this.initialHourStr, shiftcalendarrow.initialHourStr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, shiftDateDATE, shiftGenCode, shiftBaseType, initialHour, hoursShift, hoursCount, hoursNight, hoursEnvir, hoursHoliday, hoursPausesTotal, shiftBaseTypeText, originDate, pauses, initialHourStr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Shiftcalendarrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    shiftDateDATE: ").append(toIndentedString(shiftDateDATE)).append("\n");
    sb.append("    shiftGenCode: ").append(toIndentedString(shiftGenCode)).append("\n");
    sb.append("    shiftBaseType: ").append(toIndentedString(shiftBaseType)).append("\n");
    sb.append("    initialHour: ").append(toIndentedString(initialHour)).append("\n");
    sb.append("    hoursShift: ").append(toIndentedString(hoursShift)).append("\n");
    sb.append("    hoursCount: ").append(toIndentedString(hoursCount)).append("\n");
    sb.append("    hoursNight: ").append(toIndentedString(hoursNight)).append("\n");
    sb.append("    hoursEnvir: ").append(toIndentedString(hoursEnvir)).append("\n");
    sb.append("    hoursHoliday: ").append(toIndentedString(hoursHoliday)).append("\n");
    sb.append("    hoursPausesTotal: ").append(toIndentedString(hoursPausesTotal)).append("\n");
    sb.append("    shiftBaseTypeText: ").append(toIndentedString(shiftBaseTypeText)).append("\n");
    sb.append("    originDate: ").append(toIndentedString(originDate)).append("\n");
    sb.append("    pauses: ").append(toIndentedString(pauses)).append("\n");
    sb.append("    initialHourStr: ").append(toIndentedString(initialHourStr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

