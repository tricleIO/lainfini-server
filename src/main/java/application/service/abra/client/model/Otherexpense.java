/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Otherexpense
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Otherexpense   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Otherexpenserow> rows = new ArrayList<Otherexpenserow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("AccPresetDef_ID")
  private String accPresetDefID = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("FirmOffice_ID")
  private String firmOfficeID = null;

  @SerializedName("Person_ID")
  private String personID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("AccDate$DATE")
  private DateTime accDateDATE = null;

  @SerializedName("AccDocQueue_ID")
  private String accDocQueueID = null;

  @SerializedName("AccountingType")
  private Integer accountingType = null;

  @SerializedName("IsAccounted")
  private Boolean isAccounted = null;

  @SerializedName("Dirty")
  private Boolean dirty = null;

  @SerializedName("Country_ID")
  private String countryID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("CurrRate")
  private Double currRate = null;

  @SerializedName("RefCurrRate")
  private Double refCurrRate = null;

  @SerializedName("Coef")
  private Integer coef = null;

  @SerializedName("LocalCoef")
  private Integer localCoef = null;

  @SerializedName("Zone_ID")
  private String zoneID = null;

  @SerializedName("LocalZone_ID")
  private String localZoneID = null;

  @SerializedName("RefCurrency_ID")
  private String refCurrencyID = null;

  @SerializedName("LocalRefCurrency_ID")
  private String localRefCurrencyID = null;

  @SerializedName("CurrRateInfo")
  private String currRateInfo = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("LocalAmount")
  private Double localAmount = null;

  @SerializedName("VATDocument")
  private Boolean vATDocument = null;

  @SerializedName("AmountWithoutVAT")
  private Double amountWithoutVAT = null;

  @SerializedName("LocalAmountWithoutVAT")
  private Double localAmountWithoutVAT = null;

  @SerializedName("VATDate$DATE")
  private DateTime vATDateDATE = null;

  @SerializedName("VATAmount")
  private Double vATAmount = null;

  @SerializedName("LocalVATAmount")
  private Double localVATAmount = null;

  @SerializedName("RoundingAmount")
  private Double roundingAmount = null;

  @SerializedName("LocalRoundingAmount")
  private Double localRoundingAmount = null;

  @SerializedName("IsAccountedLaterVAT")
  private Boolean isAccountedLaterVAT = null;

  @SerializedName("SimplifiedVATDocument")
  private Boolean simplifiedVATDocument = null;

  @SerializedName("VATReportPreference")
  private String vATReportPreference = null;

  @SerializedName("VATByPayment")
  private Boolean vATByPayment = null;

  @SerializedName("VATByPaymentEndDate$DATE")
  private DateTime vATByPaymentEndDateDATE = null;

  @SerializedName("DataEntryKind")
  private Integer dataEntryKind = null;

  @SerializedName("DocumentInVATByPaymentMode")
  private Boolean documentInVATByPaymentMode = null;

  @SerializedName("SDocument_ID")
  private String sDocumentID = null;

  @SerializedName("SDocumentType")
  private String sDocumentType = null;

  @SerializedName("SpecialDocumentMode")
  private Integer specialDocumentMode = null;

  @SerializedName("SpecialDocumentModeText")
  private String specialDocumentModeText = null;

  @SerializedName("SDocumentVATDate$DATE")
  private DateTime sDocumentVATDateDATE = null;

  @SerializedName("VATVoluntaryPaid")
  private Boolean vATVoluntaryPaid = null;

  @SerializedName("HasImpactToThroughItem")
  private Boolean hasImpactToThroughItem = null;

  @SerializedName("SDocumentNotPaidAmount")
  private Double sDocumentNotPaidAmount = null;

  @SerializedName("SDocumentLocalNotPaidAmount")
  private Double sDocumentLocalNotPaidAmount = null;

  @SerializedName("VATReportReference")
  private String vATReportReference = null;

  @SerializedName("ElectronicPayment")
  private Boolean electronicPayment = null;

  @SerializedName("FirmBankAccount_ID")
  private String firmBankAccountID = null;

  @SerializedName("DueDate$DATE")
  private DateTime dueDateDATE = null;

  @SerializedName("ConstSymbol_ID")
  private String constSymbolID = null;

  @SerializedName("VarSymbol")
  private String varSymbol = null;

  @SerializedName("PaidAmount")
  private Double paidAmount = null;

  @SerializedName("LocalPaidAmount")
  private Double localPaidAmount = null;

  @SerializedName("PAmount")
  private Double pAmount = null;

  @SerializedName("PDocumentType")
  private String pDocumentType = null;

  @SerializedName("PDocument_ID")
  private String pDocumentID = null;

  @SerializedName("PDisKind")
  private Integer pDisKind = null;

  @SerializedName("NotPaidAmount")
  private Double notPaidAmount = null;

  @SerializedName("LocalNotPaidAmount")
  private Double localNotPaidAmount = null;

  @SerializedName("ClosingPeriod_ID")
  private String closingPeriodID = null;

  @SerializedName("LastPaymentPeriod_ID")
  private String lastPaymentPeriodID = null;

  @SerializedName("IsProfit")
  private Boolean isProfit = null;

  @SerializedName("VATAdmitDate$DATE")
  private DateTime vATAdmitDateDATE = null;

  @SerializedName("ExternalNumber")
  private String externalNumber = null;

  @SerializedName("VATByPaymentExitTaxation")
  private Boolean vATByPaymentExitTaxation = null;

  @SerializedName("EETTurnover_ID")
  private Otherexpense eETTurnoverID = null;

  @SerializedName("EET")
  private Boolean EET = null;

  @SerializedName("CreatedAt$DATE")
  private DateTime createdAtDATE = null;

  @SerializedName("CorrectedAt$DATE")
  private DateTime correctedAtDATE = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Otherexpense rows(List<Otherexpenserow> rows) {
    this.rows = rows;
    return this;
  }

  public Otherexpense addRowsItem(Otherexpenserow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Ostatní výdaj - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Ostatní výdaj - řádek [nepersistentní položka]")
  public List<Otherexpenserow> getRows() {
    return rows;
  }

  public void setRows(List<Otherexpenserow> rows) {
    this.rows = rows;
  }

  public Otherexpense docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Otherexpense periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Otherexpense ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Otherexpense docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Otherexpense createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Otherexpense correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Otherexpense newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Otherexpense newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Otherexpense accPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
    return this;
  }

   /**
   * Předkontace; ID objektu Účetní předkontace [persistentní položka]
   * @return accPresetDefID
  **/
  @ApiModelProperty(example = "null", value = "Předkontace; ID objektu Účetní předkontace [persistentní položka]")
  public String getAccPresetDefID() {
    return accPresetDefID;
  }

  public void setAccPresetDefID(String accPresetDefID) {
    this.accPresetDefID = accPresetDefID;
  }

  public Otherexpense firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Otherexpense firmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
    return this;
  }

   /**
   * Provozovna; ID objektu Provozovna [persistentní položka]
   * @return firmOfficeID
  **/
  @ApiModelProperty(example = "null", value = "Provozovna; ID objektu Provozovna [persistentní položka]")
  public String getFirmOfficeID() {
    return firmOfficeID;
  }

  public void setFirmOfficeID(String firmOfficeID) {
    this.firmOfficeID = firmOfficeID;
  }

  public Otherexpense personID(String personID) {
    this.personID = personID;
    return this;
  }

   /**
   * Osoba; ID objektu Osoba [persistentní položka]
   * @return personID
  **/
  @ApiModelProperty(example = "null", value = "Osoba; ID objektu Osoba [persistentní položka]")
  public String getPersonID() {
    return personID;
  }

  public void setPersonID(String personID) {
    this.personID = personID;
  }

  public Otherexpense description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Otherexpense accDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
    return this;
  }

   /**
   * Datum účt. [persistentní položka]
   * @return accDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum účt. [persistentní položka]")
  public DateTime getAccDateDATE() {
    return accDateDATE;
  }

  public void setAccDateDATE(DateTime accDateDATE) {
    this.accDateDATE = accDateDATE;
  }

  public Otherexpense accDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
    return this;
  }

   /**
   * Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]
   * @return accDocQueueID
  **/
  @ApiModelProperty(example = "null", value = "Účetní řada; ID objektu Účetní řada dokladů [persistentní položka]")
  public String getAccDocQueueID() {
    return accDocQueueID;
  }

  public void setAccDocQueueID(String accDocQueueID) {
    this.accDocQueueID = accDocQueueID;
  }

  public Otherexpense accountingType(Integer accountingType) {
    this.accountingType = accountingType;
    return this;
  }

   /**
   * Jak účtovat
   * @return accountingType
  **/
  @ApiModelProperty(example = "null", value = "Jak účtovat")
  public Integer getAccountingType() {
    return accountingType;
  }

  public void setAccountingType(Integer accountingType) {
    this.accountingType = accountingType;
  }

  public Otherexpense isAccounted(Boolean isAccounted) {
    this.isAccounted = isAccounted;
    return this;
  }

   /**
   * Účtováno
   * @return isAccounted
  **/
  @ApiModelProperty(example = "null", value = "Účtováno")
  public Boolean getIsAccounted() {
    return isAccounted;
  }

  public void setIsAccounted(Boolean isAccounted) {
    this.isAccounted = isAccounted;
  }

  public Otherexpense dirty(Boolean dirty) {
    this.dirty = dirty;
    return this;
  }

   /**
   * Zakázané přepočítání [persistentní položka]
   * @return dirty
  **/
  @ApiModelProperty(example = "null", value = "Zakázané přepočítání [persistentní položka]")
  public Boolean getDirty() {
    return dirty;
  }

  public void setDirty(Boolean dirty) {
    this.dirty = dirty;
  }

  public Otherexpense countryID(String countryID) {
    this.countryID = countryID;
    return this;
  }

   /**
   * Země; ID objektu Země [persistentní položka]
   * @return countryID
  **/
  @ApiModelProperty(example = "null", value = "Země; ID objektu Země [persistentní položka]")
  public String getCountryID() {
    return countryID;
  }

  public void setCountryID(String countryID) {
    this.countryID = countryID;
  }

  public Otherexpense currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Otherexpense currRate(Double currRate) {
    this.currRate = currRate;
    return this;
  }

   /**
   * Kurz měny [persistentní položka]
   * @return currRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz měny [persistentní položka]")
  public Double getCurrRate() {
    return currRate;
  }

  public void setCurrRate(Double currRate) {
    this.currRate = currRate;
  }

  public Otherexpense refCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
    return this;
  }

   /**
   * Kurz vztažný [persistentní položka]
   * @return refCurrRate
  **/
  @ApiModelProperty(example = "null", value = "Kurz vztažný [persistentní položka]")
  public Double getRefCurrRate() {
    return refCurrRate;
  }

  public void setRefCurrRate(Double refCurrRate) {
    this.refCurrRate = refCurrRate;
  }

  public Otherexpense coef(Integer coef) {
    this.coef = coef;
    return this;
  }

   /**
   * Koeficient [persistentní položka]
   * @return coef
  **/
  @ApiModelProperty(example = "null", value = "Koeficient [persistentní položka]")
  public Integer getCoef() {
    return coef;
  }

  public void setCoef(Integer coef) {
    this.coef = coef;
  }

  public Otherexpense localCoef(Integer localCoef) {
    this.localCoef = localCoef;
    return this;
  }

   /**
   * Lokální koeficient [persistentní položka]
   * @return localCoef
  **/
  @ApiModelProperty(example = "null", value = "Lokální koeficient [persistentní položka]")
  public Integer getLocalCoef() {
    return localCoef;
  }

  public void setLocalCoef(Integer localCoef) {
    this.localCoef = localCoef;
  }

  public Otherexpense zoneID(String zoneID) {
    this.zoneID = zoneID;
    return this;
  }

   /**
   * Zóna; ID objektu Měna [persistentní položka]
   * @return zoneID
  **/
  @ApiModelProperty(example = "null", value = "Zóna; ID objektu Měna [persistentní položka]")
  public String getZoneID() {
    return zoneID;
  }

  public void setZoneID(String zoneID) {
    this.zoneID = zoneID;
  }

  public Otherexpense localZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
    return this;
  }

   /**
   * Lokální zóna; ID objektu Měna [persistentní položka]
   * @return localZoneID
  **/
  @ApiModelProperty(example = "null", value = "Lokální zóna; ID objektu Měna [persistentní položka]")
  public String getLocalZoneID() {
    return localZoneID;
  }

  public void setLocalZoneID(String localZoneID) {
    this.localZoneID = localZoneID;
  }

   /**
   * Ref.měna; ID objektu Měna
   * @return refCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Ref.měna; ID objektu Měna")
  public String getRefCurrencyID() {
    return refCurrencyID;
  }

   /**
   * Lok.ref.měna; ID objektu Měna
   * @return localRefCurrencyID
  **/
  @ApiModelProperty(example = "null", value = "Lok.ref.měna; ID objektu Měna")
  public String getLocalRefCurrencyID() {
    return localRefCurrencyID;
  }

   /**
   * Kurz měny textově
   * @return currRateInfo
  **/
  @ApiModelProperty(example = "null", value = "Kurz měny textově")
  public String getCurrRateInfo() {
    return currRateInfo;
  }

  public Otherexpense amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Celkem [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Celkem [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Otherexpense localAmount(Double localAmount) {
    this.localAmount = localAmount;
    return this;
  }

   /**
   * Celkem lokálně [persistentní položka]
   * @return localAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně [persistentní položka]")
  public Double getLocalAmount() {
    return localAmount;
  }

  public void setLocalAmount(Double localAmount) {
    this.localAmount = localAmount;
  }

  public Otherexpense vATDocument(Boolean vATDocument) {
    this.vATDocument = vATDocument;
    return this;
  }

   /**
   * DPH doklad [persistentní položka]
   * @return vATDocument
  **/
  @ApiModelProperty(example = "null", value = "DPH doklad [persistentní položka]")
  public Boolean getVATDocument() {
    return vATDocument;
  }

  public void setVATDocument(Boolean vATDocument) {
    this.vATDocument = vATDocument;
  }

  public Otherexpense amountWithoutVAT(Double amountWithoutVAT) {
    this.amountWithoutVAT = amountWithoutVAT;
    return this;
  }

   /**
   * Celkem bez [persistentní položka]
   * @return amountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Celkem bez [persistentní položka]")
  public Double getAmountWithoutVAT() {
    return amountWithoutVAT;
  }

  public void setAmountWithoutVAT(Double amountWithoutVAT) {
    this.amountWithoutVAT = amountWithoutVAT;
  }

  public Otherexpense localAmountWithoutVAT(Double localAmountWithoutVAT) {
    this.localAmountWithoutVAT = localAmountWithoutVAT;
    return this;
  }

   /**
   * Celkem lokálně bez daně [persistentní položka]
   * @return localAmountWithoutVAT
  **/
  @ApiModelProperty(example = "null", value = "Celkem lokálně bez daně [persistentní položka]")
  public Double getLocalAmountWithoutVAT() {
    return localAmountWithoutVAT;
  }

  public void setLocalAmountWithoutVAT(Double localAmountWithoutVAT) {
    this.localAmountWithoutVAT = localAmountWithoutVAT;
  }

  public Otherexpense vATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
    return this;
  }

   /**
   * Datum upl.odp. [persistentní položka]
   * @return vATDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum upl.odp. [persistentní položka]")
  public DateTime getVATDateDATE() {
    return vATDateDATE;
  }

  public void setVATDateDATE(DateTime vATDateDATE) {
    this.vATDateDATE = vATDateDATE;
  }

   /**
   * DPH
   * @return vATAmount
  **/
  @ApiModelProperty(example = "null", value = "DPH")
  public Double getVATAmount() {
    return vATAmount;
  }

   /**
   * DPH lok.
   * @return localVATAmount
  **/
  @ApiModelProperty(example = "null", value = "DPH lok.")
  public Double getLocalVATAmount() {
    return localVATAmount;
  }

  public Otherexpense roundingAmount(Double roundingAmount) {
    this.roundingAmount = roundingAmount;
    return this;
  }

   /**
   * Hal. [persistentní položka]
   * @return roundingAmount
  **/
  @ApiModelProperty(example = "null", value = "Hal. [persistentní položka]")
  public Double getRoundingAmount() {
    return roundingAmount;
  }

  public void setRoundingAmount(Double roundingAmount) {
    this.roundingAmount = roundingAmount;
  }

  public Otherexpense localRoundingAmount(Double localRoundingAmount) {
    this.localRoundingAmount = localRoundingAmount;
    return this;
  }

   /**
   * Hal.vyr.lok. [persistentní položka]
   * @return localRoundingAmount
  **/
  @ApiModelProperty(example = "null", value = "Hal.vyr.lok. [persistentní položka]")
  public Double getLocalRoundingAmount() {
    return localRoundingAmount;
  }

  public void setLocalRoundingAmount(Double localRoundingAmount) {
    this.localRoundingAmount = localRoundingAmount;
  }

  public Otherexpense isAccountedLaterVAT(Boolean isAccountedLaterVAT) {
    this.isAccountedLaterVAT = isAccountedLaterVAT;
    return this;
  }

   /**
   * DPH pozdější odpočet
   * @return isAccountedLaterVAT
  **/
  @ApiModelProperty(example = "null", value = "DPH pozdější odpočet")
  public Boolean getIsAccountedLaterVAT() {
    return isAccountedLaterVAT;
  }

  public void setIsAccountedLaterVAT(Boolean isAccountedLaterVAT) {
    this.isAccountedLaterVAT = isAccountedLaterVAT;
  }

  public Otherexpense simplifiedVATDocument(Boolean simplifiedVATDocument) {
    this.simplifiedVATDocument = simplifiedVATDocument;
    return this;
  }

   /**
   * Zjednodušený daňový doklad [persistentní položka]
   * @return simplifiedVATDocument
  **/
  @ApiModelProperty(example = "null", value = "Zjednodušený daňový doklad [persistentní položka]")
  public Boolean getSimplifiedVATDocument() {
    return simplifiedVATDocument;
  }

  public void setSimplifiedVATDocument(Boolean simplifiedVATDocument) {
    this.simplifiedVATDocument = simplifiedVATDocument;
  }

  public Otherexpense vATReportPreference(String vATReportPreference) {
    this.vATReportPreference = vATReportPreference;
    return this;
  }

   /**
   * Preference výkazu DPH [persistentní položka]
   * @return vATReportPreference
  **/
  @ApiModelProperty(example = "null", value = "Preference výkazu DPH [persistentní položka]")
  public String getVATReportPreference() {
    return vATReportPreference;
  }

  public void setVATReportPreference(String vATReportPreference) {
    this.vATReportPreference = vATReportPreference;
  }

  public Otherexpense vATByPayment(Boolean vATByPayment) {
    this.vATByPayment = vATByPayment;
    return this;
  }

   /**
   * DPH na základě přijetí platby [persistentní položka]
   * @return vATByPayment
  **/
  @ApiModelProperty(example = "null", value = "DPH na základě přijetí platby [persistentní položka]")
  public Boolean getVATByPayment() {
    return vATByPayment;
  }

  public void setVATByPayment(Boolean vATByPayment) {
    this.vATByPayment = vATByPayment;
  }

  public Otherexpense vATByPaymentEndDateDATE(DateTime vATByPaymentEndDateDATE) {
    this.vATByPaymentEndDateDATE = vATByPaymentEndDateDATE;
    return this;
  }

   /**
   * Datum ukončení zvl. režimu [persistentní položka]
   * @return vATByPaymentEndDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum ukončení zvl. režimu [persistentní položka]")
  public DateTime getVATByPaymentEndDateDATE() {
    return vATByPaymentEndDateDATE;
  }

  public void setVATByPaymentEndDateDATE(DateTime vATByPaymentEndDateDATE) {
    this.vATByPaymentEndDateDATE = vATByPaymentEndDateDATE;
  }

  public Otherexpense dataEntryKind(Integer dataEntryKind) {
    this.dataEntryKind = dataEntryKind;
    return this;
  }

   /**
   * Zp.zadání [persistentní položka]
   * @return dataEntryKind
  **/
  @ApiModelProperty(example = "null", value = "Zp.zadání [persistentní položka]")
  public Integer getDataEntryKind() {
    return dataEntryKind;
  }

  public void setDataEntryKind(Integer dataEntryKind) {
    this.dataEntryKind = dataEntryKind;
  }

  public Otherexpense documentInVATByPaymentMode(Boolean documentInVATByPaymentMode) {
    this.documentInVATByPaymentMode = documentInVATByPaymentMode;
    return this;
  }

   /**
   * Doklad vystaven v režimu DPH z přijetí platby [persistentní položka]
   * @return documentInVATByPaymentMode
  **/
  @ApiModelProperty(example = "null", value = "Doklad vystaven v režimu DPH z přijetí platby [persistentní položka]")
  public Boolean getDocumentInVATByPaymentMode() {
    return documentInVATByPaymentMode;
  }

  public void setDocumentInVATByPaymentMode(Boolean documentInVATByPaymentMode) {
    this.documentInVATByPaymentMode = documentInVATByPaymentMode;
  }

  public Otherexpense sDocumentID(String sDocumentID) {
    this.sDocumentID = sDocumentID;
    return this;
  }

   /**
   * Zdrojový doklad; ID objektu Dokument [persistentní položka]
   * @return sDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojový doklad; ID objektu Dokument [persistentní položka]")
  public String getSDocumentID() {
    return sDocumentID;
  }

  public void setSDocumentID(String sDocumentID) {
    this.sDocumentID = sDocumentID;
  }

  public Otherexpense sDocumentType(String sDocumentType) {
    this.sDocumentType = sDocumentType;
    return this;
  }

   /**
   * Typ zdrojového dokl. [persistentní položka]
   * @return sDocumentType
  **/
  @ApiModelProperty(example = "null", value = "Typ zdrojového dokl. [persistentní položka]")
  public String getSDocumentType() {
    return sDocumentType;
  }

  public void setSDocumentType(String sDocumentType) {
    this.sDocumentType = sDocumentType;
  }

  public Otherexpense specialDocumentMode(Integer specialDocumentMode) {
    this.specialDocumentMode = specialDocumentMode;
    return this;
  }

   /**
   * Režim dokladu [persistentní položka]
   * @return specialDocumentMode
  **/
  @ApiModelProperty(example = "null", value = "Režim dokladu [persistentní položka]")
  public Integer getSpecialDocumentMode() {
    return specialDocumentMode;
  }

  public void setSpecialDocumentMode(Integer specialDocumentMode) {
    this.specialDocumentMode = specialDocumentMode;
  }

  public Otherexpense specialDocumentModeText(String specialDocumentModeText) {
    this.specialDocumentModeText = specialDocumentModeText;
    return this;
  }

   /**
   * Popis režimu dokladu
   * @return specialDocumentModeText
  **/
  @ApiModelProperty(example = "null", value = "Popis režimu dokladu")
  public String getSpecialDocumentModeText() {
    return specialDocumentModeText;
  }

  public void setSpecialDocumentModeText(String specialDocumentModeText) {
    this.specialDocumentModeText = specialDocumentModeText;
  }

  public Otherexpense sDocumentVATDateDATE(DateTime sDocumentVATDateDATE) {
    this.sDocumentVATDateDATE = sDocumentVATDateDATE;
    return this;
  }

   /**
   * Datum upl.odp.
   * @return sDocumentVATDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum upl.odp.")
  public DateTime getSDocumentVATDateDATE() {
    return sDocumentVATDateDATE;
  }

  public void setSDocumentVATDateDATE(DateTime sDocumentVATDateDATE) {
    this.sDocumentVATDateDATE = sDocumentVATDateDATE;
  }

  public Otherexpense vATVoluntaryPaid(Boolean vATVoluntaryPaid) {
    this.vATVoluntaryPaid = vATVoluntaryPaid;
    return this;
  }

   /**
   * Dobrovolné zaplacení daně [persistentní položka]
   * @return vATVoluntaryPaid
  **/
  @ApiModelProperty(example = "null", value = "Dobrovolné zaplacení daně [persistentní položka]")
  public Boolean getVATVoluntaryPaid() {
    return vATVoluntaryPaid;
  }

  public void setVATVoluntaryPaid(Boolean vATVoluntaryPaid) {
    this.vATVoluntaryPaid = vATVoluntaryPaid;
  }

  public Otherexpense hasImpactToThroughItem(Boolean hasImpactToThroughItem) {
    this.hasImpactToThroughItem = hasImpactToThroughItem;
    return this;
  }

   /**
   * Ovlivňuje průběžnou položku [persistentní položka]
   * @return hasImpactToThroughItem
  **/
  @ApiModelProperty(example = "null", value = "Ovlivňuje průběžnou položku [persistentní položka]")
  public Boolean getHasImpactToThroughItem() {
    return hasImpactToThroughItem;
  }

  public void setHasImpactToThroughItem(Boolean hasImpactToThroughItem) {
    this.hasImpactToThroughItem = hasImpactToThroughItem;
  }

  public Otherexpense sDocumentNotPaidAmount(Double sDocumentNotPaidAmount) {
    this.sDocumentNotPaidAmount = sDocumentNotPaidAmount;
    return this;
  }

   /**
   * Nezaplacená částka zdr. dokladu
   * @return sDocumentNotPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplacená částka zdr. dokladu")
  public Double getSDocumentNotPaidAmount() {
    return sDocumentNotPaidAmount;
  }

  public void setSDocumentNotPaidAmount(Double sDocumentNotPaidAmount) {
    this.sDocumentNotPaidAmount = sDocumentNotPaidAmount;
  }

  public Otherexpense sDocumentLocalNotPaidAmount(Double sDocumentLocalNotPaidAmount) {
    this.sDocumentLocalNotPaidAmount = sDocumentLocalNotPaidAmount;
    return this;
  }

   /**
   * Nezaplacená lokální částka zdr. dokladu
   * @return sDocumentLocalNotPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplacená lokální částka zdr. dokladu")
  public Double getSDocumentLocalNotPaidAmount() {
    return sDocumentLocalNotPaidAmount;
  }

  public void setSDocumentLocalNotPaidAmount(Double sDocumentLocalNotPaidAmount) {
    this.sDocumentLocalNotPaidAmount = sDocumentLocalNotPaidAmount;
  }

  public Otherexpense vATReportReference(String vATReportReference) {
    this.vATReportReference = vATReportReference;
    return this;
  }

   /**
   * Reference [persistentní položka]
   * @return vATReportReference
  **/
  @ApiModelProperty(example = "null", value = "Reference [persistentní položka]")
  public String getVATReportReference() {
    return vATReportReference;
  }

  public void setVATReportReference(String vATReportReference) {
    this.vATReportReference = vATReportReference;
  }

  public Otherexpense electronicPayment(Boolean electronicPayment) {
    this.electronicPayment = electronicPayment;
    return this;
  }

   /**
   * Elektronická platba [persistentní položka]
   * @return electronicPayment
  **/
  @ApiModelProperty(example = "null", value = "Elektronická platba [persistentní položka]")
  public Boolean getElectronicPayment() {
    return electronicPayment;
  }

  public void setElectronicPayment(Boolean electronicPayment) {
    this.electronicPayment = electronicPayment;
  }

  public Otherexpense firmBankAccountID(String firmBankAccountID) {
    this.firmBankAccountID = firmBankAccountID;
    return this;
  }

   /**
   * Bankovní účet; ID objektu Bankovní účet firmy [persistentní položka]
   * @return firmBankAccountID
  **/
  @ApiModelProperty(example = "null", value = "Bankovní účet; ID objektu Bankovní účet firmy [persistentní položka]")
  public String getFirmBankAccountID() {
    return firmBankAccountID;
  }

  public void setFirmBankAccountID(String firmBankAccountID) {
    this.firmBankAccountID = firmBankAccountID;
  }

  public Otherexpense dueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
    return this;
  }

   /**
   * Datum spl. [persistentní položka]
   * @return dueDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum spl. [persistentní položka]")
  public DateTime getDueDateDATE() {
    return dueDateDATE;
  }

  public void setDueDateDATE(DateTime dueDateDATE) {
    this.dueDateDATE = dueDateDATE;
  }

  public Otherexpense constSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
    return this;
  }

   /**
   * Konst.symbol; ID objektu Konstantní symbol [persistentní položka]
   * @return constSymbolID
  **/
  @ApiModelProperty(example = "null", value = "Konst.symbol; ID objektu Konstantní symbol [persistentní položka]")
  public String getConstSymbolID() {
    return constSymbolID;
  }

  public void setConstSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
  }

  public Otherexpense varSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
    return this;
  }

   /**
   * Var.symbol [persistentní položka]
   * @return varSymbol
  **/
  @ApiModelProperty(example = "null", value = "Var.symbol [persistentní položka]")
  public String getVarSymbol() {
    return varSymbol;
  }

  public void setVarSymbol(String varSymbol) {
    this.varSymbol = varSymbol;
  }

   /**
   * Celkem zapl. [persistentní položka]
   * @return paidAmount
  **/
  @ApiModelProperty(example = "null", value = "Celkem zapl. [persistentní položka]")
  public Double getPaidAmount() {
    return paidAmount;
  }

   /**
   * Zaplaceno lokálně [persistentní položka]
   * @return localPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Zaplaceno lokálně [persistentní položka]")
  public Double getLocalPaidAmount() {
    return localPaidAmount;
  }

  public Otherexpense pAmount(Double pAmount) {
    this.pAmount = pAmount;
    return this;
  }

   /**
   * Platba [persistentní položka]
   * @return pAmount
  **/
  @ApiModelProperty(example = "null", value = "Platba [persistentní položka]")
  public Double getPAmount() {
    return pAmount;
  }

  public void setPAmount(Double pAmount) {
    this.pAmount = pAmount;
  }

  public Otherexpense pDocumentType(String pDocumentType) {
    this.pDocumentType = pDocumentType;
    return this;
  }

   /**
   * Typ plac.dokl. [persistentní položka]
   * @return pDocumentType
  **/
  @ApiModelProperty(example = "null", value = "Typ plac.dokl. [persistentní položka]")
  public String getPDocumentType() {
    return pDocumentType;
  }

  public void setPDocumentType(String pDocumentType) {
    this.pDocumentType = pDocumentType;
  }

  public Otherexpense pDocumentID(String pDocumentID) {
    this.pDocumentID = pDocumentID;
    return this;
  }

   /**
   * Plac.doklad; ID objektu Dokument [persistentní položka]
   * @return pDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Plac.doklad; ID objektu Dokument [persistentní položka]")
  public String getPDocumentID() {
    return pDocumentID;
  }

  public void setPDocumentID(String pDocumentID) {
    this.pDocumentID = pDocumentID;
  }

  public Otherexpense pDisKind(Integer pDisKind) {
    this.pDisKind = pDisKind;
    return this;
  }

   /**
   * Rozdělení [persistentní položka]
   * @return pDisKind
  **/
  @ApiModelProperty(example = "null", value = "Rozdělení [persistentní položka]")
  public Integer getPDisKind() {
    return pDisKind;
  }

  public void setPDisKind(Integer pDisKind) {
    this.pDisKind = pDisKind;
  }

  public Otherexpense notPaidAmount(Double notPaidAmount) {
    this.notPaidAmount = notPaidAmount;
    return this;
  }

   /**
   * Nezaplaceno
   * @return notPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplaceno")
  public Double getNotPaidAmount() {
    return notPaidAmount;
  }

  public void setNotPaidAmount(Double notPaidAmount) {
    this.notPaidAmount = notPaidAmount;
  }

  public Otherexpense localNotPaidAmount(Double localNotPaidAmount) {
    this.localNotPaidAmount = localNotPaidAmount;
    return this;
  }

   /**
   * Nezaplaceno lokálně
   * @return localNotPaidAmount
  **/
  @ApiModelProperty(example = "null", value = "Nezaplaceno lokálně")
  public Double getLocalNotPaidAmount() {
    return localNotPaidAmount;
  }

  public void setLocalNotPaidAmount(Double localNotPaidAmount) {
    this.localNotPaidAmount = localNotPaidAmount;
  }

   /**
   * Období uzávěrky; ID objektu Období [persistentní položka]
   * @return closingPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období uzávěrky; ID objektu Období [persistentní položka]")
  public String getClosingPeriodID() {
    return closingPeriodID;
  }

   /**
   * Období posl. platby; ID objektu Období [persistentní položka]
   * @return lastPaymentPeriodID
  **/
  @ApiModelProperty(example = "null", value = "Období posl. platby; ID objektu Období [persistentní položka]")
  public String getLastPaymentPeriodID() {
    return lastPaymentPeriodID;
  }

  public Otherexpense isProfit(Boolean isProfit) {
    this.isProfit = isProfit;
    return this;
  }

   /**
   * Výnos
   * @return isProfit
  **/
  @ApiModelProperty(example = "null", value = "Výnos")
  public Boolean getIsProfit() {
    return isProfit;
  }

  public void setIsProfit(Boolean isProfit) {
    this.isProfit = isProfit;
  }

  public Otherexpense vATAdmitDateDATE(DateTime vATAdmitDateDATE) {
    this.vATAdmitDateDATE = vATAdmitDateDATE;
    return this;
  }

   /**
   * Datum plnění [persistentní položka]
   * @return vATAdmitDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum plnění [persistentní položka]")
  public DateTime getVATAdmitDateDATE() {
    return vATAdmitDateDATE;
  }

  public void setVATAdmitDateDATE(DateTime vATAdmitDateDATE) {
    this.vATAdmitDateDATE = vATAdmitDateDATE;
  }

  public Otherexpense externalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
    return this;
  }

   /**
   * Externí číslo [persistentní položka]
   * @return externalNumber
  **/
  @ApiModelProperty(example = "null", value = "Externí číslo [persistentní položka]")
  public String getExternalNumber() {
    return externalNumber;
  }

  public void setExternalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
  }

  public Otherexpense vATByPaymentExitTaxation(Boolean vATByPaymentExitTaxation) {
    this.vATByPaymentExitTaxation = vATByPaymentExitTaxation;
    return this;
  }

   /**
   * Doklad pro odvedení DPH po ukončení zvl. režimu [persistentní položka]
   * @return vATByPaymentExitTaxation
  **/
  @ApiModelProperty(example = "null", value = "Doklad pro odvedení DPH po ukončení zvl. režimu [persistentní položka]")
  public Boolean getVATByPaymentExitTaxation() {
    return vATByPaymentExitTaxation;
  }

  public void setVATByPaymentExitTaxation(Boolean vATByPaymentExitTaxation) {
    this.vATByPaymentExitTaxation = vATByPaymentExitTaxation;
  }

  public Otherexpense eETTurnoverID(Otherexpense eETTurnoverID) {
    this.eETTurnoverID = eETTurnoverID;
    return this;
  }

   /**
   * Get eETTurnoverID
   * @return eETTurnoverID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Otherexpense getEETTurnoverID() {
    return eETTurnoverID;
  }

  public void setEETTurnoverID(Otherexpense eETTurnoverID) {
    this.eETTurnoverID = eETTurnoverID;
  }

  public Otherexpense EET(Boolean EET) {
    this.EET = EET;
    return this;
  }

   /**
   * EET [persistentní položka]
   * @return EET
  **/
  @ApiModelProperty(example = "null", value = "EET [persistentní položka]")
  public Boolean getEET() {
    return EET;
  }

  public void setEET(Boolean EET) {
    this.EET = EET;
  }

  public Otherexpense createdAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return createdAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreatedAtDATE() {
    return createdAtDATE;
  }

  public void setCreatedAtDATE(DateTime createdAtDATE) {
    this.createdAtDATE = createdAtDATE;
  }

  public Otherexpense correctedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
    return this;
  }

   /**
   * Opraveno [persistentní položka]
   * @return correctedAtDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraveno [persistentní položka]")
  public DateTime getCorrectedAtDATE() {
    return correctedAtDATE;
  }

  public void setCorrectedAtDATE(DateTime correctedAtDATE) {
    this.correctedAtDATE = correctedAtDATE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Otherexpense otherexpense = (Otherexpense) o;
    return Objects.equals(this.displayName, otherexpense.displayName) &&
        Objects.equals(this.ID, otherexpense.ID) &&
        Objects.equals(this.classID, otherexpense.classID) &&
        Objects.equals(this.objVersion, otherexpense.objVersion) &&
        Objects.equals(this.rows, otherexpense.rows) &&
        Objects.equals(this.docQueueID, otherexpense.docQueueID) &&
        Objects.equals(this.periodID, otherexpense.periodID) &&
        Objects.equals(this.ordNumber, otherexpense.ordNumber) &&
        Objects.equals(this.docDateDATE, otherexpense.docDateDATE) &&
        Objects.equals(this.createdByID, otherexpense.createdByID) &&
        Objects.equals(this.correctedByID, otherexpense.correctedByID) &&
        Objects.equals(this.newRelatedType, otherexpense.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, otherexpense.newRelatedDocumentID) &&
        Objects.equals(this.accPresetDefID, otherexpense.accPresetDefID) &&
        Objects.equals(this.firmID, otherexpense.firmID) &&
        Objects.equals(this.firmOfficeID, otherexpense.firmOfficeID) &&
        Objects.equals(this.personID, otherexpense.personID) &&
        Objects.equals(this.description, otherexpense.description) &&
        Objects.equals(this.accDateDATE, otherexpense.accDateDATE) &&
        Objects.equals(this.accDocQueueID, otherexpense.accDocQueueID) &&
        Objects.equals(this.accountingType, otherexpense.accountingType) &&
        Objects.equals(this.isAccounted, otherexpense.isAccounted) &&
        Objects.equals(this.dirty, otherexpense.dirty) &&
        Objects.equals(this.countryID, otherexpense.countryID) &&
        Objects.equals(this.currencyID, otherexpense.currencyID) &&
        Objects.equals(this.currRate, otherexpense.currRate) &&
        Objects.equals(this.refCurrRate, otherexpense.refCurrRate) &&
        Objects.equals(this.coef, otherexpense.coef) &&
        Objects.equals(this.localCoef, otherexpense.localCoef) &&
        Objects.equals(this.zoneID, otherexpense.zoneID) &&
        Objects.equals(this.localZoneID, otherexpense.localZoneID) &&
        Objects.equals(this.refCurrencyID, otherexpense.refCurrencyID) &&
        Objects.equals(this.localRefCurrencyID, otherexpense.localRefCurrencyID) &&
        Objects.equals(this.currRateInfo, otherexpense.currRateInfo) &&
        Objects.equals(this.amount, otherexpense.amount) &&
        Objects.equals(this.localAmount, otherexpense.localAmount) &&
        Objects.equals(this.vATDocument, otherexpense.vATDocument) &&
        Objects.equals(this.amountWithoutVAT, otherexpense.amountWithoutVAT) &&
        Objects.equals(this.localAmountWithoutVAT, otherexpense.localAmountWithoutVAT) &&
        Objects.equals(this.vATDateDATE, otherexpense.vATDateDATE) &&
        Objects.equals(this.vATAmount, otherexpense.vATAmount) &&
        Objects.equals(this.localVATAmount, otherexpense.localVATAmount) &&
        Objects.equals(this.roundingAmount, otherexpense.roundingAmount) &&
        Objects.equals(this.localRoundingAmount, otherexpense.localRoundingAmount) &&
        Objects.equals(this.isAccountedLaterVAT, otherexpense.isAccountedLaterVAT) &&
        Objects.equals(this.simplifiedVATDocument, otherexpense.simplifiedVATDocument) &&
        Objects.equals(this.vATReportPreference, otherexpense.vATReportPreference) &&
        Objects.equals(this.vATByPayment, otherexpense.vATByPayment) &&
        Objects.equals(this.vATByPaymentEndDateDATE, otherexpense.vATByPaymentEndDateDATE) &&
        Objects.equals(this.dataEntryKind, otherexpense.dataEntryKind) &&
        Objects.equals(this.documentInVATByPaymentMode, otherexpense.documentInVATByPaymentMode) &&
        Objects.equals(this.sDocumentID, otherexpense.sDocumentID) &&
        Objects.equals(this.sDocumentType, otherexpense.sDocumentType) &&
        Objects.equals(this.specialDocumentMode, otherexpense.specialDocumentMode) &&
        Objects.equals(this.specialDocumentModeText, otherexpense.specialDocumentModeText) &&
        Objects.equals(this.sDocumentVATDateDATE, otherexpense.sDocumentVATDateDATE) &&
        Objects.equals(this.vATVoluntaryPaid, otherexpense.vATVoluntaryPaid) &&
        Objects.equals(this.hasImpactToThroughItem, otherexpense.hasImpactToThroughItem) &&
        Objects.equals(this.sDocumentNotPaidAmount, otherexpense.sDocumentNotPaidAmount) &&
        Objects.equals(this.sDocumentLocalNotPaidAmount, otherexpense.sDocumentLocalNotPaidAmount) &&
        Objects.equals(this.vATReportReference, otherexpense.vATReportReference) &&
        Objects.equals(this.electronicPayment, otherexpense.electronicPayment) &&
        Objects.equals(this.firmBankAccountID, otherexpense.firmBankAccountID) &&
        Objects.equals(this.dueDateDATE, otherexpense.dueDateDATE) &&
        Objects.equals(this.constSymbolID, otherexpense.constSymbolID) &&
        Objects.equals(this.varSymbol, otherexpense.varSymbol) &&
        Objects.equals(this.paidAmount, otherexpense.paidAmount) &&
        Objects.equals(this.localPaidAmount, otherexpense.localPaidAmount) &&
        Objects.equals(this.pAmount, otherexpense.pAmount) &&
        Objects.equals(this.pDocumentType, otherexpense.pDocumentType) &&
        Objects.equals(this.pDocumentID, otherexpense.pDocumentID) &&
        Objects.equals(this.pDisKind, otherexpense.pDisKind) &&
        Objects.equals(this.notPaidAmount, otherexpense.notPaidAmount) &&
        Objects.equals(this.localNotPaidAmount, otherexpense.localNotPaidAmount) &&
        Objects.equals(this.closingPeriodID, otherexpense.closingPeriodID) &&
        Objects.equals(this.lastPaymentPeriodID, otherexpense.lastPaymentPeriodID) &&
        Objects.equals(this.isProfit, otherexpense.isProfit) &&
        Objects.equals(this.vATAdmitDateDATE, otherexpense.vATAdmitDateDATE) &&
        Objects.equals(this.externalNumber, otherexpense.externalNumber) &&
        Objects.equals(this.vATByPaymentExitTaxation, otherexpense.vATByPaymentExitTaxation) &&
        Objects.equals(this.eETTurnoverID, otherexpense.eETTurnoverID) &&
        Objects.equals(this.EET, otherexpense.EET) &&
        Objects.equals(this.createdAtDATE, otherexpense.createdAtDATE) &&
        Objects.equals(this.correctedAtDATE, otherexpense.correctedAtDATE);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, accPresetDefID, firmID, firmOfficeID, personID, description, accDateDATE, accDocQueueID, accountingType, isAccounted, dirty, countryID, currencyID, currRate, refCurrRate, coef, localCoef, zoneID, localZoneID, refCurrencyID, localRefCurrencyID, currRateInfo, amount, localAmount, vATDocument, amountWithoutVAT, localAmountWithoutVAT, vATDateDATE, vATAmount, localVATAmount, roundingAmount, localRoundingAmount, isAccountedLaterVAT, simplifiedVATDocument, vATReportPreference, vATByPayment, vATByPaymentEndDateDATE, dataEntryKind, documentInVATByPaymentMode, sDocumentID, sDocumentType, specialDocumentMode, specialDocumentModeText, sDocumentVATDateDATE, vATVoluntaryPaid, hasImpactToThroughItem, sDocumentNotPaidAmount, sDocumentLocalNotPaidAmount, vATReportReference, electronicPayment, firmBankAccountID, dueDateDATE, constSymbolID, varSymbol, paidAmount, localPaidAmount, pAmount, pDocumentType, pDocumentID, pDisKind, notPaidAmount, localNotPaidAmount, closingPeriodID, lastPaymentPeriodID, isProfit, vATAdmitDateDATE, externalNumber, vATByPaymentExitTaxation, eETTurnoverID, EET, createdAtDATE, correctedAtDATE);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Otherexpense {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    accPresetDefID: ").append(toIndentedString(accPresetDefID)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    firmOfficeID: ").append(toIndentedString(firmOfficeID)).append("\n");
    sb.append("    personID: ").append(toIndentedString(personID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accDateDATE: ").append(toIndentedString(accDateDATE)).append("\n");
    sb.append("    accDocQueueID: ").append(toIndentedString(accDocQueueID)).append("\n");
    sb.append("    accountingType: ").append(toIndentedString(accountingType)).append("\n");
    sb.append("    isAccounted: ").append(toIndentedString(isAccounted)).append("\n");
    sb.append("    dirty: ").append(toIndentedString(dirty)).append("\n");
    sb.append("    countryID: ").append(toIndentedString(countryID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    currRate: ").append(toIndentedString(currRate)).append("\n");
    sb.append("    refCurrRate: ").append(toIndentedString(refCurrRate)).append("\n");
    sb.append("    coef: ").append(toIndentedString(coef)).append("\n");
    sb.append("    localCoef: ").append(toIndentedString(localCoef)).append("\n");
    sb.append("    zoneID: ").append(toIndentedString(zoneID)).append("\n");
    sb.append("    localZoneID: ").append(toIndentedString(localZoneID)).append("\n");
    sb.append("    refCurrencyID: ").append(toIndentedString(refCurrencyID)).append("\n");
    sb.append("    localRefCurrencyID: ").append(toIndentedString(localRefCurrencyID)).append("\n");
    sb.append("    currRateInfo: ").append(toIndentedString(currRateInfo)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    vATDocument: ").append(toIndentedString(vATDocument)).append("\n");
    sb.append("    amountWithoutVAT: ").append(toIndentedString(amountWithoutVAT)).append("\n");
    sb.append("    localAmountWithoutVAT: ").append(toIndentedString(localAmountWithoutVAT)).append("\n");
    sb.append("    vATDateDATE: ").append(toIndentedString(vATDateDATE)).append("\n");
    sb.append("    vATAmount: ").append(toIndentedString(vATAmount)).append("\n");
    sb.append("    localVATAmount: ").append(toIndentedString(localVATAmount)).append("\n");
    sb.append("    roundingAmount: ").append(toIndentedString(roundingAmount)).append("\n");
    sb.append("    localRoundingAmount: ").append(toIndentedString(localRoundingAmount)).append("\n");
    sb.append("    isAccountedLaterVAT: ").append(toIndentedString(isAccountedLaterVAT)).append("\n");
    sb.append("    simplifiedVATDocument: ").append(toIndentedString(simplifiedVATDocument)).append("\n");
    sb.append("    vATReportPreference: ").append(toIndentedString(vATReportPreference)).append("\n");
    sb.append("    vATByPayment: ").append(toIndentedString(vATByPayment)).append("\n");
    sb.append("    vATByPaymentEndDateDATE: ").append(toIndentedString(vATByPaymentEndDateDATE)).append("\n");
    sb.append("    dataEntryKind: ").append(toIndentedString(dataEntryKind)).append("\n");
    sb.append("    documentInVATByPaymentMode: ").append(toIndentedString(documentInVATByPaymentMode)).append("\n");
    sb.append("    sDocumentID: ").append(toIndentedString(sDocumentID)).append("\n");
    sb.append("    sDocumentType: ").append(toIndentedString(sDocumentType)).append("\n");
    sb.append("    specialDocumentMode: ").append(toIndentedString(specialDocumentMode)).append("\n");
    sb.append("    specialDocumentModeText: ").append(toIndentedString(specialDocumentModeText)).append("\n");
    sb.append("    sDocumentVATDateDATE: ").append(toIndentedString(sDocumentVATDateDATE)).append("\n");
    sb.append("    vATVoluntaryPaid: ").append(toIndentedString(vATVoluntaryPaid)).append("\n");
    sb.append("    hasImpactToThroughItem: ").append(toIndentedString(hasImpactToThroughItem)).append("\n");
    sb.append("    sDocumentNotPaidAmount: ").append(toIndentedString(sDocumentNotPaidAmount)).append("\n");
    sb.append("    sDocumentLocalNotPaidAmount: ").append(toIndentedString(sDocumentLocalNotPaidAmount)).append("\n");
    sb.append("    vATReportReference: ").append(toIndentedString(vATReportReference)).append("\n");
    sb.append("    electronicPayment: ").append(toIndentedString(electronicPayment)).append("\n");
    sb.append("    firmBankAccountID: ").append(toIndentedString(firmBankAccountID)).append("\n");
    sb.append("    dueDateDATE: ").append(toIndentedString(dueDateDATE)).append("\n");
    sb.append("    constSymbolID: ").append(toIndentedString(constSymbolID)).append("\n");
    sb.append("    varSymbol: ").append(toIndentedString(varSymbol)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    localPaidAmount: ").append(toIndentedString(localPaidAmount)).append("\n");
    sb.append("    pAmount: ").append(toIndentedString(pAmount)).append("\n");
    sb.append("    pDocumentType: ").append(toIndentedString(pDocumentType)).append("\n");
    sb.append("    pDocumentID: ").append(toIndentedString(pDocumentID)).append("\n");
    sb.append("    pDisKind: ").append(toIndentedString(pDisKind)).append("\n");
    sb.append("    notPaidAmount: ").append(toIndentedString(notPaidAmount)).append("\n");
    sb.append("    localNotPaidAmount: ").append(toIndentedString(localNotPaidAmount)).append("\n");
    sb.append("    closingPeriodID: ").append(toIndentedString(closingPeriodID)).append("\n");
    sb.append("    lastPaymentPeriodID: ").append(toIndentedString(lastPaymentPeriodID)).append("\n");
    sb.append("    isProfit: ").append(toIndentedString(isProfit)).append("\n");
    sb.append("    vATAdmitDateDATE: ").append(toIndentedString(vATAdmitDateDATE)).append("\n");
    sb.append("    externalNumber: ").append(toIndentedString(externalNumber)).append("\n");
    sb.append("    vATByPaymentExitTaxation: ").append(toIndentedString(vATByPaymentExitTaxation)).append("\n");
    sb.append("    eETTurnoverID: ").append(toIndentedString(eETTurnoverID)).append("\n");
    sb.append("    EET: ").append(toIndentedString(EET)).append("\n");
    sb.append("    createdAtDATE: ").append(toIndentedString(createdAtDATE)).append("\n");
    sb.append("    correctedAtDATE: ").append(toIndentedString(correctedAtDATE)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

