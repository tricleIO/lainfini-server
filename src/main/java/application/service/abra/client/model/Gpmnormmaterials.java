/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Gpmnormmaterials
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Gpmnormmaterials   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("storecard_id")
  private String storecardId = null;

  @SerializedName("store_id")
  private String storeId = null;

  @SerializedName("quantity")
  private Double quantity = null;

  @SerializedName("unitquantity")
  private Double unitquantity = null;

  @SerializedName("weight")
  private Double weight = null;

  @SerializedName("unitweight")
  private Double unitweight = null;

  @SerializedName("weightunit")
  private Integer weightunit = null;

  @SerializedName("weightingrams")
  private Double weightingrams = null;

  @SerializedName("wastepercentage")
  private Double wastepercentage = null;

  @SerializedName("replaceable")
  private Integer replaceable = null;

  @SerializedName("decomposition")
  private Boolean decomposition = null;

  @SerializedName("useoperatingstore")
  private Boolean useoperatingstore = null;

  @SerializedName("qunit")
  private String qunit = null;

  @SerializedName("unitrate")
  private Double unitrate = null;

  @SerializedName("calculatedprice")
  private Double calculatedprice = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("transferqunit")
  private String transferqunit = null;

  @SerializedName("transferunitrate")
  private Double transferunitrate = null;

  public Gpmnormmaterials displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Gpmnormmaterials id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Gpmnormmaterials classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Gpmnormmaterials objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Gpmnormmaterials parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu norma gastrovýroby [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu norma gastrovýroby [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Gpmnormmaterials posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Gpmnormmaterials storecardId(String storecardId) {
    this.storecardId = storecardId;
    return this;
  }

   /**
   * skladová karta; id objektu skladová karta [persistentní položka]
   * @return storecardId
  **/
  @ApiModelProperty(example = "null", value = "skladová karta; id objektu skladová karta [persistentní položka]")
  public String getStorecardId() {
    return storecardId;
  }

  public void setStorecardId(String storecardId) {
    this.storecardId = storecardId;
  }

  public Gpmnormmaterials storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

   /**
   * sklad; id objektu sklad [persistentní položka]
   * @return storeId
  **/
  @ApiModelProperty(example = "null", value = "sklad; id objektu sklad [persistentní položka]")
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  public Gpmnormmaterials quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * počet v jedn.se vzt.1 [persistentní položka]
   * @return quantity
  **/
  @ApiModelProperty(example = "null", value = "počet v jedn.se vzt.1 [persistentní položka]")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public Gpmnormmaterials unitquantity(Double unitquantity) {
    this.unitquantity = unitquantity;
    return this;
  }

   /**
   * počet
   * @return unitquantity
  **/
  @ApiModelProperty(example = "null", value = "počet")
  public Double getUnitquantity() {
    return unitquantity;
  }

  public void setUnitquantity(Double unitquantity) {
    this.unitquantity = unitquantity;
  }

  public Gpmnormmaterials weight(Double weight) {
    this.weight = weight;
    return this;
  }

   /**
   * hmotnost
   * @return weight
  **/
  @ApiModelProperty(example = "null", value = "hmotnost")
  public Double getWeight() {
    return weight;
  }

  public void setWeight(Double weight) {
    this.weight = weight;
  }

  public Gpmnormmaterials unitweight(Double unitweight) {
    this.unitweight = unitweight;
    return this;
  }

   /**
   * hmotnost jednotky
   * @return unitweight
  **/
  @ApiModelProperty(example = "null", value = "hmotnost jednotky")
  public Double getUnitweight() {
    return unitweight;
  }

  public void setUnitweight(Double unitweight) {
    this.unitweight = unitweight;
  }

  public Gpmnormmaterials weightunit(Integer weightunit) {
    this.weightunit = weightunit;
    return this;
  }

   /**
   * hmotnostní jednotka
   * @return weightunit
  **/
  @ApiModelProperty(example = "null", value = "hmotnostní jednotka")
  public Integer getWeightunit() {
    return weightunit;
  }

  public void setWeightunit(Integer weightunit) {
    this.weightunit = weightunit;
  }

  public Gpmnormmaterials weightingrams(Double weightingrams) {
    this.weightingrams = weightingrams;
    return this;
  }

   /**
   * hmotnost v gramech
   * @return weightingrams
  **/
  @ApiModelProperty(example = "null", value = "hmotnost v gramech")
  public Double getWeightingrams() {
    return weightingrams;
  }

  public void setWeightingrams(Double weightingrams) {
    this.weightingrams = weightingrams;
  }

  public Gpmnormmaterials wastepercentage(Double wastepercentage) {
    this.wastepercentage = wastepercentage;
    return this;
  }

   /**
   * ztráty [persistentní položka]
   * @return wastepercentage
  **/
  @ApiModelProperty(example = "null", value = "ztráty [persistentní položka]")
  public Double getWastepercentage() {
    return wastepercentage;
  }

  public void setWastepercentage(Double wastepercentage) {
    this.wastepercentage = wastepercentage;
  }

  public Gpmnormmaterials replaceable(Integer replaceable) {
    this.replaceable = replaceable;
    return this;
  }

   /**
   * nahrazování [persistentní položka]
   * @return replaceable
  **/
  @ApiModelProperty(example = "null", value = "nahrazování [persistentní položka]")
  public Integer getReplaceable() {
    return replaceable;
  }

  public void setReplaceable(Integer replaceable) {
    this.replaceable = replaceable;
  }

  public Gpmnormmaterials decomposition(Boolean decomposition) {
    this.decomposition = decomposition;
    return this;
  }

   /**
   * rozpad [persistentní položka]
   * @return decomposition
  **/
  @ApiModelProperty(example = "null", value = "rozpad [persistentní položka]")
  public Boolean getDecomposition() {
    return decomposition;
  }

  public void setDecomposition(Boolean decomposition) {
    this.decomposition = decomposition;
  }

  public Gpmnormmaterials useoperatingstore(Boolean useoperatingstore) {
    this.useoperatingstore = useoperatingstore;
    return this;
  }

   /**
   * z provozního skladu [persistentní položka]
   * @return useoperatingstore
  **/
  @ApiModelProperty(example = "null", value = "z provozního skladu [persistentní položka]")
  public Boolean getUseoperatingstore() {
    return useoperatingstore;
  }

  public void setUseoperatingstore(Boolean useoperatingstore) {
    this.useoperatingstore = useoperatingstore;
  }

  public Gpmnormmaterials qunit(String qunit) {
    this.qunit = qunit;
    return this;
  }

   /**
   * jednotka [persistentní položka]
   * @return qunit
  **/
  @ApiModelProperty(example = "null", value = "jednotka [persistentní položka]")
  public String getQunit() {
    return qunit;
  }

  public void setQunit(String qunit) {
    this.qunit = qunit;
  }

  public Gpmnormmaterials unitrate(Double unitrate) {
    this.unitrate = unitrate;
    return this;
  }

   /**
   * vztah
   * @return unitrate
  **/
  @ApiModelProperty(example = "null", value = "vztah")
  public Double getUnitrate() {
    return unitrate;
  }

  public void setUnitrate(Double unitrate) {
    this.unitrate = unitrate;
  }

  public Gpmnormmaterials calculatedprice(Double calculatedprice) {
    this.calculatedprice = calculatedprice;
    return this;
  }

   /**
   * cena [persistentní položka]
   * @return calculatedprice
  **/
  @ApiModelProperty(example = "null", value = "cena [persistentní položka]")
  public Double getCalculatedprice() {
    return calculatedprice;
  }

  public void setCalculatedprice(Double calculatedprice) {
    this.calculatedprice = calculatedprice;
  }

  public Gpmnormmaterials description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Gpmnormmaterials transferqunit(String transferqunit) {
    this.transferqunit = transferqunit;
    return this;
  }

   /**
   * jednotka pro převod [persistentní položka]
   * @return transferqunit
  **/
  @ApiModelProperty(example = "null", value = "jednotka pro převod [persistentní položka]")
  public String getTransferqunit() {
    return transferqunit;
  }

  public void setTransferqunit(String transferqunit) {
    this.transferqunit = transferqunit;
  }

  public Gpmnormmaterials transferunitrate(Double transferunitrate) {
    this.transferunitrate = transferunitrate;
    return this;
  }

   /**
   * vztah přev.j.
   * @return transferunitrate
  **/
  @ApiModelProperty(example = "null", value = "vztah přev.j.")
  public Double getTransferunitrate() {
    return transferunitrate;
  }

  public void setTransferunitrate(Double transferunitrate) {
    this.transferunitrate = transferunitrate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Gpmnormmaterials gpmnormmaterials = (Gpmnormmaterials) o;
    return Objects.equals(this.displayname, gpmnormmaterials.displayname) &&
        Objects.equals(this.id, gpmnormmaterials.id) &&
        Objects.equals(this.classid, gpmnormmaterials.classid) &&
        Objects.equals(this.objversion, gpmnormmaterials.objversion) &&
        Objects.equals(this.parentId, gpmnormmaterials.parentId) &&
        Objects.equals(this.posindex, gpmnormmaterials.posindex) &&
        Objects.equals(this.storecardId, gpmnormmaterials.storecardId) &&
        Objects.equals(this.storeId, gpmnormmaterials.storeId) &&
        Objects.equals(this.quantity, gpmnormmaterials.quantity) &&
        Objects.equals(this.unitquantity, gpmnormmaterials.unitquantity) &&
        Objects.equals(this.weight, gpmnormmaterials.weight) &&
        Objects.equals(this.unitweight, gpmnormmaterials.unitweight) &&
        Objects.equals(this.weightunit, gpmnormmaterials.weightunit) &&
        Objects.equals(this.weightingrams, gpmnormmaterials.weightingrams) &&
        Objects.equals(this.wastepercentage, gpmnormmaterials.wastepercentage) &&
        Objects.equals(this.replaceable, gpmnormmaterials.replaceable) &&
        Objects.equals(this.decomposition, gpmnormmaterials.decomposition) &&
        Objects.equals(this.useoperatingstore, gpmnormmaterials.useoperatingstore) &&
        Objects.equals(this.qunit, gpmnormmaterials.qunit) &&
        Objects.equals(this.unitrate, gpmnormmaterials.unitrate) &&
        Objects.equals(this.calculatedprice, gpmnormmaterials.calculatedprice) &&
        Objects.equals(this.description, gpmnormmaterials.description) &&
        Objects.equals(this.transferqunit, gpmnormmaterials.transferqunit) &&
        Objects.equals(this.transferunitrate, gpmnormmaterials.transferunitrate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, storecardId, storeId, quantity, unitquantity, weight, unitweight, weightunit, weightingrams, wastepercentage, replaceable, decomposition, useoperatingstore, qunit, unitrate, calculatedprice, description, transferqunit, transferunitrate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Gpmnormmaterials {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    storecardId: ").append(toIndentedString(storecardId)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitquantity: ").append(toIndentedString(unitquantity)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    unitweight: ").append(toIndentedString(unitweight)).append("\n");
    sb.append("    weightunit: ").append(toIndentedString(weightunit)).append("\n");
    sb.append("    weightingrams: ").append(toIndentedString(weightingrams)).append("\n");
    sb.append("    wastepercentage: ").append(toIndentedString(wastepercentage)).append("\n");
    sb.append("    replaceable: ").append(toIndentedString(replaceable)).append("\n");
    sb.append("    decomposition: ").append(toIndentedString(decomposition)).append("\n");
    sb.append("    useoperatingstore: ").append(toIndentedString(useoperatingstore)).append("\n");
    sb.append("    qunit: ").append(toIndentedString(qunit)).append("\n");
    sb.append("    unitrate: ").append(toIndentedString(unitrate)).append("\n");
    sb.append("    calculatedprice: ").append(toIndentedString(calculatedprice)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    transferqunit: ").append(toIndentedString(transferqunit)).append("\n");
    sb.append("    transferunitrate: ").append(toIndentedString(transferunitrate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

