/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Pricelist
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Pricelist   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Pricelistvalidity> rows = new ArrayList<Pricelistvalidity>();

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("Comment")
  private String comment = null;

  @SerializedName("ManagedBy_ID")
  private String managedByID = null;

  @SerializedName("CreationDate$DATE")
  private DateTime creationDateDATE = null;

  @SerializedName("DealerDiscountExcluded")
  private Boolean dealerDiscountExcluded = null;

  @SerializedName("IndividualDiscountExcluded")
  private Boolean individualDiscountExcluded = null;

  @SerializedName("FinancialDiscountExcluded")
  private Boolean financialDiscountExcluded = null;

  @SerializedName("QuantityDiscountExcluded")
  private Boolean quantityDiscountExcluded = null;

  @SerializedName("DocumentDiscountExcluded")
  private Boolean documentDiscountExcluded = null;

  @SerializedName("PriceListRoundings")
  private List<Pricelistrounding> priceListRoundings = new ArrayList<Pricelistrounding>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Pricelist rows(List<Pricelistvalidity> rows) {
    this.rows = rows;
    return this;
  }

  public Pricelist addRowsItem(Pricelistvalidity rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Datové platnosti ceníku [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Datové platnosti ceníku [nepersistentní položka]")
  public List<Pricelistvalidity> getRows() {
    return rows;
  }

  public void setRows(List<Pricelistvalidity> rows) {
    this.rows = rows;
  }

  public Pricelist hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Pricelist code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Pricelist name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Pricelist note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Pricelist comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Poznámka
   * @return comment
  **/
  @ApiModelProperty(example = "null", value = "Poznámka")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Pricelist managedByID(String managedByID) {
    this.managedByID = managedByID;
    return this;
  }

   /**
   * Správce ceníku; ID objektu Uživatel [persistentní položka]
   * @return managedByID
  **/
  @ApiModelProperty(example = "null", value = "Správce ceníku; ID objektu Uživatel [persistentní položka]")
  public String getManagedByID() {
    return managedByID;
  }

  public void setManagedByID(String managedByID) {
    this.managedByID = managedByID;
  }

  public Pricelist creationDateDATE(DateTime creationDateDATE) {
    this.creationDateDATE = creationDateDATE;
    return this;
  }

   /**
   * Datum vytvoření ceníku [persistentní položka]
   * @return creationDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum vytvoření ceníku [persistentní položka]")
  public DateTime getCreationDateDATE() {
    return creationDateDATE;
  }

  public void setCreationDateDATE(DateTime creationDateDATE) {
    this.creationDateDATE = creationDateDATE;
  }

  public Pricelist dealerDiscountExcluded(Boolean dealerDiscountExcluded) {
    this.dealerDiscountExcluded = dealerDiscountExcluded;
    return this;
  }

   /**
   * Neuplatňovat dealerské slevy [persistentní položka]
   * @return dealerDiscountExcluded
  **/
  @ApiModelProperty(example = "null", value = "Neuplatňovat dealerské slevy [persistentní položka]")
  public Boolean getDealerDiscountExcluded() {
    return dealerDiscountExcluded;
  }

  public void setDealerDiscountExcluded(Boolean dealerDiscountExcluded) {
    this.dealerDiscountExcluded = dealerDiscountExcluded;
  }

  public Pricelist individualDiscountExcluded(Boolean individualDiscountExcluded) {
    this.individualDiscountExcluded = individualDiscountExcluded;
    return this;
  }

   /**
   * Neuplatňovat individuální slevy [persistentní položka]
   * @return individualDiscountExcluded
  **/
  @ApiModelProperty(example = "null", value = "Neuplatňovat individuální slevy [persistentní položka]")
  public Boolean getIndividualDiscountExcluded() {
    return individualDiscountExcluded;
  }

  public void setIndividualDiscountExcluded(Boolean individualDiscountExcluded) {
    this.individualDiscountExcluded = individualDiscountExcluded;
  }

  public Pricelist financialDiscountExcluded(Boolean financialDiscountExcluded) {
    this.financialDiscountExcluded = financialDiscountExcluded;
    return this;
  }

   /**
   * Neuplatňovat finanční slevy [persistentní položka]
   * @return financialDiscountExcluded
  **/
  @ApiModelProperty(example = "null", value = "Neuplatňovat finanční slevy [persistentní položka]")
  public Boolean getFinancialDiscountExcluded() {
    return financialDiscountExcluded;
  }

  public void setFinancialDiscountExcluded(Boolean financialDiscountExcluded) {
    this.financialDiscountExcluded = financialDiscountExcluded;
  }

  public Pricelist quantityDiscountExcluded(Boolean quantityDiscountExcluded) {
    this.quantityDiscountExcluded = quantityDiscountExcluded;
    return this;
  }

   /**
   * Neuplatňovat množstevní slevy [persistentní položka]
   * @return quantityDiscountExcluded
  **/
  @ApiModelProperty(example = "null", value = "Neuplatňovat množstevní slevy [persistentní položka]")
  public Boolean getQuantityDiscountExcluded() {
    return quantityDiscountExcluded;
  }

  public void setQuantityDiscountExcluded(Boolean quantityDiscountExcluded) {
    this.quantityDiscountExcluded = quantityDiscountExcluded;
  }

  public Pricelist documentDiscountExcluded(Boolean documentDiscountExcluded) {
    this.documentDiscountExcluded = documentDiscountExcluded;
    return this;
  }

   /**
   * Vyloučeno z dodatečné slevy [persistentní položka]
   * @return documentDiscountExcluded
  **/
  @ApiModelProperty(example = "null", value = "Vyloučeno z dodatečné slevy [persistentní položka]")
  public Boolean getDocumentDiscountExcluded() {
    return documentDiscountExcluded;
  }

  public void setDocumentDiscountExcluded(Boolean documentDiscountExcluded) {
    this.documentDiscountExcluded = documentDiscountExcluded;
  }

  public Pricelist priceListRoundings(List<Pricelistrounding> priceListRoundings) {
    this.priceListRoundings = priceListRoundings;
    return this;
  }

  public Pricelist addPriceListRoundingsItem(Pricelistrounding priceListRoundingsItem) {
    this.priceListRoundings.add(priceListRoundingsItem);
    return this;
  }

   /**
   * Zaokrouhlování ceníku; kolekce BO Zaokrouhlování ceníku [nepersistentní položka]
   * @return priceListRoundings
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlování ceníku; kolekce BO Zaokrouhlování ceníku [nepersistentní položka]")
  public List<Pricelistrounding> getPriceListRoundings() {
    return priceListRoundings;
  }

  public void setPriceListRoundings(List<Pricelistrounding> priceListRoundings) {
    this.priceListRoundings = priceListRoundings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pricelist pricelist = (Pricelist) o;
    return Objects.equals(this.displayName, pricelist.displayName) &&
        Objects.equals(this.ID, pricelist.ID) &&
        Objects.equals(this.classID, pricelist.classID) &&
        Objects.equals(this.objVersion, pricelist.objVersion) &&
        Objects.equals(this.rows, pricelist.rows) &&
        Objects.equals(this.hidden, pricelist.hidden) &&
        Objects.equals(this.code, pricelist.code) &&
        Objects.equals(this.name, pricelist.name) &&
        Objects.equals(this.note, pricelist.note) &&
        Objects.equals(this.comment, pricelist.comment) &&
        Objects.equals(this.managedByID, pricelist.managedByID) &&
        Objects.equals(this.creationDateDATE, pricelist.creationDateDATE) &&
        Objects.equals(this.dealerDiscountExcluded, pricelist.dealerDiscountExcluded) &&
        Objects.equals(this.individualDiscountExcluded, pricelist.individualDiscountExcluded) &&
        Objects.equals(this.financialDiscountExcluded, pricelist.financialDiscountExcluded) &&
        Objects.equals(this.quantityDiscountExcluded, pricelist.quantityDiscountExcluded) &&
        Objects.equals(this.documentDiscountExcluded, pricelist.documentDiscountExcluded) &&
        Objects.equals(this.priceListRoundings, pricelist.priceListRoundings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, hidden, code, name, note, comment, managedByID, creationDateDATE, dealerDiscountExcluded, individualDiscountExcluded, financialDiscountExcluded, quantityDiscountExcluded, documentDiscountExcluded, priceListRoundings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pricelist {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    managedByID: ").append(toIndentedString(managedByID)).append("\n");
    sb.append("    creationDateDATE: ").append(toIndentedString(creationDateDATE)).append("\n");
    sb.append("    dealerDiscountExcluded: ").append(toIndentedString(dealerDiscountExcluded)).append("\n");
    sb.append("    individualDiscountExcluded: ").append(toIndentedString(individualDiscountExcluded)).append("\n");
    sb.append("    financialDiscountExcluded: ").append(toIndentedString(financialDiscountExcluded)).append("\n");
    sb.append("    quantityDiscountExcluded: ").append(toIndentedString(quantityDiscountExcluded)).append("\n");
    sb.append("    documentDiscountExcluded: ").append(toIndentedString(documentDiscountExcluded)).append("\n");
    sb.append("    priceListRoundings: ").append(toIndentedString(priceListRoundings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

