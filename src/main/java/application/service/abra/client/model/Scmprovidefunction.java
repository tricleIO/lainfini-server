/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Scmprovidefunction
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Scmprovidefunction   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("scriptpackage_id")
  private String scriptpackageId = null;

  @SerializedName("scriptlibrary")
  private String scriptlibrary = null;

  @SerializedName("scriptfunction")
  private String scriptfunction = null;

  @SerializedName("scriptpackagename")
  private String scriptpackagename = null;

  public Scmprovidefunction displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Scmprovidefunction id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Scmprovidefunction classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Scmprovidefunction objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Scmprovidefunction hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Scmprovidefunction name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Scmprovidefunction description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Scmprovidefunction scriptpackageId(String scriptpackageId) {
    this.scriptpackageId = scriptpackageId;
    return this;
  }

   /**
   * balíček skriptů [persistentní položka]
   * @return scriptpackageId
  **/
  @ApiModelProperty(example = "null", value = "balíček skriptů [persistentní položka]")
  public String getScriptpackageId() {
    return scriptpackageId;
  }

  public void setScriptpackageId(String scriptpackageId) {
    this.scriptpackageId = scriptpackageId;
  }

  public Scmprovidefunction scriptlibrary(String scriptlibrary) {
    this.scriptlibrary = scriptlibrary;
    return this;
  }

   /**
   * knihovna skriptů [persistentní položka]
   * @return scriptlibrary
  **/
  @ApiModelProperty(example = "null", value = "knihovna skriptů [persistentní položka]")
  public String getScriptlibrary() {
    return scriptlibrary;
  }

  public void setScriptlibrary(String scriptlibrary) {
    this.scriptlibrary = scriptlibrary;
  }

  public Scmprovidefunction scriptfunction(String scriptfunction) {
    this.scriptfunction = scriptfunction;
    return this;
  }

   /**
   * funkce [persistentní položka]
   * @return scriptfunction
  **/
  @ApiModelProperty(example = "null", value = "funkce [persistentní položka]")
  public String getScriptfunction() {
    return scriptfunction;
  }

  public void setScriptfunction(String scriptfunction) {
    this.scriptfunction = scriptfunction;
  }

  public Scmprovidefunction scriptpackagename(String scriptpackagename) {
    this.scriptpackagename = scriptpackagename;
    return this;
  }

   /**
   * název balíčku skriptů
   * @return scriptpackagename
  **/
  @ApiModelProperty(example = "null", value = "název balíčku skriptů")
  public String getScriptpackagename() {
    return scriptpackagename;
  }

  public void setScriptpackagename(String scriptpackagename) {
    this.scriptpackagename = scriptpackagename;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scmprovidefunction scmprovidefunction = (Scmprovidefunction) o;
    return Objects.equals(this.displayname, scmprovidefunction.displayname) &&
        Objects.equals(this.id, scmprovidefunction.id) &&
        Objects.equals(this.classid, scmprovidefunction.classid) &&
        Objects.equals(this.objversion, scmprovidefunction.objversion) &&
        Objects.equals(this.hidden, scmprovidefunction.hidden) &&
        Objects.equals(this.name, scmprovidefunction.name) &&
        Objects.equals(this.description, scmprovidefunction.description) &&
        Objects.equals(this.scriptpackageId, scmprovidefunction.scriptpackageId) &&
        Objects.equals(this.scriptlibrary, scmprovidefunction.scriptlibrary) &&
        Objects.equals(this.scriptfunction, scmprovidefunction.scriptfunction) &&
        Objects.equals(this.scriptpackagename, scmprovidefunction.scriptpackagename);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, name, description, scriptpackageId, scriptlibrary, scriptfunction, scriptpackagename);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scmprovidefunction {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    scriptpackageId: ").append(toIndentedString(scriptpackageId)).append("\n");
    sb.append("    scriptlibrary: ").append(toIndentedString(scriptlibrary)).append("\n");
    sb.append("    scriptfunction: ").append(toIndentedString(scriptfunction)).append("\n");
    sb.append("    scriptpackagename: ").append(toIndentedString(scriptpackagename)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

