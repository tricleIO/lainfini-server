/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Mlbexpense
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Mlbexpense   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("MLBJourney_ID")
  private String mLBJourneyID = null;

  @SerializedName("TRMCar_ID")
  private String tRMCarID = null;

  @SerializedName("ExpenseDate$DATE")
  private DateTime expenseDateDATE = null;

  @SerializedName("ExpenseType")
  private Integer expenseType = null;

  @SerializedName("MLBPlace_ID")
  private String mLBPlaceID = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("FuelQuantity")
  private Double fuelQuantity = null;

  @SerializedName("TachoFuel")
  private Double tachoFuel = null;

  @SerializedName("PaymentType")
  private Integer paymentType = null;

  @SerializedName("BalanceIt")
  private Boolean balanceIt = null;

  @SerializedName("VATRate_ID")
  private String vATRateID = null;

  @SerializedName("ImportKey")
  private String importKey = null;

  @SerializedName("UnitPrice")
  private Double unitPrice = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Mlbexpense mLBJourneyID(String mLBJourneyID) {
    this.mLBJourneyID = mLBJourneyID;
    return this;
  }

   /**
   * Jízda; ID objektu Jízda [persistentní položka]
   * @return mLBJourneyID
  **/
  @ApiModelProperty(example = "null", value = "Jízda; ID objektu Jízda [persistentní položka]")
  public String getMLBJourneyID() {
    return mLBJourneyID;
  }

  public void setMLBJourneyID(String mLBJourneyID) {
    this.mLBJourneyID = mLBJourneyID;
  }

  public Mlbexpense tRMCarID(String tRMCarID) {
    this.tRMCarID = tRMCarID;
    return this;
  }

   /**
   * Vozidlo; ID objektu Vozidlo [persistentní položka]
   * @return tRMCarID
  **/
  @ApiModelProperty(example = "null", value = "Vozidlo; ID objektu Vozidlo [persistentní položka]")
  public String getTRMCarID() {
    return tRMCarID;
  }

  public void setTRMCarID(String tRMCarID) {
    this.tRMCarID = tRMCarID;
  }

  public Mlbexpense expenseDateDATE(DateTime expenseDateDATE) {
    this.expenseDateDATE = expenseDateDATE;
    return this;
  }

   /**
   * Datum výdaje [persistentní položka]
   * @return expenseDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum výdaje [persistentní položka]")
  public DateTime getExpenseDateDATE() {
    return expenseDateDATE;
  }

  public void setExpenseDateDATE(DateTime expenseDateDATE) {
    this.expenseDateDATE = expenseDateDATE;
  }

  public Mlbexpense expenseType(Integer expenseType) {
    this.expenseType = expenseType;
    return this;
  }

   /**
   * Typ výdaje [persistentní položka]
   * @return expenseType
  **/
  @ApiModelProperty(example = "null", value = "Typ výdaje [persistentní položka]")
  public Integer getExpenseType() {
    return expenseType;
  }

  public void setExpenseType(Integer expenseType) {
    this.expenseType = expenseType;
  }

  public Mlbexpense mLBPlaceID(String mLBPlaceID) {
    this.mLBPlaceID = mLBPlaceID;
    return this;
  }

   /**
   * Místo; ID objektu Místa [persistentní položka]
   * @return mLBPlaceID
  **/
  @ApiModelProperty(example = "null", value = "Místo; ID objektu Místa [persistentní položka]")
  public String getMLBPlaceID() {
    return mLBPlaceID;
  }

  public void setMLBPlaceID(String mLBPlaceID) {
    this.mLBPlaceID = mLBPlaceID;
  }

  public Mlbexpense text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Text [persistentní položka]
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "Text [persistentní položka]")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Mlbexpense currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Mlbexpense amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Mlbexpense fuelQuantity(Double fuelQuantity) {
    this.fuelQuantity = fuelQuantity;
    return this;
  }

   /**
   * Množství [persistentní položka]
   * @return fuelQuantity
  **/
  @ApiModelProperty(example = "null", value = "Množství [persistentní položka]")
  public Double getFuelQuantity() {
    return fuelQuantity;
  }

  public void setFuelQuantity(Double fuelQuantity) {
    this.fuelQuantity = fuelQuantity;
  }

  public Mlbexpense tachoFuel(Double tachoFuel) {
    this.tachoFuel = tachoFuel;
    return this;
  }

   /**
   * Stav tachometru [persistentní položka]
   * @return tachoFuel
  **/
  @ApiModelProperty(example = "null", value = "Stav tachometru [persistentní položka]")
  public Double getTachoFuel() {
    return tachoFuel;
  }

  public void setTachoFuel(Double tachoFuel) {
    this.tachoFuel = tachoFuel;
  }

  public Mlbexpense paymentType(Integer paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Typ platby [persistentní položka]
   * @return paymentType
  **/
  @ApiModelProperty(example = "null", value = "Typ platby [persistentní položka]")
  public Integer getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(Integer paymentType) {
    this.paymentType = paymentType;
  }

  public Mlbexpense balanceIt(Boolean balanceIt) {
    this.balanceIt = balanceIt;
    return this;
  }

   /**
   * Vyúčtovat [persistentní položka]
   * @return balanceIt
  **/
  @ApiModelProperty(example = "null", value = "Vyúčtovat [persistentní položka]")
  public Boolean getBalanceIt() {
    return balanceIt;
  }

  public void setBalanceIt(Boolean balanceIt) {
    this.balanceIt = balanceIt;
  }

  public Mlbexpense vATRateID(String vATRateID) {
    this.vATRateID = vATRateID;
    return this;
  }

   /**
   * Sazba DPH; ID objektu DPH sazba [persistentní položka]
   * @return vATRateID
  **/
  @ApiModelProperty(example = "null", value = "Sazba DPH; ID objektu DPH sazba [persistentní položka]")
  public String getVATRateID() {
    return vATRateID;
  }

  public void setVATRateID(String vATRateID) {
    this.vATRateID = vATRateID;
  }

  public Mlbexpense importKey(String importKey) {
    this.importKey = importKey;
    return this;
  }

   /**
   * Identifikace importu [persistentní položka]
   * @return importKey
  **/
  @ApiModelProperty(example = "null", value = "Identifikace importu [persistentní položka]")
  public String getImportKey() {
    return importKey;
  }

  public void setImportKey(String importKey) {
    this.importKey = importKey;
  }

  public Mlbexpense unitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Jednotková cena
   * @return unitPrice
  **/
  @ApiModelProperty(example = "null", value = "Jednotková cena")
  public Double getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mlbexpense mlbexpense = (Mlbexpense) o;
    return Objects.equals(this.displayName, mlbexpense.displayName) &&
        Objects.equals(this.ID, mlbexpense.ID) &&
        Objects.equals(this.classID, mlbexpense.classID) &&
        Objects.equals(this.objVersion, mlbexpense.objVersion) &&
        Objects.equals(this.mLBJourneyID, mlbexpense.mLBJourneyID) &&
        Objects.equals(this.tRMCarID, mlbexpense.tRMCarID) &&
        Objects.equals(this.expenseDateDATE, mlbexpense.expenseDateDATE) &&
        Objects.equals(this.expenseType, mlbexpense.expenseType) &&
        Objects.equals(this.mLBPlaceID, mlbexpense.mLBPlaceID) &&
        Objects.equals(this.text, mlbexpense.text) &&
        Objects.equals(this.currencyID, mlbexpense.currencyID) &&
        Objects.equals(this.amount, mlbexpense.amount) &&
        Objects.equals(this.fuelQuantity, mlbexpense.fuelQuantity) &&
        Objects.equals(this.tachoFuel, mlbexpense.tachoFuel) &&
        Objects.equals(this.paymentType, mlbexpense.paymentType) &&
        Objects.equals(this.balanceIt, mlbexpense.balanceIt) &&
        Objects.equals(this.vATRateID, mlbexpense.vATRateID) &&
        Objects.equals(this.importKey, mlbexpense.importKey) &&
        Objects.equals(this.unitPrice, mlbexpense.unitPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, mLBJourneyID, tRMCarID, expenseDateDATE, expenseType, mLBPlaceID, text, currencyID, amount, fuelQuantity, tachoFuel, paymentType, balanceIt, vATRateID, importKey, unitPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mlbexpense {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    mLBJourneyID: ").append(toIndentedString(mLBJourneyID)).append("\n");
    sb.append("    tRMCarID: ").append(toIndentedString(tRMCarID)).append("\n");
    sb.append("    expenseDateDATE: ").append(toIndentedString(expenseDateDATE)).append("\n");
    sb.append("    expenseType: ").append(toIndentedString(expenseType)).append("\n");
    sb.append("    mLBPlaceID: ").append(toIndentedString(mLBPlaceID)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    fuelQuantity: ").append(toIndentedString(fuelQuantity)).append("\n");
    sb.append("    tachoFuel: ").append(toIndentedString(tachoFuel)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    balanceIt: ").append(toIndentedString(balanceIt)).append("\n");
    sb.append("    vATRateID: ").append(toIndentedString(vATRateID)).append("\n");
    sb.append("    importKey: ").append(toIndentedString(importKey)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

