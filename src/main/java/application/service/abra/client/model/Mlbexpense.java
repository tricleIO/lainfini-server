/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Mlbexpense
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Mlbexpense   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("mlbjourney_id")
  private String mlbjourneyId = null;

  @SerializedName("trmcar_id")
  private String trmcarId = null;

  @SerializedName("expensedate$date")
  private DateTime expensedatedate = null;

  @SerializedName("expensetype")
  private Integer expensetype = null;

  @SerializedName("mlbplace_id")
  private String mlbplaceId = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("currency_id")
  private String currencyId = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("fuelquantity")
  private Double fuelquantity = null;

  @SerializedName("tachofuel")
  private Double tachofuel = null;

  @SerializedName("paymenttype")
  private Integer paymenttype = null;

  @SerializedName("balanceit")
  private Boolean balanceit = null;

  @SerializedName("vatrate_id")
  private String vatrateId = null;

  @SerializedName("importkey")
  private String importkey = null;

  @SerializedName("unitprice")
  private Double unitprice = null;

  public Mlbexpense displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Mlbexpense id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Mlbexpense classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Mlbexpense objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Mlbexpense mlbjourneyId(String mlbjourneyId) {
    this.mlbjourneyId = mlbjourneyId;
    return this;
  }

   /**
   * jízda; id objektu jízda [persistentní položka]
   * @return mlbjourneyId
  **/
  @ApiModelProperty(example = "null", value = "jízda; id objektu jízda [persistentní položka]")
  public String getMlbjourneyId() {
    return mlbjourneyId;
  }

  public void setMlbjourneyId(String mlbjourneyId) {
    this.mlbjourneyId = mlbjourneyId;
  }

  public Mlbexpense trmcarId(String trmcarId) {
    this.trmcarId = trmcarId;
    return this;
  }

   /**
   * vozidlo; id objektu vozidlo [persistentní položka]
   * @return trmcarId
  **/
  @ApiModelProperty(example = "null", value = "vozidlo; id objektu vozidlo [persistentní položka]")
  public String getTrmcarId() {
    return trmcarId;
  }

  public void setTrmcarId(String trmcarId) {
    this.trmcarId = trmcarId;
  }

  public Mlbexpense expensedatedate(DateTime expensedatedate) {
    this.expensedatedate = expensedatedate;
    return this;
  }

   /**
   * datum výdaje [persistentní položka]
   * @return expensedatedate
  **/
  @ApiModelProperty(example = "null", value = "datum výdaje [persistentní položka]")
  public DateTime getExpensedatedate() {
    return expensedatedate;
  }

  public void setExpensedatedate(DateTime expensedatedate) {
    this.expensedatedate = expensedatedate;
  }

  public Mlbexpense expensetype(Integer expensetype) {
    this.expensetype = expensetype;
    return this;
  }

   /**
   * typ výdaje [persistentní položka]
   * @return expensetype
  **/
  @ApiModelProperty(example = "null", value = "typ výdaje [persistentní položka]")
  public Integer getExpensetype() {
    return expensetype;
  }

  public void setExpensetype(Integer expensetype) {
    this.expensetype = expensetype;
  }

  public Mlbexpense mlbplaceId(String mlbplaceId) {
    this.mlbplaceId = mlbplaceId;
    return this;
  }

   /**
   * místo; id objektu místa [persistentní položka]
   * @return mlbplaceId
  **/
  @ApiModelProperty(example = "null", value = "místo; id objektu místa [persistentní položka]")
  public String getMlbplaceId() {
    return mlbplaceId;
  }

  public void setMlbplaceId(String mlbplaceId) {
    this.mlbplaceId = mlbplaceId;
  }

  public Mlbexpense text(String text) {
    this.text = text;
    return this;
  }

   /**
   * text [persistentní položka]
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "text [persistentní položka]")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Mlbexpense currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * měna; id objektu měna [persistentní položka]
   * @return currencyId
  **/
  @ApiModelProperty(example = "null", value = "měna; id objektu měna [persistentní položka]")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public Mlbexpense amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Mlbexpense fuelquantity(Double fuelquantity) {
    this.fuelquantity = fuelquantity;
    return this;
  }

   /**
   * množství [persistentní položka]
   * @return fuelquantity
  **/
  @ApiModelProperty(example = "null", value = "množství [persistentní položka]")
  public Double getFuelquantity() {
    return fuelquantity;
  }

  public void setFuelquantity(Double fuelquantity) {
    this.fuelquantity = fuelquantity;
  }

  public Mlbexpense tachofuel(Double tachofuel) {
    this.tachofuel = tachofuel;
    return this;
  }

   /**
   * stav tachometru [persistentní položka]
   * @return tachofuel
  **/
  @ApiModelProperty(example = "null", value = "stav tachometru [persistentní položka]")
  public Double getTachofuel() {
    return tachofuel;
  }

  public void setTachofuel(Double tachofuel) {
    this.tachofuel = tachofuel;
  }

  public Mlbexpense paymenttype(Integer paymenttype) {
    this.paymenttype = paymenttype;
    return this;
  }

   /**
   * typ platby [persistentní položka]
   * @return paymenttype
  **/
  @ApiModelProperty(example = "null", value = "typ platby [persistentní položka]")
  public Integer getPaymenttype() {
    return paymenttype;
  }

  public void setPaymenttype(Integer paymenttype) {
    this.paymenttype = paymenttype;
  }

  public Mlbexpense balanceit(Boolean balanceit) {
    this.balanceit = balanceit;
    return this;
  }

   /**
   * vyúčtovat [persistentní položka]
   * @return balanceit
  **/
  @ApiModelProperty(example = "null", value = "vyúčtovat [persistentní položka]")
  public Boolean getBalanceit() {
    return balanceit;
  }

  public void setBalanceit(Boolean balanceit) {
    this.balanceit = balanceit;
  }

  public Mlbexpense vatrateId(String vatrateId) {
    this.vatrateId = vatrateId;
    return this;
  }

   /**
   * sazba dph; id objektu dph sazba [persistentní položka]
   * @return vatrateId
  **/
  @ApiModelProperty(example = "null", value = "sazba dph; id objektu dph sazba [persistentní položka]")
  public String getVatrateId() {
    return vatrateId;
  }

  public void setVatrateId(String vatrateId) {
    this.vatrateId = vatrateId;
  }

  public Mlbexpense importkey(String importkey) {
    this.importkey = importkey;
    return this;
  }

   /**
   * identifikace importu [persistentní položka]
   * @return importkey
  **/
  @ApiModelProperty(example = "null", value = "identifikace importu [persistentní položka]")
  public String getImportkey() {
    return importkey;
  }

  public void setImportkey(String importkey) {
    this.importkey = importkey;
  }

  public Mlbexpense unitprice(Double unitprice) {
    this.unitprice = unitprice;
    return this;
  }

   /**
   * jednotková cena
   * @return unitprice
  **/
  @ApiModelProperty(example = "null", value = "jednotková cena")
  public Double getUnitprice() {
    return unitprice;
  }

  public void setUnitprice(Double unitprice) {
    this.unitprice = unitprice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mlbexpense mlbexpense = (Mlbexpense) o;
    return Objects.equals(this.displayname, mlbexpense.displayname) &&
        Objects.equals(this.id, mlbexpense.id) &&
        Objects.equals(this.classid, mlbexpense.classid) &&
        Objects.equals(this.objversion, mlbexpense.objversion) &&
        Objects.equals(this.mlbjourneyId, mlbexpense.mlbjourneyId) &&
        Objects.equals(this.trmcarId, mlbexpense.trmcarId) &&
        Objects.equals(this.expensedatedate, mlbexpense.expensedatedate) &&
        Objects.equals(this.expensetype, mlbexpense.expensetype) &&
        Objects.equals(this.mlbplaceId, mlbexpense.mlbplaceId) &&
        Objects.equals(this.text, mlbexpense.text) &&
        Objects.equals(this.currencyId, mlbexpense.currencyId) &&
        Objects.equals(this.amount, mlbexpense.amount) &&
        Objects.equals(this.fuelquantity, mlbexpense.fuelquantity) &&
        Objects.equals(this.tachofuel, mlbexpense.tachofuel) &&
        Objects.equals(this.paymenttype, mlbexpense.paymenttype) &&
        Objects.equals(this.balanceit, mlbexpense.balanceit) &&
        Objects.equals(this.vatrateId, mlbexpense.vatrateId) &&
        Objects.equals(this.importkey, mlbexpense.importkey) &&
        Objects.equals(this.unitprice, mlbexpense.unitprice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, mlbjourneyId, trmcarId, expensedatedate, expensetype, mlbplaceId, text, currencyId, amount, fuelquantity, tachofuel, paymenttype, balanceit, vatrateId, importkey, unitprice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mlbexpense {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    mlbjourneyId: ").append(toIndentedString(mlbjourneyId)).append("\n");
    sb.append("    trmcarId: ").append(toIndentedString(trmcarId)).append("\n");
    sb.append("    expensedatedate: ").append(toIndentedString(expensedatedate)).append("\n");
    sb.append("    expensetype: ").append(toIndentedString(expensetype)).append("\n");
    sb.append("    mlbplaceId: ").append(toIndentedString(mlbplaceId)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    fuelquantity: ").append(toIndentedString(fuelquantity)).append("\n");
    sb.append("    tachofuel: ").append(toIndentedString(tachofuel)).append("\n");
    sb.append("    paymenttype: ").append(toIndentedString(paymenttype)).append("\n");
    sb.append("    balanceit: ").append(toIndentedString(balanceit)).append("\n");
    sb.append("    vatrateId: ").append(toIndentedString(vatrateId)).append("\n");
    sb.append("    importkey: ").append(toIndentedString(importkey)).append("\n");
    sb.append("    unitprice: ").append(toIndentedString(unitprice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

