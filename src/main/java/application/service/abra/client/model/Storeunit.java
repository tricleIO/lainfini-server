/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Storeunit
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Storeunit   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("unitrate")
  private Double unitrate = null;

  @SerializedName("indivisiblequantity")
  private Double indivisiblequantity = null;

  @SerializedName("weight")
  private Double weight = null;

  @SerializedName("weightunit")
  private Integer weightunit = null;

  @SerializedName("capacity")
  private Double capacity = null;

  @SerializedName("capacityunit")
  private Integer capacityunit = null;

  @SerializedName("ean")
  private String ean = null;

  @SerializedName("plu")
  private Integer plu = null;

  @SerializedName("hasanycontainer")
  private Boolean hasanycontainer = null;

  @SerializedName("storecontainers")
  private List<Storecontainer> storecontainers = new ArrayList<Storecontainer>();

  @SerializedName("storeeans")
  private List<Storeean> storeeans = new ArrayList<Storeean>();

  @SerializedName("description")
  private String description = null;

  @SerializedName("width")
  private Double width = null;

  @SerializedName("height")
  private Double height = null;

  @SerializedName("depth")
  private Double depth = null;

  @SerializedName("sizeunit")
  private Integer sizeunit = null;

  public Storeunit displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Storeunit id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Storeunit classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Storeunit objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Storeunit parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu skladová karta [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu skladová karta [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Storeunit posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Storeunit code(String code) {
    this.code = code;
    return this;
  }

   /**
   * zkratka [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "zkratka [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Storeunit unitrate(Double unitrate) {
    this.unitrate = unitrate;
    return this;
  }

   /**
   * vztah [persistentní položka]
   * @return unitrate
  **/
  @ApiModelProperty(example = "null", value = "vztah [persistentní položka]")
  public Double getUnitrate() {
    return unitrate;
  }

  public void setUnitrate(Double unitrate) {
    this.unitrate = unitrate;
  }

  public Storeunit indivisiblequantity(Double indivisiblequantity) {
    this.indivisiblequantity = indivisiblequantity;
    return this;
  }

   /**
   * neděl. množství [persistentní položka]
   * @return indivisiblequantity
  **/
  @ApiModelProperty(example = "null", value = "neděl. množství [persistentní položka]")
  public Double getIndivisiblequantity() {
    return indivisiblequantity;
  }

  public void setIndivisiblequantity(Double indivisiblequantity) {
    this.indivisiblequantity = indivisiblequantity;
  }

  public Storeunit weight(Double weight) {
    this.weight = weight;
    return this;
  }

   /**
   * hmotnost [persistentní položka]
   * @return weight
  **/
  @ApiModelProperty(example = "null", value = "hmotnost [persistentní položka]")
  public Double getWeight() {
    return weight;
  }

  public void setWeight(Double weight) {
    this.weight = weight;
  }

  public Storeunit weightunit(Integer weightunit) {
    this.weightunit = weightunit;
    return this;
  }

   /**
   * hm.jednotka [persistentní položka]
   * @return weightunit
  **/
  @ApiModelProperty(example = "null", value = "hm.jednotka [persistentní položka]")
  public Integer getWeightunit() {
    return weightunit;
  }

  public void setWeightunit(Integer weightunit) {
    this.weightunit = weightunit;
  }

  public Storeunit capacity(Double capacity) {
    this.capacity = capacity;
    return this;
  }

   /**
   * objem [persistentní položka]
   * @return capacity
  **/
  @ApiModelProperty(example = "null", value = "objem [persistentní položka]")
  public Double getCapacity() {
    return capacity;
  }

  public void setCapacity(Double capacity) {
    this.capacity = capacity;
  }

  public Storeunit capacityunit(Integer capacityunit) {
    this.capacityunit = capacityunit;
    return this;
  }

   /**
   * obj.jednotka [persistentní položka]
   * @return capacityunit
  **/
  @ApiModelProperty(example = "null", value = "obj.jednotka [persistentní položka]")
  public Integer getCapacityunit() {
    return capacityunit;
  }

  public void setCapacityunit(Integer capacityunit) {
    this.capacityunit = capacityunit;
  }

  public Storeunit ean(String ean) {
    this.ean = ean;
    return this;
  }

   /**
   * ean [persistentní položka]
   * @return ean
  **/
  @ApiModelProperty(example = "null", value = "ean [persistentní položka]")
  public String getEan() {
    return ean;
  }

  public void setEan(String ean) {
    this.ean = ean;
  }

  public Storeunit plu(Integer plu) {
    this.plu = plu;
    return this;
  }

   /**
   * plu [persistentní položka]
   * @return plu
  **/
  @ApiModelProperty(example = "null", value = "plu [persistentní položka]")
  public Integer getPlu() {
    return plu;
  }

  public void setPlu(Integer plu) {
    this.plu = plu;
  }

  public Storeunit hasanycontainer(Boolean hasanycontainer) {
    this.hasanycontainer = hasanycontainer;
    return this;
  }

   /**
   * je kolekce obaly prázdná [persistentní položka]
   * @return hasanycontainer
  **/
  @ApiModelProperty(example = "null", value = "je kolekce obaly prázdná [persistentní položka]")
  public Boolean getHasanycontainer() {
    return hasanycontainer;
  }

  public void setHasanycontainer(Boolean hasanycontainer) {
    this.hasanycontainer = hasanycontainer;
  }

  public Storeunit storecontainers(List<Storecontainer> storecontainers) {
    this.storecontainers = storecontainers;
    return this;
  }

  public Storeunit addStorecontainersItem(Storecontainer storecontainersItem) {
    this.storecontainers.add(storecontainersItem);
    return this;
  }

   /**
   * obaly; kolekce bo obal k jednotce skl. karty [nepersistentní položka]
   * @return storecontainers
  **/
  @ApiModelProperty(example = "null", value = "obaly; kolekce bo obal k jednotce skl. karty [nepersistentní položka]")
  public List<Storecontainer> getStorecontainers() {
    return storecontainers;
  }

  public void setStorecontainers(List<Storecontainer> storecontainers) {
    this.storecontainers = storecontainers;
  }

  public Storeunit storeeans(List<Storeean> storeeans) {
    this.storeeans = storeeans;
    return this;
  }

  public Storeunit addStoreeansItem(Storeean storeeansItem) {
    this.storeeans.add(storeeansItem);
    return this;
  }

   /**
   * ean kódy; kolekce bo ean kód [nepersistentní položka]
   * @return storeeans
  **/
  @ApiModelProperty(example = "null", value = "ean kódy; kolekce bo ean kód [nepersistentní položka]")
  public List<Storeean> getStoreeans() {
    return storeeans;
  }

  public void setStoreeans(List<Storeean> storeeans) {
    this.storeeans = storeeans;
  }

  public Storeunit description(String description) {
    this.description = description;
    return this;
  }

   /**
   * popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Storeunit width(Double width) {
    this.width = width;
    return this;
  }

   /**
   * Šířka [persistentní položka]
   * @return width
  **/
  @ApiModelProperty(example = "null", value = "Šířka [persistentní položka]")
  public Double getWidth() {
    return width;
  }

  public void setWidth(Double width) {
    this.width = width;
  }

  public Storeunit height(Double height) {
    this.height = height;
    return this;
  }

   /**
   * výška [persistentní položka]
   * @return height
  **/
  @ApiModelProperty(example = "null", value = "výška [persistentní položka]")
  public Double getHeight() {
    return height;
  }

  public void setHeight(Double height) {
    this.height = height;
  }

  public Storeunit depth(Double depth) {
    this.depth = depth;
    return this;
  }

   /**
   * hloubka [persistentní položka]
   * @return depth
  **/
  @ApiModelProperty(example = "null", value = "hloubka [persistentní položka]")
  public Double getDepth() {
    return depth;
  }

  public void setDepth(Double depth) {
    this.depth = depth;
  }

  public Storeunit sizeunit(Integer sizeunit) {
    this.sizeunit = sizeunit;
    return this;
  }

   /**
   * jednotka rozměrů [persistentní položka]
   * @return sizeunit
  **/
  @ApiModelProperty(example = "null", value = "jednotka rozměrů [persistentní položka]")
  public Integer getSizeunit() {
    return sizeunit;
  }

  public void setSizeunit(Integer sizeunit) {
    this.sizeunit = sizeunit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Storeunit storeunit = (Storeunit) o;
    return Objects.equals(this.displayname, storeunit.displayname) &&
        Objects.equals(this.id, storeunit.id) &&
        Objects.equals(this.classid, storeunit.classid) &&
        Objects.equals(this.objversion, storeunit.objversion) &&
        Objects.equals(this.parentId, storeunit.parentId) &&
        Objects.equals(this.posindex, storeunit.posindex) &&
        Objects.equals(this.code, storeunit.code) &&
        Objects.equals(this.unitrate, storeunit.unitrate) &&
        Objects.equals(this.indivisiblequantity, storeunit.indivisiblequantity) &&
        Objects.equals(this.weight, storeunit.weight) &&
        Objects.equals(this.weightunit, storeunit.weightunit) &&
        Objects.equals(this.capacity, storeunit.capacity) &&
        Objects.equals(this.capacityunit, storeunit.capacityunit) &&
        Objects.equals(this.ean, storeunit.ean) &&
        Objects.equals(this.plu, storeunit.plu) &&
        Objects.equals(this.hasanycontainer, storeunit.hasanycontainer) &&
        Objects.equals(this.storecontainers, storeunit.storecontainers) &&
        Objects.equals(this.storeeans, storeunit.storeeans) &&
        Objects.equals(this.description, storeunit.description) &&
        Objects.equals(this.width, storeunit.width) &&
        Objects.equals(this.height, storeunit.height) &&
        Objects.equals(this.depth, storeunit.depth) &&
        Objects.equals(this.sizeunit, storeunit.sizeunit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, code, unitrate, indivisiblequantity, weight, weightunit, capacity, capacityunit, ean, plu, hasanycontainer, storecontainers, storeeans, description, width, height, depth, sizeunit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Storeunit {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    unitrate: ").append(toIndentedString(unitrate)).append("\n");
    sb.append("    indivisiblequantity: ").append(toIndentedString(indivisiblequantity)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightunit: ").append(toIndentedString(weightunit)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    capacityunit: ").append(toIndentedString(capacityunit)).append("\n");
    sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
    sb.append("    plu: ").append(toIndentedString(plu)).append("\n");
    sb.append("    hasanycontainer: ").append(toIndentedString(hasanycontainer)).append("\n");
    sb.append("    storecontainers: ").append(toIndentedString(storecontainers)).append("\n");
    sb.append("    storeeans: ").append(toIndentedString(storeeans)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    sizeunit: ").append(toIndentedString(sizeunit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

