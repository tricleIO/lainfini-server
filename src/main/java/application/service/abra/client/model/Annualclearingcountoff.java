/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Annualclearingcountoff
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Annualclearingcountoff   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("MonthCount")
  private Integer monthCount = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("YearAmount")
  private Double yearAmount = null;

  @SerializedName("CountOffType_ID")
  private String countOffTypeID = null;

  @SerializedName("FMName")
  private String fMName = null;

  @SerializedName("WagePeriodFrom_ID")
  private String wagePeriodFromID = null;

  @SerializedName("WagePeriodTo_ID")
  private String wagePeriodToID = null;

  @SerializedName("Correction")
  private Double correction = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Řádek ročního zúčtování [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Řádek ročního zúčtování [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Annualclearingcountoff description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Annualclearingcountoff monthCount(Integer monthCount) {
    this.monthCount = monthCount;
    return this;
  }

   /**
   * Poč.měsíců [persistentní položka]
   * @return monthCount
  **/
  @ApiModelProperty(example = "null", value = "Poč.měsíců [persistentní položka]")
  public Integer getMonthCount() {
    return monthCount;
  }

  public void setMonthCount(Integer monthCount) {
    this.monthCount = monthCount;
  }

  public Annualclearingcountoff amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Částka [persistentní položka]
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Částka [persistentní položka]")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public Annualclearingcountoff yearAmount(Double yearAmount) {
    this.yearAmount = yearAmount;
    return this;
  }

   /**
   * Roční částka
   * @return yearAmount
  **/
  @ApiModelProperty(example = "null", value = "Roční částka")
  public Double getYearAmount() {
    return yearAmount;
  }

  public void setYearAmount(Double yearAmount) {
    this.yearAmount = yearAmount;
  }

  public Annualclearingcountoff countOffTypeID(String countOffTypeID) {
    this.countOffTypeID = countOffTypeID;
    return this;
  }

   /**
   * Typ odpočtu; ID objektu Typ odpočtu/slevy [persistentní položka]
   * @return countOffTypeID
  **/
  @ApiModelProperty(example = "null", value = "Typ odpočtu; ID objektu Typ odpočtu/slevy [persistentní položka]")
  public String getCountOffTypeID() {
    return countOffTypeID;
  }

  public void setCountOffTypeID(String countOffTypeID) {
    this.countOffTypeID = countOffTypeID;
  }

  public Annualclearingcountoff fMName(String fMName) {
    this.fMName = fMName;
    return this;
  }

   /**
   * Rodinný příslušník [persistentní položka]
   * @return fMName
  **/
  @ApiModelProperty(example = "null", value = "Rodinný příslušník [persistentní položka]")
  public String getFMName() {
    return fMName;
  }

  public void setFMName(String fMName) {
    this.fMName = fMName;
  }

  public Annualclearingcountoff wagePeriodFromID(String wagePeriodFromID) {
    this.wagePeriodFromID = wagePeriodFromID;
    return this;
  }

   /**
   * Období od; ID objektu Mzdové období [persistentní položka]
   * @return wagePeriodFromID
  **/
  @ApiModelProperty(example = "null", value = "Období od; ID objektu Mzdové období [persistentní položka]")
  public String getWagePeriodFromID() {
    return wagePeriodFromID;
  }

  public void setWagePeriodFromID(String wagePeriodFromID) {
    this.wagePeriodFromID = wagePeriodFromID;
  }

  public Annualclearingcountoff wagePeriodToID(String wagePeriodToID) {
    this.wagePeriodToID = wagePeriodToID;
    return this;
  }

   /**
   * Období do; ID objektu Mzdové období [persistentní položka]
   * @return wagePeriodToID
  **/
  @ApiModelProperty(example = "null", value = "Období do; ID objektu Mzdové období [persistentní položka]")
  public String getWagePeriodToID() {
    return wagePeriodToID;
  }

  public void setWagePeriodToID(String wagePeriodToID) {
    this.wagePeriodToID = wagePeriodToID;
  }

  public Annualclearingcountoff correction(Double correction) {
    this.correction = correction;
    return this;
  }

   /**
   * Oprava [persistentní položka]
   * @return correction
  **/
  @ApiModelProperty(example = "null", value = "Oprava [persistentní položka]")
  public Double getCorrection() {
    return correction;
  }

  public void setCorrection(Double correction) {
    this.correction = correction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Annualclearingcountoff annualclearingcountoff = (Annualclearingcountoff) o;
    return Objects.equals(this.displayName, annualclearingcountoff.displayName) &&
        Objects.equals(this.ID, annualclearingcountoff.ID) &&
        Objects.equals(this.classID, annualclearingcountoff.classID) &&
        Objects.equals(this.objVersion, annualclearingcountoff.objVersion) &&
        Objects.equals(this.parentID, annualclearingcountoff.parentID) &&
        Objects.equals(this.description, annualclearingcountoff.description) &&
        Objects.equals(this.monthCount, annualclearingcountoff.monthCount) &&
        Objects.equals(this.amount, annualclearingcountoff.amount) &&
        Objects.equals(this.yearAmount, annualclearingcountoff.yearAmount) &&
        Objects.equals(this.countOffTypeID, annualclearingcountoff.countOffTypeID) &&
        Objects.equals(this.fMName, annualclearingcountoff.fMName) &&
        Objects.equals(this.wagePeriodFromID, annualclearingcountoff.wagePeriodFromID) &&
        Objects.equals(this.wagePeriodToID, annualclearingcountoff.wagePeriodToID) &&
        Objects.equals(this.correction, annualclearingcountoff.correction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, description, monthCount, amount, yearAmount, countOffTypeID, fMName, wagePeriodFromID, wagePeriodToID, correction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Annualclearingcountoff {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    monthCount: ").append(toIndentedString(monthCount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    yearAmount: ").append(toIndentedString(yearAmount)).append("\n");
    sb.append("    countOffTypeID: ").append(toIndentedString(countOffTypeID)).append("\n");
    sb.append("    fMName: ").append(toIndentedString(fMName)).append("\n");
    sb.append("    wagePeriodFromID: ").append(toIndentedString(wagePeriodFromID)).append("\n");
    sb.append("    wagePeriodToID: ").append(toIndentedString(wagePeriodToID)).append("\n");
    sb.append("    correction: ").append(toIndentedString(correction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

