/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Storecardcategory
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Storecardcategory   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ToAccountReceiptCard")
  private Boolean toAccountReceiptCard = null;

  @SerializedName("ToAccountBillOfDelivery")
  private Boolean toAccountBillOfDelivery = null;

  @SerializedName("ToAccountInventory")
  private Boolean toAccountInventory = null;

  @SerializedName("ToAccountTransfer")
  private Boolean toAccountTransfer = null;

  @SerializedName("AnalyticalAccount")
  private String analyticalAccount = null;

  @SerializedName("ToIntrastat")
  private Boolean toIntrastat = null;

  @SerializedName("ToESL")
  private Boolean toESL = null;

  @SerializedName("IntrastatTransport")
  private Boolean intrastatTransport = null;

  @SerializedName("CostPriceSourceType")
  private Integer costPriceSourceType = null;

  @SerializedName("PLMPrRequestDocQueue_ID")
  private String pLMPrRequestDocQueueID = null;

  @SerializedName("PLMPrRequestDocQueue_ID2")
  private String pLMPrRequestDocQueueID2 = null;

  @SerializedName("SplitIntrastat")
  private Boolean splitIntrastat = null;

  @SerializedName("IntrastatStatus")
  private Integer intrastatStatus = null;

  @SerializedName("IntrastatTransportStatus")
  private Integer intrastatTransportStatus = null;

  @SerializedName("ESLIndicator_ID")
  private String eSLIndicatorID = null;

  @SerializedName("ROIgnoreCreateRes")
  private Boolean rOIgnoreCreateRes = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Storecardcategory hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Storecardcategory code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Storecardcategory name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Storecardcategory toAccountReceiptCard(Boolean toAccountReceiptCard) {
    this.toAccountReceiptCard = toAccountReceiptCard;
    return this;
  }

   /**
   * Účtovat příjmy [persistentní položka]
   * @return toAccountReceiptCard
  **/
  @ApiModelProperty(example = "null", value = "Účtovat příjmy [persistentní položka]")
  public Boolean getToAccountReceiptCard() {
    return toAccountReceiptCard;
  }

  public void setToAccountReceiptCard(Boolean toAccountReceiptCard) {
    this.toAccountReceiptCard = toAccountReceiptCard;
  }

  public Storecardcategory toAccountBillOfDelivery(Boolean toAccountBillOfDelivery) {
    this.toAccountBillOfDelivery = toAccountBillOfDelivery;
    return this;
  }

   /**
   * Účtovat výdeje [persistentní položka]
   * @return toAccountBillOfDelivery
  **/
  @ApiModelProperty(example = "null", value = "Účtovat výdeje [persistentní položka]")
  public Boolean getToAccountBillOfDelivery() {
    return toAccountBillOfDelivery;
  }

  public void setToAccountBillOfDelivery(Boolean toAccountBillOfDelivery) {
    this.toAccountBillOfDelivery = toAccountBillOfDelivery;
  }

  public Storecardcategory toAccountInventory(Boolean toAccountInventory) {
    this.toAccountInventory = toAccountInventory;
    return this;
  }

   /**
   * Účtovat inventury [persistentní položka]
   * @return toAccountInventory
  **/
  @ApiModelProperty(example = "null", value = "Účtovat inventury [persistentní položka]")
  public Boolean getToAccountInventory() {
    return toAccountInventory;
  }

  public void setToAccountInventory(Boolean toAccountInventory) {
    this.toAccountInventory = toAccountInventory;
  }

  public Storecardcategory toAccountTransfer(Boolean toAccountTransfer) {
    this.toAccountTransfer = toAccountTransfer;
    return this;
  }

   /**
   * Účtovat převody [persistentní položka]
   * @return toAccountTransfer
  **/
  @ApiModelProperty(example = "null", value = "Účtovat převody [persistentní položka]")
  public Boolean getToAccountTransfer() {
    return toAccountTransfer;
  }

  public void setToAccountTransfer(Boolean toAccountTransfer) {
    this.toAccountTransfer = toAccountTransfer;
  }

  public Storecardcategory analyticalAccount(String analyticalAccount) {
    this.analyticalAccount = analyticalAccount;
    return this;
  }

   /**
   * Analytika [persistentní položka]
   * @return analyticalAccount
  **/
  @ApiModelProperty(example = "null", value = "Analytika [persistentní položka]")
  public String getAnalyticalAccount() {
    return analyticalAccount;
  }

  public void setAnalyticalAccount(String analyticalAccount) {
    this.analyticalAccount = analyticalAccount;
  }

  public Storecardcategory toIntrastat(Boolean toIntrastat) {
    this.toIntrastat = toIntrastat;
    return this;
  }

   /**
   * Do INTRASTAT [persistentní položka]
   * @return toIntrastat
  **/
  @ApiModelProperty(example = "null", value = "Do INTRASTAT [persistentní položka]")
  public Boolean getToIntrastat() {
    return toIntrastat;
  }

  public void setToIntrastat(Boolean toIntrastat) {
    this.toIntrastat = toIntrastat;
  }

  public Storecardcategory toESL(Boolean toESL) {
    this.toESL = toESL;
    return this;
  }

   /**
   * Do ESL [persistentní položka]
   * @return toESL
  **/
  @ApiModelProperty(example = "null", value = "Do ESL [persistentní položka]")
  public Boolean getToESL() {
    return toESL;
  }

  public void setToESL(Boolean toESL) {
    this.toESL = toESL;
  }

  public Storecardcategory intrastatTransport(Boolean intrastatTransport) {
    this.intrastatTransport = intrastatTransport;
    return this;
  }

   /**
   * Doprava do Intrastatu [persistentní položka]
   * @return intrastatTransport
  **/
  @ApiModelProperty(example = "null", value = "Doprava do Intrastatu [persistentní položka]")
  public Boolean getIntrastatTransport() {
    return intrastatTransport;
  }

  public void setIntrastatTransport(Boolean intrastatTransport) {
    this.intrastatTransport = intrastatTransport;
  }

  public Storecardcategory costPriceSourceType(Integer costPriceSourceType) {
    this.costPriceSourceType = costPriceSourceType;
    return this;
  }

   /**
   * Výchozí zdroj nákladové ceny [persistentní položka]
   * @return costPriceSourceType
  **/
  @ApiModelProperty(example = "null", value = "Výchozí zdroj nákladové ceny [persistentní položka]")
  public Integer getCostPriceSourceType() {
    return costPriceSourceType;
  }

  public void setCostPriceSourceType(Integer costPriceSourceType) {
    this.costPriceSourceType = costPriceSourceType;
  }

  public Storecardcategory pLMPrRequestDocQueueID(String pLMPrRequestDocQueueID) {
    this.pLMPrRequestDocQueueID = pLMPrRequestDocQueueID;
    return this;
  }

   /**
   * Řada dokladů Požadavky na výrobu použitá při tvorbě nabídky vydané; ID objektu Řada dokladů [persistentní položka]
   * @return pLMPrRequestDocQueueID
  **/
  @ApiModelProperty(example = "null", value = "Řada dokladů Požadavky na výrobu použitá při tvorbě nabídky vydané; ID objektu Řada dokladů [persistentní položka]")
  public String getPLMPrRequestDocQueueID() {
    return pLMPrRequestDocQueueID;
  }

  public void setPLMPrRequestDocQueueID(String pLMPrRequestDocQueueID) {
    this.pLMPrRequestDocQueueID = pLMPrRequestDocQueueID;
  }

  public Storecardcategory pLMPrRequestDocQueueID2(String pLMPrRequestDocQueueID2) {
    this.pLMPrRequestDocQueueID2 = pLMPrRequestDocQueueID2;
    return this;
  }

   /**
   * Řada dokladů Požadavky na výrobu použitá při tvorbě objednávky přijaté; ID objektu Řada dokladů [persistentní položka]
   * @return pLMPrRequestDocQueueID2
  **/
  @ApiModelProperty(example = "null", value = "Řada dokladů Požadavky na výrobu použitá při tvorbě objednávky přijaté; ID objektu Řada dokladů [persistentní položka]")
  public String getPLMPrRequestDocQueueID2() {
    return pLMPrRequestDocQueueID2;
  }

  public void setPLMPrRequestDocQueueID2(String pLMPrRequestDocQueueID2) {
    this.pLMPrRequestDocQueueID2 = pLMPrRequestDocQueueID2;
  }

  public Storecardcategory splitIntrastat(Boolean splitIntrastat) {
    this.splitIntrastat = splitIntrastat;
    return this;
  }

   /**
   * Rozpočítávat částku INTRASTAT do ost. položek [persistentní položka]
   * @return splitIntrastat
  **/
  @ApiModelProperty(example = "null", value = "Rozpočítávat částku INTRASTAT do ost. položek [persistentní položka]")
  public Boolean getSplitIntrastat() {
    return splitIntrastat;
  }

  public void setSplitIntrastat(Boolean splitIntrastat) {
    this.splitIntrastat = splitIntrastat;
  }

  public Storecardcategory intrastatStatus(Integer intrastatStatus) {
    this.intrastatStatus = intrastatStatus;
    return this;
  }

   /**
   * 
   * @return intrastatStatus
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getIntrastatStatus() {
    return intrastatStatus;
  }

  public void setIntrastatStatus(Integer intrastatStatus) {
    this.intrastatStatus = intrastatStatus;
  }

  public Storecardcategory intrastatTransportStatus(Integer intrastatTransportStatus) {
    this.intrastatTransportStatus = intrastatTransportStatus;
    return this;
  }

   /**
   * 
   * @return intrastatTransportStatus
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getIntrastatTransportStatus() {
    return intrastatTransportStatus;
  }

  public void setIntrastatTransportStatus(Integer intrastatTransportStatus) {
    this.intrastatTransportStatus = intrastatTransportStatus;
  }

  public Storecardcategory eSLIndicatorID(String eSLIndicatorID) {
    this.eSLIndicatorID = eSLIndicatorID;
    return this;
  }

   /**
   * Rozlišení typu plnění(ESL); ID objektu Rozlišení typu plnění(ESL) [persistentní položka]
   * @return eSLIndicatorID
  **/
  @ApiModelProperty(example = "null", value = "Rozlišení typu plnění(ESL); ID objektu Rozlišení typu plnění(ESL) [persistentní položka]")
  public String getESLIndicatorID() {
    return eSLIndicatorID;
  }

  public void setESLIndicatorID(String eSLIndicatorID) {
    this.eSLIndicatorID = eSLIndicatorID;
  }

  public Storecardcategory rOIgnoreCreateRes(Boolean rOIgnoreCreateRes) {
    this.rOIgnoreCreateRes = rOIgnoreCreateRes;
    return this;
  }

   /**
   * Ignorovat automatické vytváření rezervací [persistentní položka]
   * @return rOIgnoreCreateRes
  **/
  @ApiModelProperty(example = "null", value = "Ignorovat automatické vytváření rezervací [persistentní položka]")
  public Boolean getROIgnoreCreateRes() {
    return rOIgnoreCreateRes;
  }

  public void setROIgnoreCreateRes(Boolean rOIgnoreCreateRes) {
    this.rOIgnoreCreateRes = rOIgnoreCreateRes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Storecardcategory storecardcategory = (Storecardcategory) o;
    return Objects.equals(this.displayName, storecardcategory.displayName) &&
        Objects.equals(this.ID, storecardcategory.ID) &&
        Objects.equals(this.classID, storecardcategory.classID) &&
        Objects.equals(this.objVersion, storecardcategory.objVersion) &&
        Objects.equals(this.hidden, storecardcategory.hidden) &&
        Objects.equals(this.code, storecardcategory.code) &&
        Objects.equals(this.name, storecardcategory.name) &&
        Objects.equals(this.toAccountReceiptCard, storecardcategory.toAccountReceiptCard) &&
        Objects.equals(this.toAccountBillOfDelivery, storecardcategory.toAccountBillOfDelivery) &&
        Objects.equals(this.toAccountInventory, storecardcategory.toAccountInventory) &&
        Objects.equals(this.toAccountTransfer, storecardcategory.toAccountTransfer) &&
        Objects.equals(this.analyticalAccount, storecardcategory.analyticalAccount) &&
        Objects.equals(this.toIntrastat, storecardcategory.toIntrastat) &&
        Objects.equals(this.toESL, storecardcategory.toESL) &&
        Objects.equals(this.intrastatTransport, storecardcategory.intrastatTransport) &&
        Objects.equals(this.costPriceSourceType, storecardcategory.costPriceSourceType) &&
        Objects.equals(this.pLMPrRequestDocQueueID, storecardcategory.pLMPrRequestDocQueueID) &&
        Objects.equals(this.pLMPrRequestDocQueueID2, storecardcategory.pLMPrRequestDocQueueID2) &&
        Objects.equals(this.splitIntrastat, storecardcategory.splitIntrastat) &&
        Objects.equals(this.intrastatStatus, storecardcategory.intrastatStatus) &&
        Objects.equals(this.intrastatTransportStatus, storecardcategory.intrastatTransportStatus) &&
        Objects.equals(this.eSLIndicatorID, storecardcategory.eSLIndicatorID) &&
        Objects.equals(this.rOIgnoreCreateRes, storecardcategory.rOIgnoreCreateRes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, toAccountReceiptCard, toAccountBillOfDelivery, toAccountInventory, toAccountTransfer, analyticalAccount, toIntrastat, toESL, intrastatTransport, costPriceSourceType, pLMPrRequestDocQueueID, pLMPrRequestDocQueueID2, splitIntrastat, intrastatStatus, intrastatTransportStatus, eSLIndicatorID, rOIgnoreCreateRes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Storecardcategory {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    toAccountReceiptCard: ").append(toIndentedString(toAccountReceiptCard)).append("\n");
    sb.append("    toAccountBillOfDelivery: ").append(toIndentedString(toAccountBillOfDelivery)).append("\n");
    sb.append("    toAccountInventory: ").append(toIndentedString(toAccountInventory)).append("\n");
    sb.append("    toAccountTransfer: ").append(toIndentedString(toAccountTransfer)).append("\n");
    sb.append("    analyticalAccount: ").append(toIndentedString(analyticalAccount)).append("\n");
    sb.append("    toIntrastat: ").append(toIndentedString(toIntrastat)).append("\n");
    sb.append("    toESL: ").append(toIndentedString(toESL)).append("\n");
    sb.append("    intrastatTransport: ").append(toIndentedString(intrastatTransport)).append("\n");
    sb.append("    costPriceSourceType: ").append(toIndentedString(costPriceSourceType)).append("\n");
    sb.append("    pLMPrRequestDocQueueID: ").append(toIndentedString(pLMPrRequestDocQueueID)).append("\n");
    sb.append("    pLMPrRequestDocQueueID2: ").append(toIndentedString(pLMPrRequestDocQueueID2)).append("\n");
    sb.append("    splitIntrastat: ").append(toIndentedString(splitIntrastat)).append("\n");
    sb.append("    intrastatStatus: ").append(toIndentedString(intrastatStatus)).append("\n");
    sb.append("    intrastatTransportStatus: ").append(toIndentedString(intrastatTransportStatus)).append("\n");
    sb.append("    eSLIndicatorID: ").append(toIndentedString(eSLIndicatorID)).append("\n");
    sb.append("    rOIgnoreCreateRes: ").append(toIndentedString(rOIgnoreCreateRes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

