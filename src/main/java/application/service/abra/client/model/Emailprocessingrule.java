/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Emailprocessingrule
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Emailprocessingrule   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("GoOn")
  private Boolean goOn = null;

  @SerializedName("RuleActions")
  private List<Emailprocessingruleaction> ruleActions = new ArrayList<Emailprocessingruleaction>();

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EmailAccount_ID")
  private String emailAccountID = null;

  @SerializedName("FileNameMask")
  private String fileNameMask = null;

  @SerializedName("FileNameMaskIsRegEx")
  private Boolean fileNameMaskIsRegEx = null;

  @SerializedName("SenderMask")
  private String senderMask = null;

  @SerializedName("SenderMaskIsRegEx")
  private Boolean senderMaskIsRegEx = null;

  @SerializedName("SendToMask")
  private String sendToMask = null;

  @SerializedName("SendToMaskIsRegEx")
  private Boolean sendToMaskIsRegEx = null;

  @SerializedName("SubjectMask")
  private String subjectMask = null;

  @SerializedName("SubjectMaskIsRegEx")
  private Boolean subjectMaskIsRegEx = null;

  @SerializedName("EmailCondition")
  private String emailCondition = null;

  @SerializedName("IsForEmail")
  private Boolean isForEmail = null;

  @SerializedName("IsForAttachment")
  private Boolean isForAttachment = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Emailprocessingrule posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Emailprocessingrule goOn(Boolean goOn) {
    this.goOn = goOn;
    return this;
  }

   /**
   * Pokračovat [persistentní položka]
   * @return goOn
  **/
  @ApiModelProperty(example = "null", value = "Pokračovat [persistentní položka]")
  public Boolean getGoOn() {
    return goOn;
  }

  public void setGoOn(Boolean goOn) {
    this.goOn = goOn;
  }

  public Emailprocessingrule ruleActions(List<Emailprocessingruleaction> ruleActions) {
    this.ruleActions = ruleActions;
    return this;
  }

  public Emailprocessingrule addRuleActionsItem(Emailprocessingruleaction ruleActionsItem) {
    this.ruleActions.add(ruleActionsItem);
    return this;
  }

   /**
   * Akce; kolekce BO Akce pravidla pro zpracování doručené e-mail. pošty [nepersistentní položka]
   * @return ruleActions
  **/
  @ApiModelProperty(example = "null", value = "Akce; kolekce BO Akce pravidla pro zpracování doručené e-mail. pošty [nepersistentní položka]")
  public List<Emailprocessingruleaction> getRuleActions() {
    return ruleActions;
  }

  public void setRuleActions(List<Emailprocessingruleaction> ruleActions) {
    this.ruleActions = ruleActions;
  }

  public Emailprocessingrule description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Emailprocessingrule emailAccountID(String emailAccountID) {
    this.emailAccountID = emailAccountID;
    return this;
  }

   /**
   * E-mailový účet; ID objektu E-mailový účet [persistentní položka]
   * @return emailAccountID
  **/
  @ApiModelProperty(example = "null", value = "E-mailový účet; ID objektu E-mailový účet [persistentní položka]")
  public String getEmailAccountID() {
    return emailAccountID;
  }

  public void setEmailAccountID(String emailAccountID) {
    this.emailAccountID = emailAccountID;
  }

  public Emailprocessingrule fileNameMask(String fileNameMask) {
    this.fileNameMask = fileNameMask;
    return this;
  }

   /**
   * Maska pro název přílohy [persistentní položka]
   * @return fileNameMask
  **/
  @ApiModelProperty(example = "null", value = "Maska pro název přílohy [persistentní položka]")
  public String getFileNameMask() {
    return fileNameMask;
  }

  public void setFileNameMask(String fileNameMask) {
    this.fileNameMask = fileNameMask;
  }

  public Emailprocessingrule fileNameMaskIsRegEx(Boolean fileNameMaskIsRegEx) {
    this.fileNameMaskIsRegEx = fileNameMaskIsRegEx;
    return this;
  }

   /**
   * Maska pro název přílohy je regulární výraz [persistentní položka]
   * @return fileNameMaskIsRegEx
  **/
  @ApiModelProperty(example = "null", value = "Maska pro název přílohy je regulární výraz [persistentní položka]")
  public Boolean getFileNameMaskIsRegEx() {
    return fileNameMaskIsRegEx;
  }

  public void setFileNameMaskIsRegEx(Boolean fileNameMaskIsRegEx) {
    this.fileNameMaskIsRegEx = fileNameMaskIsRegEx;
  }

  public Emailprocessingrule senderMask(String senderMask) {
    this.senderMask = senderMask;
    return this;
  }

   /**
   * Maska pro odesílatele [persistentní položka]
   * @return senderMask
  **/
  @ApiModelProperty(example = "null", value = "Maska pro odesílatele [persistentní položka]")
  public String getSenderMask() {
    return senderMask;
  }

  public void setSenderMask(String senderMask) {
    this.senderMask = senderMask;
  }

  public Emailprocessingrule senderMaskIsRegEx(Boolean senderMaskIsRegEx) {
    this.senderMaskIsRegEx = senderMaskIsRegEx;
    return this;
  }

   /**
   * Maska pro odesílatele je regulární výraz [persistentní položka]
   * @return senderMaskIsRegEx
  **/
  @ApiModelProperty(example = "null", value = "Maska pro odesílatele je regulární výraz [persistentní položka]")
  public Boolean getSenderMaskIsRegEx() {
    return senderMaskIsRegEx;
  }

  public void setSenderMaskIsRegEx(Boolean senderMaskIsRegEx) {
    this.senderMaskIsRegEx = senderMaskIsRegEx;
  }

  public Emailprocessingrule sendToMask(String sendToMask) {
    this.sendToMask = sendToMask;
    return this;
  }

   /**
   * Maska pro příjemce [persistentní položka]
   * @return sendToMask
  **/
  @ApiModelProperty(example = "null", value = "Maska pro příjemce [persistentní položka]")
  public String getSendToMask() {
    return sendToMask;
  }

  public void setSendToMask(String sendToMask) {
    this.sendToMask = sendToMask;
  }

  public Emailprocessingrule sendToMaskIsRegEx(Boolean sendToMaskIsRegEx) {
    this.sendToMaskIsRegEx = sendToMaskIsRegEx;
    return this;
  }

   /**
   * Maska pro příjemce je regulární výraz [persistentní položka]
   * @return sendToMaskIsRegEx
  **/
  @ApiModelProperty(example = "null", value = "Maska pro příjemce je regulární výraz [persistentní položka]")
  public Boolean getSendToMaskIsRegEx() {
    return sendToMaskIsRegEx;
  }

  public void setSendToMaskIsRegEx(Boolean sendToMaskIsRegEx) {
    this.sendToMaskIsRegEx = sendToMaskIsRegEx;
  }

  public Emailprocessingrule subjectMask(String subjectMask) {
    this.subjectMask = subjectMask;
    return this;
  }

   /**
   * Maska pro předmět [persistentní položka]
   * @return subjectMask
  **/
  @ApiModelProperty(example = "null", value = "Maska pro předmět [persistentní položka]")
  public String getSubjectMask() {
    return subjectMask;
  }

  public void setSubjectMask(String subjectMask) {
    this.subjectMask = subjectMask;
  }

  public Emailprocessingrule subjectMaskIsRegEx(Boolean subjectMaskIsRegEx) {
    this.subjectMaskIsRegEx = subjectMaskIsRegEx;
    return this;
  }

   /**
   * Maska pro předmět je regulární výraz [persistentní položka]
   * @return subjectMaskIsRegEx
  **/
  @ApiModelProperty(example = "null", value = "Maska pro předmět je regulární výraz [persistentní položka]")
  public Boolean getSubjectMaskIsRegEx() {
    return subjectMaskIsRegEx;
  }

  public void setSubjectMaskIsRegEx(Boolean subjectMaskIsRegEx) {
    this.subjectMaskIsRegEx = subjectMaskIsRegEx;
  }

  public Emailprocessingrule emailCondition(String emailCondition) {
    this.emailCondition = emailCondition;
    return this;
  }

   /**
   * Podmínka [persistentní položka]
   * @return emailCondition
  **/
  @ApiModelProperty(example = "null", value = "Podmínka [persistentní položka]")
  public String getEmailCondition() {
    return emailCondition;
  }

  public void setEmailCondition(String emailCondition) {
    this.emailCondition = emailCondition;
  }

  public Emailprocessingrule isForEmail(Boolean isForEmail) {
    this.isForEmail = isForEmail;
    return this;
  }

   /**
   * Pro e-mail [persistentní položka]
   * @return isForEmail
  **/
  @ApiModelProperty(example = "null", value = "Pro e-mail [persistentní položka]")
  public Boolean getIsForEmail() {
    return isForEmail;
  }

  public void setIsForEmail(Boolean isForEmail) {
    this.isForEmail = isForEmail;
  }

  public Emailprocessingrule isForAttachment(Boolean isForAttachment) {
    this.isForAttachment = isForAttachment;
    return this;
  }

   /**
   * Pro přílohu [persistentní položka]
   * @return isForAttachment
  **/
  @ApiModelProperty(example = "null", value = "Pro přílohu [persistentní položka]")
  public Boolean getIsForAttachment() {
    return isForAttachment;
  }

  public void setIsForAttachment(Boolean isForAttachment) {
    this.isForAttachment = isForAttachment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Emailprocessingrule emailprocessingrule = (Emailprocessingrule) o;
    return Objects.equals(this.displayName, emailprocessingrule.displayName) &&
        Objects.equals(this.ID, emailprocessingrule.ID) &&
        Objects.equals(this.classID, emailprocessingrule.classID) &&
        Objects.equals(this.objVersion, emailprocessingrule.objVersion) &&
        Objects.equals(this.posIndex, emailprocessingrule.posIndex) &&
        Objects.equals(this.goOn, emailprocessingrule.goOn) &&
        Objects.equals(this.ruleActions, emailprocessingrule.ruleActions) &&
        Objects.equals(this.description, emailprocessingrule.description) &&
        Objects.equals(this.emailAccountID, emailprocessingrule.emailAccountID) &&
        Objects.equals(this.fileNameMask, emailprocessingrule.fileNameMask) &&
        Objects.equals(this.fileNameMaskIsRegEx, emailprocessingrule.fileNameMaskIsRegEx) &&
        Objects.equals(this.senderMask, emailprocessingrule.senderMask) &&
        Objects.equals(this.senderMaskIsRegEx, emailprocessingrule.senderMaskIsRegEx) &&
        Objects.equals(this.sendToMask, emailprocessingrule.sendToMask) &&
        Objects.equals(this.sendToMaskIsRegEx, emailprocessingrule.sendToMaskIsRegEx) &&
        Objects.equals(this.subjectMask, emailprocessingrule.subjectMask) &&
        Objects.equals(this.subjectMaskIsRegEx, emailprocessingrule.subjectMaskIsRegEx) &&
        Objects.equals(this.emailCondition, emailprocessingrule.emailCondition) &&
        Objects.equals(this.isForEmail, emailprocessingrule.isForEmail) &&
        Objects.equals(this.isForAttachment, emailprocessingrule.isForAttachment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, posIndex, goOn, ruleActions, description, emailAccountID, fileNameMask, fileNameMaskIsRegEx, senderMask, senderMaskIsRegEx, sendToMask, sendToMaskIsRegEx, subjectMask, subjectMaskIsRegEx, emailCondition, isForEmail, isForAttachment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Emailprocessingrule {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    goOn: ").append(toIndentedString(goOn)).append("\n");
    sb.append("    ruleActions: ").append(toIndentedString(ruleActions)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    emailAccountID: ").append(toIndentedString(emailAccountID)).append("\n");
    sb.append("    fileNameMask: ").append(toIndentedString(fileNameMask)).append("\n");
    sb.append("    fileNameMaskIsRegEx: ").append(toIndentedString(fileNameMaskIsRegEx)).append("\n");
    sb.append("    senderMask: ").append(toIndentedString(senderMask)).append("\n");
    sb.append("    senderMaskIsRegEx: ").append(toIndentedString(senderMaskIsRegEx)).append("\n");
    sb.append("    sendToMask: ").append(toIndentedString(sendToMask)).append("\n");
    sb.append("    sendToMaskIsRegEx: ").append(toIndentedString(sendToMaskIsRegEx)).append("\n");
    sb.append("    subjectMask: ").append(toIndentedString(subjectMask)).append("\n");
    sb.append("    subjectMaskIsRegEx: ").append(toIndentedString(subjectMaskIsRegEx)).append("\n");
    sb.append("    emailCondition: ").append(toIndentedString(emailCondition)).append("\n");
    sb.append("    isForEmail: ").append(toIndentedString(isForEmail)).append("\n");
    sb.append("    isForAttachment: ").append(toIndentedString(isForAttachment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

