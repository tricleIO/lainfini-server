/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Virtualpos
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Virtualpos   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Virtualposcurrency> rows = new ArrayList<Virtualposcurrency>();

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("LockedBy_ID")
  private String lockedByID = null;

  @SerializedName("CreatedDate$DATE")
  private DateTime createdDateDATE = null;

  @SerializedName("LockedDate$DATE")
  private DateTime lockedDateDATE = null;

  @SerializedName("Locked")
  private Boolean locked = null;

  @SerializedName("PrintVarSymbol")
  private Boolean printVarSymbol = null;

  @SerializedName("SplitCashPaidByPaymentCards")
  private Boolean splitCashPaidByPaymentCards = null;

  @SerializedName("DirectToCashDeskForced")
  private Boolean directToCashDeskForced = null;

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Firm_ID")
  private String firmID = null;

  @SerializedName("Division_ID")
  private String divisionID = null;

  @SerializedName("BusOrder_ID")
  private String busOrderID = null;

  @SerializedName("BusTransaction_ID")
  private String busTransactionID = null;

  @SerializedName("BusProject_ID")
  private String busProjectID = null;

  @SerializedName("ConstSymbol_ID")
  private String constSymbolID = null;

  @SerializedName("AnalyticalAccount")
  private String analyticalAccount = null;

  @SerializedName("Curencies")
  private List<Virtualposcurrency> curencies = new ArrayList<Virtualposcurrency>();

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Virtualpos rows(List<Virtualposcurrency> rows) {
    this.rows = rows;
    return this;
  }

  public Virtualpos addRowsItem(Virtualposcurrency rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Měny; kolekce BO Pokladní místo - povolená měna [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Měny; kolekce BO Pokladní místo - povolená měna [nepersistentní položka]")
  public List<Virtualposcurrency> getRows() {
    return rows;
  }

  public void setRows(List<Virtualposcurrency> rows) {
    this.rows = rows;
  }

  public Virtualpos hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Virtualpos name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Virtualpos createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Virtualpos lockedByID(String lockedByID) {
    this.lockedByID = lockedByID;
    return this;
  }

   /**
   * Uzamkl; ID objektu Uživatel [persistentní položka]
   * @return lockedByID
  **/
  @ApiModelProperty(example = "null", value = "Uzamkl; ID objektu Uživatel [persistentní položka]")
  public String getLockedByID() {
    return lockedByID;
  }

  public void setLockedByID(String lockedByID) {
    this.lockedByID = lockedByID;
  }

  public Virtualpos createdDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return createdDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreatedDateDATE() {
    return createdDateDATE;
  }

  public void setCreatedDateDATE(DateTime createdDateDATE) {
    this.createdDateDATE = createdDateDATE;
  }

  public Virtualpos lockedDateDATE(DateTime lockedDateDATE) {
    this.lockedDateDATE = lockedDateDATE;
    return this;
  }

   /**
   * Uzamčeno [persistentní položka]
   * @return lockedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Uzamčeno [persistentní položka]")
  public DateTime getLockedDateDATE() {
    return lockedDateDATE;
  }

  public void setLockedDateDATE(DateTime lockedDateDATE) {
    this.lockedDateDATE = lockedDateDATE;
  }

  public Virtualpos locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Uzamčeno [persistentní položka]
   * @return locked
  **/
  @ApiModelProperty(example = "null", value = "Uzamčeno [persistentní položka]")
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public Virtualpos printVarSymbol(Boolean printVarSymbol) {
    this.printVarSymbol = printVarSymbol;
    return this;
  }

   /**
   * Tisknout var.sym. [persistentní položka]
   * @return printVarSymbol
  **/
  @ApiModelProperty(example = "null", value = "Tisknout var.sym. [persistentní položka]")
  public Boolean getPrintVarSymbol() {
    return printVarSymbol;
  }

  public void setPrintVarSymbol(Boolean printVarSymbol) {
    this.printVarSymbol = printVarSymbol;
  }

  public Virtualpos splitCashPaidByPaymentCards(Boolean splitCashPaidByPaymentCards) {
    this.splitCashPaidByPaymentCards = splitCashPaidByPaymentCards;
    return this;
  }

   /**
   * Odvádět každou platbu kartou samostatně [persistentní položka]
   * @return splitCashPaidByPaymentCards
  **/
  @ApiModelProperty(example = "null", value = "Odvádět každou platbu kartou samostatně [persistentní položka]")
  public Boolean getSplitCashPaidByPaymentCards() {
    return splitCashPaidByPaymentCards;
  }

  public void setSplitCashPaidByPaymentCards(Boolean splitCashPaidByPaymentCards) {
    this.splitCashPaidByPaymentCards = splitCashPaidByPaymentCards;
  }

  public Virtualpos directToCashDeskForced(Boolean directToCashDeskForced) {
    this.directToCashDeskForced = directToCashDeskForced;
    return this;
  }

   /**
   * Povinně odvádět tržby přímo do firemní pokladny [persistentní položka]
   * @return directToCashDeskForced
  **/
  @ApiModelProperty(example = "null", value = "Povinně odvádět tržby přímo do firemní pokladny [persistentní položka]")
  public Boolean getDirectToCashDeskForced() {
    return directToCashDeskForced;
  }

  public void setDirectToCashDeskForced(Boolean directToCashDeskForced) {
    this.directToCashDeskForced = directToCashDeskForced;
  }

  public Virtualpos docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Řada dokladů; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Řada dokladů; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Virtualpos firmID(String firmID) {
    this.firmID = firmID;
    return this;
  }

   /**
   * Firma pro předvyplnění; ID objektu Firma [persistentní položka]
   * @return firmID
  **/
  @ApiModelProperty(example = "null", value = "Firma pro předvyplnění; ID objektu Firma [persistentní položka]")
  public String getFirmID() {
    return firmID;
  }

  public void setFirmID(String firmID) {
    this.firmID = firmID;
  }

  public Virtualpos divisionID(String divisionID) {
    this.divisionID = divisionID;
    return this;
  }

   /**
   * Středisko; ID objektu Středisko [persistentní položka]
   * @return divisionID
  **/
  @ApiModelProperty(example = "null", value = "Středisko; ID objektu Středisko [persistentní položka]")
  public String getDivisionID() {
    return divisionID;
  }

  public void setDivisionID(String divisionID) {
    this.divisionID = divisionID;
  }

  public Virtualpos busOrderID(String busOrderID) {
    this.busOrderID = busOrderID;
    return this;
  }

   /**
   * Zakázka; ID objektu Zakázka [persistentní položka]
   * @return busOrderID
  **/
  @ApiModelProperty(example = "null", value = "Zakázka; ID objektu Zakázka [persistentní položka]")
  public String getBusOrderID() {
    return busOrderID;
  }

  public void setBusOrderID(String busOrderID) {
    this.busOrderID = busOrderID;
  }

  public Virtualpos busTransactionID(String busTransactionID) {
    this.busTransactionID = busTransactionID;
    return this;
  }

   /**
   * Obchodní případ; ID objektu Obchodní případ [persistentní položka]
   * @return busTransactionID
  **/
  @ApiModelProperty(example = "null", value = "Obchodní případ; ID objektu Obchodní případ [persistentní položka]")
  public String getBusTransactionID() {
    return busTransactionID;
  }

  public void setBusTransactionID(String busTransactionID) {
    this.busTransactionID = busTransactionID;
  }

  public Virtualpos busProjectID(String busProjectID) {
    this.busProjectID = busProjectID;
    return this;
  }

   /**
   * Projekt; ID objektu Projekt [persistentní položka]
   * @return busProjectID
  **/
  @ApiModelProperty(example = "null", value = "Projekt; ID objektu Projekt [persistentní položka]")
  public String getBusProjectID() {
    return busProjectID;
  }

  public void setBusProjectID(String busProjectID) {
    this.busProjectID = busProjectID;
  }

  public Virtualpos constSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
    return this;
  }

   /**
   * Konst.symbol; ID objektu Konstantní symbol [persistentní položka]
   * @return constSymbolID
  **/
  @ApiModelProperty(example = "null", value = "Konst.symbol; ID objektu Konstantní symbol [persistentní položka]")
  public String getConstSymbolID() {
    return constSymbolID;
  }

  public void setConstSymbolID(String constSymbolID) {
    this.constSymbolID = constSymbolID;
  }

  public Virtualpos analyticalAccount(String analyticalAccount) {
    this.analyticalAccount = analyticalAccount;
    return this;
  }

   /**
   * Analytika [persistentní položka]
   * @return analyticalAccount
  **/
  @ApiModelProperty(example = "null", value = "Analytika [persistentní položka]")
  public String getAnalyticalAccount() {
    return analyticalAccount;
  }

  public void setAnalyticalAccount(String analyticalAccount) {
    this.analyticalAccount = analyticalAccount;
  }

  public Virtualpos curencies(List<Virtualposcurrency> curencies) {
    this.curencies = curencies;
    return this;
  }

  public Virtualpos addCurenciesItem(Virtualposcurrency curenciesItem) {
    this.curencies.add(curenciesItem);
    return this;
  }

   /**
   * Měny; kolekce BO Pokladní místo - povolená měna [nepersistentní položka]
   * @return curencies
  **/
  @ApiModelProperty(example = "null", value = "Měny; kolekce BO Pokladní místo - povolená měna [nepersistentní položka]")
  public List<Virtualposcurrency> getCurencies() {
    return curencies;
  }

  public void setCurencies(List<Virtualposcurrency> curencies) {
    this.curencies = curencies;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Virtualpos virtualpos = (Virtualpos) o;
    return Objects.equals(this.displayName, virtualpos.displayName) &&
        Objects.equals(this.ID, virtualpos.ID) &&
        Objects.equals(this.classID, virtualpos.classID) &&
        Objects.equals(this.objVersion, virtualpos.objVersion) &&
        Objects.equals(this.rows, virtualpos.rows) &&
        Objects.equals(this.hidden, virtualpos.hidden) &&
        Objects.equals(this.name, virtualpos.name) &&
        Objects.equals(this.createdByID, virtualpos.createdByID) &&
        Objects.equals(this.lockedByID, virtualpos.lockedByID) &&
        Objects.equals(this.createdDateDATE, virtualpos.createdDateDATE) &&
        Objects.equals(this.lockedDateDATE, virtualpos.lockedDateDATE) &&
        Objects.equals(this.locked, virtualpos.locked) &&
        Objects.equals(this.printVarSymbol, virtualpos.printVarSymbol) &&
        Objects.equals(this.splitCashPaidByPaymentCards, virtualpos.splitCashPaidByPaymentCards) &&
        Objects.equals(this.directToCashDeskForced, virtualpos.directToCashDeskForced) &&
        Objects.equals(this.docQueueID, virtualpos.docQueueID) &&
        Objects.equals(this.firmID, virtualpos.firmID) &&
        Objects.equals(this.divisionID, virtualpos.divisionID) &&
        Objects.equals(this.busOrderID, virtualpos.busOrderID) &&
        Objects.equals(this.busTransactionID, virtualpos.busTransactionID) &&
        Objects.equals(this.busProjectID, virtualpos.busProjectID) &&
        Objects.equals(this.constSymbolID, virtualpos.constSymbolID) &&
        Objects.equals(this.analyticalAccount, virtualpos.analyticalAccount) &&
        Objects.equals(this.curencies, virtualpos.curencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, hidden, name, createdByID, lockedByID, createdDateDATE, lockedDateDATE, locked, printVarSymbol, splitCashPaidByPaymentCards, directToCashDeskForced, docQueueID, firmID, divisionID, busOrderID, busTransactionID, busProjectID, constSymbolID, analyticalAccount, curencies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Virtualpos {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    lockedByID: ").append(toIndentedString(lockedByID)).append("\n");
    sb.append("    createdDateDATE: ").append(toIndentedString(createdDateDATE)).append("\n");
    sb.append("    lockedDateDATE: ").append(toIndentedString(lockedDateDATE)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    printVarSymbol: ").append(toIndentedString(printVarSymbol)).append("\n");
    sb.append("    splitCashPaidByPaymentCards: ").append(toIndentedString(splitCashPaidByPaymentCards)).append("\n");
    sb.append("    directToCashDeskForced: ").append(toIndentedString(directToCashDeskForced)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    firmID: ").append(toIndentedString(firmID)).append("\n");
    sb.append("    divisionID: ").append(toIndentedString(divisionID)).append("\n");
    sb.append("    busOrderID: ").append(toIndentedString(busOrderID)).append("\n");
    sb.append("    busTransactionID: ").append(toIndentedString(busTransactionID)).append("\n");
    sb.append("    busProjectID: ").append(toIndentedString(busProjectID)).append("\n");
    sb.append("    constSymbolID: ").append(toIndentedString(constSymbolID)).append("\n");
    sb.append("    analyticalAccount: ").append(toIndentedString(analyticalAccount)).append("\n");
    sb.append("    curencies: ").append(toIndentedString(curencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

