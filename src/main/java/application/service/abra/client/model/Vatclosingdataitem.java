/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Vatclosingdataitem
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Vatclosingdataitem   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("RowNumber")
  private String rowNumber = null;

  @SerializedName("CorrectionValue")
  private Double correctionValue = null;

  @SerializedName("CalculatedValue")
  private Double calculatedValue = null;

  @SerializedName("RowValue")
  private Double rowValue = null;

  @SerializedName("OldRowValue")
  private Double oldRowValue = null;

  @SerializedName("DefinitionType")
  private Integer definitionType = null;

  @SerializedName("RowValueKind")
  private Integer rowValueKind = null;

  @SerializedName("VATDefinitionRow_ID")
  private String vATDefinitionRowID = null;

  @SerializedName("DefinitionTypeAsText")
  private String definitionTypeAsText = null;

  @SerializedName("RowValueKindAsText")
  private String rowValueKindAsText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Uzávěrka DPH [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Uzávěrka DPH [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Vatclosingdataitem rowNumber(String rowNumber) {
    this.rowNumber = rowNumber;
    return this;
  }

   /**
   * Řádek [persistentní položka]
   * @return rowNumber
  **/
  @ApiModelProperty(example = "null", value = "Řádek [persistentní položka]")
  public String getRowNumber() {
    return rowNumber;
  }

  public void setRowNumber(String rowNumber) {
    this.rowNumber = rowNumber;
  }

  public Vatclosingdataitem correctionValue(Double correctionValue) {
    this.correctionValue = correctionValue;
    return this;
  }

   /**
   * Oprava hodnoty [persistentní položka]
   * @return correctionValue
  **/
  @ApiModelProperty(example = "null", value = "Oprava hodnoty [persistentní položka]")
  public Double getCorrectionValue() {
    return correctionValue;
  }

  public void setCorrectionValue(Double correctionValue) {
    this.correctionValue = correctionValue;
  }

  public Vatclosingdataitem calculatedValue(Double calculatedValue) {
    this.calculatedValue = calculatedValue;
    return this;
  }

   /**
   * Vypočtená hodnota [persistentní položka]
   * @return calculatedValue
  **/
  @ApiModelProperty(example = "null", value = "Vypočtená hodnota [persistentní položka]")
  public Double getCalculatedValue() {
    return calculatedValue;
  }

  public void setCalculatedValue(Double calculatedValue) {
    this.calculatedValue = calculatedValue;
  }

  public Vatclosingdataitem rowValue(Double rowValue) {
    this.rowValue = rowValue;
    return this;
  }

   /**
   * Hodnota [persistentní položka]
   * @return rowValue
  **/
  @ApiModelProperty(example = "null", value = "Hodnota [persistentní položka]")
  public Double getRowValue() {
    return rowValue;
  }

  public void setRowValue(Double rowValue) {
    this.rowValue = rowValue;
  }

  public Vatclosingdataitem oldRowValue(Double oldRowValue) {
    this.oldRowValue = oldRowValue;
    return this;
  }

   /**
   * Původní hodnota [persistentní položka]
   * @return oldRowValue
  **/
  @ApiModelProperty(example = "null", value = "Původní hodnota [persistentní položka]")
  public Double getOldRowValue() {
    return oldRowValue;
  }

  public void setOldRowValue(Double oldRowValue) {
    this.oldRowValue = oldRowValue;
  }

  public Vatclosingdataitem definitionType(Integer definitionType) {
    this.definitionType = definitionType;
    return this;
  }

   /**
   * Typ řádku definice [persistentní položka]
   * @return definitionType
  **/
  @ApiModelProperty(example = "null", value = "Typ řádku definice [persistentní položka]")
  public Integer getDefinitionType() {
    return definitionType;
  }

  public void setDefinitionType(Integer definitionType) {
    this.definitionType = definitionType;
  }

  public Vatclosingdataitem rowValueKind(Integer rowValueKind) {
    this.rowValueKind = rowValueKind;
    return this;
  }

   /**
   * Typ hodnoty řádku definice [persistentní položka]
   * @return rowValueKind
  **/
  @ApiModelProperty(example = "null", value = "Typ hodnoty řádku definice [persistentní položka]")
  public Integer getRowValueKind() {
    return rowValueKind;
  }

  public void setRowValueKind(Integer rowValueKind) {
    this.rowValueKind = rowValueKind;
  }

  public Vatclosingdataitem vATDefinitionRowID(String vATDefinitionRowID) {
    this.vATDefinitionRowID = vATDefinitionRowID;
    return this;
  }

   /**
   * Definice DPH; ID objektu Definice pro DPH přiznání - řádek [persistentní položka]
   * @return vATDefinitionRowID
  **/
  @ApiModelProperty(example = "null", value = "Definice DPH; ID objektu Definice pro DPH přiznání - řádek [persistentní položka]")
  public String getVATDefinitionRowID() {
    return vATDefinitionRowID;
  }

  public void setVATDefinitionRowID(String vATDefinitionRowID) {
    this.vATDefinitionRowID = vATDefinitionRowID;
  }

  public Vatclosingdataitem definitionTypeAsText(String definitionTypeAsText) {
    this.definitionTypeAsText = definitionTypeAsText;
    return this;
  }

   /**
   * Typ řádku definice - text
   * @return definitionTypeAsText
  **/
  @ApiModelProperty(example = "null", value = "Typ řádku definice - text")
  public String getDefinitionTypeAsText() {
    return definitionTypeAsText;
  }

  public void setDefinitionTypeAsText(String definitionTypeAsText) {
    this.definitionTypeAsText = definitionTypeAsText;
  }

  public Vatclosingdataitem rowValueKindAsText(String rowValueKindAsText) {
    this.rowValueKindAsText = rowValueKindAsText;
    return this;
  }

   /**
   * Typ řádku definice - text
   * @return rowValueKindAsText
  **/
  @ApiModelProperty(example = "null", value = "Typ řádku definice - text")
  public String getRowValueKindAsText() {
    return rowValueKindAsText;
  }

  public void setRowValueKindAsText(String rowValueKindAsText) {
    this.rowValueKindAsText = rowValueKindAsText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vatclosingdataitem vatclosingdataitem = (Vatclosingdataitem) o;
    return Objects.equals(this.displayName, vatclosingdataitem.displayName) &&
        Objects.equals(this.ID, vatclosingdataitem.ID) &&
        Objects.equals(this.classID, vatclosingdataitem.classID) &&
        Objects.equals(this.objVersion, vatclosingdataitem.objVersion) &&
        Objects.equals(this.parentID, vatclosingdataitem.parentID) &&
        Objects.equals(this.rowNumber, vatclosingdataitem.rowNumber) &&
        Objects.equals(this.correctionValue, vatclosingdataitem.correctionValue) &&
        Objects.equals(this.calculatedValue, vatclosingdataitem.calculatedValue) &&
        Objects.equals(this.rowValue, vatclosingdataitem.rowValue) &&
        Objects.equals(this.oldRowValue, vatclosingdataitem.oldRowValue) &&
        Objects.equals(this.definitionType, vatclosingdataitem.definitionType) &&
        Objects.equals(this.rowValueKind, vatclosingdataitem.rowValueKind) &&
        Objects.equals(this.vATDefinitionRowID, vatclosingdataitem.vATDefinitionRowID) &&
        Objects.equals(this.definitionTypeAsText, vatclosingdataitem.definitionTypeAsText) &&
        Objects.equals(this.rowValueKindAsText, vatclosingdataitem.rowValueKindAsText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, rowNumber, correctionValue, calculatedValue, rowValue, oldRowValue, definitionType, rowValueKind, vATDefinitionRowID, definitionTypeAsText, rowValueKindAsText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vatclosingdataitem {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    rowNumber: ").append(toIndentedString(rowNumber)).append("\n");
    sb.append("    correctionValue: ").append(toIndentedString(correctionValue)).append("\n");
    sb.append("    calculatedValue: ").append(toIndentedString(calculatedValue)).append("\n");
    sb.append("    rowValue: ").append(toIndentedString(rowValue)).append("\n");
    sb.append("    oldRowValue: ").append(toIndentedString(oldRowValue)).append("\n");
    sb.append("    definitionType: ").append(toIndentedString(definitionType)).append("\n");
    sb.append("    rowValueKind: ").append(toIndentedString(rowValueKind)).append("\n");
    sb.append("    vATDefinitionRowID: ").append(toIndentedString(vATDefinitionRowID)).append("\n");
    sb.append("    definitionTypeAsText: ").append(toIndentedString(definitionTypeAsText)).append("\n");
    sb.append("    rowValueKindAsText: ").append(toIndentedString(rowValueKindAsText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

