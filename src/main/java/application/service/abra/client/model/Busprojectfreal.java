/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Busprojectfreal
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Busprojectfreal   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("busobject_id")
  private String busobjectId = null;

  @SerializedName("evaluationdate$date")
  private DateTime evaluationdatedate = null;

  @SerializedName("realcosts")
  private Double realcosts = null;

  @SerializedName("realrevenues")
  private Double realrevenues = null;

  @SerializedName("realcostswithsubtree")
  private Double realcostswithsubtree = null;

  @SerializedName("realrevenueswithsubtree")
  private Double realrevenueswithsubtree = null;

  @SerializedName("realcostsfromsources")
  private Double realcostsfromsources = null;

  @SerializedName("realcostsfromsourceswsubtree")
  private Double realcostsfromsourceswsubtree = null;

  @SerializedName("calculatedby_id")
  private String calculatedbyId = null;

  @SerializedName("calculatedwhen$date")
  private DateTime calculatedwhendate = null;

  public Busprojectfreal displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Busprojectfreal id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Busprojectfreal classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Busprojectfreal objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Busprojectfreal busobjectId(String busobjectId) {
    this.busobjectId = busobjectId;
    return this;
  }

   /**
   * nadřízený objekt; id objektu projekt [persistentní položka]
   * @return busobjectId
  **/
  @ApiModelProperty(example = "null", value = "nadřízený objekt; id objektu projekt [persistentní položka]")
  public String getBusobjectId() {
    return busobjectId;
  }

  public void setBusobjectId(String busobjectId) {
    this.busobjectId = busobjectId;
  }

  public Busprojectfreal evaluationdatedate(DateTime evaluationdatedate) {
    this.evaluationdatedate = evaluationdatedate;
    return this;
  }

   /**
   * datum vyhodnocení [persistentní položka]
   * @return evaluationdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum vyhodnocení [persistentní položka]")
  public DateTime getEvaluationdatedate() {
    return evaluationdatedate;
  }

  public void setEvaluationdatedate(DateTime evaluationdatedate) {
    this.evaluationdatedate = evaluationdatedate;
  }

  public Busprojectfreal realcosts(Double realcosts) {
    this.realcosts = realcosts;
    return this;
  }

   /**
   * reálné náklady [persistentní položka]
   * @return realcosts
  **/
  @ApiModelProperty(example = "null", value = "reálné náklady [persistentní položka]")
  public Double getRealcosts() {
    return realcosts;
  }

  public void setRealcosts(Double realcosts) {
    this.realcosts = realcosts;
  }

  public Busprojectfreal realrevenues(Double realrevenues) {
    this.realrevenues = realrevenues;
    return this;
  }

   /**
   * reálné výnosy [persistentní položka]
   * @return realrevenues
  **/
  @ApiModelProperty(example = "null", value = "reálné výnosy [persistentní položka]")
  public Double getRealrevenues() {
    return realrevenues;
  }

  public void setRealrevenues(Double realrevenues) {
    this.realrevenues = realrevenues;
  }

  public Busprojectfreal realcostswithsubtree(Double realcostswithsubtree) {
    this.realcostswithsubtree = realcostswithsubtree;
    return this;
  }

   /**
   * reálné náklady vč.podřízených [persistentní položka]
   * @return realcostswithsubtree
  **/
  @ApiModelProperty(example = "null", value = "reálné náklady vč.podřízených [persistentní položka]")
  public Double getRealcostswithsubtree() {
    return realcostswithsubtree;
  }

  public void setRealcostswithsubtree(Double realcostswithsubtree) {
    this.realcostswithsubtree = realcostswithsubtree;
  }

  public Busprojectfreal realrevenueswithsubtree(Double realrevenueswithsubtree) {
    this.realrevenueswithsubtree = realrevenueswithsubtree;
    return this;
  }

   /**
   * reálné výnosy vč.podřízených [persistentní položka]
   * @return realrevenueswithsubtree
  **/
  @ApiModelProperty(example = "null", value = "reálné výnosy vč.podřízených [persistentní položka]")
  public Double getRealrevenueswithsubtree() {
    return realrevenueswithsubtree;
  }

  public void setRealrevenueswithsubtree(Double realrevenueswithsubtree) {
    this.realrevenueswithsubtree = realrevenueswithsubtree;
  }

  public Busprojectfreal realcostsfromsources(Double realcostsfromsources) {
    this.realcostsfromsources = realcostsfromsources;
    return this;
  }

   /**
   * reálné náklady zdrojů [persistentní položka]
   * @return realcostsfromsources
  **/
  @ApiModelProperty(example = "null", value = "reálné náklady zdrojů [persistentní položka]")
  public Double getRealcostsfromsources() {
    return realcostsfromsources;
  }

  public void setRealcostsfromsources(Double realcostsfromsources) {
    this.realcostsfromsources = realcostsfromsources;
  }

  public Busprojectfreal realcostsfromsourceswsubtree(Double realcostsfromsourceswsubtree) {
    this.realcostsfromsourceswsubtree = realcostsfromsourceswsubtree;
    return this;
  }

   /**
   * reálné náklady zdrojů vč.podřízených [persistentní položka]
   * @return realcostsfromsourceswsubtree
  **/
  @ApiModelProperty(example = "null", value = "reálné náklady zdrojů vč.podřízených [persistentní položka]")
  public Double getRealcostsfromsourceswsubtree() {
    return realcostsfromsourceswsubtree;
  }

  public void setRealcostsfromsourceswsubtree(Double realcostsfromsourceswsubtree) {
    this.realcostsfromsourceswsubtree = realcostsfromsourceswsubtree;
  }

  public Busprojectfreal calculatedbyId(String calculatedbyId) {
    this.calculatedbyId = calculatedbyId;
    return this;
  }

   /**
   * bilanci spočítal; id objektu uživatel [persistentní položka]
   * @return calculatedbyId
  **/
  @ApiModelProperty(example = "null", value = "bilanci spočítal; id objektu uživatel [persistentní položka]")
  public String getCalculatedbyId() {
    return calculatedbyId;
  }

  public void setCalculatedbyId(String calculatedbyId) {
    this.calculatedbyId = calculatedbyId;
  }

  public Busprojectfreal calculatedwhendate(DateTime calculatedwhendate) {
    this.calculatedwhendate = calculatedwhendate;
    return this;
  }

   /**
   * datum posl.výpočtu [persistentní položka]
   * @return calculatedwhendate
  **/
  @ApiModelProperty(example = "null", value = "datum posl.výpočtu [persistentní položka]")
  public DateTime getCalculatedwhendate() {
    return calculatedwhendate;
  }

  public void setCalculatedwhendate(DateTime calculatedwhendate) {
    this.calculatedwhendate = calculatedwhendate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Busprojectfreal busprojectfreal = (Busprojectfreal) o;
    return Objects.equals(this.displayname, busprojectfreal.displayname) &&
        Objects.equals(this.id, busprojectfreal.id) &&
        Objects.equals(this.classid, busprojectfreal.classid) &&
        Objects.equals(this.objversion, busprojectfreal.objversion) &&
        Objects.equals(this.busobjectId, busprojectfreal.busobjectId) &&
        Objects.equals(this.evaluationdatedate, busprojectfreal.evaluationdatedate) &&
        Objects.equals(this.realcosts, busprojectfreal.realcosts) &&
        Objects.equals(this.realrevenues, busprojectfreal.realrevenues) &&
        Objects.equals(this.realcostswithsubtree, busprojectfreal.realcostswithsubtree) &&
        Objects.equals(this.realrevenueswithsubtree, busprojectfreal.realrevenueswithsubtree) &&
        Objects.equals(this.realcostsfromsources, busprojectfreal.realcostsfromsources) &&
        Objects.equals(this.realcostsfromsourceswsubtree, busprojectfreal.realcostsfromsourceswsubtree) &&
        Objects.equals(this.calculatedbyId, busprojectfreal.calculatedbyId) &&
        Objects.equals(this.calculatedwhendate, busprojectfreal.calculatedwhendate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, busobjectId, evaluationdatedate, realcosts, realrevenues, realcostswithsubtree, realrevenueswithsubtree, realcostsfromsources, realcostsfromsourceswsubtree, calculatedbyId, calculatedwhendate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Busprojectfreal {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    busobjectId: ").append(toIndentedString(busobjectId)).append("\n");
    sb.append("    evaluationdatedate: ").append(toIndentedString(evaluationdatedate)).append("\n");
    sb.append("    realcosts: ").append(toIndentedString(realcosts)).append("\n");
    sb.append("    realrevenues: ").append(toIndentedString(realrevenues)).append("\n");
    sb.append("    realcostswithsubtree: ").append(toIndentedString(realcostswithsubtree)).append("\n");
    sb.append("    realrevenueswithsubtree: ").append(toIndentedString(realrevenueswithsubtree)).append("\n");
    sb.append("    realcostsfromsources: ").append(toIndentedString(realcostsfromsources)).append("\n");
    sb.append("    realcostsfromsourceswsubtree: ").append(toIndentedString(realcostsfromsourceswsubtree)).append("\n");
    sb.append("    calculatedbyId: ").append(toIndentedString(calculatedbyId)).append("\n");
    sb.append("    calculatedwhendate: ").append(toIndentedString(calculatedwhendate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

