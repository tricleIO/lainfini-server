/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Wagenotice
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Wagenotice   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Wagenoticeemployee> rows = new ArrayList<Wagenoticeemployee>();

  @SerializedName("Repeated")
  private Boolean repeated = null;

  @SerializedName("NoticeText")
  private String noticeText = null;

  @SerializedName("PeriodType")
  private Integer periodType = null;

  @SerializedName("PeriodLength")
  private Integer periodLength = null;

  @SerializedName("DeadLine$DATE")
  private DateTime deadLineDATE = null;

  @SerializedName("TaskClosedDate$DATE")
  private DateTime taskClosedDateDATE = null;

  @SerializedName("TaskClosed")
  private Boolean taskClosed = null;

  @SerializedName("WageNoticeType_ID")
  private String wageNoticeTypeID = null;

  @SerializedName("TaskOwner_ID")
  private String taskOwnerID = null;

  @SerializedName("TaskOwnerRole_ID")
  private String taskOwnerRoleID = null;

  @SerializedName("FixedDate")
  private Boolean fixedDate = null;

  @SerializedName("RepetitionDay")
  private Integer repetitionDay = null;

  @SerializedName("RepetitionMonth")
  private Integer repetitionMonth = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("ParentText")
  private String parentText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Wagenotice rows(List<Wagenoticeemployee> rows) {
    this.rows = rows;
    return this;
  }

  public Wagenotice addRowsItem(Wagenoticeemployee rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Související zaměstnanec [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Související zaměstnanec [nepersistentní položka]")
  public List<Wagenoticeemployee> getRows() {
    return rows;
  }

  public void setRows(List<Wagenoticeemployee> rows) {
    this.rows = rows;
  }

  public Wagenotice repeated(Boolean repeated) {
    this.repeated = repeated;
    return this;
  }

   /**
   * Opakovat [persistentní položka]
   * @return repeated
  **/
  @ApiModelProperty(example = "null", value = "Opakovat [persistentní položka]")
  public Boolean getRepeated() {
    return repeated;
  }

  public void setRepeated(Boolean repeated) {
    this.repeated = repeated;
  }

  public Wagenotice noticeText(String noticeText) {
    this.noticeText = noticeText;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return noticeText
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getNoticeText() {
    return noticeText;
  }

  public void setNoticeText(String noticeText) {
    this.noticeText = noticeText;
  }

  public Wagenotice periodType(Integer periodType) {
    this.periodType = periodType;
    return this;
  }

   /**
   * Typ opakování [persistentní položka]
   * @return periodType
  **/
  @ApiModelProperty(example = "null", value = "Typ opakování [persistentní položka]")
  public Integer getPeriodType() {
    return periodType;
  }

  public void setPeriodType(Integer periodType) {
    this.periodType = periodType;
  }

  public Wagenotice periodLength(Integer periodLength) {
    this.periodLength = periodLength;
    return this;
  }

   /**
   * Délka [persistentní položka]
   * @return periodLength
  **/
  @ApiModelProperty(example = "null", value = "Délka [persistentní položka]")
  public Integer getPeriodLength() {
    return periodLength;
  }

  public void setPeriodLength(Integer periodLength) {
    this.periodLength = periodLength;
  }

  public Wagenotice deadLineDATE(DateTime deadLineDATE) {
    this.deadLineDATE = deadLineDATE;
    return this;
  }

   /**
   * Termín [persistentní položka]
   * @return deadLineDATE
  **/
  @ApiModelProperty(example = "null", value = "Termín [persistentní položka]")
  public DateTime getDeadLineDATE() {
    return deadLineDATE;
  }

  public void setDeadLineDATE(DateTime deadLineDATE) {
    this.deadLineDATE = deadLineDATE;
  }

  public Wagenotice taskClosedDateDATE(DateTime taskClosedDateDATE) {
    this.taskClosedDateDATE = taskClosedDateDATE;
    return this;
  }

   /**
   * Datum vyřešení [persistentní položka]
   * @return taskClosedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum vyřešení [persistentní položka]")
  public DateTime getTaskClosedDateDATE() {
    return taskClosedDateDATE;
  }

  public void setTaskClosedDateDATE(DateTime taskClosedDateDATE) {
    this.taskClosedDateDATE = taskClosedDateDATE;
  }

  public Wagenotice taskClosed(Boolean taskClosed) {
    this.taskClosed = taskClosed;
    return this;
  }

   /**
   * Vyřešeno [persistentní položka]
   * @return taskClosed
  **/
  @ApiModelProperty(example = "null", value = "Vyřešeno [persistentní položka]")
  public Boolean getTaskClosed() {
    return taskClosed;
  }

  public void setTaskClosed(Boolean taskClosed) {
    this.taskClosed = taskClosed;
  }

  public Wagenotice wageNoticeTypeID(String wageNoticeTypeID) {
    this.wageNoticeTypeID = wageNoticeTypeID;
    return this;
  }

   /**
   * Druh úkolu; ID objektu Typ úkolu [persistentní položka]
   * @return wageNoticeTypeID
  **/
  @ApiModelProperty(example = "null", value = "Druh úkolu; ID objektu Typ úkolu [persistentní položka]")
  public String getWageNoticeTypeID() {
    return wageNoticeTypeID;
  }

  public void setWageNoticeTypeID(String wageNoticeTypeID) {
    this.wageNoticeTypeID = wageNoticeTypeID;
  }

  public Wagenotice taskOwnerID(String taskOwnerID) {
    this.taskOwnerID = taskOwnerID;
    return this;
  }

   /**
   * Řešitel; ID objektu Uživatel [persistentní položka]
   * @return taskOwnerID
  **/
  @ApiModelProperty(example = "null", value = "Řešitel; ID objektu Uživatel [persistentní položka]")
  public String getTaskOwnerID() {
    return taskOwnerID;
  }

  public void setTaskOwnerID(String taskOwnerID) {
    this.taskOwnerID = taskOwnerID;
  }

  public Wagenotice taskOwnerRoleID(String taskOwnerRoleID) {
    this.taskOwnerRoleID = taskOwnerRoleID;
    return this;
  }

   /**
   * Role řešitele; ID objektu Role [persistentní položka]
   * @return taskOwnerRoleID
  **/
  @ApiModelProperty(example = "null", value = "Role řešitele; ID objektu Role [persistentní položka]")
  public String getTaskOwnerRoleID() {
    return taskOwnerRoleID;
  }

  public void setTaskOwnerRoleID(String taskOwnerRoleID) {
    this.taskOwnerRoleID = taskOwnerRoleID;
  }

  public Wagenotice fixedDate(Boolean fixedDate) {
    this.fixedDate = fixedDate;
    return this;
  }

   /**
   * Pevné datum [persistentní položka]
   * @return fixedDate
  **/
  @ApiModelProperty(example = "null", value = "Pevné datum [persistentní položka]")
  public Boolean getFixedDate() {
    return fixedDate;
  }

  public void setFixedDate(Boolean fixedDate) {
    this.fixedDate = fixedDate;
  }

  public Wagenotice repetitionDay(Integer repetitionDay) {
    this.repetitionDay = repetitionDay;
    return this;
  }

   /**
   * Den opakování [persistentní položka]
   * @return repetitionDay
  **/
  @ApiModelProperty(example = "null", value = "Den opakování [persistentní položka]")
  public Integer getRepetitionDay() {
    return repetitionDay;
  }

  public void setRepetitionDay(Integer repetitionDay) {
    this.repetitionDay = repetitionDay;
  }

  public Wagenotice repetitionMonth(Integer repetitionMonth) {
    this.repetitionMonth = repetitionMonth;
    return this;
  }

   /**
   * Měsíc opakování [persistentní položka]
   * @return repetitionMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc opakování [persistentní položka]")
  public Integer getRepetitionMonth() {
    return repetitionMonth;
  }

  public void setRepetitionMonth(Integer repetitionMonth) {
    this.repetitionMonth = repetitionMonth;
  }

  public Wagenotice parentID(String parentID) {
    this.parentID = parentID;
    return this;
  }

   /**
   * Zdrojový úkol; ID objektu Úkol [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojový úkol; ID objektu Úkol [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public void setParentID(String parentID) {
    this.parentID = parentID;
  }

  public Wagenotice parentText(String parentText) {
    this.parentText = parentText;
    return this;
  }

   /**
   * Popis zdrojového úkolu
   * @return parentText
  **/
  @ApiModelProperty(example = "null", value = "Popis zdrojového úkolu")
  public String getParentText() {
    return parentText;
  }

  public void setParentText(String parentText) {
    this.parentText = parentText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wagenotice wagenotice = (Wagenotice) o;
    return Objects.equals(this.displayName, wagenotice.displayName) &&
        Objects.equals(this.ID, wagenotice.ID) &&
        Objects.equals(this.classID, wagenotice.classID) &&
        Objects.equals(this.objVersion, wagenotice.objVersion) &&
        Objects.equals(this.rows, wagenotice.rows) &&
        Objects.equals(this.repeated, wagenotice.repeated) &&
        Objects.equals(this.noticeText, wagenotice.noticeText) &&
        Objects.equals(this.periodType, wagenotice.periodType) &&
        Objects.equals(this.periodLength, wagenotice.periodLength) &&
        Objects.equals(this.deadLineDATE, wagenotice.deadLineDATE) &&
        Objects.equals(this.taskClosedDateDATE, wagenotice.taskClosedDateDATE) &&
        Objects.equals(this.taskClosed, wagenotice.taskClosed) &&
        Objects.equals(this.wageNoticeTypeID, wagenotice.wageNoticeTypeID) &&
        Objects.equals(this.taskOwnerID, wagenotice.taskOwnerID) &&
        Objects.equals(this.taskOwnerRoleID, wagenotice.taskOwnerRoleID) &&
        Objects.equals(this.fixedDate, wagenotice.fixedDate) &&
        Objects.equals(this.repetitionDay, wagenotice.repetitionDay) &&
        Objects.equals(this.repetitionMonth, wagenotice.repetitionMonth) &&
        Objects.equals(this.parentID, wagenotice.parentID) &&
        Objects.equals(this.parentText, wagenotice.parentText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, repeated, noticeText, periodType, periodLength, deadLineDATE, taskClosedDateDATE, taskClosed, wageNoticeTypeID, taskOwnerID, taskOwnerRoleID, fixedDate, repetitionDay, repetitionMonth, parentID, parentText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wagenotice {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    repeated: ").append(toIndentedString(repeated)).append("\n");
    sb.append("    noticeText: ").append(toIndentedString(noticeText)).append("\n");
    sb.append("    periodType: ").append(toIndentedString(periodType)).append("\n");
    sb.append("    periodLength: ").append(toIndentedString(periodLength)).append("\n");
    sb.append("    deadLineDATE: ").append(toIndentedString(deadLineDATE)).append("\n");
    sb.append("    taskClosedDateDATE: ").append(toIndentedString(taskClosedDateDATE)).append("\n");
    sb.append("    taskClosed: ").append(toIndentedString(taskClosed)).append("\n");
    sb.append("    wageNoticeTypeID: ").append(toIndentedString(wageNoticeTypeID)).append("\n");
    sb.append("    taskOwnerID: ").append(toIndentedString(taskOwnerID)).append("\n");
    sb.append("    taskOwnerRoleID: ").append(toIndentedString(taskOwnerRoleID)).append("\n");
    sb.append("    fixedDate: ").append(toIndentedString(fixedDate)).append("\n");
    sb.append("    repetitionDay: ").append(toIndentedString(repetitionDay)).append("\n");
    sb.append("    repetitionMonth: ").append(toIndentedString(repetitionMonth)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    parentText: ").append(toIndentedString(parentText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

