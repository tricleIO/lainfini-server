/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Holidaytype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Holidaytype   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("regular")
  private Boolean regular = null;

  @SerializedName("claim")
  private Double claim = null;

  @SerializedName("goon")
  private Boolean goon = null;

  @SerializedName("resttransfer")
  private Double resttransfer = null;

  @SerializedName("validfrommonthday")
  private Integer validfrommonthday = null;

  @SerializedName("validfrommonth")
  private Integer validfrommonth = null;

  @SerializedName("validfromday")
  private Integer validfromday = null;

  @SerializedName("validfromdate")
  private String validfromdate = null;

  @SerializedName("validtomonthday")
  private Integer validtomonthday = null;

  @SerializedName("validtomonth")
  private Integer validtomonth = null;

  @SerializedName("validtoday")
  private Integer validtoday = null;

  @SerializedName("validtodate")
  private String validtodate = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("payable")
  private Boolean payable = null;

  @SerializedName("claimtype")
  private Integer claimtype = null;

  @SerializedName("transferwholerest")
  private Boolean transferwholerest = null;

  @SerializedName("claimbyexpression")
  private Boolean claimbyexpression = null;

  @SerializedName("claimexpression")
  private String claimexpression = null;

  @SerializedName("claimtext")
  private String claimtext = null;

  public Holidaytype displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Holidaytype id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Holidaytype classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Holidaytype objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Holidaytype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Holidaytype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Holidaytype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Holidaytype regular(Boolean regular) {
    this.regular = regular;
    return this;
  }

   /**
   * Řádná [persistentní položka]
   * @return regular
  **/
  @ApiModelProperty(example = "null", value = "Řádná [persistentní položka]")
  public Boolean getRegular() {
    return regular;
  }

  public void setRegular(Boolean regular) {
    this.regular = regular;
  }

  public Holidaytype claim(Double claim) {
    this.claim = claim;
    return this;
  }

   /**
   * nárok [persistentní položka]
   * @return claim
  **/
  @ApiModelProperty(example = "null", value = "nárok [persistentní položka]")
  public Double getClaim() {
    return claim;
  }

  public void setClaim(Double claim) {
    this.claim = claim;
  }

  public Holidaytype goon(Boolean goon) {
    this.goon = goon;
    return this;
  }

   /**
   * přenos [persistentní položka]
   * @return goon
  **/
  @ApiModelProperty(example = "null", value = "přenos [persistentní položka]")
  public Boolean getGoon() {
    return goon;
  }

  public void setGoon(Boolean goon) {
    this.goon = goon;
  }

  public Holidaytype resttransfer(Double resttransfer) {
    this.resttransfer = resttransfer;
    return this;
  }

   /**
   * zbytek [persistentní položka]
   * @return resttransfer
  **/
  @ApiModelProperty(example = "null", value = "zbytek [persistentní položka]")
  public Double getResttransfer() {
    return resttransfer;
  }

  public void setResttransfer(Double resttransfer) {
    this.resttransfer = resttransfer;
  }

  public Holidaytype validfrommonthday(Integer validfrommonthday) {
    this.validfrommonthday = validfrommonthday;
    return this;
  }

   /**
   * měsíc, den od [persistentní položka]
   * @return validfrommonthday
  **/
  @ApiModelProperty(example = "null", value = "měsíc, den od [persistentní položka]")
  public Integer getValidfrommonthday() {
    return validfrommonthday;
  }

  public void setValidfrommonthday(Integer validfrommonthday) {
    this.validfrommonthday = validfrommonthday;
  }

  public Holidaytype validfrommonth(Integer validfrommonth) {
    this.validfrommonth = validfrommonth;
    return this;
  }

   /**
   * měsíc od
   * @return validfrommonth
  **/
  @ApiModelProperty(example = "null", value = "měsíc od")
  public Integer getValidfrommonth() {
    return validfrommonth;
  }

  public void setValidfrommonth(Integer validfrommonth) {
    this.validfrommonth = validfrommonth;
  }

  public Holidaytype validfromday(Integer validfromday) {
    this.validfromday = validfromday;
    return this;
  }

   /**
   * den od
   * @return validfromday
  **/
  @ApiModelProperty(example = "null", value = "den od")
  public Integer getValidfromday() {
    return validfromday;
  }

  public void setValidfromday(Integer validfromday) {
    this.validfromday = validfromday;
  }

  public Holidaytype validfromdate(String validfromdate) {
    this.validfromdate = validfromdate;
    return this;
  }

   /**
   * datum od
   * @return validfromdate
  **/
  @ApiModelProperty(example = "null", value = "datum od")
  public String getValidfromdate() {
    return validfromdate;
  }

  public void setValidfromdate(String validfromdate) {
    this.validfromdate = validfromdate;
  }

  public Holidaytype validtomonthday(Integer validtomonthday) {
    this.validtomonthday = validtomonthday;
    return this;
  }

   /**
   * měsíc, den do [persistentní položka]
   * @return validtomonthday
  **/
  @ApiModelProperty(example = "null", value = "měsíc, den do [persistentní položka]")
  public Integer getValidtomonthday() {
    return validtomonthday;
  }

  public void setValidtomonthday(Integer validtomonthday) {
    this.validtomonthday = validtomonthday;
  }

  public Holidaytype validtomonth(Integer validtomonth) {
    this.validtomonth = validtomonth;
    return this;
  }

   /**
   * měsíc do
   * @return validtomonth
  **/
  @ApiModelProperty(example = "null", value = "měsíc do")
  public Integer getValidtomonth() {
    return validtomonth;
  }

  public void setValidtomonth(Integer validtomonth) {
    this.validtomonth = validtomonth;
  }

  public Holidaytype validtoday(Integer validtoday) {
    this.validtoday = validtoday;
    return this;
  }

   /**
   * den do
   * @return validtoday
  **/
  @ApiModelProperty(example = "null", value = "den do")
  public Integer getValidtoday() {
    return validtoday;
  }

  public void setValidtoday(Integer validtoday) {
    this.validtoday = validtoday;
  }

  public Holidaytype validtodate(String validtodate) {
    this.validtodate = validtodate;
    return this;
  }

   /**
   * datum do
   * @return validtodate
  **/
  @ApiModelProperty(example = "null", value = "datum do")
  public String getValidtodate() {
    return validtodate;
  }

  public void setValidtodate(String validtodate) {
    this.validtodate = validtodate;
  }

  public Holidaytype priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * priorita [persistentní položka]
   * @return priority
  **/
  @ApiModelProperty(example = "null", value = "priorita [persistentní položka]")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Holidaytype payable(Boolean payable) {
    this.payable = payable;
    return this;
  }

   /**
   * proplácet [persistentní položka]
   * @return payable
  **/
  @ApiModelProperty(example = "null", value = "proplácet [persistentní položka]")
  public Boolean getPayable() {
    return payable;
  }

  public void setPayable(Boolean payable) {
    this.payable = payable;
  }

  public Holidaytype claimtype(Integer claimtype) {
    this.claimtype = claimtype;
    return this;
  }

   /**
   * jednotka nároku [persistentní položka]
   * @return claimtype
  **/
  @ApiModelProperty(example = "null", value = "jednotka nároku [persistentní položka]")
  public Integer getClaimtype() {
    return claimtype;
  }

  public void setClaimtype(Integer claimtype) {
    this.claimtype = claimtype;
  }

  public Holidaytype transferwholerest(Boolean transferwholerest) {
    this.transferwholerest = transferwholerest;
    return this;
  }

   /**
   * přenášet vše [persistentní položka]
   * @return transferwholerest
  **/
  @ApiModelProperty(example = "null", value = "přenášet vše [persistentní položka]")
  public Boolean getTransferwholerest() {
    return transferwholerest;
  }

  public void setTransferwholerest(Boolean transferwholerest) {
    this.transferwholerest = transferwholerest;
  }

  public Holidaytype claimbyexpression(Boolean claimbyexpression) {
    this.claimbyexpression = claimbyexpression;
    return this;
  }

   /**
   * nárok výrazem [persistentní položka]
   * @return claimbyexpression
  **/
  @ApiModelProperty(example = "null", value = "nárok výrazem [persistentní položka]")
  public Boolean getClaimbyexpression() {
    return claimbyexpression;
  }

  public void setClaimbyexpression(Boolean claimbyexpression) {
    this.claimbyexpression = claimbyexpression;
  }

  public Holidaytype claimexpression(String claimexpression) {
    this.claimexpression = claimexpression;
    return this;
  }

   /**
   * výraz nároku [persistentní položka]
   * @return claimexpression
  **/
  @ApiModelProperty(example = "null", value = "výraz nároku [persistentní položka]")
  public String getClaimexpression() {
    return claimexpression;
  }

  public void setClaimexpression(String claimexpression) {
    this.claimexpression = claimexpression;
  }

  public Holidaytype claimtext(String claimtext) {
    this.claimtext = claimtext;
    return this;
  }

   /**
   * nárok textově
   * @return claimtext
  **/
  @ApiModelProperty(example = "null", value = "nárok textově")
  public String getClaimtext() {
    return claimtext;
  }

  public void setClaimtext(String claimtext) {
    this.claimtext = claimtext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Holidaytype holidaytype = (Holidaytype) o;
    return Objects.equals(this.displayname, holidaytype.displayname) &&
        Objects.equals(this.id, holidaytype.id) &&
        Objects.equals(this.classid, holidaytype.classid) &&
        Objects.equals(this.objversion, holidaytype.objversion) &&
        Objects.equals(this.hidden, holidaytype.hidden) &&
        Objects.equals(this.code, holidaytype.code) &&
        Objects.equals(this.name, holidaytype.name) &&
        Objects.equals(this.regular, holidaytype.regular) &&
        Objects.equals(this.claim, holidaytype.claim) &&
        Objects.equals(this.goon, holidaytype.goon) &&
        Objects.equals(this.resttransfer, holidaytype.resttransfer) &&
        Objects.equals(this.validfrommonthday, holidaytype.validfrommonthday) &&
        Objects.equals(this.validfrommonth, holidaytype.validfrommonth) &&
        Objects.equals(this.validfromday, holidaytype.validfromday) &&
        Objects.equals(this.validfromdate, holidaytype.validfromdate) &&
        Objects.equals(this.validtomonthday, holidaytype.validtomonthday) &&
        Objects.equals(this.validtomonth, holidaytype.validtomonth) &&
        Objects.equals(this.validtoday, holidaytype.validtoday) &&
        Objects.equals(this.validtodate, holidaytype.validtodate) &&
        Objects.equals(this.priority, holidaytype.priority) &&
        Objects.equals(this.payable, holidaytype.payable) &&
        Objects.equals(this.claimtype, holidaytype.claimtype) &&
        Objects.equals(this.transferwholerest, holidaytype.transferwholerest) &&
        Objects.equals(this.claimbyexpression, holidaytype.claimbyexpression) &&
        Objects.equals(this.claimexpression, holidaytype.claimexpression) &&
        Objects.equals(this.claimtext, holidaytype.claimtext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, code, name, regular, claim, goon, resttransfer, validfrommonthday, validfrommonth, validfromday, validfromdate, validtomonthday, validtomonth, validtoday, validtodate, priority, payable, claimtype, transferwholerest, claimbyexpression, claimexpression, claimtext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Holidaytype {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    regular: ").append(toIndentedString(regular)).append("\n");
    sb.append("    claim: ").append(toIndentedString(claim)).append("\n");
    sb.append("    goon: ").append(toIndentedString(goon)).append("\n");
    sb.append("    resttransfer: ").append(toIndentedString(resttransfer)).append("\n");
    sb.append("    validfrommonthday: ").append(toIndentedString(validfrommonthday)).append("\n");
    sb.append("    validfrommonth: ").append(toIndentedString(validfrommonth)).append("\n");
    sb.append("    validfromday: ").append(toIndentedString(validfromday)).append("\n");
    sb.append("    validfromdate: ").append(toIndentedString(validfromdate)).append("\n");
    sb.append("    validtomonthday: ").append(toIndentedString(validtomonthday)).append("\n");
    sb.append("    validtomonth: ").append(toIndentedString(validtomonth)).append("\n");
    sb.append("    validtoday: ").append(toIndentedString(validtoday)).append("\n");
    sb.append("    validtodate: ").append(toIndentedString(validtodate)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    payable: ").append(toIndentedString(payable)).append("\n");
    sb.append("    claimtype: ").append(toIndentedString(claimtype)).append("\n");
    sb.append("    transferwholerest: ").append(toIndentedString(transferwholerest)).append("\n");
    sb.append("    claimbyexpression: ").append(toIndentedString(claimbyexpression)).append("\n");
    sb.append("    claimexpression: ").append(toIndentedString(claimexpression)).append("\n");
    sb.append("    claimtext: ").append(toIndentedString(claimtext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

