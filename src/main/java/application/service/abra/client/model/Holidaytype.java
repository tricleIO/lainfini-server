/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Holidaytype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Holidaytype   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Regular")
  private Boolean regular = null;

  @SerializedName("Claim")
  private Double claim = null;

  @SerializedName("GoOn")
  private Boolean goOn = null;

  @SerializedName("RestTransfer")
  private Double restTransfer = null;

  @SerializedName("ValidFromMonthDay")
  private Integer validFromMonthDay = null;

  @SerializedName("ValidFromMonth")
  private Integer validFromMonth = null;

  @SerializedName("ValidFromDay")
  private Integer validFromDay = null;

  @SerializedName("ValidFromDate")
  private String validFromDate = null;

  @SerializedName("ValidToMonthDay")
  private Integer validToMonthDay = null;

  @SerializedName("ValidToMonth")
  private Integer validToMonth = null;

  @SerializedName("ValidToDay")
  private Integer validToDay = null;

  @SerializedName("ValidToDate")
  private String validToDate = null;

  @SerializedName("Priority")
  private Integer priority = null;

  @SerializedName("PayAble")
  private Boolean payAble = null;

  @SerializedName("ClaimType")
  private Integer claimType = null;

  @SerializedName("TransferWholeRest")
  private Boolean transferWholeRest = null;

  @SerializedName("ClaimByExpression")
  private Boolean claimByExpression = null;

  @SerializedName("ClaimExpression")
  private String claimExpression = null;

  @SerializedName("ClaimText")
  private String claimText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Holidaytype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Holidaytype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Holidaytype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Holidaytype regular(Boolean regular) {
    this.regular = regular;
    return this;
  }

   /**
   * Řádná [persistentní položka]
   * @return regular
  **/
  @ApiModelProperty(example = "null", value = "Řádná [persistentní položka]")
  public Boolean getRegular() {
    return regular;
  }

  public void setRegular(Boolean regular) {
    this.regular = regular;
  }

  public Holidaytype claim(Double claim) {
    this.claim = claim;
    return this;
  }

   /**
   * Nárok [persistentní položka]
   * @return claim
  **/
  @ApiModelProperty(example = "null", value = "Nárok [persistentní položka]")
  public Double getClaim() {
    return claim;
  }

  public void setClaim(Double claim) {
    this.claim = claim;
  }

  public Holidaytype goOn(Boolean goOn) {
    this.goOn = goOn;
    return this;
  }

   /**
   * Přenos [persistentní položka]
   * @return goOn
  **/
  @ApiModelProperty(example = "null", value = "Přenos [persistentní položka]")
  public Boolean getGoOn() {
    return goOn;
  }

  public void setGoOn(Boolean goOn) {
    this.goOn = goOn;
  }

  public Holidaytype restTransfer(Double restTransfer) {
    this.restTransfer = restTransfer;
    return this;
  }

   /**
   * Zbytek [persistentní položka]
   * @return restTransfer
  **/
  @ApiModelProperty(example = "null", value = "Zbytek [persistentní položka]")
  public Double getRestTransfer() {
    return restTransfer;
  }

  public void setRestTransfer(Double restTransfer) {
    this.restTransfer = restTransfer;
  }

  public Holidaytype validFromMonthDay(Integer validFromMonthDay) {
    this.validFromMonthDay = validFromMonthDay;
    return this;
  }

   /**
   * Měsíc, den od [persistentní položka]
   * @return validFromMonthDay
  **/
  @ApiModelProperty(example = "null", value = "Měsíc, den od [persistentní položka]")
  public Integer getValidFromMonthDay() {
    return validFromMonthDay;
  }

  public void setValidFromMonthDay(Integer validFromMonthDay) {
    this.validFromMonthDay = validFromMonthDay;
  }

  public Holidaytype validFromMonth(Integer validFromMonth) {
    this.validFromMonth = validFromMonth;
    return this;
  }

   /**
   * Měsíc od
   * @return validFromMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc od")
  public Integer getValidFromMonth() {
    return validFromMonth;
  }

  public void setValidFromMonth(Integer validFromMonth) {
    this.validFromMonth = validFromMonth;
  }

  public Holidaytype validFromDay(Integer validFromDay) {
    this.validFromDay = validFromDay;
    return this;
  }

   /**
   * Den od
   * @return validFromDay
  **/
  @ApiModelProperty(example = "null", value = "Den od")
  public Integer getValidFromDay() {
    return validFromDay;
  }

  public void setValidFromDay(Integer validFromDay) {
    this.validFromDay = validFromDay;
  }

  public Holidaytype validFromDate(String validFromDate) {
    this.validFromDate = validFromDate;
    return this;
  }

   /**
   * Datum od
   * @return validFromDate
  **/
  @ApiModelProperty(example = "null", value = "Datum od")
  public String getValidFromDate() {
    return validFromDate;
  }

  public void setValidFromDate(String validFromDate) {
    this.validFromDate = validFromDate;
  }

  public Holidaytype validToMonthDay(Integer validToMonthDay) {
    this.validToMonthDay = validToMonthDay;
    return this;
  }

   /**
   * Měsíc, den do [persistentní položka]
   * @return validToMonthDay
  **/
  @ApiModelProperty(example = "null", value = "Měsíc, den do [persistentní položka]")
  public Integer getValidToMonthDay() {
    return validToMonthDay;
  }

  public void setValidToMonthDay(Integer validToMonthDay) {
    this.validToMonthDay = validToMonthDay;
  }

  public Holidaytype validToMonth(Integer validToMonth) {
    this.validToMonth = validToMonth;
    return this;
  }

   /**
   * Měsíc do
   * @return validToMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc do")
  public Integer getValidToMonth() {
    return validToMonth;
  }

  public void setValidToMonth(Integer validToMonth) {
    this.validToMonth = validToMonth;
  }

  public Holidaytype validToDay(Integer validToDay) {
    this.validToDay = validToDay;
    return this;
  }

   /**
   * Den do
   * @return validToDay
  **/
  @ApiModelProperty(example = "null", value = "Den do")
  public Integer getValidToDay() {
    return validToDay;
  }

  public void setValidToDay(Integer validToDay) {
    this.validToDay = validToDay;
  }

  public Holidaytype validToDate(String validToDate) {
    this.validToDate = validToDate;
    return this;
  }

   /**
   * Datum do
   * @return validToDate
  **/
  @ApiModelProperty(example = "null", value = "Datum do")
  public String getValidToDate() {
    return validToDate;
  }

  public void setValidToDate(String validToDate) {
    this.validToDate = validToDate;
  }

  public Holidaytype priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priorita [persistentní položka]
   * @return priority
  **/
  @ApiModelProperty(example = "null", value = "Priorita [persistentní položka]")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Holidaytype payAble(Boolean payAble) {
    this.payAble = payAble;
    return this;
  }

   /**
   * Proplácet [persistentní položka]
   * @return payAble
  **/
  @ApiModelProperty(example = "null", value = "Proplácet [persistentní položka]")
  public Boolean getPayAble() {
    return payAble;
  }

  public void setPayAble(Boolean payAble) {
    this.payAble = payAble;
  }

  public Holidaytype claimType(Integer claimType) {
    this.claimType = claimType;
    return this;
  }

   /**
   * Jednotka nároku [persistentní položka]
   * @return claimType
  **/
  @ApiModelProperty(example = "null", value = "Jednotka nároku [persistentní položka]")
  public Integer getClaimType() {
    return claimType;
  }

  public void setClaimType(Integer claimType) {
    this.claimType = claimType;
  }

  public Holidaytype transferWholeRest(Boolean transferWholeRest) {
    this.transferWholeRest = transferWholeRest;
    return this;
  }

   /**
   * Přenášet vše [persistentní položka]
   * @return transferWholeRest
  **/
  @ApiModelProperty(example = "null", value = "Přenášet vše [persistentní položka]")
  public Boolean getTransferWholeRest() {
    return transferWholeRest;
  }

  public void setTransferWholeRest(Boolean transferWholeRest) {
    this.transferWholeRest = transferWholeRest;
  }

  public Holidaytype claimByExpression(Boolean claimByExpression) {
    this.claimByExpression = claimByExpression;
    return this;
  }

   /**
   * Nárok výrazem [persistentní položka]
   * @return claimByExpression
  **/
  @ApiModelProperty(example = "null", value = "Nárok výrazem [persistentní položka]")
  public Boolean getClaimByExpression() {
    return claimByExpression;
  }

  public void setClaimByExpression(Boolean claimByExpression) {
    this.claimByExpression = claimByExpression;
  }

  public Holidaytype claimExpression(String claimExpression) {
    this.claimExpression = claimExpression;
    return this;
  }

   /**
   * Výraz nároku [persistentní položka]
   * @return claimExpression
  **/
  @ApiModelProperty(example = "null", value = "Výraz nároku [persistentní položka]")
  public String getClaimExpression() {
    return claimExpression;
  }

  public void setClaimExpression(String claimExpression) {
    this.claimExpression = claimExpression;
  }

  public Holidaytype claimText(String claimText) {
    this.claimText = claimText;
    return this;
  }

   /**
   * Nárok textově
   * @return claimText
  **/
  @ApiModelProperty(example = "null", value = "Nárok textově")
  public String getClaimText() {
    return claimText;
  }

  public void setClaimText(String claimText) {
    this.claimText = claimText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Holidaytype holidaytype = (Holidaytype) o;
    return Objects.equals(this.displayName, holidaytype.displayName) &&
        Objects.equals(this.ID, holidaytype.ID) &&
        Objects.equals(this.classID, holidaytype.classID) &&
        Objects.equals(this.objVersion, holidaytype.objVersion) &&
        Objects.equals(this.hidden, holidaytype.hidden) &&
        Objects.equals(this.code, holidaytype.code) &&
        Objects.equals(this.name, holidaytype.name) &&
        Objects.equals(this.regular, holidaytype.regular) &&
        Objects.equals(this.claim, holidaytype.claim) &&
        Objects.equals(this.goOn, holidaytype.goOn) &&
        Objects.equals(this.restTransfer, holidaytype.restTransfer) &&
        Objects.equals(this.validFromMonthDay, holidaytype.validFromMonthDay) &&
        Objects.equals(this.validFromMonth, holidaytype.validFromMonth) &&
        Objects.equals(this.validFromDay, holidaytype.validFromDay) &&
        Objects.equals(this.validFromDate, holidaytype.validFromDate) &&
        Objects.equals(this.validToMonthDay, holidaytype.validToMonthDay) &&
        Objects.equals(this.validToMonth, holidaytype.validToMonth) &&
        Objects.equals(this.validToDay, holidaytype.validToDay) &&
        Objects.equals(this.validToDate, holidaytype.validToDate) &&
        Objects.equals(this.priority, holidaytype.priority) &&
        Objects.equals(this.payAble, holidaytype.payAble) &&
        Objects.equals(this.claimType, holidaytype.claimType) &&
        Objects.equals(this.transferWholeRest, holidaytype.transferWholeRest) &&
        Objects.equals(this.claimByExpression, holidaytype.claimByExpression) &&
        Objects.equals(this.claimExpression, holidaytype.claimExpression) &&
        Objects.equals(this.claimText, holidaytype.claimText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, regular, claim, goOn, restTransfer, validFromMonthDay, validFromMonth, validFromDay, validFromDate, validToMonthDay, validToMonth, validToDay, validToDate, priority, payAble, claimType, transferWholeRest, claimByExpression, claimExpression, claimText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Holidaytype {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    regular: ").append(toIndentedString(regular)).append("\n");
    sb.append("    claim: ").append(toIndentedString(claim)).append("\n");
    sb.append("    goOn: ").append(toIndentedString(goOn)).append("\n");
    sb.append("    restTransfer: ").append(toIndentedString(restTransfer)).append("\n");
    sb.append("    validFromMonthDay: ").append(toIndentedString(validFromMonthDay)).append("\n");
    sb.append("    validFromMonth: ").append(toIndentedString(validFromMonth)).append("\n");
    sb.append("    validFromDay: ").append(toIndentedString(validFromDay)).append("\n");
    sb.append("    validFromDate: ").append(toIndentedString(validFromDate)).append("\n");
    sb.append("    validToMonthDay: ").append(toIndentedString(validToMonthDay)).append("\n");
    sb.append("    validToMonth: ").append(toIndentedString(validToMonth)).append("\n");
    sb.append("    validToDay: ").append(toIndentedString(validToDay)).append("\n");
    sb.append("    validToDate: ").append(toIndentedString(validToDate)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    payAble: ").append(toIndentedString(payAble)).append("\n");
    sb.append("    claimType: ").append(toIndentedString(claimType)).append("\n");
    sb.append("    transferWholeRest: ").append(toIndentedString(transferWholeRest)).append("\n");
    sb.append("    claimByExpression: ").append(toIndentedString(claimByExpression)).append("\n");
    sb.append("    claimExpression: ").append(toIndentedString(claimExpression)).append("\n");
    sb.append("    claimText: ").append(toIndentedString(claimText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

