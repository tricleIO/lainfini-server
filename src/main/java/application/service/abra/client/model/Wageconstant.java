/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Wageconstant
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Wageconstant   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Wageconstantvalue> rows = new ArrayList<Wageconstantvalue>();

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("system")
  private Boolean system = null;

  @SerializedName("fielddatatype")
  private Integer fielddatatype = null;

  @SerializedName("editmethod")
  private Integer editmethod = null;

  @SerializedName("enumeration")
  private String enumeration = null;

  @SerializedName("fielddatatypetext")
  private String fielddatatypetext = null;

  @SerializedName("codewithprefix")
  private String codewithprefix = null;

  @SerializedName("prefix")
  private String prefix = null;

  @SerializedName("allowchangehistory")
  private Boolean allowchangehistory = null;

  @SerializedName("forwizard")
  private Boolean forwizard = null;

  @SerializedName("islocalamount")
  private Boolean islocalamount = null;

  public Wageconstant displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Wageconstant id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Wageconstant classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Wageconstant objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Wageconstant rows(List<Wageconstantvalue> rows) {
    this.rows = rows;
    return this;
  }

  public Wageconstant addRowsItem(Wageconstantvalue rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * hodnoty; kolekce bo hodnota globální proměnné [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "hodnoty; kolekce bo hodnota globální proměnné [nepersistentní položka]")
  public List<Wageconstantvalue> getRows() {
    return rows;
  }

  public void setRows(List<Wageconstantvalue> rows) {
    this.rows = rows;
  }

  public Wageconstant hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Wageconstant code(String code) {
    this.code = code;
    return this;
  }

   /**
   * kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Wageconstant name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Wageconstant system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * orig. [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "orig. [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Wageconstant fielddatatype(Integer fielddatatype) {
    this.fielddatatype = fielddatatype;
    return this;
  }

   /**
   * datový typ [persistentní položka]
   * @return fielddatatype
  **/
  @ApiModelProperty(example = "null", value = "datový typ [persistentní položka]")
  public Integer getFielddatatype() {
    return fielddatatype;
  }

  public void setFielddatatype(Integer fielddatatype) {
    this.fielddatatype = fielddatatype;
  }

  public Wageconstant editmethod(Integer editmethod) {
    this.editmethod = editmethod;
    return this;
  }

   /**
   * editace [persistentní položka]
   * @return editmethod
  **/
  @ApiModelProperty(example = "null", value = "editace [persistentní položka]")
  public Integer getEditmethod() {
    return editmethod;
  }

  public void setEditmethod(Integer editmethod) {
    this.editmethod = editmethod;
  }

  public Wageconstant enumeration(String enumeration) {
    this.enumeration = enumeration;
    return this;
  }

   /**
   * výčet [persistentní položka]
   * @return enumeration
  **/
  @ApiModelProperty(example = "null", value = "výčet [persistentní položka]")
  public String getEnumeration() {
    return enumeration;
  }

  public void setEnumeration(String enumeration) {
    this.enumeration = enumeration;
  }

  public Wageconstant fielddatatypetext(String fielddatatypetext) {
    this.fielddatatypetext = fielddatatypetext;
    return this;
  }

   /**
   * datový typ
   * @return fielddatatypetext
  **/
  @ApiModelProperty(example = "null", value = "datový typ")
  public String getFielddatatypetext() {
    return fielddatatypetext;
  }

  public void setFielddatatypetext(String fielddatatypetext) {
    this.fielddatatypetext = fielddatatypetext;
  }

  public Wageconstant codewithprefix(String codewithprefix) {
    this.codewithprefix = codewithprefix;
    return this;
  }

   /**
   * prefix, kód
   * @return codewithprefix
  **/
  @ApiModelProperty(example = "null", value = "prefix, kód")
  public String getCodewithprefix() {
    return codewithprefix;
  }

  public void setCodewithprefix(String codewithprefix) {
    this.codewithprefix = codewithprefix;
  }

  public Wageconstant prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * prefix
   * @return prefix
  **/
  @ApiModelProperty(example = "null", value = "prefix")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  public Wageconstant allowchangehistory(Boolean allowchangehistory) {
    this.allowchangehistory = allowchangehistory;
    return this;
  }

   /**
   * lze měnit historii [persistentní položka]
   * @return allowchangehistory
  **/
  @ApiModelProperty(example = "null", value = "lze měnit historii [persistentní položka]")
  public Boolean getAllowchangehistory() {
    return allowchangehistory;
  }

  public void setAllowchangehistory(Boolean allowchangehistory) {
    this.allowchangehistory = allowchangehistory;
  }

  public Wageconstant forwizard(Boolean forwizard) {
    this.forwizard = forwizard;
    return this;
  }

   /**
   * nabízet v průvodci [persistentní položka]
   * @return forwizard
  **/
  @ApiModelProperty(example = "null", value = "nabízet v průvodci [persistentní položka]")
  public Boolean getForwizard() {
    return forwizard;
  }

  public void setForwizard(Boolean forwizard) {
    this.forwizard = forwizard;
  }

  public Wageconstant islocalamount(Boolean islocalamount) {
    this.islocalamount = islocalamount;
    return this;
  }

   /**
   * je v lokální měně [persistentní položka]
   * @return islocalamount
  **/
  @ApiModelProperty(example = "null", value = "je v lokální měně [persistentní položka]")
  public Boolean getIslocalamount() {
    return islocalamount;
  }

  public void setIslocalamount(Boolean islocalamount) {
    this.islocalamount = islocalamount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wageconstant wageconstant = (Wageconstant) o;
    return Objects.equals(this.displayname, wageconstant.displayname) &&
        Objects.equals(this.id, wageconstant.id) &&
        Objects.equals(this.classid, wageconstant.classid) &&
        Objects.equals(this.objversion, wageconstant.objversion) &&
        Objects.equals(this.rows, wageconstant.rows) &&
        Objects.equals(this.hidden, wageconstant.hidden) &&
        Objects.equals(this.code, wageconstant.code) &&
        Objects.equals(this.name, wageconstant.name) &&
        Objects.equals(this.system, wageconstant.system) &&
        Objects.equals(this.fielddatatype, wageconstant.fielddatatype) &&
        Objects.equals(this.editmethod, wageconstant.editmethod) &&
        Objects.equals(this.enumeration, wageconstant.enumeration) &&
        Objects.equals(this.fielddatatypetext, wageconstant.fielddatatypetext) &&
        Objects.equals(this.codewithprefix, wageconstant.codewithprefix) &&
        Objects.equals(this.prefix, wageconstant.prefix) &&
        Objects.equals(this.allowchangehistory, wageconstant.allowchangehistory) &&
        Objects.equals(this.forwizard, wageconstant.forwizard) &&
        Objects.equals(this.islocalamount, wageconstant.islocalamount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, hidden, code, name, system, fielddatatype, editmethod, enumeration, fielddatatypetext, codewithprefix, prefix, allowchangehistory, forwizard, islocalamount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wageconstant {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    fielddatatype: ").append(toIndentedString(fielddatatype)).append("\n");
    sb.append("    editmethod: ").append(toIndentedString(editmethod)).append("\n");
    sb.append("    enumeration: ").append(toIndentedString(enumeration)).append("\n");
    sb.append("    fielddatatypetext: ").append(toIndentedString(fielddatatypetext)).append("\n");
    sb.append("    codewithprefix: ").append(toIndentedString(codewithprefix)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    allowchangehistory: ").append(toIndentedString(allowchangehistory)).append("\n");
    sb.append("    forwizard: ").append(toIndentedString(forwizard)).append("\n");
    sb.append("    islocalamount: ").append(toIndentedString(islocalamount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

