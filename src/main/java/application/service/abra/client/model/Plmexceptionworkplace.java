/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Plmexceptionworkplace
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Plmexceptionworkplace   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Plmexceptionworkplace2> rows = new ArrayList<Plmexceptionworkplace2>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("Corrected$DATE")
  private DateTime correctedDATE = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("RowsMinDate")
  private DateTime rowsMinDate = null;

  @SerializedName("RowsMaxDate")
  private DateTime rowsMaxDate = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Plmexceptionworkplace rows(List<Plmexceptionworkplace2> rows) {
    this.rows = rows;
    return this;
  }

  public Plmexceptionworkplace addRowsItem(Plmexceptionworkplace2 rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Výjimka pracoviště - platnost [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Výjimka pracoviště - platnost [nepersistentní položka]")
  public List<Plmexceptionworkplace2> getRows() {
    return rows;
  }

  public void setRows(List<Plmexceptionworkplace2> rows) {
    this.rows = rows;
  }

  public Plmexceptionworkplace docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Plmexceptionworkplace periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Plmexceptionworkplace ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Plmexceptionworkplace docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Plmexceptionworkplace createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Plmexceptionworkplace correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Plmexceptionworkplace newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Plmexceptionworkplace newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Plmexceptionworkplace correctedDATE(DateTime correctedDATE) {
    this.correctedDATE = correctedDATE;
    return this;
  }

   /**
   * Opraven [persistentní položka]
   * @return correctedDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraven [persistentní položka]")
  public DateTime getCorrectedDATE() {
    return correctedDATE;
  }

  public void setCorrectedDATE(DateTime correctedDATE) {
    this.correctedDATE = correctedDATE;
  }

  public Plmexceptionworkplace note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Plmexceptionworkplace name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Plmexceptionworkplace rowsMinDate(DateTime rowsMinDate) {
    this.rowsMinDate = rowsMinDate;
    return this;
  }

   /**
   * Minimální platnost od
   * @return rowsMinDate
  **/
  @ApiModelProperty(example = "null", value = "Minimální platnost od")
  public DateTime getRowsMinDate() {
    return rowsMinDate;
  }

  public void setRowsMinDate(DateTime rowsMinDate) {
    this.rowsMinDate = rowsMinDate;
  }

  public Plmexceptionworkplace rowsMaxDate(DateTime rowsMaxDate) {
    this.rowsMaxDate = rowsMaxDate;
    return this;
  }

   /**
   * Maximální platnost do
   * @return rowsMaxDate
  **/
  @ApiModelProperty(example = "null", value = "Maximální platnost do")
  public DateTime getRowsMaxDate() {
    return rowsMaxDate;
  }

  public void setRowsMaxDate(DateTime rowsMaxDate) {
    this.rowsMaxDate = rowsMaxDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Plmexceptionworkplace plmexceptionworkplace = (Plmexceptionworkplace) o;
    return Objects.equals(this.displayName, plmexceptionworkplace.displayName) &&
        Objects.equals(this.ID, plmexceptionworkplace.ID) &&
        Objects.equals(this.classID, plmexceptionworkplace.classID) &&
        Objects.equals(this.objVersion, plmexceptionworkplace.objVersion) &&
        Objects.equals(this.rows, plmexceptionworkplace.rows) &&
        Objects.equals(this.docQueueID, plmexceptionworkplace.docQueueID) &&
        Objects.equals(this.periodID, plmexceptionworkplace.periodID) &&
        Objects.equals(this.ordNumber, plmexceptionworkplace.ordNumber) &&
        Objects.equals(this.docDateDATE, plmexceptionworkplace.docDateDATE) &&
        Objects.equals(this.createdByID, plmexceptionworkplace.createdByID) &&
        Objects.equals(this.correctedByID, plmexceptionworkplace.correctedByID) &&
        Objects.equals(this.newRelatedType, plmexceptionworkplace.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, plmexceptionworkplace.newRelatedDocumentID) &&
        Objects.equals(this.correctedDATE, plmexceptionworkplace.correctedDATE) &&
        Objects.equals(this.note, plmexceptionworkplace.note) &&
        Objects.equals(this.name, plmexceptionworkplace.name) &&
        Objects.equals(this.rowsMinDate, plmexceptionworkplace.rowsMinDate) &&
        Objects.equals(this.rowsMaxDate, plmexceptionworkplace.rowsMaxDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, correctedDATE, note, name, rowsMinDate, rowsMaxDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Plmexceptionworkplace {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    correctedDATE: ").append(toIndentedString(correctedDATE)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rowsMinDate: ").append(toIndentedString(rowsMinDate)).append("\n");
    sb.append("    rowsMaxDate: ").append(toIndentedString(rowsMaxDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

