/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Trmcartype
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Trmcartype   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Category")
  private Integer category = null;

  @SerializedName("SeviceWeight")
  private Double seviceWeight = null;

  @SerializedName("TotalWeight")
  private Double totalWeight = null;

  @SerializedName("CargoWeight")
  private Double cargoWeight = null;

  @SerializedName("WeightOnAxle")
  private Double weightOnAxle = null;

  @SerializedName("FuelNormSummer")
  private Double fuelNormSummer = null;

  @SerializedName("FuelNormWinter")
  private Double fuelNormWinter = null;

  @SerializedName("FuelNormInter")
  private Double fuelNormInter = null;

  @SerializedName("FuelNormCollS")
  private Double fuelNormCollS = null;

  @SerializedName("FuelNormCollW")
  private Double fuelNormCollW = null;

  @SerializedName("FuelNormCollInter")
  private Double fuelNormCollInter = null;

  @SerializedName("FuelNormManip")
  private Double fuelNormManip = null;

  @SerializedName("PassTotal")
  private Integer passTotal = null;

  @SerializedName("PassSitting")
  private Integer passSitting = null;

  @SerializedName("TRMFuelType_ID")
  private String tRMFuelTypeID = null;

  @SerializedName("AxleCount")
  private Integer axleCount = null;

  @SerializedName("TyreCount")
  private Integer tyreCount = null;

  @SerializedName("VehicleLength")
  private Integer vehicleLength = null;

  @SerializedName("VehicleWidth")
  private Integer vehicleWidth = null;

  @SerializedName("VehicleHeight")
  private Integer vehicleHeight = null;

  @SerializedName("CylinderCapacity")
  private Integer cylinderCapacity = null;

  @SerializedName("CargoVolume")
  private Double cargoVolume = null;

  @SerializedName("RoadTaxRate")
  private Double roadTaxRate = null;

  @SerializedName("TRMPublicTransTariff_ID")
  private String tRMPublicTransTariffID = null;

  @SerializedName("TankCapacity")
  private Double tankCapacity = null;

  @SerializedName("CategoryAsText")
  private String categoryAsText = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Trmcartype hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Trmcartype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Trmcartype name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Trmcartype category(Integer category) {
    this.category = category;
    return this;
  }

   /**
   * Skupina typů [persistentní položka]
   * @return category
  **/
  @ApiModelProperty(example = "null", value = "Skupina typů [persistentní položka]")
  public Integer getCategory() {
    return category;
  }

  public void setCategory(Integer category) {
    this.category = category;
  }

  public Trmcartype seviceWeight(Double seviceWeight) {
    this.seviceWeight = seviceWeight;
    return this;
  }

   /**
   * Pohotovostní hmotnost [persistentní položka]
   * @return seviceWeight
  **/
  @ApiModelProperty(example = "null", value = "Pohotovostní hmotnost [persistentní položka]")
  public Double getSeviceWeight() {
    return seviceWeight;
  }

  public void setSeviceWeight(Double seviceWeight) {
    this.seviceWeight = seviceWeight;
  }

  public Trmcartype totalWeight(Double totalWeight) {
    this.totalWeight = totalWeight;
    return this;
  }

   /**
   * Celková hmotnost [persistentní položka]
   * @return totalWeight
  **/
  @ApiModelProperty(example = "null", value = "Celková hmotnost [persistentní položka]")
  public Double getTotalWeight() {
    return totalWeight;
  }

  public void setTotalWeight(Double totalWeight) {
    this.totalWeight = totalWeight;
  }

  public Trmcartype cargoWeight(Double cargoWeight) {
    this.cargoWeight = cargoWeight;
    return this;
  }

   /**
   * Užitková hmotnost [persistentní položka]
   * @return cargoWeight
  **/
  @ApiModelProperty(example = "null", value = "Užitková hmotnost [persistentní položka]")
  public Double getCargoWeight() {
    return cargoWeight;
  }

  public void setCargoWeight(Double cargoWeight) {
    this.cargoWeight = cargoWeight;
  }

  public Trmcartype weightOnAxle(Double weightOnAxle) {
    this.weightOnAxle = weightOnAxle;
    return this;
  }

   /**
   * Max. hmotnost na nápravu [persistentní položka]
   * @return weightOnAxle
  **/
  @ApiModelProperty(example = "null", value = "Max. hmotnost na nápravu [persistentní položka]")
  public Double getWeightOnAxle() {
    return weightOnAxle;
  }

  public void setWeightOnAxle(Double weightOnAxle) {
    this.weightOnAxle = weightOnAxle;
  }

  public Trmcartype fuelNormSummer(Double fuelNormSummer) {
    this.fuelNormSummer = fuelNormSummer;
    return this;
  }

   /**
   * Letní norma [persistentní položka]
   * @return fuelNormSummer
  **/
  @ApiModelProperty(example = "null", value = "Letní norma [persistentní položka]")
  public Double getFuelNormSummer() {
    return fuelNormSummer;
  }

  public void setFuelNormSummer(Double fuelNormSummer) {
    this.fuelNormSummer = fuelNormSummer;
  }

  public Trmcartype fuelNormWinter(Double fuelNormWinter) {
    this.fuelNormWinter = fuelNormWinter;
    return this;
  }

   /**
   * Zimní norma [persistentní položka]
   * @return fuelNormWinter
  **/
  @ApiModelProperty(example = "null", value = "Zimní norma [persistentní položka]")
  public Double getFuelNormWinter() {
    return fuelNormWinter;
  }

  public void setFuelNormWinter(Double fuelNormWinter) {
    this.fuelNormWinter = fuelNormWinter;
  }

  public Trmcartype fuelNormInter(Double fuelNormInter) {
    this.fuelNormInter = fuelNormInter;
    return this;
  }

   /**
   * Střední norma [persistentní položka]
   * @return fuelNormInter
  **/
  @ApiModelProperty(example = "null", value = "Střední norma [persistentní položka]")
  public Double getFuelNormInter() {
    return fuelNormInter;
  }

  public void setFuelNormInter(Double fuelNormInter) {
    this.fuelNormInter = fuelNormInter;
  }

  public Trmcartype fuelNormCollS(Double fuelNormCollS) {
    this.fuelNormCollS = fuelNormCollS;
    return this;
  }

   /**
   * Letní norma souprav [persistentní položka]
   * @return fuelNormCollS
  **/
  @ApiModelProperty(example = "null", value = "Letní norma souprav [persistentní položka]")
  public Double getFuelNormCollS() {
    return fuelNormCollS;
  }

  public void setFuelNormCollS(Double fuelNormCollS) {
    this.fuelNormCollS = fuelNormCollS;
  }

  public Trmcartype fuelNormCollW(Double fuelNormCollW) {
    this.fuelNormCollW = fuelNormCollW;
    return this;
  }

   /**
   * Zimní norma souprav [persistentní položka]
   * @return fuelNormCollW
  **/
  @ApiModelProperty(example = "null", value = "Zimní norma souprav [persistentní položka]")
  public Double getFuelNormCollW() {
    return fuelNormCollW;
  }

  public void setFuelNormCollW(Double fuelNormCollW) {
    this.fuelNormCollW = fuelNormCollW;
  }

  public Trmcartype fuelNormCollInter(Double fuelNormCollInter) {
    this.fuelNormCollInter = fuelNormCollInter;
    return this;
  }

   /**
   * Střední norma souprav [persistentní položka]
   * @return fuelNormCollInter
  **/
  @ApiModelProperty(example = "null", value = "Střední norma souprav [persistentní položka]")
  public Double getFuelNormCollInter() {
    return fuelNormCollInter;
  }

  public void setFuelNormCollInter(Double fuelNormCollInter) {
    this.fuelNormCollInter = fuelNormCollInter;
  }

  public Trmcartype fuelNormManip(Double fuelNormManip) {
    this.fuelNormManip = fuelNormManip;
    return this;
  }

   /**
   * Manipulační norma [persistentní položka]
   * @return fuelNormManip
  **/
  @ApiModelProperty(example = "null", value = "Manipulační norma [persistentní položka]")
  public Double getFuelNormManip() {
    return fuelNormManip;
  }

  public void setFuelNormManip(Double fuelNormManip) {
    this.fuelNormManip = fuelNormManip;
  }

  public Trmcartype passTotal(Integer passTotal) {
    this.passTotal = passTotal;
    return this;
  }

   /**
   * Počet míst [persistentní položka]
   * @return passTotal
  **/
  @ApiModelProperty(example = "null", value = "Počet míst [persistentní položka]")
  public Integer getPassTotal() {
    return passTotal;
  }

  public void setPassTotal(Integer passTotal) {
    this.passTotal = passTotal;
  }

  public Trmcartype passSitting(Integer passSitting) {
    this.passSitting = passSitting;
    return this;
  }

   /**
   * Počet míst k sezení [persistentní položka]
   * @return passSitting
  **/
  @ApiModelProperty(example = "null", value = "Počet míst k sezení [persistentní položka]")
  public Integer getPassSitting() {
    return passSitting;
  }

  public void setPassSitting(Integer passSitting) {
    this.passSitting = passSitting;
  }

  public Trmcartype tRMFuelTypeID(String tRMFuelTypeID) {
    this.tRMFuelTypeID = tRMFuelTypeID;
    return this;
  }

   /**
   * Druh pohonu; ID objektu Druh PHM [persistentní položka]
   * @return tRMFuelTypeID
  **/
  @ApiModelProperty(example = "null", value = "Druh pohonu; ID objektu Druh PHM [persistentní položka]")
  public String getTRMFuelTypeID() {
    return tRMFuelTypeID;
  }

  public void setTRMFuelTypeID(String tRMFuelTypeID) {
    this.tRMFuelTypeID = tRMFuelTypeID;
  }

  public Trmcartype axleCount(Integer axleCount) {
    this.axleCount = axleCount;
    return this;
  }

   /**
   * Počet náprav [persistentní položka]
   * @return axleCount
  **/
  @ApiModelProperty(example = "null", value = "Počet náprav [persistentní položka]")
  public Integer getAxleCount() {
    return axleCount;
  }

  public void setAxleCount(Integer axleCount) {
    this.axleCount = axleCount;
  }

  public Trmcartype tyreCount(Integer tyreCount) {
    this.tyreCount = tyreCount;
    return this;
  }

   /**
   * Počet pneu [persistentní položka]
   * @return tyreCount
  **/
  @ApiModelProperty(example = "null", value = "Počet pneu [persistentní položka]")
  public Integer getTyreCount() {
    return tyreCount;
  }

  public void setTyreCount(Integer tyreCount) {
    this.tyreCount = tyreCount;
  }

  public Trmcartype vehicleLength(Integer vehicleLength) {
    this.vehicleLength = vehicleLength;
    return this;
  }

   /**
   * Délka vozidla [persistentní položka]
   * @return vehicleLength
  **/
  @ApiModelProperty(example = "null", value = "Délka vozidla [persistentní položka]")
  public Integer getVehicleLength() {
    return vehicleLength;
  }

  public void setVehicleLength(Integer vehicleLength) {
    this.vehicleLength = vehicleLength;
  }

  public Trmcartype vehicleWidth(Integer vehicleWidth) {
    this.vehicleWidth = vehicleWidth;
    return this;
  }

   /**
   * Šířka vozidla [persistentní položka]
   * @return vehicleWidth
  **/
  @ApiModelProperty(example = "null", value = "Šířka vozidla [persistentní položka]")
  public Integer getVehicleWidth() {
    return vehicleWidth;
  }

  public void setVehicleWidth(Integer vehicleWidth) {
    this.vehicleWidth = vehicleWidth;
  }

  public Trmcartype vehicleHeight(Integer vehicleHeight) {
    this.vehicleHeight = vehicleHeight;
    return this;
  }

   /**
   * Výška vozidla [persistentní položka]
   * @return vehicleHeight
  **/
  @ApiModelProperty(example = "null", value = "Výška vozidla [persistentní položka]")
  public Integer getVehicleHeight() {
    return vehicleHeight;
  }

  public void setVehicleHeight(Integer vehicleHeight) {
    this.vehicleHeight = vehicleHeight;
  }

  public Trmcartype cylinderCapacity(Integer cylinderCapacity) {
    this.cylinderCapacity = cylinderCapacity;
    return this;
  }

   /**
   * Obsah válců [persistentní položka]
   * @return cylinderCapacity
  **/
  @ApiModelProperty(example = "null", value = "Obsah válců [persistentní položka]")
  public Integer getCylinderCapacity() {
    return cylinderCapacity;
  }

  public void setCylinderCapacity(Integer cylinderCapacity) {
    this.cylinderCapacity = cylinderCapacity;
  }

  public Trmcartype cargoVolume(Double cargoVolume) {
    this.cargoVolume = cargoVolume;
    return this;
  }

   /**
   * Ložný prostor [persistentní položka]
   * @return cargoVolume
  **/
  @ApiModelProperty(example = "null", value = "Ložný prostor [persistentní položka]")
  public Double getCargoVolume() {
    return cargoVolume;
  }

  public void setCargoVolume(Double cargoVolume) {
    this.cargoVolume = cargoVolume;
  }

  public Trmcartype roadTaxRate(Double roadTaxRate) {
    this.roadTaxRate = roadTaxRate;
    return this;
  }

   /**
   * Silniční daň [persistentní položka]
   * @return roadTaxRate
  **/
  @ApiModelProperty(example = "null", value = "Silniční daň [persistentní položka]")
  public Double getRoadTaxRate() {
    return roadTaxRate;
  }

  public void setRoadTaxRate(Double roadTaxRate) {
    this.roadTaxRate = roadTaxRate;
  }

  public Trmcartype tRMPublicTransTariffID(String tRMPublicTransTariffID) {
    this.tRMPublicTransTariffID = tRMPublicTransTariffID;
    return this;
  }

   /**
   * Tarifní systém; ID objektu Tarif OD [persistentní položka]
   * @return tRMPublicTransTariffID
  **/
  @ApiModelProperty(example = "null", value = "Tarifní systém; ID objektu Tarif OD [persistentní položka]")
  public String getTRMPublicTransTariffID() {
    return tRMPublicTransTariffID;
  }

  public void setTRMPublicTransTariffID(String tRMPublicTransTariffID) {
    this.tRMPublicTransTariffID = tRMPublicTransTariffID;
  }

  public Trmcartype tankCapacity(Double tankCapacity) {
    this.tankCapacity = tankCapacity;
    return this;
  }

   /**
   * Objem nádrže [persistentní položka]
   * @return tankCapacity
  **/
  @ApiModelProperty(example = "null", value = "Objem nádrže [persistentní položka]")
  public Double getTankCapacity() {
    return tankCapacity;
  }

  public void setTankCapacity(Double tankCapacity) {
    this.tankCapacity = tankCapacity;
  }

  public Trmcartype categoryAsText(String categoryAsText) {
    this.categoryAsText = categoryAsText;
    return this;
  }

   /**
   * Skupina typů
   * @return categoryAsText
  **/
  @ApiModelProperty(example = "null", value = "Skupina typů")
  public String getCategoryAsText() {
    return categoryAsText;
  }

  public void setCategoryAsText(String categoryAsText) {
    this.categoryAsText = categoryAsText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Trmcartype trmcartype = (Trmcartype) o;
    return Objects.equals(this.displayName, trmcartype.displayName) &&
        Objects.equals(this.ID, trmcartype.ID) &&
        Objects.equals(this.classID, trmcartype.classID) &&
        Objects.equals(this.objVersion, trmcartype.objVersion) &&
        Objects.equals(this.hidden, trmcartype.hidden) &&
        Objects.equals(this.code, trmcartype.code) &&
        Objects.equals(this.name, trmcartype.name) &&
        Objects.equals(this.category, trmcartype.category) &&
        Objects.equals(this.seviceWeight, trmcartype.seviceWeight) &&
        Objects.equals(this.totalWeight, trmcartype.totalWeight) &&
        Objects.equals(this.cargoWeight, trmcartype.cargoWeight) &&
        Objects.equals(this.weightOnAxle, trmcartype.weightOnAxle) &&
        Objects.equals(this.fuelNormSummer, trmcartype.fuelNormSummer) &&
        Objects.equals(this.fuelNormWinter, trmcartype.fuelNormWinter) &&
        Objects.equals(this.fuelNormInter, trmcartype.fuelNormInter) &&
        Objects.equals(this.fuelNormCollS, trmcartype.fuelNormCollS) &&
        Objects.equals(this.fuelNormCollW, trmcartype.fuelNormCollW) &&
        Objects.equals(this.fuelNormCollInter, trmcartype.fuelNormCollInter) &&
        Objects.equals(this.fuelNormManip, trmcartype.fuelNormManip) &&
        Objects.equals(this.passTotal, trmcartype.passTotal) &&
        Objects.equals(this.passSitting, trmcartype.passSitting) &&
        Objects.equals(this.tRMFuelTypeID, trmcartype.tRMFuelTypeID) &&
        Objects.equals(this.axleCount, trmcartype.axleCount) &&
        Objects.equals(this.tyreCount, trmcartype.tyreCount) &&
        Objects.equals(this.vehicleLength, trmcartype.vehicleLength) &&
        Objects.equals(this.vehicleWidth, trmcartype.vehicleWidth) &&
        Objects.equals(this.vehicleHeight, trmcartype.vehicleHeight) &&
        Objects.equals(this.cylinderCapacity, trmcartype.cylinderCapacity) &&
        Objects.equals(this.cargoVolume, trmcartype.cargoVolume) &&
        Objects.equals(this.roadTaxRate, trmcartype.roadTaxRate) &&
        Objects.equals(this.tRMPublicTransTariffID, trmcartype.tRMPublicTransTariffID) &&
        Objects.equals(this.tankCapacity, trmcartype.tankCapacity) &&
        Objects.equals(this.categoryAsText, trmcartype.categoryAsText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, hidden, code, name, category, seviceWeight, totalWeight, cargoWeight, weightOnAxle, fuelNormSummer, fuelNormWinter, fuelNormInter, fuelNormCollS, fuelNormCollW, fuelNormCollInter, fuelNormManip, passTotal, passSitting, tRMFuelTypeID, axleCount, tyreCount, vehicleLength, vehicleWidth, vehicleHeight, cylinderCapacity, cargoVolume, roadTaxRate, tRMPublicTransTariffID, tankCapacity, categoryAsText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Trmcartype {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    seviceWeight: ").append(toIndentedString(seviceWeight)).append("\n");
    sb.append("    totalWeight: ").append(toIndentedString(totalWeight)).append("\n");
    sb.append("    cargoWeight: ").append(toIndentedString(cargoWeight)).append("\n");
    sb.append("    weightOnAxle: ").append(toIndentedString(weightOnAxle)).append("\n");
    sb.append("    fuelNormSummer: ").append(toIndentedString(fuelNormSummer)).append("\n");
    sb.append("    fuelNormWinter: ").append(toIndentedString(fuelNormWinter)).append("\n");
    sb.append("    fuelNormInter: ").append(toIndentedString(fuelNormInter)).append("\n");
    sb.append("    fuelNormCollS: ").append(toIndentedString(fuelNormCollS)).append("\n");
    sb.append("    fuelNormCollW: ").append(toIndentedString(fuelNormCollW)).append("\n");
    sb.append("    fuelNormCollInter: ").append(toIndentedString(fuelNormCollInter)).append("\n");
    sb.append("    fuelNormManip: ").append(toIndentedString(fuelNormManip)).append("\n");
    sb.append("    passTotal: ").append(toIndentedString(passTotal)).append("\n");
    sb.append("    passSitting: ").append(toIndentedString(passSitting)).append("\n");
    sb.append("    tRMFuelTypeID: ").append(toIndentedString(tRMFuelTypeID)).append("\n");
    sb.append("    axleCount: ").append(toIndentedString(axleCount)).append("\n");
    sb.append("    tyreCount: ").append(toIndentedString(tyreCount)).append("\n");
    sb.append("    vehicleLength: ").append(toIndentedString(vehicleLength)).append("\n");
    sb.append("    vehicleWidth: ").append(toIndentedString(vehicleWidth)).append("\n");
    sb.append("    vehicleHeight: ").append(toIndentedString(vehicleHeight)).append("\n");
    sb.append("    cylinderCapacity: ").append(toIndentedString(cylinderCapacity)).append("\n");
    sb.append("    cargoVolume: ").append(toIndentedString(cargoVolume)).append("\n");
    sb.append("    roadTaxRate: ").append(toIndentedString(roadTaxRate)).append("\n");
    sb.append("    tRMPublicTransTariffID: ").append(toIndentedString(tRMPublicTransTariffID)).append("\n");
    sb.append("    tankCapacity: ").append(toIndentedString(tankCapacity)).append("\n");
    sb.append("    categoryAsText: ").append(toIndentedString(categoryAsText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

