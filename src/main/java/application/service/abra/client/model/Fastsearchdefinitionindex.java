/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Fastsearchdefinitionindex
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Fastsearchdefinitionindex   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("indexexpression")
  private String indexexpression = null;

  @SerializedName("ready")
  private Boolean ready = null;

  @SerializedName("wordsplitkind")
  private Integer wordsplitkind = null;

  @SerializedName("wordsplitkindstr")
  private String wordsplitkindstr = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("minwordlength")
  private Integer minwordlength = null;

  @SerializedName("maxwordlength")
  private Integer maxwordlength = null;

  @SerializedName("wordsplitdelimiters")
  private String wordsplitdelimiters = null;

  @SerializedName("gid")
  private String gid = null;

  public Fastsearchdefinitionindex displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Fastsearchdefinitionindex id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Fastsearchdefinitionindex classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Fastsearchdefinitionindex objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Fastsearchdefinitionindex parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu fulltextové hledání - definice [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu fulltextové hledání - definice [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Fastsearchdefinitionindex posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Fastsearchdefinitionindex indexexpression(String indexexpression) {
    this.indexexpression = indexexpression;
    return this;
  }

   /**
   * výraz [persistentní položka]
   * @return indexexpression
  **/
  @ApiModelProperty(example = "null", value = "výraz [persistentní položka]")
  public String getIndexexpression() {
    return indexexpression;
  }

  public void setIndexexpression(String indexexpression) {
    this.indexexpression = indexexpression;
  }

  public Fastsearchdefinitionindex ready(Boolean ready) {
    this.ready = ready;
    return this;
  }

   /**
   * aktualizováno [persistentní položka]
   * @return ready
  **/
  @ApiModelProperty(example = "null", value = "aktualizováno [persistentní položka]")
  public Boolean getReady() {
    return ready;
  }

  public void setReady(Boolean ready) {
    this.ready = ready;
  }

  public Fastsearchdefinitionindex wordsplitkind(Integer wordsplitkind) {
    this.wordsplitkind = wordsplitkind;
    return this;
  }

   /**
   * dělení slov [persistentní položka]
   * @return wordsplitkind
  **/
  @ApiModelProperty(example = "null", value = "dělení slov [persistentní položka]")
  public Integer getWordsplitkind() {
    return wordsplitkind;
  }

  public void setWordsplitkind(Integer wordsplitkind) {
    this.wordsplitkind = wordsplitkind;
  }

  public Fastsearchdefinitionindex wordsplitkindstr(String wordsplitkindstr) {
    this.wordsplitkindstr = wordsplitkindstr;
    return this;
  }

   /**
   * dělení slov
   * @return wordsplitkindstr
  **/
  @ApiModelProperty(example = "null", value = "dělení slov")
  public String getWordsplitkindstr() {
    return wordsplitkindstr;
  }

  public void setWordsplitkindstr(String wordsplitkindstr) {
    this.wordsplitkindstr = wordsplitkindstr;
  }

  public Fastsearchdefinitionindex name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Fastsearchdefinitionindex minwordlength(Integer minwordlength) {
    this.minwordlength = minwordlength;
    return this;
  }

   /**
   * min. délka slova [persistentní položka]
   * @return minwordlength
  **/
  @ApiModelProperty(example = "null", value = "min. délka slova [persistentní položka]")
  public Integer getMinwordlength() {
    return minwordlength;
  }

  public void setMinwordlength(Integer minwordlength) {
    this.minwordlength = minwordlength;
  }

  public Fastsearchdefinitionindex maxwordlength(Integer maxwordlength) {
    this.maxwordlength = maxwordlength;
    return this;
  }

   /**
   * max. délka slova [persistentní položka]
   * @return maxwordlength
  **/
  @ApiModelProperty(example = "null", value = "max. délka slova [persistentní položka]")
  public Integer getMaxwordlength() {
    return maxwordlength;
  }

  public void setMaxwordlength(Integer maxwordlength) {
    this.maxwordlength = maxwordlength;
  }

  public Fastsearchdefinitionindex wordsplitdelimiters(String wordsplitdelimiters) {
    this.wordsplitdelimiters = wordsplitdelimiters;
    return this;
  }

   /**
   * oddělovače [persistentní položka]
   * @return wordsplitdelimiters
  **/
  @ApiModelProperty(example = "null", value = "oddělovače [persistentní položka]")
  public String getWordsplitdelimiters() {
    return wordsplitdelimiters;
  }

  public void setWordsplitdelimiters(String wordsplitdelimiters) {
    this.wordsplitdelimiters = wordsplitdelimiters;
  }

  public Fastsearchdefinitionindex gid(String gid) {
    this.gid = gid;
    return this;
  }

   /**
   * identifikátor inst. sady [persistentní položka]
   * @return gid
  **/
  @ApiModelProperty(example = "null", value = "identifikátor inst. sady [persistentní položka]")
  public String getGid() {
    return gid;
  }

  public void setGid(String gid) {
    this.gid = gid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fastsearchdefinitionindex fastsearchdefinitionindex = (Fastsearchdefinitionindex) o;
    return Objects.equals(this.displayname, fastsearchdefinitionindex.displayname) &&
        Objects.equals(this.id, fastsearchdefinitionindex.id) &&
        Objects.equals(this.classid, fastsearchdefinitionindex.classid) &&
        Objects.equals(this.objversion, fastsearchdefinitionindex.objversion) &&
        Objects.equals(this.parentId, fastsearchdefinitionindex.parentId) &&
        Objects.equals(this.posindex, fastsearchdefinitionindex.posindex) &&
        Objects.equals(this.indexexpression, fastsearchdefinitionindex.indexexpression) &&
        Objects.equals(this.ready, fastsearchdefinitionindex.ready) &&
        Objects.equals(this.wordsplitkind, fastsearchdefinitionindex.wordsplitkind) &&
        Objects.equals(this.wordsplitkindstr, fastsearchdefinitionindex.wordsplitkindstr) &&
        Objects.equals(this.name, fastsearchdefinitionindex.name) &&
        Objects.equals(this.minwordlength, fastsearchdefinitionindex.minwordlength) &&
        Objects.equals(this.maxwordlength, fastsearchdefinitionindex.maxwordlength) &&
        Objects.equals(this.wordsplitdelimiters, fastsearchdefinitionindex.wordsplitdelimiters) &&
        Objects.equals(this.gid, fastsearchdefinitionindex.gid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, indexexpression, ready, wordsplitkind, wordsplitkindstr, name, minwordlength, maxwordlength, wordsplitdelimiters, gid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fastsearchdefinitionindex {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    indexexpression: ").append(toIndentedString(indexexpression)).append("\n");
    sb.append("    ready: ").append(toIndentedString(ready)).append("\n");
    sb.append("    wordsplitkind: ").append(toIndentedString(wordsplitkind)).append("\n");
    sb.append("    wordsplitkindstr: ").append(toIndentedString(wordsplitkindstr)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    minwordlength: ").append(toIndentedString(minwordlength)).append("\n");
    sb.append("    maxwordlength: ").append(toIndentedString(maxwordlength)).append("\n");
    sb.append("    wordsplitdelimiters: ").append(toIndentedString(wordsplitdelimiters)).append("\n");
    sb.append("    gid: ").append(toIndentedString(gid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

