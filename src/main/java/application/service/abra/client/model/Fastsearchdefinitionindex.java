/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Fastsearchdefinitionindex
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Fastsearchdefinitionindex   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("IndexExpression")
  private String indexExpression = null;

  @SerializedName("Ready")
  private Boolean ready = null;

  @SerializedName("WordSplitKind")
  private Integer wordSplitKind = null;

  @SerializedName("WordSplitKindStr")
  private String wordSplitKindStr = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("MinWordLength")
  private Integer minWordLength = null;

  @SerializedName("MaxWordLength")
  private Integer maxWordLength = null;

  @SerializedName("WordSplitDelimiters")
  private String wordSplitDelimiters = null;

  @SerializedName("GID")
  private String GID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Fulltextové hledání - definice [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Fulltextové hledání - definice [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Fastsearchdefinitionindex posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Fastsearchdefinitionindex indexExpression(String indexExpression) {
    this.indexExpression = indexExpression;
    return this;
  }

   /**
   * Výraz [persistentní položka]
   * @return indexExpression
  **/
  @ApiModelProperty(example = "null", value = "Výraz [persistentní položka]")
  public String getIndexExpression() {
    return indexExpression;
  }

  public void setIndexExpression(String indexExpression) {
    this.indexExpression = indexExpression;
  }

  public Fastsearchdefinitionindex ready(Boolean ready) {
    this.ready = ready;
    return this;
  }

   /**
   * Aktualizováno [persistentní položka]
   * @return ready
  **/
  @ApiModelProperty(example = "null", value = "Aktualizováno [persistentní položka]")
  public Boolean getReady() {
    return ready;
  }

  public void setReady(Boolean ready) {
    this.ready = ready;
  }

  public Fastsearchdefinitionindex wordSplitKind(Integer wordSplitKind) {
    this.wordSplitKind = wordSplitKind;
    return this;
  }

   /**
   * Dělení slov [persistentní položka]
   * @return wordSplitKind
  **/
  @ApiModelProperty(example = "null", value = "Dělení slov [persistentní položka]")
  public Integer getWordSplitKind() {
    return wordSplitKind;
  }

  public void setWordSplitKind(Integer wordSplitKind) {
    this.wordSplitKind = wordSplitKind;
  }

  public Fastsearchdefinitionindex wordSplitKindStr(String wordSplitKindStr) {
    this.wordSplitKindStr = wordSplitKindStr;
    return this;
  }

   /**
   * Dělení slov
   * @return wordSplitKindStr
  **/
  @ApiModelProperty(example = "null", value = "Dělení slov")
  public String getWordSplitKindStr() {
    return wordSplitKindStr;
  }

  public void setWordSplitKindStr(String wordSplitKindStr) {
    this.wordSplitKindStr = wordSplitKindStr;
  }

  public Fastsearchdefinitionindex name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Fastsearchdefinitionindex minWordLength(Integer minWordLength) {
    this.minWordLength = minWordLength;
    return this;
  }

   /**
   * Min. délka slova [persistentní položka]
   * @return minWordLength
  **/
  @ApiModelProperty(example = "null", value = "Min. délka slova [persistentní položka]")
  public Integer getMinWordLength() {
    return minWordLength;
  }

  public void setMinWordLength(Integer minWordLength) {
    this.minWordLength = minWordLength;
  }

  public Fastsearchdefinitionindex maxWordLength(Integer maxWordLength) {
    this.maxWordLength = maxWordLength;
    return this;
  }

   /**
   * Max. délka slova [persistentní položka]
   * @return maxWordLength
  **/
  @ApiModelProperty(example = "null", value = "Max. délka slova [persistentní položka]")
  public Integer getMaxWordLength() {
    return maxWordLength;
  }

  public void setMaxWordLength(Integer maxWordLength) {
    this.maxWordLength = maxWordLength;
  }

  public Fastsearchdefinitionindex wordSplitDelimiters(String wordSplitDelimiters) {
    this.wordSplitDelimiters = wordSplitDelimiters;
    return this;
  }

   /**
   * Oddělovače [persistentní položka]
   * @return wordSplitDelimiters
  **/
  @ApiModelProperty(example = "null", value = "Oddělovače [persistentní položka]")
  public String getWordSplitDelimiters() {
    return wordSplitDelimiters;
  }

  public void setWordSplitDelimiters(String wordSplitDelimiters) {
    this.wordSplitDelimiters = wordSplitDelimiters;
  }

  public Fastsearchdefinitionindex GID(String GID) {
    this.GID = GID;
    return this;
  }

   /**
   * Identifikátor inst. sady [persistentní položka]
   * @return GID
  **/
  @ApiModelProperty(example = "null", value = "Identifikátor inst. sady [persistentní položka]")
  public String getGID() {
    return GID;
  }

  public void setGID(String GID) {
    this.GID = GID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fastsearchdefinitionindex fastsearchdefinitionindex = (Fastsearchdefinitionindex) o;
    return Objects.equals(this.displayName, fastsearchdefinitionindex.displayName) &&
        Objects.equals(this.ID, fastsearchdefinitionindex.ID) &&
        Objects.equals(this.classID, fastsearchdefinitionindex.classID) &&
        Objects.equals(this.objVersion, fastsearchdefinitionindex.objVersion) &&
        Objects.equals(this.parentID, fastsearchdefinitionindex.parentID) &&
        Objects.equals(this.posIndex, fastsearchdefinitionindex.posIndex) &&
        Objects.equals(this.indexExpression, fastsearchdefinitionindex.indexExpression) &&
        Objects.equals(this.ready, fastsearchdefinitionindex.ready) &&
        Objects.equals(this.wordSplitKind, fastsearchdefinitionindex.wordSplitKind) &&
        Objects.equals(this.wordSplitKindStr, fastsearchdefinitionindex.wordSplitKindStr) &&
        Objects.equals(this.name, fastsearchdefinitionindex.name) &&
        Objects.equals(this.minWordLength, fastsearchdefinitionindex.minWordLength) &&
        Objects.equals(this.maxWordLength, fastsearchdefinitionindex.maxWordLength) &&
        Objects.equals(this.wordSplitDelimiters, fastsearchdefinitionindex.wordSplitDelimiters) &&
        Objects.equals(this.GID, fastsearchdefinitionindex.GID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, indexExpression, ready, wordSplitKind, wordSplitKindStr, name, minWordLength, maxWordLength, wordSplitDelimiters, GID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fastsearchdefinitionindex {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    indexExpression: ").append(toIndentedString(indexExpression)).append("\n");
    sb.append("    ready: ").append(toIndentedString(ready)).append("\n");
    sb.append("    wordSplitKind: ").append(toIndentedString(wordSplitKind)).append("\n");
    sb.append("    wordSplitKindStr: ").append(toIndentedString(wordSplitKindStr)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    minWordLength: ").append(toIndentedString(minWordLength)).append("\n");
    sb.append("    maxWordLength: ").append(toIndentedString(maxWordLength)).append("\n");
    sb.append("    wordSplitDelimiters: ").append(toIndentedString(wordSplitDelimiters)).append("\n");
    sb.append("    GID: ").append(toIndentedString(GID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

