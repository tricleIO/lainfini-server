/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Assetparameter
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Assetparameter   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("TangibleAssetPriceLimit")
  private Double tangibleAssetPriceLimit = null;

  @SerializedName("IntangibleAssetPriceLimit")
  private Double intangibleAssetPriceLimit = null;

  @SerializedName("OverValuationPriceLimit")
  private Double overValuationPriceLimit = null;

  @SerializedName("TaxDepreciationRounding")
  private Integer taxDepreciationRounding = null;

  @SerializedName("AccDepreciationRounding")
  private Integer accDepreciationRounding = null;

  @SerializedName("DiscardTaxDepreciationRate")
  private Double discardTaxDepreciationRate = null;

  @SerializedName("AccDepreciationBeginning")
  private Integer accDepreciationBeginning = null;

  @SerializedName("PercentsInShortPeriod")
  private Double percentsInShortPeriod = null;

  @SerializedName("FormulaInventoryNrAssetCard")
  private String formulaInventoryNrAssetCard = null;

  @SerializedName("FormulaInvNrSmallAssetCard")
  private String formulaInvNrSmallAssetCard = null;

  @SerializedName("ResponsibleIsObligatory")
  private Boolean responsibleIsObligatory = null;

  @SerializedName("CountShrinkedPeriod")
  private Integer countShrinkedPeriod = null;

  @SerializedName("AlwaysAccountSummary")
  private Boolean alwaysAccountSummary = null;

  @SerializedName("FirstYearDeprecIncrease$DATE")
  private DateTime firstYearDeprecIncreaseDATE = null;

  @SerializedName("KeepDegressDeprecLength")
  private Boolean keepDegressDeprecLength = null;

  @SerializedName("RestAccValueRate")
  private Double restAccValueRate = null;

  @SerializedName("BookingType")
  private Integer bookingType = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Assetparameter tangibleAssetPriceLimit(Double tangibleAssetPriceLimit) {
    this.tangibleAssetPriceLimit = tangibleAssetPriceLimit;
    return this;
  }

   /**
   * Limit pořizovací ceny [persistentní položka]
   * @return tangibleAssetPriceLimit
  **/
  @ApiModelProperty(example = "null", value = "Limit pořizovací ceny [persistentní položka]")
  public Double getTangibleAssetPriceLimit() {
    return tangibleAssetPriceLimit;
  }

  public void setTangibleAssetPriceLimit(Double tangibleAssetPriceLimit) {
    this.tangibleAssetPriceLimit = tangibleAssetPriceLimit;
  }

  public Assetparameter intangibleAssetPriceLimit(Double intangibleAssetPriceLimit) {
    this.intangibleAssetPriceLimit = intangibleAssetPriceLimit;
    return this;
  }

   /**
   * Limit pořizovací ceny [persistentní položka]
   * @return intangibleAssetPriceLimit
  **/
  @ApiModelProperty(example = "null", value = "Limit pořizovací ceny [persistentní položka]")
  public Double getIntangibleAssetPriceLimit() {
    return intangibleAssetPriceLimit;
  }

  public void setIntangibleAssetPriceLimit(Double intangibleAssetPriceLimit) {
    this.intangibleAssetPriceLimit = intangibleAssetPriceLimit;
  }

  public Assetparameter overValuationPriceLimit(Double overValuationPriceLimit) {
    this.overValuationPriceLimit = overValuationPriceLimit;
    return this;
  }

   /**
   * Cenový limit pro technické zh. [persistentní položka]
   * @return overValuationPriceLimit
  **/
  @ApiModelProperty(example = "null", value = "Cenový limit pro technické zh. [persistentní položka]")
  public Double getOverValuationPriceLimit() {
    return overValuationPriceLimit;
  }

  public void setOverValuationPriceLimit(Double overValuationPriceLimit) {
    this.overValuationPriceLimit = overValuationPriceLimit;
  }

  public Assetparameter taxDepreciationRounding(Integer taxDepreciationRounding) {
    this.taxDepreciationRounding = taxDepreciationRounding;
    return this;
  }

   /**
   * Zaokrouhlování daňových odpisů [persistentní položka]
   * @return taxDepreciationRounding
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlování daňových odpisů [persistentní položka]")
  public Integer getTaxDepreciationRounding() {
    return taxDepreciationRounding;
  }

  public void setTaxDepreciationRounding(Integer taxDepreciationRounding) {
    this.taxDepreciationRounding = taxDepreciationRounding;
  }

  public Assetparameter accDepreciationRounding(Integer accDepreciationRounding) {
    this.accDepreciationRounding = accDepreciationRounding;
    return this;
  }

   /**
   * Zaokrouhlování účetních odpisů [persistentní položka]
   * @return accDepreciationRounding
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlování účetních odpisů [persistentní položka]")
  public Integer getAccDepreciationRounding() {
    return accDepreciationRounding;
  }

  public void setAccDepreciationRounding(Integer accDepreciationRounding) {
    this.accDepreciationRounding = accDepreciationRounding;
  }

  public Assetparameter discardTaxDepreciationRate(Double discardTaxDepreciationRate) {
    this.discardTaxDepreciationRate = discardTaxDepreciationRate;
    return this;
  }

   /**
   * Procento daň.odpisu v r.vyřaz. [persistentní položka]
   * @return discardTaxDepreciationRate
  **/
  @ApiModelProperty(example = "null", value = "Procento daň.odpisu v r.vyřaz. [persistentní položka]")
  public Double getDiscardTaxDepreciationRate() {
    return discardTaxDepreciationRate;
  }

  public void setDiscardTaxDepreciationRate(Double discardTaxDepreciationRate) {
    this.discardTaxDepreciationRate = discardTaxDepreciationRate;
  }

  public Assetparameter accDepreciationBeginning(Integer accDepreciationBeginning) {
    this.accDepreciationBeginning = accDepreciationBeginning;
    return this;
  }

   /**
   * Účetní odpisy uplatnit [persistentní položka]
   * @return accDepreciationBeginning
  **/
  @ApiModelProperty(example = "null", value = "Účetní odpisy uplatnit [persistentní položka]")
  public Integer getAccDepreciationBeginning() {
    return accDepreciationBeginning;
  }

  public void setAccDepreciationBeginning(Integer accDepreciationBeginning) {
    this.accDepreciationBeginning = accDepreciationBeginning;
  }

  public Assetparameter percentsInShortPeriod(Double percentsInShortPeriod) {
    this.percentsInShortPeriod = percentsInShortPeriod;
    return this;
  }

   /**
   * Procento roč.odpisu ve zkr.ob. [persistentní položka]
   * @return percentsInShortPeriod
  **/
  @ApiModelProperty(example = "null", value = "Procento roč.odpisu ve zkr.ob. [persistentní položka]")
  public Double getPercentsInShortPeriod() {
    return percentsInShortPeriod;
  }

  public void setPercentsInShortPeriod(Double percentsInShortPeriod) {
    this.percentsInShortPeriod = percentsInShortPeriod;
  }

  public Assetparameter formulaInventoryNrAssetCard(String formulaInventoryNrAssetCard) {
    this.formulaInventoryNrAssetCard = formulaInventoryNrAssetCard;
    return this;
  }

   /**
   * Struktura inventárního čísla karet DM [persistentní položka]
   * @return formulaInventoryNrAssetCard
  **/
  @ApiModelProperty(example = "null", value = "Struktura inventárního čísla karet DM [persistentní položka]")
  public String getFormulaInventoryNrAssetCard() {
    return formulaInventoryNrAssetCard;
  }

  public void setFormulaInventoryNrAssetCard(String formulaInventoryNrAssetCard) {
    this.formulaInventoryNrAssetCard = formulaInventoryNrAssetCard;
  }

  public Assetparameter formulaInvNrSmallAssetCard(String formulaInvNrSmallAssetCard) {
    this.formulaInvNrSmallAssetCard = formulaInvNrSmallAssetCard;
    return this;
  }

   /**
   * Struktura inventárního čísla karet DrM [persistentní položka]
   * @return formulaInvNrSmallAssetCard
  **/
  @ApiModelProperty(example = "null", value = "Struktura inventárního čísla karet DrM [persistentní položka]")
  public String getFormulaInvNrSmallAssetCard() {
    return formulaInvNrSmallAssetCard;
  }

  public void setFormulaInvNrSmallAssetCard(String formulaInvNrSmallAssetCard) {
    this.formulaInvNrSmallAssetCard = formulaInvNrSmallAssetCard;
  }

  public Assetparameter responsibleIsObligatory(Boolean responsibleIsObligatory) {
    this.responsibleIsObligatory = responsibleIsObligatory;
    return this;
  }

   /**
   * Povinná zodp.osoba [persistentní položka]
   * @return responsibleIsObligatory
  **/
  @ApiModelProperty(example = "null", value = "Povinná zodp.osoba [persistentní položka]")
  public Boolean getResponsibleIsObligatory() {
    return responsibleIsObligatory;
  }

  public void setResponsibleIsObligatory(Boolean responsibleIsObligatory) {
    this.responsibleIsObligatory = responsibleIsObligatory;
  }

  public Assetparameter countShrinkedPeriod(Integer countShrinkedPeriod) {
    this.countShrinkedPeriod = countShrinkedPeriod;
    return this;
  }

   /**
   * Počítej zkrác.období [persistentní položka]
   * @return countShrinkedPeriod
  **/
  @ApiModelProperty(example = "null", value = "Počítej zkrác.období [persistentní položka]")
  public Integer getCountShrinkedPeriod() {
    return countShrinkedPeriod;
  }

  public void setCountShrinkedPeriod(Integer countShrinkedPeriod) {
    this.countShrinkedPeriod = countShrinkedPeriod;
  }

  public Assetparameter alwaysAccountSummary(Boolean alwaysAccountSummary) {
    this.alwaysAccountSummary = alwaysAccountSummary;
    return this;
  }

   /**
   * Vždy účtuj o.souhr. [persistentní položka]
   * @return alwaysAccountSummary
  **/
  @ApiModelProperty(example = "null", value = "Vždy účtuj o.souhr. [persistentní položka]")
  public Boolean getAlwaysAccountSummary() {
    return alwaysAccountSummary;
  }

  public void setAlwaysAccountSummary(Boolean alwaysAccountSummary) {
    this.alwaysAccountSummary = alwaysAccountSummary;
  }

  public Assetparameter firstYearDeprecIncreaseDATE(DateTime firstYearDeprecIncreaseDATE) {
    this.firstYearDeprecIncreaseDATE = firstYearDeprecIncreaseDATE;
    return this;
  }

   /**
   * Datum změny alg. [persistentní položka]
   * @return firstYearDeprecIncreaseDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum změny alg. [persistentní položka]")
  public DateTime getFirstYearDeprecIncreaseDATE() {
    return firstYearDeprecIncreaseDATE;
  }

  public void setFirstYearDeprecIncreaseDATE(DateTime firstYearDeprecIncreaseDATE) {
    this.firstYearDeprecIncreaseDATE = firstYearDeprecIncreaseDATE;
  }

  public Assetparameter keepDegressDeprecLength(Boolean keepDegressDeprecLength) {
    this.keepDegressDeprecLength = keepDegressDeprecLength;
    return this;
  }

   /**
   * Zachovat délku daň.odpisů po zvýšení ceny [persistentní položka]
   * @return keepDegressDeprecLength
  **/
  @ApiModelProperty(example = "null", value = "Zachovat délku daň.odpisů po zvýšení ceny [persistentní položka]")
  public Boolean getKeepDegressDeprecLength() {
    return keepDegressDeprecLength;
  }

  public void setKeepDegressDeprecLength(Boolean keepDegressDeprecLength) {
    this.keepDegressDeprecLength = keepDegressDeprecLength;
  }

  public Assetparameter restAccValueRate(Double restAccValueRate) {
    this.restAccValueRate = restAccValueRate;
    return this;
  }

   /**
   * Zbytková úč. hodnota majetku [persistentní položka]
   * @return restAccValueRate
  **/
  @ApiModelProperty(example = "null", value = "Zbytková úč. hodnota majetku [persistentní položka]")
  public Double getRestAccValueRate() {
    return restAccValueRate;
  }

  public void setRestAccValueRate(Double restAccValueRate) {
    this.restAccValueRate = restAccValueRate;
  }

  public Assetparameter bookingType(Integer bookingType) {
    this.bookingType = bookingType;
    return this;
  }

   /**
   * Způsob účtování [persistentní položka]
   * @return bookingType
  **/
  @ApiModelProperty(example = "null", value = "Způsob účtování [persistentní položka]")
  public Integer getBookingType() {
    return bookingType;
  }

  public void setBookingType(Integer bookingType) {
    this.bookingType = bookingType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Assetparameter assetparameter = (Assetparameter) o;
    return Objects.equals(this.displayName, assetparameter.displayName) &&
        Objects.equals(this.ID, assetparameter.ID) &&
        Objects.equals(this.classID, assetparameter.classID) &&
        Objects.equals(this.objVersion, assetparameter.objVersion) &&
        Objects.equals(this.tangibleAssetPriceLimit, assetparameter.tangibleAssetPriceLimit) &&
        Objects.equals(this.intangibleAssetPriceLimit, assetparameter.intangibleAssetPriceLimit) &&
        Objects.equals(this.overValuationPriceLimit, assetparameter.overValuationPriceLimit) &&
        Objects.equals(this.taxDepreciationRounding, assetparameter.taxDepreciationRounding) &&
        Objects.equals(this.accDepreciationRounding, assetparameter.accDepreciationRounding) &&
        Objects.equals(this.discardTaxDepreciationRate, assetparameter.discardTaxDepreciationRate) &&
        Objects.equals(this.accDepreciationBeginning, assetparameter.accDepreciationBeginning) &&
        Objects.equals(this.percentsInShortPeriod, assetparameter.percentsInShortPeriod) &&
        Objects.equals(this.formulaInventoryNrAssetCard, assetparameter.formulaInventoryNrAssetCard) &&
        Objects.equals(this.formulaInvNrSmallAssetCard, assetparameter.formulaInvNrSmallAssetCard) &&
        Objects.equals(this.responsibleIsObligatory, assetparameter.responsibleIsObligatory) &&
        Objects.equals(this.countShrinkedPeriod, assetparameter.countShrinkedPeriod) &&
        Objects.equals(this.alwaysAccountSummary, assetparameter.alwaysAccountSummary) &&
        Objects.equals(this.firstYearDeprecIncreaseDATE, assetparameter.firstYearDeprecIncreaseDATE) &&
        Objects.equals(this.keepDegressDeprecLength, assetparameter.keepDegressDeprecLength) &&
        Objects.equals(this.restAccValueRate, assetparameter.restAccValueRate) &&
        Objects.equals(this.bookingType, assetparameter.bookingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, tangibleAssetPriceLimit, intangibleAssetPriceLimit, overValuationPriceLimit, taxDepreciationRounding, accDepreciationRounding, discardTaxDepreciationRate, accDepreciationBeginning, percentsInShortPeriod, formulaInventoryNrAssetCard, formulaInvNrSmallAssetCard, responsibleIsObligatory, countShrinkedPeriod, alwaysAccountSummary, firstYearDeprecIncreaseDATE, keepDegressDeprecLength, restAccValueRate, bookingType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Assetparameter {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    tangibleAssetPriceLimit: ").append(toIndentedString(tangibleAssetPriceLimit)).append("\n");
    sb.append("    intangibleAssetPriceLimit: ").append(toIndentedString(intangibleAssetPriceLimit)).append("\n");
    sb.append("    overValuationPriceLimit: ").append(toIndentedString(overValuationPriceLimit)).append("\n");
    sb.append("    taxDepreciationRounding: ").append(toIndentedString(taxDepreciationRounding)).append("\n");
    sb.append("    accDepreciationRounding: ").append(toIndentedString(accDepreciationRounding)).append("\n");
    sb.append("    discardTaxDepreciationRate: ").append(toIndentedString(discardTaxDepreciationRate)).append("\n");
    sb.append("    accDepreciationBeginning: ").append(toIndentedString(accDepreciationBeginning)).append("\n");
    sb.append("    percentsInShortPeriod: ").append(toIndentedString(percentsInShortPeriod)).append("\n");
    sb.append("    formulaInventoryNrAssetCard: ").append(toIndentedString(formulaInventoryNrAssetCard)).append("\n");
    sb.append("    formulaInvNrSmallAssetCard: ").append(toIndentedString(formulaInvNrSmallAssetCard)).append("\n");
    sb.append("    responsibleIsObligatory: ").append(toIndentedString(responsibleIsObligatory)).append("\n");
    sb.append("    countShrinkedPeriod: ").append(toIndentedString(countShrinkedPeriod)).append("\n");
    sb.append("    alwaysAccountSummary: ").append(toIndentedString(alwaysAccountSummary)).append("\n");
    sb.append("    firstYearDeprecIncreaseDATE: ").append(toIndentedString(firstYearDeprecIncreaseDATE)).append("\n");
    sb.append("    keepDegressDeprecLength: ").append(toIndentedString(keepDegressDeprecLength)).append("\n");
    sb.append("    restAccValueRate: ").append(toIndentedString(restAccValueRate)).append("\n");
    sb.append("    bookingType: ").append(toIndentedString(bookingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

