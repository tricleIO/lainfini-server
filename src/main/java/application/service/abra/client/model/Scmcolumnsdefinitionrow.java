/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Scmcolumnsdefinitionrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Scmcolumnsdefinitionrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Caption")
  private String caption = null;

  @SerializedName("IsCalculated")
  private Boolean isCalculated = null;

  @SerializedName("DataSource_ID")
  private String dataSourceID = null;

  @SerializedName("FieldName")
  private String fieldName = null;

  @SerializedName("DataType")
  private Integer dataType = null;

  @SerializedName("Kind")
  private Integer kind = null;

  @SerializedName("DisplayWidth")
  private Integer displayWidth = null;

  @SerializedName("AggregateFunction")
  private Integer aggregateFunction = null;

  @SerializedName("IncludeToResult")
  private Boolean includeToResult = null;

  @SerializedName("Expression")
  private String expression = null;

  @SerializedName("ShowCondition")
  private String showCondition = null;

  @SerializedName("Conditions")
  private byte[] conditions = null;

  @SerializedName("System")
  private Boolean system = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Definice sloupců bilance [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Definice sloupců bilance [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Scmcolumnsdefinitionrow posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Scmcolumnsdefinitionrow name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Scmcolumnsdefinitionrow caption(String caption) {
    this.caption = caption;
    return this;
  }

   /**
   * Popisek [persistentní položka]
   * @return caption
  **/
  @ApiModelProperty(example = "null", value = "Popisek [persistentní položka]")
  public String getCaption() {
    return caption;
  }

  public void setCaption(String caption) {
    this.caption = caption;
  }

  public Scmcolumnsdefinitionrow isCalculated(Boolean isCalculated) {
    this.isCalculated = isCalculated;
    return this;
  }

   /**
   * Počítaný sloupec [persistentní položka]
   * @return isCalculated
  **/
  @ApiModelProperty(example = "null", value = "Počítaný sloupec [persistentní položka]")
  public Boolean getIsCalculated() {
    return isCalculated;
  }

  public void setIsCalculated(Boolean isCalculated) {
    this.isCalculated = isCalculated;
  }

  public Scmcolumnsdefinitionrow dataSourceID(String dataSourceID) {
    this.dataSourceID = dataSourceID;
    return this;
  }

   /**
   * Datový zdroj; ID objektu Datový zdroj [persistentní položka]
   * @return dataSourceID
  **/
  @ApiModelProperty(example = "null", value = "Datový zdroj; ID objektu Datový zdroj [persistentní položka]")
  public String getDataSourceID() {
    return dataSourceID;
  }

  public void setDataSourceID(String dataSourceID) {
    this.dataSourceID = dataSourceID;
  }

  public Scmcolumnsdefinitionrow fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Sloupec [persistentní položka]
   * @return fieldName
  **/
  @ApiModelProperty(example = "null", value = "Sloupec [persistentní položka]")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public Scmcolumnsdefinitionrow dataType(Integer dataType) {
    this.dataType = dataType;
    return this;
  }

   /**
   * Datový typ [persistentní položka]
   * @return dataType
  **/
  @ApiModelProperty(example = "null", value = "Datový typ [persistentní položka]")
  public Integer getDataType() {
    return dataType;
  }

  public void setDataType(Integer dataType) {
    this.dataType = dataType;
  }

  public Scmcolumnsdefinitionrow kind(Integer kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Typ sloupce [persistentní položka]
   * @return kind
  **/
  @ApiModelProperty(example = "null", value = "Typ sloupce [persistentní položka]")
  public Integer getKind() {
    return kind;
  }

  public void setKind(Integer kind) {
    this.kind = kind;
  }

  public Scmcolumnsdefinitionrow displayWidth(Integer displayWidth) {
    this.displayWidth = displayWidth;
    return this;
  }

   /**
   * Zobrazovací velikost [persistentní položka]
   * @return displayWidth
  **/
  @ApiModelProperty(example = "null", value = "Zobrazovací velikost [persistentní položka]")
  public Integer getDisplayWidth() {
    return displayWidth;
  }

  public void setDisplayWidth(Integer displayWidth) {
    this.displayWidth = displayWidth;
  }

  public Scmcolumnsdefinitionrow aggregateFunction(Integer aggregateFunction) {
    this.aggregateFunction = aggregateFunction;
    return this;
  }

   /**
   * Agregační funkce [persistentní položka]
   * @return aggregateFunction
  **/
  @ApiModelProperty(example = "null", value = "Agregační funkce [persistentní položka]")
  public Integer getAggregateFunction() {
    return aggregateFunction;
  }

  public void setAggregateFunction(Integer aggregateFunction) {
    this.aggregateFunction = aggregateFunction;
  }

  public Scmcolumnsdefinitionrow includeToResult(Boolean includeToResult) {
    this.includeToResult = includeToResult;
    return this;
  }

   /**
   * Započítat [persistentní položka]
   * @return includeToResult
  **/
  @ApiModelProperty(example = "null", value = "Započítat [persistentní položka]")
  public Boolean getIncludeToResult() {
    return includeToResult;
  }

  public void setIncludeToResult(Boolean includeToResult) {
    this.includeToResult = includeToResult;
  }

  public Scmcolumnsdefinitionrow expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Výraz [persistentní položka]
   * @return expression
  **/
  @ApiModelProperty(example = "null", value = "Výraz [persistentní položka]")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public Scmcolumnsdefinitionrow showCondition(String showCondition) {
    this.showCondition = showCondition;
    return this;
  }

   /**
   * Zobrazovací podmínka [persistentní položka]
   * @return showCondition
  **/
  @ApiModelProperty(example = "null", value = "Zobrazovací podmínka [persistentní položka]")
  public String getShowCondition() {
    return showCondition;
  }

  public void setShowCondition(String showCondition) {
    this.showCondition = showCondition;
  }

  public Scmcolumnsdefinitionrow conditions(byte[] conditions) {
    this.conditions = conditions;
    return this;
  }

   /**
   * Podmínky [persistentní položka]
   * @return conditions
  **/
  @ApiModelProperty(example = "null", value = "Podmínky [persistentní položka]")
  public byte[] getConditions() {
    return conditions;
  }

  public void setConditions(byte[] conditions) {
    this.conditions = conditions;
  }

   /**
   * Systémový [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "Systémový [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scmcolumnsdefinitionrow scmcolumnsdefinitionrow = (Scmcolumnsdefinitionrow) o;
    return Objects.equals(this.displayName, scmcolumnsdefinitionrow.displayName) &&
        Objects.equals(this.ID, scmcolumnsdefinitionrow.ID) &&
        Objects.equals(this.classID, scmcolumnsdefinitionrow.classID) &&
        Objects.equals(this.objVersion, scmcolumnsdefinitionrow.objVersion) &&
        Objects.equals(this.parentID, scmcolumnsdefinitionrow.parentID) &&
        Objects.equals(this.posIndex, scmcolumnsdefinitionrow.posIndex) &&
        Objects.equals(this.name, scmcolumnsdefinitionrow.name) &&
        Objects.equals(this.caption, scmcolumnsdefinitionrow.caption) &&
        Objects.equals(this.isCalculated, scmcolumnsdefinitionrow.isCalculated) &&
        Objects.equals(this.dataSourceID, scmcolumnsdefinitionrow.dataSourceID) &&
        Objects.equals(this.fieldName, scmcolumnsdefinitionrow.fieldName) &&
        Objects.equals(this.dataType, scmcolumnsdefinitionrow.dataType) &&
        Objects.equals(this.kind, scmcolumnsdefinitionrow.kind) &&
        Objects.equals(this.displayWidth, scmcolumnsdefinitionrow.displayWidth) &&
        Objects.equals(this.aggregateFunction, scmcolumnsdefinitionrow.aggregateFunction) &&
        Objects.equals(this.includeToResult, scmcolumnsdefinitionrow.includeToResult) &&
        Objects.equals(this.expression, scmcolumnsdefinitionrow.expression) &&
        Objects.equals(this.showCondition, scmcolumnsdefinitionrow.showCondition) &&
        Objects.equals(this.conditions, scmcolumnsdefinitionrow.conditions) &&
        Objects.equals(this.system, scmcolumnsdefinitionrow.system);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, name, caption, isCalculated, dataSourceID, fieldName, dataType, kind, displayWidth, aggregateFunction, includeToResult, expression, showCondition, conditions, system);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scmcolumnsdefinitionrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    isCalculated: ").append(toIndentedString(isCalculated)).append("\n");
    sb.append("    dataSourceID: ").append(toIndentedString(dataSourceID)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    displayWidth: ").append(toIndentedString(displayWidth)).append("\n");
    sb.append("    aggregateFunction: ").append(toIndentedString(aggregateFunction)).append("\n");
    sb.append("    includeToResult: ").append(toIndentedString(includeToResult)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    showCondition: ").append(toIndentedString(showCondition)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

