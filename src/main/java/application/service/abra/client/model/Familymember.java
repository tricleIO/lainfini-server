/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Familymember
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Familymember   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("lastname")
  private String lastname = null;

  @SerializedName("firstname")
  private String firstname = null;

  @SerializedName("birthnumber")
  private String birthnumber = null;

  @SerializedName("familyrelationtype")
  private Integer familyrelationtype = null;

  @SerializedName("countofftype_id")
  private String countofftypeId = null;

  @SerializedName("validfrom_id")
  private String validfromId = null;

  @SerializedName("validto_id")
  private String validtoId = null;

  @SerializedName("dateofbirth$date")
  private DateTime dateofbirthdate = null;

  @SerializedName("age")
  private Integer age = null;

  public Familymember displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Familymember id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Familymember classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Familymember objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Familymember parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu hlavičkový objekt [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu hlavičkový objekt [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Familymember lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * příjmení [persistentní položka]
   * @return lastname
  **/
  @ApiModelProperty(example = "null", value = "příjmení [persistentní položka]")
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

  public Familymember firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * křestní jméno [persistentní položka]
   * @return firstname
  **/
  @ApiModelProperty(example = "null", value = "křestní jméno [persistentní položka]")
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

  public Familymember birthnumber(String birthnumber) {
    this.birthnumber = birthnumber;
    return this;
  }

   /**
   * rodné číslo [persistentní položka]
   * @return birthnumber
  **/
  @ApiModelProperty(example = "null", value = "rodné číslo [persistentní položka]")
  public String getBirthnumber() {
    return birthnumber;
  }

  public void setBirthnumber(String birthnumber) {
    this.birthnumber = birthnumber;
  }

  public Familymember familyrelationtype(Integer familyrelationtype) {
    this.familyrelationtype = familyrelationtype;
    return this;
  }

   /**
   * vztah [persistentní položka]
   * @return familyrelationtype
  **/
  @ApiModelProperty(example = "null", value = "vztah [persistentní položka]")
  public Integer getFamilyrelationtype() {
    return familyrelationtype;
  }

  public void setFamilyrelationtype(Integer familyrelationtype) {
    this.familyrelationtype = familyrelationtype;
  }

  public Familymember countofftypeId(String countofftypeId) {
    this.countofftypeId = countofftypeId;
    return this;
  }

   /**
   * odpočet; id objektu typ odpočtu/slevy [persistentní položka]
   * @return countofftypeId
  **/
  @ApiModelProperty(example = "null", value = "odpočet; id objektu typ odpočtu/slevy [persistentní položka]")
  public String getCountofftypeId() {
    return countofftypeId;
  }

  public void setCountofftypeId(String countofftypeId) {
    this.countofftypeId = countofftypeId;
  }

  public Familymember validfromId(String validfromId) {
    this.validfromId = validfromId;
    return this;
  }

   /**
   * platí od; id objektu mzdové období [persistentní položka]
   * @return validfromId
  **/
  @ApiModelProperty(example = "null", value = "platí od; id objektu mzdové období [persistentní položka]")
  public String getValidfromId() {
    return validfromId;
  }

  public void setValidfromId(String validfromId) {
    this.validfromId = validfromId;
  }

  public Familymember validtoId(String validtoId) {
    this.validtoId = validtoId;
    return this;
  }

   /**
   * platí do; id objektu mzdové období [persistentní položka]
   * @return validtoId
  **/
  @ApiModelProperty(example = "null", value = "platí do; id objektu mzdové období [persistentní položka]")
  public String getValidtoId() {
    return validtoId;
  }

  public void setValidtoId(String validtoId) {
    this.validtoId = validtoId;
  }

  public Familymember dateofbirthdate(DateTime dateofbirthdate) {
    this.dateofbirthdate = dateofbirthdate;
    return this;
  }

   /**
   * datum narození [persistentní položka]
   * @return dateofbirthdate
  **/
  @ApiModelProperty(example = "null", value = "datum narození [persistentní položka]")
  public DateTime getDateofbirthdate() {
    return dateofbirthdate;
  }

  public void setDateofbirthdate(DateTime dateofbirthdate) {
    this.dateofbirthdate = dateofbirthdate;
  }

  public Familymember age(Integer age) {
    this.age = age;
    return this;
  }

   /**
   * věk
   * @return age
  **/
  @ApiModelProperty(example = "null", value = "věk")
  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Familymember familymember = (Familymember) o;
    return Objects.equals(this.displayname, familymember.displayname) &&
        Objects.equals(this.id, familymember.id) &&
        Objects.equals(this.classid, familymember.classid) &&
        Objects.equals(this.objversion, familymember.objversion) &&
        Objects.equals(this.parentId, familymember.parentId) &&
        Objects.equals(this.lastname, familymember.lastname) &&
        Objects.equals(this.firstname, familymember.firstname) &&
        Objects.equals(this.birthnumber, familymember.birthnumber) &&
        Objects.equals(this.familyrelationtype, familymember.familyrelationtype) &&
        Objects.equals(this.countofftypeId, familymember.countofftypeId) &&
        Objects.equals(this.validfromId, familymember.validfromId) &&
        Objects.equals(this.validtoId, familymember.validtoId) &&
        Objects.equals(this.dateofbirthdate, familymember.dateofbirthdate) &&
        Objects.equals(this.age, familymember.age);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, lastname, firstname, birthnumber, familyrelationtype, countofftypeId, validfromId, validtoId, dateofbirthdate, age);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Familymember {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    birthnumber: ").append(toIndentedString(birthnumber)).append("\n");
    sb.append("    familyrelationtype: ").append(toIndentedString(familyrelationtype)).append("\n");
    sb.append("    countofftypeId: ").append(toIndentedString(countofftypeId)).append("\n");
    sb.append("    validfromId: ").append(toIndentedString(validfromId)).append("\n");
    sb.append("    validtoId: ").append(toIndentedString(validtoId)).append("\n");
    sb.append("    dateofbirthdate: ").append(toIndentedString(dateofbirthdate)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

