/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Storecardcomponent
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Storecardcomponent   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("posindex")
  private Integer posindex = null;

  @SerializedName("rowtype")
  private Integer rowtype = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("unitquantity")
  private Double unitquantity = null;

  @SerializedName("qunit")
  private String qunit = null;

  @SerializedName("storecard_id")
  private String storecardId = null;

  @SerializedName("unitprice")
  private Double unitprice = null;

  @SerializedName("totalprice")
  private Double totalprice = null;

  @SerializedName("currency_id")
  private String currencyId = null;

  @SerializedName("pricewithvat")
  private Boolean pricewithvat = null;

  @SerializedName("vatrate")
  private Double vatrate = null;

  @SerializedName("vatrate_id")
  private String vatrateId = null;

  @SerializedName("unitrate")
  private Double unitrate = null;

  public Storecardcomponent displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Storecardcomponent id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Storecardcomponent classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Storecardcomponent objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Storecardcomponent parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu skladová karta [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu skladová karta [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Storecardcomponent posindex(Integer posindex) {
    this.posindex = posindex;
    return this;
  }

   /**
   * pořadí [persistentní položka]
   * @return posindex
  **/
  @ApiModelProperty(example = "null", value = "pořadí [persistentní položka]")
  public Integer getPosindex() {
    return posindex;
  }

  public void setPosindex(Integer posindex) {
    this.posindex = posindex;
  }

  public Storecardcomponent rowtype(Integer rowtype) {
    this.rowtype = rowtype;
    return this;
  }

   /**
   * typ [persistentní položka]
   * @return rowtype
  **/
  @ApiModelProperty(example = "null", value = "typ [persistentní položka]")
  public Integer getRowtype() {
    return rowtype;
  }

  public void setRowtype(Integer rowtype) {
    this.rowtype = rowtype;
  }

  public Storecardcomponent text(String text) {
    this.text = text;
    return this;
  }

   /**
   * text [persistentní položka]
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "text [persistentní položka]")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Storecardcomponent unitquantity(Double unitquantity) {
    this.unitquantity = unitquantity;
    return this;
  }

   /**
   * množství [persistentní položka]
   * @return unitquantity
  **/
  @ApiModelProperty(example = "null", value = "množství [persistentní položka]")
  public Double getUnitquantity() {
    return unitquantity;
  }

  public void setUnitquantity(Double unitquantity) {
    this.unitquantity = unitquantity;
  }

  public Storecardcomponent qunit(String qunit) {
    this.qunit = qunit;
    return this;
  }

   /**
   * jednotka [persistentní položka]
   * @return qunit
  **/
  @ApiModelProperty(example = "null", value = "jednotka [persistentní položka]")
  public String getQunit() {
    return qunit;
  }

  public void setQunit(String qunit) {
    this.qunit = qunit;
  }

  public Storecardcomponent storecardId(String storecardId) {
    this.storecardId = storecardId;
    return this;
  }

   /**
   * hlavní karta; id objektu skladová karta [persistentní položka]
   * @return storecardId
  **/
  @ApiModelProperty(example = "null", value = "hlavní karta; id objektu skladová karta [persistentní položka]")
  public String getStorecardId() {
    return storecardId;
  }

  public void setStorecardId(String storecardId) {
    this.storecardId = storecardId;
  }

  public Storecardcomponent unitprice(Double unitprice) {
    this.unitprice = unitprice;
    return this;
  }

   /**
   * jedn.cena [persistentní položka]
   * @return unitprice
  **/
  @ApiModelProperty(example = "null", value = "jedn.cena [persistentní položka]")
  public Double getUnitprice() {
    return unitprice;
  }

  public void setUnitprice(Double unitprice) {
    this.unitprice = unitprice;
  }

  public Storecardcomponent totalprice(Double totalprice) {
    this.totalprice = totalprice;
    return this;
  }

   /**
   * celk.cena [persistentní položka]
   * @return totalprice
  **/
  @ApiModelProperty(example = "null", value = "celk.cena [persistentní položka]")
  public Double getTotalprice() {
    return totalprice;
  }

  public void setTotalprice(Double totalprice) {
    this.totalprice = totalprice;
  }

  public Storecardcomponent currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * měna; id objektu měna [persistentní položka]
   * @return currencyId
  **/
  @ApiModelProperty(example = "null", value = "měna; id objektu měna [persistentní položka]")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public Storecardcomponent pricewithvat(Boolean pricewithvat) {
    this.pricewithvat = pricewithvat;
    return this;
  }

   /**
   * s daní [persistentní položka]
   * @return pricewithvat
  **/
  @ApiModelProperty(example = "null", value = "s daní [persistentní položka]")
  public Boolean getPricewithvat() {
    return pricewithvat;
  }

  public void setPricewithvat(Boolean pricewithvat) {
    this.pricewithvat = pricewithvat;
  }

  public Storecardcomponent vatrate(Double vatrate) {
    this.vatrate = vatrate;
    return this;
  }

   /**
   * dph sazba [persistentní položka]
   * @return vatrate
  **/
  @ApiModelProperty(example = "null", value = "dph sazba [persistentní položka]")
  public Double getVatrate() {
    return vatrate;
  }

  public void setVatrate(Double vatrate) {
    this.vatrate = vatrate;
  }

  public Storecardcomponent vatrateId(String vatrateId) {
    this.vatrateId = vatrateId;
    return this;
  }

   /**
   * %dph; id objektu dph sazba [persistentní položka]
   * @return vatrateId
  **/
  @ApiModelProperty(example = "null", value = "%dph; id objektu dph sazba [persistentní položka]")
  public String getVatrateId() {
    return vatrateId;
  }

  public void setVatrateId(String vatrateId) {
    this.vatrateId = vatrateId;
  }

  public Storecardcomponent unitrate(Double unitrate) {
    this.unitrate = unitrate;
    return this;
  }

   /**
   * vztah
   * @return unitrate
  **/
  @ApiModelProperty(example = "null", value = "vztah")
  public Double getUnitrate() {
    return unitrate;
  }

  public void setUnitrate(Double unitrate) {
    this.unitrate = unitrate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Storecardcomponent storecardcomponent = (Storecardcomponent) o;
    return Objects.equals(this.displayname, storecardcomponent.displayname) &&
        Objects.equals(this.id, storecardcomponent.id) &&
        Objects.equals(this.classid, storecardcomponent.classid) &&
        Objects.equals(this.objversion, storecardcomponent.objversion) &&
        Objects.equals(this.parentId, storecardcomponent.parentId) &&
        Objects.equals(this.posindex, storecardcomponent.posindex) &&
        Objects.equals(this.rowtype, storecardcomponent.rowtype) &&
        Objects.equals(this.text, storecardcomponent.text) &&
        Objects.equals(this.unitquantity, storecardcomponent.unitquantity) &&
        Objects.equals(this.qunit, storecardcomponent.qunit) &&
        Objects.equals(this.storecardId, storecardcomponent.storecardId) &&
        Objects.equals(this.unitprice, storecardcomponent.unitprice) &&
        Objects.equals(this.totalprice, storecardcomponent.totalprice) &&
        Objects.equals(this.currencyId, storecardcomponent.currencyId) &&
        Objects.equals(this.pricewithvat, storecardcomponent.pricewithvat) &&
        Objects.equals(this.vatrate, storecardcomponent.vatrate) &&
        Objects.equals(this.vatrateId, storecardcomponent.vatrateId) &&
        Objects.equals(this.unitrate, storecardcomponent.unitrate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, posindex, rowtype, text, unitquantity, qunit, storecardId, unitprice, totalprice, currencyId, pricewithvat, vatrate, vatrateId, unitrate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Storecardcomponent {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    posindex: ").append(toIndentedString(posindex)).append("\n");
    sb.append("    rowtype: ").append(toIndentedString(rowtype)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    unitquantity: ").append(toIndentedString(unitquantity)).append("\n");
    sb.append("    qunit: ").append(toIndentedString(qunit)).append("\n");
    sb.append("    storecardId: ").append(toIndentedString(storecardId)).append("\n");
    sb.append("    unitprice: ").append(toIndentedString(unitprice)).append("\n");
    sb.append("    totalprice: ").append(toIndentedString(totalprice)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    pricewithvat: ").append(toIndentedString(pricewithvat)).append("\n");
    sb.append("    vatrate: ").append(toIndentedString(vatrate)).append("\n");
    sb.append("    vatrateId: ").append(toIndentedString(vatrateId)).append("\n");
    sb.append("    unitrate: ").append(toIndentedString(unitrate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

