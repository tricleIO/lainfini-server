/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Holiday
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Holiday   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Holidayrow> rows = new ArrayList<Holidayrow>();

  @SerializedName("GoOn")
  private Boolean goOn = null;

  @SerializedName("ClaimShorten")
  private Double claimShorten = null;

  @SerializedName("WorkingRelation_ID")
  private String workingRelationID = null;

  @SerializedName("Holiday_ID")
  private String holidayID = null;

  @SerializedName("CalendarYear")
  private Integer calendarYear = null;

  @SerializedName("Regular")
  private Boolean regular = null;

  @SerializedName("Claim")
  private Double claim = null;

  @SerializedName("RestTransfer")
  private Double restTransfer = null;

  @SerializedName("ValidFrom$DATE")
  private DateTime validFromDATE = null;

  @SerializedName("ValidTo$DATE")
  private DateTime validToDATE = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Priority")
  private Integer priority = null;

  @SerializedName("Payable")
  private Boolean payable = null;

  @SerializedName("DrawDown")
  private Double drawDown = null;

  @SerializedName("PreviousRest")
  private Double previousRest = null;

  @SerializedName("ClaimShortenCorr")
  private Double claimShortenCorr = null;

  @SerializedName("ClaimShortenComp")
  private Double claimShortenComp = null;

  @SerializedName("TransferWholeRest")
  private Boolean transferWholeRest = null;

  @SerializedName("ValidFromMonthDay")
  private Integer validFromMonthDay = null;

  @SerializedName("ValidToMonthDay")
  private Integer validToMonthDay = null;

  @SerializedName("ValidFromMonth")
  private Integer validFromMonth = null;

  @SerializedName("ValidFromDay")
  private Integer validFromDay = null;

  @SerializedName("ValidFromDate")
  private String validFromDate = null;

  @SerializedName("ValidToMonth")
  private Integer validToMonth = null;

  @SerializedName("ValidToDay")
  private Integer validToDay = null;

  @SerializedName("ValidToDate")
  private String validToDate = null;

  @SerializedName("Employee_ID")
  private String employeeID = null;

  @SerializedName("EmployeeName")
  private String employeeName = null;

  @SerializedName("PERS_PersonalNumber")
  private String pERSPersonalNumber = null;

  @SerializedName("ClaimType")
  private Integer claimType = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Holiday rows(List<Holidayrow> rows) {
    this.rows = rows;
    return this;
  }

  public Holiday addRowsItem(Holidayrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Čerpání; kolekce BO Čerpaná dovolená [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Čerpání; kolekce BO Čerpaná dovolená [nepersistentní položka]")
  public List<Holidayrow> getRows() {
    return rows;
  }

  public void setRows(List<Holidayrow> rows) {
    this.rows = rows;
  }

  public Holiday goOn(Boolean goOn) {
    this.goOn = goOn;
    return this;
  }

   /**
   * Vytv. v dalším roce [persistentní položka]
   * @return goOn
  **/
  @ApiModelProperty(example = "null", value = "Vytv. v dalším roce [persistentní položka]")
  public Boolean getGoOn() {
    return goOn;
  }

  public void setGoOn(Boolean goOn) {
    this.goOn = goOn;
  }

   /**
   * Krác. nár. [persistentní položka]
   * @return claimShorten
  **/
  @ApiModelProperty(example = "null", value = "Krác. nár. [persistentní položka]")
  public Double getClaimShorten() {
    return claimShorten;
  }

  public Holiday workingRelationID(String workingRelationID) {
    this.workingRelationID = workingRelationID;
    return this;
  }

   /**
   * Pracovní poměr; ID objektu Pracovní poměr [persistentní položka]
   * @return workingRelationID
  **/
  @ApiModelProperty(example = "null", value = "Pracovní poměr; ID objektu Pracovní poměr [persistentní položka]")
  public String getWorkingRelationID() {
    return workingRelationID;
  }

  public void setWorkingRelationID(String workingRelationID) {
    this.workingRelationID = workingRelationID;
  }

  public Holiday holidayID(String holidayID) {
    this.holidayID = holidayID;
    return this;
  }

   /**
   * Druh dov.; ID objektu Druh dovolené [persistentní položka]
   * @return holidayID
  **/
  @ApiModelProperty(example = "null", value = "Druh dov.; ID objektu Druh dovolené [persistentní položka]")
  public String getHolidayID() {
    return holidayID;
  }

  public void setHolidayID(String holidayID) {
    this.holidayID = holidayID;
  }

  public Holiday calendarYear(Integer calendarYear) {
    this.calendarYear = calendarYear;
    return this;
  }

   /**
   * Kalen. rok [persistentní položka]
   * @return calendarYear
  **/
  @ApiModelProperty(example = "null", value = "Kalen. rok [persistentní položka]")
  public Integer getCalendarYear() {
    return calendarYear;
  }

  public void setCalendarYear(Integer calendarYear) {
    this.calendarYear = calendarYear;
  }

  public Holiday regular(Boolean regular) {
    this.regular = regular;
    return this;
  }

   /**
   * Řádná [persistentní položka]
   * @return regular
  **/
  @ApiModelProperty(example = "null", value = "Řádná [persistentní položka]")
  public Boolean getRegular() {
    return regular;
  }

  public void setRegular(Boolean regular) {
    this.regular = regular;
  }

  public Holiday claim(Double claim) {
    this.claim = claim;
    return this;
  }

   /**
   * Nárok [persistentní položka]
   * @return claim
  **/
  @ApiModelProperty(example = "null", value = "Nárok [persistentní položka]")
  public Double getClaim() {
    return claim;
  }

  public void setClaim(Double claim) {
    this.claim = claim;
  }

  public Holiday restTransfer(Double restTransfer) {
    this.restTransfer = restTransfer;
    return this;
  }

   /**
   * Přenos. dní [persistentní položka]
   * @return restTransfer
  **/
  @ApiModelProperty(example = "null", value = "Přenos. dní [persistentní položka]")
  public Double getRestTransfer() {
    return restTransfer;
  }

  public void setRestTransfer(Double restTransfer) {
    this.restTransfer = restTransfer;
  }

  public Holiday validFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
    return this;
  }

   /**
   * Platí od [persistentní položka]
   * @return validFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Platí od [persistentní položka]")
  public DateTime getValidFromDATE() {
    return validFromDATE;
  }

  public void setValidFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
  }

  public Holiday validToDATE(DateTime validToDATE) {
    this.validToDATE = validToDATE;
    return this;
  }

   /**
   * Platí do [persistentní položka]
   * @return validToDATE
  **/
  @ApiModelProperty(example = "null", value = "Platí do [persistentní položka]")
  public DateTime getValidToDATE() {
    return validToDATE;
  }

  public void setValidToDATE(DateTime validToDATE) {
    this.validToDATE = validToDATE;
  }

  public Holiday code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Holiday name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Holiday priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priorita [persistentní položka]
   * @return priority
  **/
  @ApiModelProperty(example = "null", value = "Priorita [persistentní položka]")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Holiday payable(Boolean payable) {
    this.payable = payable;
    return this;
  }

   /**
   * Proplácet [persistentní položka]
   * @return payable
  **/
  @ApiModelProperty(example = "null", value = "Proplácet [persistentní položka]")
  public Boolean getPayable() {
    return payable;
  }

  public void setPayable(Boolean payable) {
    this.payable = payable;
  }

  public Holiday drawDown(Double drawDown) {
    this.drawDown = drawDown;
    return this;
  }

   /**
   * Cel. čerpáno [persistentní položka]
   * @return drawDown
  **/
  @ApiModelProperty(example = "null", value = "Cel. čerpáno [persistentní položka]")
  public Double getDrawDown() {
    return drawDown;
  }

  public void setDrawDown(Double drawDown) {
    this.drawDown = drawDown;
  }

  public Holiday previousRest(Double previousRest) {
    this.previousRest = previousRest;
    return this;
  }

   /**
   * Stará dov. [persistentní položka]
   * @return previousRest
  **/
  @ApiModelProperty(example = "null", value = "Stará dov. [persistentní položka]")
  public Double getPreviousRest() {
    return previousRest;
  }

  public void setPreviousRest(Double previousRest) {
    this.previousRest = previousRest;
  }

  public Holiday claimShortenCorr(Double claimShortenCorr) {
    this.claimShortenCorr = claimShortenCorr;
    return this;
  }

   /**
   * Oprava krácení [persistentní položka]
   * @return claimShortenCorr
  **/
  @ApiModelProperty(example = "null", value = "Oprava krácení [persistentní položka]")
  public Double getClaimShortenCorr() {
    return claimShortenCorr;
  }

  public void setClaimShortenCorr(Double claimShortenCorr) {
    this.claimShortenCorr = claimShortenCorr;
  }

   /**
   * Vypočtené krácení [persistentní položka]
   * @return claimShortenComp
  **/
  @ApiModelProperty(example = "null", value = "Vypočtené krácení [persistentní položka]")
  public Double getClaimShortenComp() {
    return claimShortenComp;
  }

  public Holiday transferWholeRest(Boolean transferWholeRest) {
    this.transferWholeRest = transferWholeRest;
    return this;
  }

   /**
   * Přenášet vše [persistentní položka]
   * @return transferWholeRest
  **/
  @ApiModelProperty(example = "null", value = "Přenášet vše [persistentní položka]")
  public Boolean getTransferWholeRest() {
    return transferWholeRest;
  }

  public void setTransferWholeRest(Boolean transferWholeRest) {
    this.transferWholeRest = transferWholeRest;
  }

  public Holiday validFromMonthDay(Integer validFromMonthDay) {
    this.validFromMonthDay = validFromMonthDay;
    return this;
  }

   /**
   * Platí od
   * @return validFromMonthDay
  **/
  @ApiModelProperty(example = "null", value = "Platí od")
  public Integer getValidFromMonthDay() {
    return validFromMonthDay;
  }

  public void setValidFromMonthDay(Integer validFromMonthDay) {
    this.validFromMonthDay = validFromMonthDay;
  }

  public Holiday validToMonthDay(Integer validToMonthDay) {
    this.validToMonthDay = validToMonthDay;
    return this;
  }

   /**
   * Platí do
   * @return validToMonthDay
  **/
  @ApiModelProperty(example = "null", value = "Platí do")
  public Integer getValidToMonthDay() {
    return validToMonthDay;
  }

  public void setValidToMonthDay(Integer validToMonthDay) {
    this.validToMonthDay = validToMonthDay;
  }

  public Holiday validFromMonth(Integer validFromMonth) {
    this.validFromMonth = validFromMonth;
    return this;
  }

   /**
   * Měsíc platnosti od
   * @return validFromMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc platnosti od")
  public Integer getValidFromMonth() {
    return validFromMonth;
  }

  public void setValidFromMonth(Integer validFromMonth) {
    this.validFromMonth = validFromMonth;
  }

  public Holiday validFromDay(Integer validFromDay) {
    this.validFromDay = validFromDay;
    return this;
  }

   /**
   * Den platnosti od
   * @return validFromDay
  **/
  @ApiModelProperty(example = "null", value = "Den platnosti od")
  public Integer getValidFromDay() {
    return validFromDay;
  }

  public void setValidFromDay(Integer validFromDay) {
    this.validFromDay = validFromDay;
  }

  public Holiday validFromDate(String validFromDate) {
    this.validFromDate = validFromDate;
    return this;
  }

   /**
   * Datum platnosti od
   * @return validFromDate
  **/
  @ApiModelProperty(example = "null", value = "Datum platnosti od")
  public String getValidFromDate() {
    return validFromDate;
  }

  public void setValidFromDate(String validFromDate) {
    this.validFromDate = validFromDate;
  }

  public Holiday validToMonth(Integer validToMonth) {
    this.validToMonth = validToMonth;
    return this;
  }

   /**
   * Měsíc platnosti do
   * @return validToMonth
  **/
  @ApiModelProperty(example = "null", value = "Měsíc platnosti do")
  public Integer getValidToMonth() {
    return validToMonth;
  }

  public void setValidToMonth(Integer validToMonth) {
    this.validToMonth = validToMonth;
  }

  public Holiday validToDay(Integer validToDay) {
    this.validToDay = validToDay;
    return this;
  }

   /**
   * Den platnosti do
   * @return validToDay
  **/
  @ApiModelProperty(example = "null", value = "Den platnosti do")
  public Integer getValidToDay() {
    return validToDay;
  }

  public void setValidToDay(Integer validToDay) {
    this.validToDay = validToDay;
  }

  public Holiday validToDate(String validToDate) {
    this.validToDate = validToDate;
    return this;
  }

   /**
   * Datum platnosti do
   * @return validToDate
  **/
  @ApiModelProperty(example = "null", value = "Datum platnosti do")
  public String getValidToDate() {
    return validToDate;
  }

  public void setValidToDate(String validToDate) {
    this.validToDate = validToDate;
  }

  public Holiday employeeID(String employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Zaměstnanec; ID objektu Zaměstnanec
   * @return employeeID
  **/
  @ApiModelProperty(example = "null", value = "Zaměstnanec; ID objektu Zaměstnanec")
  public String getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(String employeeID) {
    this.employeeID = employeeID;
  }

   /**
   * Příjmení a jméno
   * @return employeeName
  **/
  @ApiModelProperty(example = "null", value = "Příjmení a jméno")
  public String getEmployeeName() {
    return employeeName;
  }

   /**
   * os. číslo
   * @return pERSPersonalNumber
  **/
  @ApiModelProperty(example = "null", value = "os. číslo")
  public String getPERSPersonalNumber() {
    return pERSPersonalNumber;
  }

  public Holiday claimType(Integer claimType) {
    this.claimType = claimType;
    return this;
  }

   /**
   * Jednotka nároku [persistentní položka]
   * @return claimType
  **/
  @ApiModelProperty(example = "null", value = "Jednotka nároku [persistentní položka]")
  public Integer getClaimType() {
    return claimType;
  }

  public void setClaimType(Integer claimType) {
    this.claimType = claimType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Holiday holiday = (Holiday) o;
    return Objects.equals(this.displayName, holiday.displayName) &&
        Objects.equals(this.ID, holiday.ID) &&
        Objects.equals(this.classID, holiday.classID) &&
        Objects.equals(this.objVersion, holiday.objVersion) &&
        Objects.equals(this.rows, holiday.rows) &&
        Objects.equals(this.goOn, holiday.goOn) &&
        Objects.equals(this.claimShorten, holiday.claimShorten) &&
        Objects.equals(this.workingRelationID, holiday.workingRelationID) &&
        Objects.equals(this.holidayID, holiday.holidayID) &&
        Objects.equals(this.calendarYear, holiday.calendarYear) &&
        Objects.equals(this.regular, holiday.regular) &&
        Objects.equals(this.claim, holiday.claim) &&
        Objects.equals(this.restTransfer, holiday.restTransfer) &&
        Objects.equals(this.validFromDATE, holiday.validFromDATE) &&
        Objects.equals(this.validToDATE, holiday.validToDATE) &&
        Objects.equals(this.code, holiday.code) &&
        Objects.equals(this.name, holiday.name) &&
        Objects.equals(this.priority, holiday.priority) &&
        Objects.equals(this.payable, holiday.payable) &&
        Objects.equals(this.drawDown, holiday.drawDown) &&
        Objects.equals(this.previousRest, holiday.previousRest) &&
        Objects.equals(this.claimShortenCorr, holiday.claimShortenCorr) &&
        Objects.equals(this.claimShortenComp, holiday.claimShortenComp) &&
        Objects.equals(this.transferWholeRest, holiday.transferWholeRest) &&
        Objects.equals(this.validFromMonthDay, holiday.validFromMonthDay) &&
        Objects.equals(this.validToMonthDay, holiday.validToMonthDay) &&
        Objects.equals(this.validFromMonth, holiday.validFromMonth) &&
        Objects.equals(this.validFromDay, holiday.validFromDay) &&
        Objects.equals(this.validFromDate, holiday.validFromDate) &&
        Objects.equals(this.validToMonth, holiday.validToMonth) &&
        Objects.equals(this.validToDay, holiday.validToDay) &&
        Objects.equals(this.validToDate, holiday.validToDate) &&
        Objects.equals(this.employeeID, holiday.employeeID) &&
        Objects.equals(this.employeeName, holiday.employeeName) &&
        Objects.equals(this.pERSPersonalNumber, holiday.pERSPersonalNumber) &&
        Objects.equals(this.claimType, holiday.claimType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, goOn, claimShorten, workingRelationID, holidayID, calendarYear, regular, claim, restTransfer, validFromDATE, validToDATE, code, name, priority, payable, drawDown, previousRest, claimShortenCorr, claimShortenComp, transferWholeRest, validFromMonthDay, validToMonthDay, validFromMonth, validFromDay, validFromDate, validToMonth, validToDay, validToDate, employeeID, employeeName, pERSPersonalNumber, claimType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Holiday {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    goOn: ").append(toIndentedString(goOn)).append("\n");
    sb.append("    claimShorten: ").append(toIndentedString(claimShorten)).append("\n");
    sb.append("    workingRelationID: ").append(toIndentedString(workingRelationID)).append("\n");
    sb.append("    holidayID: ").append(toIndentedString(holidayID)).append("\n");
    sb.append("    calendarYear: ").append(toIndentedString(calendarYear)).append("\n");
    sb.append("    regular: ").append(toIndentedString(regular)).append("\n");
    sb.append("    claim: ").append(toIndentedString(claim)).append("\n");
    sb.append("    restTransfer: ").append(toIndentedString(restTransfer)).append("\n");
    sb.append("    validFromDATE: ").append(toIndentedString(validFromDATE)).append("\n");
    sb.append("    validToDATE: ").append(toIndentedString(validToDATE)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    payable: ").append(toIndentedString(payable)).append("\n");
    sb.append("    drawDown: ").append(toIndentedString(drawDown)).append("\n");
    sb.append("    previousRest: ").append(toIndentedString(previousRest)).append("\n");
    sb.append("    claimShortenCorr: ").append(toIndentedString(claimShortenCorr)).append("\n");
    sb.append("    claimShortenComp: ").append(toIndentedString(claimShortenComp)).append("\n");
    sb.append("    transferWholeRest: ").append(toIndentedString(transferWholeRest)).append("\n");
    sb.append("    validFromMonthDay: ").append(toIndentedString(validFromMonthDay)).append("\n");
    sb.append("    validToMonthDay: ").append(toIndentedString(validToMonthDay)).append("\n");
    sb.append("    validFromMonth: ").append(toIndentedString(validFromMonth)).append("\n");
    sb.append("    validFromDay: ").append(toIndentedString(validFromDay)).append("\n");
    sb.append("    validFromDate: ").append(toIndentedString(validFromDate)).append("\n");
    sb.append("    validToMonth: ").append(toIndentedString(validToMonth)).append("\n");
    sb.append("    validToDay: ").append(toIndentedString(validToDay)).append("\n");
    sb.append("    validToDate: ").append(toIndentedString(validToDate)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    employeeName: ").append(toIndentedString(employeeName)).append("\n");
    sb.append("    pERSPersonalNumber: ").append(toIndentedString(pERSPersonalNumber)).append("\n");
    sb.append("    claimType: ").append(toIndentedString(claimType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

