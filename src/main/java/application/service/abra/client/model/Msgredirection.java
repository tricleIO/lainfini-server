/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Msgredirection
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Msgredirection   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("SecurityUser_ID")
  private String securityUserID = null;

  @SerializedName("EmailAddress")
  private String emailAddress = null;

  @SerializedName("ValidFromDate$DATE")
  private DateTime validFromDateDATE = null;

  @SerializedName("ValidToDate$DATE")
  private DateTime validToDateDATE = null;

  @SerializedName("Reason")
  private String reason = null;

  @SerializedName("KeepMessage")
  private Boolean keepMessage = null;

  @SerializedName("EmailAccount_ID")
  private String emailAccountID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Msgredirection securityUserID(String securityUserID) {
    this.securityUserID = securityUserID;
    return this;
  }

   /**
   * Uživatel; ID objektu Uživatel [persistentní položka]
   * @return securityUserID
  **/
  @ApiModelProperty(example = "null", value = "Uživatel; ID objektu Uživatel [persistentní položka]")
  public String getSecurityUserID() {
    return securityUserID;
  }

  public void setSecurityUserID(String securityUserID) {
    this.securityUserID = securityUserID;
  }

  public Msgredirection emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Adresát(i) [persistentní položka]
   * @return emailAddress
  **/
  @ApiModelProperty(example = "null", value = "Adresát(i) [persistentní položka]")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public Msgredirection validFromDateDATE(DateTime validFromDateDATE) {
    this.validFromDateDATE = validFromDateDATE;
    return this;
  }

   /**
   * Platné od data [persistentní položka]
   * @return validFromDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Platné od data [persistentní položka]")
  public DateTime getValidFromDateDATE() {
    return validFromDateDATE;
  }

  public void setValidFromDateDATE(DateTime validFromDateDATE) {
    this.validFromDateDATE = validFromDateDATE;
  }

  public Msgredirection validToDateDATE(DateTime validToDateDATE) {
    this.validToDateDATE = validToDateDATE;
    return this;
  }

   /**
   * Platné do data [persistentní položka]
   * @return validToDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Platné do data [persistentní položka]")
  public DateTime getValidToDateDATE() {
    return validToDateDATE;
  }

  public void setValidToDateDATE(DateTime validToDateDATE) {
    this.validToDateDATE = validToDateDATE;
  }

  public Msgredirection reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Důvod [persistentní položka]
   * @return reason
  **/
  @ApiModelProperty(example = "null", value = "Důvod [persistentní položka]")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public Msgredirection keepMessage(Boolean keepMessage) {
    this.keepMessage = keepMessage;
    return this;
  }

   /**
   * Ponechat vzkaz [persistentní položka]
   * @return keepMessage
  **/
  @ApiModelProperty(example = "null", value = "Ponechat vzkaz [persistentní položka]")
  public Boolean getKeepMessage() {
    return keepMessage;
  }

  public void setKeepMessage(Boolean keepMessage) {
    this.keepMessage = keepMessage;
  }

  public Msgredirection emailAccountID(String emailAccountID) {
    this.emailAccountID = emailAccountID;
    return this;
  }

   /**
   * Vlastní e-mail. účet; ID objektu E-mailový účet [persistentní položka]
   * @return emailAccountID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní e-mail. účet; ID objektu E-mailový účet [persistentní položka]")
  public String getEmailAccountID() {
    return emailAccountID;
  }

  public void setEmailAccountID(String emailAccountID) {
    this.emailAccountID = emailAccountID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Msgredirection msgredirection = (Msgredirection) o;
    return Objects.equals(this.displayName, msgredirection.displayName) &&
        Objects.equals(this.ID, msgredirection.ID) &&
        Objects.equals(this.classID, msgredirection.classID) &&
        Objects.equals(this.objVersion, msgredirection.objVersion) &&
        Objects.equals(this.securityUserID, msgredirection.securityUserID) &&
        Objects.equals(this.emailAddress, msgredirection.emailAddress) &&
        Objects.equals(this.validFromDateDATE, msgredirection.validFromDateDATE) &&
        Objects.equals(this.validToDateDATE, msgredirection.validToDateDATE) &&
        Objects.equals(this.reason, msgredirection.reason) &&
        Objects.equals(this.keepMessage, msgredirection.keepMessage) &&
        Objects.equals(this.emailAccountID, msgredirection.emailAccountID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, securityUserID, emailAddress, validFromDateDATE, validToDateDATE, reason, keepMessage, emailAccountID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Msgredirection {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    securityUserID: ").append(toIndentedString(securityUserID)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    validFromDateDATE: ").append(toIndentedString(validFromDateDATE)).append("\n");
    sb.append("    validToDateDATE: ").append(toIndentedString(validToDateDATE)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    keepMessage: ").append(toIndentedString(keepMessage)).append("\n");
    sb.append("    emailAccountID: ").append(toIndentedString(emailAccountID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

