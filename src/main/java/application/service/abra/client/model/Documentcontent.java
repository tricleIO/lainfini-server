/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Documentcontent
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Documentcontent   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Revided_ID")
  private String revidedID = null;

  @SerializedName("RevisionDescription")
  private String revisionDescription = null;

  @SerializedName("RevisionDate$DATE")
  private DateTime revisionDateDATE = null;

  @SerializedName("RevisionAuthor_ID")
  private String revisionAuthorID = null;

  @SerializedName("Revision")
  private Integer revision = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("CorrectionTime$DATE")
  private DateTime correctionTimeDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CreationTime$DATE")
  private DateTime creationTimeDATE = null;

  @SerializedName("Data_ID")
  private Documentcontent dataID = null;

  @SerializedName("FileName")
  private String fileName = null;

  @SerializedName("Specification")
  private Integer specification = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Compressed")
  private Boolean compressed = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * ID revidovaného objektu; ID objektu Obsah dokumentu
   * @return revidedID
  **/
  @ApiModelProperty(example = "null", value = "ID revidovaného objektu; ID objektu Obsah dokumentu")
  public String getRevidedID() {
    return revidedID;
  }

   /**
   * Popis revize
   * @return revisionDescription
  **/
  @ApiModelProperty(example = "null", value = "Popis revize")
  public String getRevisionDescription() {
    return revisionDescription;
  }

   /**
   * Datum revize
   * @return revisionDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum revize")
  public DateTime getRevisionDateDATE() {
    return revisionDateDATE;
  }

   /**
   * Autor revize; ID objektu Uživatel
   * @return revisionAuthorID
  **/
  @ApiModelProperty(example = "null", value = "Autor revize; ID objektu Uživatel")
  public String getRevisionAuthorID() {
    return revisionAuthorID;
  }

   /**
   * Číslo revize
   * @return revision
  **/
  @ApiModelProperty(example = "null", value = "Číslo revize")
  public Integer getRevision() {
    return revision;
  }

   /**
   * Vlastník; ID objektu Dokument [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Dokument [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Documentcontent posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Documentcontent correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Documentcontent correctionTimeDATE(DateTime correctionTimeDATE) {
    this.correctionTimeDATE = correctionTimeDATE;
    return this;
  }

   /**
   * Opraveno [persistentní položka]
   * @return correctionTimeDATE
  **/
  @ApiModelProperty(example = "null", value = "Opraveno [persistentní položka]")
  public DateTime getCorrectionTimeDATE() {
    return correctionTimeDATE;
  }

  public void setCorrectionTimeDATE(DateTime correctionTimeDATE) {
    this.correctionTimeDATE = correctionTimeDATE;
  }

  public Documentcontent createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Documentcontent creationTimeDATE(DateTime creationTimeDATE) {
    this.creationTimeDATE = creationTimeDATE;
    return this;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return creationTimeDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getCreationTimeDATE() {
    return creationTimeDATE;
  }

  public void setCreationTimeDATE(DateTime creationTimeDATE) {
    this.creationTimeDATE = creationTimeDATE;
  }

  public Documentcontent dataID(Documentcontent dataID) {
    this.dataID = dataID;
    return this;
  }

   /**
   * Get dataID
   * @return dataID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Documentcontent getDataID() {
    return dataID;
  }

  public void setDataID(Documentcontent dataID) {
    this.dataID = dataID;
  }

  public Documentcontent fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Název souboru [persistentní položka]
   * @return fileName
  **/
  @ApiModelProperty(example = "null", value = "Název souboru [persistentní položka]")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public Documentcontent specification(Integer specification) {
    this.specification = specification;
    return this;
  }

   /**
   * Specifikace [persistentní položka]
   * @return specification
  **/
  @ApiModelProperty(example = "null", value = "Specifikace [persistentní položka]")
  public Integer getSpecification() {
    return specification;
  }

  public void setSpecification(Integer specification) {
    this.specification = specification;
  }

  public Documentcontent description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Documentcontent compressed(Boolean compressed) {
    this.compressed = compressed;
    return this;
  }

   /**
   * Komprimován
   * @return compressed
  **/
  @ApiModelProperty(example = "null", value = "Komprimován")
  public Boolean getCompressed() {
    return compressed;
  }

  public void setCompressed(Boolean compressed) {
    this.compressed = compressed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Documentcontent documentcontent = (Documentcontent) o;
    return Objects.equals(this.displayName, documentcontent.displayName) &&
        Objects.equals(this.ID, documentcontent.ID) &&
        Objects.equals(this.classID, documentcontent.classID) &&
        Objects.equals(this.objVersion, documentcontent.objVersion) &&
        Objects.equals(this.revidedID, documentcontent.revidedID) &&
        Objects.equals(this.revisionDescription, documentcontent.revisionDescription) &&
        Objects.equals(this.revisionDateDATE, documentcontent.revisionDateDATE) &&
        Objects.equals(this.revisionAuthorID, documentcontent.revisionAuthorID) &&
        Objects.equals(this.revision, documentcontent.revision) &&
        Objects.equals(this.parentID, documentcontent.parentID) &&
        Objects.equals(this.posIndex, documentcontent.posIndex) &&
        Objects.equals(this.correctedByID, documentcontent.correctedByID) &&
        Objects.equals(this.correctionTimeDATE, documentcontent.correctionTimeDATE) &&
        Objects.equals(this.createdByID, documentcontent.createdByID) &&
        Objects.equals(this.creationTimeDATE, documentcontent.creationTimeDATE) &&
        Objects.equals(this.dataID, documentcontent.dataID) &&
        Objects.equals(this.fileName, documentcontent.fileName) &&
        Objects.equals(this.specification, documentcontent.specification) &&
        Objects.equals(this.description, documentcontent.description) &&
        Objects.equals(this.compressed, documentcontent.compressed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, revidedID, revisionDescription, revisionDateDATE, revisionAuthorID, revision, parentID, posIndex, correctedByID, correctionTimeDATE, createdByID, creationTimeDATE, dataID, fileName, specification, description, compressed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Documentcontent {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    revidedID: ").append(toIndentedString(revidedID)).append("\n");
    sb.append("    revisionDescription: ").append(toIndentedString(revisionDescription)).append("\n");
    sb.append("    revisionDateDATE: ").append(toIndentedString(revisionDateDATE)).append("\n");
    sb.append("    revisionAuthorID: ").append(toIndentedString(revisionAuthorID)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    correctionTimeDATE: ").append(toIndentedString(correctionTimeDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    creationTimeDATE: ").append(toIndentedString(creationTimeDATE)).append("\n");
    sb.append("    dataID: ").append(toIndentedString(dataID)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    specification: ").append(toIndentedString(specification)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    compressed: ").append(toIndentedString(compressed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

