/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Emailsmtpaccount
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Emailsmtpaccount   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("accountname")
  private String accountname = null;

  @SerializedName("server")
  private String server = null;

  @SerializedName("port")
  private Integer port = null;

  @SerializedName("login")
  private String login = null;

  @SerializedName("secpassword")
  private String secpassword = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("connectionsecurity")
  private Integer connectionsecurity = null;

  @SerializedName("checkuserrcptlimit")
  private Integer checkuserrcptlimit = null;

  @SerializedName("pausebetweensessions")
  private Integer pausebetweensessions = null;

  public Emailsmtpaccount displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Emailsmtpaccount id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Emailsmtpaccount classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Emailsmtpaccount objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Emailsmtpaccount hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * skrytý [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "skrytý [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Emailsmtpaccount accountname(String accountname) {
    this.accountname = accountname;
    return this;
  }

   /**
   * název účtu [persistentní položka]
   * @return accountname
  **/
  @ApiModelProperty(example = "null", value = "název účtu [persistentní položka]")
  public String getAccountname() {
    return accountname;
  }

  public void setAccountname(String accountname) {
    this.accountname = accountname;
  }

  public Emailsmtpaccount server(String server) {
    this.server = server;
    return this;
  }

   /**
   * smtp server [persistentní položka]
   * @return server
  **/
  @ApiModelProperty(example = "null", value = "smtp server [persistentní položka]")
  public String getServer() {
    return server;
  }

  public void setServer(String server) {
    this.server = server;
  }

  public Emailsmtpaccount port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * port [persistentní položka]
   * @return port
  **/
  @ApiModelProperty(example = "null", value = "port [persistentní položka]")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public Emailsmtpaccount login(String login) {
    this.login = login;
    return this;
  }

   /**
   * přihlašovací jméno [persistentní položka]
   * @return login
  **/
  @ApiModelProperty(example = "null", value = "přihlašovací jméno [persistentní položka]")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public Emailsmtpaccount secpassword(String secpassword) {
    this.secpassword = secpassword;
    return this;
  }

   /**
   * zakódované heslo [persistentní položka]
   * @return secpassword
  **/
  @ApiModelProperty(example = "null", value = "zakódované heslo [persistentní položka]")
  public String getSecpassword() {
    return secpassword;
  }

  public void setSecpassword(String secpassword) {
    this.secpassword = secpassword;
  }

  public Emailsmtpaccount password(String password) {
    this.password = password;
    return this;
  }

   /**
   * heslo
   * @return password
  **/
  @ApiModelProperty(example = "null", value = "heslo")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public Emailsmtpaccount connectionsecurity(Integer connectionsecurity) {
    this.connectionsecurity = connectionsecurity;
    return this;
  }

   /**
   * zabezpečení [persistentní položka]
   * @return connectionsecurity
  **/
  @ApiModelProperty(example = "null", value = "zabezpečení [persistentní položka]")
  public Integer getConnectionsecurity() {
    return connectionsecurity;
  }

  public void setConnectionsecurity(Integer connectionsecurity) {
    this.connectionsecurity = connectionsecurity;
  }

  public Emailsmtpaccount checkuserrcptlimit(Integer checkuserrcptlimit) {
    this.checkuserrcptlimit = checkuserrcptlimit;
    return this;
  }

   /**
   * max.počet adresátů v relaci [persistentní položka]
   * @return checkuserrcptlimit
  **/
  @ApiModelProperty(example = "null", value = "max.počet adresátů v relaci [persistentní položka]")
  public Integer getCheckuserrcptlimit() {
    return checkuserrcptlimit;
  }

  public void setCheckuserrcptlimit(Integer checkuserrcptlimit) {
    this.checkuserrcptlimit = checkuserrcptlimit;
  }

  public Emailsmtpaccount pausebetweensessions(Integer pausebetweensessions) {
    this.pausebetweensessions = pausebetweensessions;
    return this;
  }

   /**
   * Časová prodleva mezi relacemi [persistentní položka]
   * @return pausebetweensessions
  **/
  @ApiModelProperty(example = "null", value = "Časová prodleva mezi relacemi [persistentní položka]")
  public Integer getPausebetweensessions() {
    return pausebetweensessions;
  }

  public void setPausebetweensessions(Integer pausebetweensessions) {
    this.pausebetweensessions = pausebetweensessions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Emailsmtpaccount emailsmtpaccount = (Emailsmtpaccount) o;
    return Objects.equals(this.displayname, emailsmtpaccount.displayname) &&
        Objects.equals(this.id, emailsmtpaccount.id) &&
        Objects.equals(this.classid, emailsmtpaccount.classid) &&
        Objects.equals(this.objversion, emailsmtpaccount.objversion) &&
        Objects.equals(this.hidden, emailsmtpaccount.hidden) &&
        Objects.equals(this.accountname, emailsmtpaccount.accountname) &&
        Objects.equals(this.server, emailsmtpaccount.server) &&
        Objects.equals(this.port, emailsmtpaccount.port) &&
        Objects.equals(this.login, emailsmtpaccount.login) &&
        Objects.equals(this.secpassword, emailsmtpaccount.secpassword) &&
        Objects.equals(this.password, emailsmtpaccount.password) &&
        Objects.equals(this.connectionsecurity, emailsmtpaccount.connectionsecurity) &&
        Objects.equals(this.checkuserrcptlimit, emailsmtpaccount.checkuserrcptlimit) &&
        Objects.equals(this.pausebetweensessions, emailsmtpaccount.pausebetweensessions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, hidden, accountname, server, port, login, secpassword, password, connectionsecurity, checkuserrcptlimit, pausebetweensessions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Emailsmtpaccount {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    accountname: ").append(toIndentedString(accountname)).append("\n");
    sb.append("    server: ").append(toIndentedString(server)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    secpassword: ").append(toIndentedString(secpassword)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    connectionsecurity: ").append(toIndentedString(connectionsecurity)).append("\n");
    sb.append("    checkuserrcptlimit: ").append(toIndentedString(checkuserrcptlimit)).append("\n");
    sb.append("    pausebetweensessions: ").append(toIndentedString(pausebetweensessions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

