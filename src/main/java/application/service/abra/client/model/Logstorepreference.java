/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Logstorepreference
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Logstorepreference   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Logstorepreferencerow> rows = new ArrayList<Logstorepreferencerow>();

  @SerializedName("name")
  private String name = null;

  @SerializedName("posaddresstype")
  private Integer posaddresstype = null;

  @SerializedName("storeposition_id")
  private String storepositionId = null;

  @SerializedName("storepositionaddress")
  private String storepositionaddress = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("posaddresstypedesc")
  private String posaddresstypedesc = null;

  public Logstorepreference displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Logstorepreference id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Logstorepreference classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Logstorepreference objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Logstorepreference rows(List<Logstorepreferencerow> rows) {
    this.rows = rows;
    return this;
  }

  public Logstorepreference addRowsItem(Logstorepreferencerow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo preference skladových pozic - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo preference skladových pozic - řádek [nepersistentní položka]")
  public List<Logstorepreferencerow> getRows() {
    return rows;
  }

  public void setRows(List<Logstorepreferencerow> rows) {
    this.rows = rows;
  }

  public Logstorepreference name(String name) {
    this.name = name;
    return this;
  }

   /**
   * název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Logstorepreference posaddresstype(Integer posaddresstype) {
    this.posaddresstype = posaddresstype;
    return this;
  }

   /**
   * typ adresy [persistentní položka]
   * @return posaddresstype
  **/
  @ApiModelProperty(example = "null", value = "typ adresy [persistentní položka]")
  public Integer getPosaddresstype() {
    return posaddresstype;
  }

  public void setPosaddresstype(Integer posaddresstype) {
    this.posaddresstype = posaddresstype;
  }

  public Logstorepreference storepositionId(String storepositionId) {
    this.storepositionId = storepositionId;
    return this;
  }

   /**
   * skladová pozice; id objektu skladová pozice [persistentní položka]
   * @return storepositionId
  **/
  @ApiModelProperty(example = "null", value = "skladová pozice; id objektu skladová pozice [persistentní položka]")
  public String getStorepositionId() {
    return storepositionId;
  }

  public void setStorepositionId(String storepositionId) {
    this.storepositionId = storepositionId;
  }

  public Logstorepreference storepositionaddress(String storepositionaddress) {
    this.storepositionaddress = storepositionaddress;
    return this;
  }

   /**
   * adresa skladové pozice [persistentní položka]
   * @return storepositionaddress
  **/
  @ApiModelProperty(example = "null", value = "adresa skladové pozice [persistentní položka]")
  public String getStorepositionaddress() {
    return storepositionaddress;
  }

  public void setStorepositionaddress(String storepositionaddress) {
    this.storepositionaddress = storepositionaddress;
  }

  public Logstorepreference note(String note) {
    this.note = note;
    return this;
  }

   /**
   * poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Logstorepreference posaddresstypedesc(String posaddresstypedesc) {
    this.posaddresstypedesc = posaddresstypedesc;
    return this;
  }

   /**
   * typ adresy - popis
   * @return posaddresstypedesc
  **/
  @ApiModelProperty(example = "null", value = "typ adresy - popis")
  public String getPosaddresstypedesc() {
    return posaddresstypedesc;
  }

  public void setPosaddresstypedesc(String posaddresstypedesc) {
    this.posaddresstypedesc = posaddresstypedesc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Logstorepreference logstorepreference = (Logstorepreference) o;
    return Objects.equals(this.displayname, logstorepreference.displayname) &&
        Objects.equals(this.id, logstorepreference.id) &&
        Objects.equals(this.classid, logstorepreference.classid) &&
        Objects.equals(this.objversion, logstorepreference.objversion) &&
        Objects.equals(this.rows, logstorepreference.rows) &&
        Objects.equals(this.name, logstorepreference.name) &&
        Objects.equals(this.posaddresstype, logstorepreference.posaddresstype) &&
        Objects.equals(this.storepositionId, logstorepreference.storepositionId) &&
        Objects.equals(this.storepositionaddress, logstorepreference.storepositionaddress) &&
        Objects.equals(this.note, logstorepreference.note) &&
        Objects.equals(this.posaddresstypedesc, logstorepreference.posaddresstypedesc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, name, posaddresstype, storepositionId, storepositionaddress, note, posaddresstypedesc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Logstorepreference {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    posaddresstype: ").append(toIndentedString(posaddresstype)).append("\n");
    sb.append("    storepositionId: ").append(toIndentedString(storepositionId)).append("\n");
    sb.append("    storepositionaddress: ").append(toIndentedString(storepositionaddress)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    posaddresstypedesc: ").append(toIndentedString(posaddresstypedesc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

