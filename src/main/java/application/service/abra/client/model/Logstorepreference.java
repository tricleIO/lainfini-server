/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Logstorepreference
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Logstorepreference   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Logstorepreferencerow> rows = new ArrayList<Logstorepreferencerow>();

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PosAddressType")
  private Integer posAddressType = null;

  @SerializedName("StorePosition_ID")
  private String storePositionID = null;

  @SerializedName("StorePositionAddress")
  private String storePositionAddress = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("PosAddressTypeDesc")
  private String posAddressTypeDesc = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Logstorepreference rows(List<Logstorepreferencerow> rows) {
    this.rows = rows;
    return this;
  }

  public Logstorepreference addRowsItem(Logstorepreferencerow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Preference skladových pozic - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Preference skladových pozic - řádek [nepersistentní položka]")
  public List<Logstorepreferencerow> getRows() {
    return rows;
  }

  public void setRows(List<Logstorepreferencerow> rows) {
    this.rows = rows;
  }

  public Logstorepreference name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Logstorepreference posAddressType(Integer posAddressType) {
    this.posAddressType = posAddressType;
    return this;
  }

   /**
   * Typ adresy [persistentní položka]
   * @return posAddressType
  **/
  @ApiModelProperty(example = "null", value = "Typ adresy [persistentní položka]")
  public Integer getPosAddressType() {
    return posAddressType;
  }

  public void setPosAddressType(Integer posAddressType) {
    this.posAddressType = posAddressType;
  }

  public Logstorepreference storePositionID(String storePositionID) {
    this.storePositionID = storePositionID;
    return this;
  }

   /**
   * Skladová pozice; ID objektu Skladová pozice [persistentní položka]
   * @return storePositionID
  **/
  @ApiModelProperty(example = "null", value = "Skladová pozice; ID objektu Skladová pozice [persistentní položka]")
  public String getStorePositionID() {
    return storePositionID;
  }

  public void setStorePositionID(String storePositionID) {
    this.storePositionID = storePositionID;
  }

  public Logstorepreference storePositionAddress(String storePositionAddress) {
    this.storePositionAddress = storePositionAddress;
    return this;
  }

   /**
   * Adresa skladové pozice [persistentní položka]
   * @return storePositionAddress
  **/
  @ApiModelProperty(example = "null", value = "Adresa skladové pozice [persistentní položka]")
  public String getStorePositionAddress() {
    return storePositionAddress;
  }

  public void setStorePositionAddress(String storePositionAddress) {
    this.storePositionAddress = storePositionAddress;
  }

  public Logstorepreference note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

   /**
   * Typ adresy - popis
   * @return posAddressTypeDesc
  **/
  @ApiModelProperty(example = "null", value = "Typ adresy - popis")
  public String getPosAddressTypeDesc() {
    return posAddressTypeDesc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Logstorepreference logstorepreference = (Logstorepreference) o;
    return Objects.equals(this.displayName, logstorepreference.displayName) &&
        Objects.equals(this.ID, logstorepreference.ID) &&
        Objects.equals(this.classID, logstorepreference.classID) &&
        Objects.equals(this.objVersion, logstorepreference.objVersion) &&
        Objects.equals(this.rows, logstorepreference.rows) &&
        Objects.equals(this.name, logstorepreference.name) &&
        Objects.equals(this.posAddressType, logstorepreference.posAddressType) &&
        Objects.equals(this.storePositionID, logstorepreference.storePositionID) &&
        Objects.equals(this.storePositionAddress, logstorepreference.storePositionAddress) &&
        Objects.equals(this.note, logstorepreference.note) &&
        Objects.equals(this.posAddressTypeDesc, logstorepreference.posAddressTypeDesc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, name, posAddressType, storePositionID, storePositionAddress, note, posAddressTypeDesc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Logstorepreference {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    posAddressType: ").append(toIndentedString(posAddressType)).append("\n");
    sb.append("    storePositionID: ").append(toIndentedString(storePositionID)).append("\n");
    sb.append("    storePositionAddress: ").append(toIndentedString(storePositionAddress)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    posAddressTypeDesc: ").append(toIndentedString(posAddressTypeDesc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

