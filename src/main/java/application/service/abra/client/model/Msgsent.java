/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Msgsent
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Msgsent   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("SentDate$DATE")
  private DateTime sentDateDATE = null;

  @SerializedName("SenderUser_ID")
  private String senderUserID = null;

  @SerializedName("MsgSubject")
  private String msgSubject = null;

  @SerializedName("MsgBody")
  private String msgBody = null;

  @SerializedName("ValidToDate$DATE")
  private DateTime validToDateDATE = null;

  @SerializedName("DeleteAfterDeletingByAll")
  private Boolean deleteAfterDeletingByAll = null;

  @SerializedName("ConfirmReading")
  private Boolean confirmReading = null;

  @SerializedName("Attachments")
  private List<Msgsent> attachments = new ArrayList<Msgsent>();

  @SerializedName("Links")
  private List<Msglink> links = new ArrayList<Msglink>();

  @SerializedName("Recipients")
  private List<Msgrecipient> recipients = new ArrayList<Msgrecipient>();

  @SerializedName("RecipientsInOneLine")
  private String recipientsInOneLine = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Msgsent sentDateDATE(DateTime sentDateDATE) {
    this.sentDateDATE = sentDateDATE;
    return this;
  }

   /**
   * Datum odeslání [persistentní položka]
   * @return sentDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum odeslání [persistentní položka]")
  public DateTime getSentDateDATE() {
    return sentDateDATE;
  }

  public void setSentDateDATE(DateTime sentDateDATE) {
    this.sentDateDATE = sentDateDATE;
  }

  public Msgsent senderUserID(String senderUserID) {
    this.senderUserID = senderUserID;
    return this;
  }

   /**
   * Odesílatel; ID objektu Uživatel [persistentní položka]
   * @return senderUserID
  **/
  @ApiModelProperty(example = "null", value = "Odesílatel; ID objektu Uživatel [persistentní položka]")
  public String getSenderUserID() {
    return senderUserID;
  }

  public void setSenderUserID(String senderUserID) {
    this.senderUserID = senderUserID;
  }

  public Msgsent msgSubject(String msgSubject) {
    this.msgSubject = msgSubject;
    return this;
  }

   /**
   * Předmět [persistentní položka]
   * @return msgSubject
  **/
  @ApiModelProperty(example = "null", value = "Předmět [persistentní položka]")
  public String getMsgSubject() {
    return msgSubject;
  }

  public void setMsgSubject(String msgSubject) {
    this.msgSubject = msgSubject;
  }

  public Msgsent msgBody(String msgBody) {
    this.msgBody = msgBody;
    return this;
  }

   /**
   * Obsah [persistentní položka]
   * @return msgBody
  **/
  @ApiModelProperty(example = "null", value = "Obsah [persistentní položka]")
  public String getMsgBody() {
    return msgBody;
  }

  public void setMsgBody(String msgBody) {
    this.msgBody = msgBody;
  }

  public Msgsent validToDateDATE(DateTime validToDateDATE) {
    this.validToDateDATE = validToDateDATE;
    return this;
  }

   /**
   * Datum platnosti [persistentní položka]
   * @return validToDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum platnosti [persistentní položka]")
  public DateTime getValidToDateDATE() {
    return validToDateDATE;
  }

  public void setValidToDateDATE(DateTime validToDateDATE) {
    this.validToDateDATE = validToDateDATE;
  }

  public Msgsent deleteAfterDeletingByAll(Boolean deleteAfterDeletingByAll) {
    this.deleteAfterDeletingByAll = deleteAfterDeletingByAll;
    return this;
  }

   /**
   * Smazat po smazání všemi [persistentní položka]
   * @return deleteAfterDeletingByAll
  **/
  @ApiModelProperty(example = "null", value = "Smazat po smazání všemi [persistentní položka]")
  public Boolean getDeleteAfterDeletingByAll() {
    return deleteAfterDeletingByAll;
  }

  public void setDeleteAfterDeletingByAll(Boolean deleteAfterDeletingByAll) {
    this.deleteAfterDeletingByAll = deleteAfterDeletingByAll;
  }

  public Msgsent confirmReading(Boolean confirmReading) {
    this.confirmReading = confirmReading;
    return this;
  }

   /**
   * Potvrzení přečtení [persistentní položka]
   * @return confirmReading
  **/
  @ApiModelProperty(example = "null", value = "Potvrzení přečtení [persistentní položka]")
  public Boolean getConfirmReading() {
    return confirmReading;
  }

  public void setConfirmReading(Boolean confirmReading) {
    this.confirmReading = confirmReading;
  }

  public Msgsent attachments(List<Msgsent> attachments) {
    this.attachments = attachments;
    return this;
  }

  public Msgsent addAttachmentsItem(Msgsent attachmentsItem) {
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Přílohy; kolekce BO Vzkaz [nepersistentní položka]
   * @return attachments
  **/
  @ApiModelProperty(example = "null", value = "Přílohy; kolekce BO Vzkaz [nepersistentní položka]")
  public List<Msgsent> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<Msgsent> attachments) {
    this.attachments = attachments;
  }

  public Msgsent links(List<Msglink> links) {
    this.links = links;
    return this;
  }

  public Msgsent addLinksItem(Msglink linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * Odkazy; kolekce BO Odkaz [nepersistentní položka]
   * @return links
  **/
  @ApiModelProperty(example = "null", value = "Odkazy; kolekce BO Odkaz [nepersistentní položka]")
  public List<Msglink> getLinks() {
    return links;
  }

  public void setLinks(List<Msglink> links) {
    this.links = links;
  }

  public Msgsent recipients(List<Msgrecipient> recipients) {
    this.recipients = recipients;
    return this;
  }

  public Msgsent addRecipientsItem(Msgrecipient recipientsItem) {
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * Adresáti; kolekce BO Adresát vzkazu [nepersistentní položka]
   * @return recipients
  **/
  @ApiModelProperty(example = "null", value = "Adresáti; kolekce BO Adresát vzkazu [nepersistentní položka]")
  public List<Msgrecipient> getRecipients() {
    return recipients;
  }

  public void setRecipients(List<Msgrecipient> recipients) {
    this.recipients = recipients;
  }

  public Msgsent recipientsInOneLine(String recipientsInOneLine) {
    this.recipientsInOneLine = recipientsInOneLine;
    return this;
  }

   /**
   * Souhrn adresátů
   * @return recipientsInOneLine
  **/
  @ApiModelProperty(example = "null", value = "Souhrn adresátů")
  public String getRecipientsInOneLine() {
    return recipientsInOneLine;
  }

  public void setRecipientsInOneLine(String recipientsInOneLine) {
    this.recipientsInOneLine = recipientsInOneLine;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Msgsent msgsent = (Msgsent) o;
    return Objects.equals(this.displayName, msgsent.displayName) &&
        Objects.equals(this.ID, msgsent.ID) &&
        Objects.equals(this.classID, msgsent.classID) &&
        Objects.equals(this.objVersion, msgsent.objVersion) &&
        Objects.equals(this.sentDateDATE, msgsent.sentDateDATE) &&
        Objects.equals(this.senderUserID, msgsent.senderUserID) &&
        Objects.equals(this.msgSubject, msgsent.msgSubject) &&
        Objects.equals(this.msgBody, msgsent.msgBody) &&
        Objects.equals(this.validToDateDATE, msgsent.validToDateDATE) &&
        Objects.equals(this.deleteAfterDeletingByAll, msgsent.deleteAfterDeletingByAll) &&
        Objects.equals(this.confirmReading, msgsent.confirmReading) &&
        Objects.equals(this.attachments, msgsent.attachments) &&
        Objects.equals(this.links, msgsent.links) &&
        Objects.equals(this.recipients, msgsent.recipients) &&
        Objects.equals(this.recipientsInOneLine, msgsent.recipientsInOneLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, sentDateDATE, senderUserID, msgSubject, msgBody, validToDateDATE, deleteAfterDeletingByAll, confirmReading, attachments, links, recipients, recipientsInOneLine);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Msgsent {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    sentDateDATE: ").append(toIndentedString(sentDateDATE)).append("\n");
    sb.append("    senderUserID: ").append(toIndentedString(senderUserID)).append("\n");
    sb.append("    msgSubject: ").append(toIndentedString(msgSubject)).append("\n");
    sb.append("    msgBody: ").append(toIndentedString(msgBody)).append("\n");
    sb.append("    validToDateDATE: ").append(toIndentedString(validToDateDATE)).append("\n");
    sb.append("    deleteAfterDeletingByAll: ").append(toIndentedString(deleteAfterDeletingByAll)).append("\n");
    sb.append("    confirmReading: ").append(toIndentedString(confirmReading)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    recipientsInOneLine: ").append(toIndentedString(recipientsInOneLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

