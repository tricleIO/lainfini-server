/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Msgsent
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Msgsent   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("sentdate$date")
  private DateTime sentdatedate = null;

  @SerializedName("senderuser_id")
  private String senderuserId = null;

  @SerializedName("msgsubject")
  private String msgsubject = null;

  @SerializedName("msgbody")
  private String msgbody = null;

  @SerializedName("validtodate$date")
  private DateTime validtodatedate = null;

  @SerializedName("deleteafterdeletingbyall")
  private Boolean deleteafterdeletingbyall = null;

  @SerializedName("confirmreading")
  private Boolean confirmreading = null;

  @SerializedName("attachments")
  private List<Msgsent> attachments = new ArrayList<Msgsent>();

  @SerializedName("links")
  private List<Msglink> links = new ArrayList<Msglink>();

  @SerializedName("recipients")
  private List<Msgrecipient> recipients = new ArrayList<Msgrecipient>();

  @SerializedName("recipientsinoneline")
  private String recipientsinoneline = null;

  public Msgsent displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Msgsent id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Msgsent classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Msgsent objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Msgsent sentdatedate(DateTime sentdatedate) {
    this.sentdatedate = sentdatedate;
    return this;
  }

   /**
   * datum odeslání [persistentní položka]
   * @return sentdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum odeslání [persistentní položka]")
  public DateTime getSentdatedate() {
    return sentdatedate;
  }

  public void setSentdatedate(DateTime sentdatedate) {
    this.sentdatedate = sentdatedate;
  }

  public Msgsent senderuserId(String senderuserId) {
    this.senderuserId = senderuserId;
    return this;
  }

   /**
   * odesílatel; id objektu uživatel [persistentní položka]
   * @return senderuserId
  **/
  @ApiModelProperty(example = "null", value = "odesílatel; id objektu uživatel [persistentní položka]")
  public String getSenderuserId() {
    return senderuserId;
  }

  public void setSenderuserId(String senderuserId) {
    this.senderuserId = senderuserId;
  }

  public Msgsent msgsubject(String msgsubject) {
    this.msgsubject = msgsubject;
    return this;
  }

   /**
   * předmět [persistentní položka]
   * @return msgsubject
  **/
  @ApiModelProperty(example = "null", value = "předmět [persistentní položka]")
  public String getMsgsubject() {
    return msgsubject;
  }

  public void setMsgsubject(String msgsubject) {
    this.msgsubject = msgsubject;
  }

  public Msgsent msgbody(String msgbody) {
    this.msgbody = msgbody;
    return this;
  }

   /**
   * obsah [persistentní položka]
   * @return msgbody
  **/
  @ApiModelProperty(example = "null", value = "obsah [persistentní položka]")
  public String getMsgbody() {
    return msgbody;
  }

  public void setMsgbody(String msgbody) {
    this.msgbody = msgbody;
  }

  public Msgsent validtodatedate(DateTime validtodatedate) {
    this.validtodatedate = validtodatedate;
    return this;
  }

   /**
   * datum platnosti [persistentní položka]
   * @return validtodatedate
  **/
  @ApiModelProperty(example = "null", value = "datum platnosti [persistentní položka]")
  public DateTime getValidtodatedate() {
    return validtodatedate;
  }

  public void setValidtodatedate(DateTime validtodatedate) {
    this.validtodatedate = validtodatedate;
  }

  public Msgsent deleteafterdeletingbyall(Boolean deleteafterdeletingbyall) {
    this.deleteafterdeletingbyall = deleteafterdeletingbyall;
    return this;
  }

   /**
   * smazat po smazání všemi [persistentní položka]
   * @return deleteafterdeletingbyall
  **/
  @ApiModelProperty(example = "null", value = "smazat po smazání všemi [persistentní položka]")
  public Boolean getDeleteafterdeletingbyall() {
    return deleteafterdeletingbyall;
  }

  public void setDeleteafterdeletingbyall(Boolean deleteafterdeletingbyall) {
    this.deleteafterdeletingbyall = deleteafterdeletingbyall;
  }

  public Msgsent confirmreading(Boolean confirmreading) {
    this.confirmreading = confirmreading;
    return this;
  }

   /**
   * potvrzení přečtení [persistentní položka]
   * @return confirmreading
  **/
  @ApiModelProperty(example = "null", value = "potvrzení přečtení [persistentní položka]")
  public Boolean getConfirmreading() {
    return confirmreading;
  }

  public void setConfirmreading(Boolean confirmreading) {
    this.confirmreading = confirmreading;
  }

  public Msgsent attachments(List<Msgsent> attachments) {
    this.attachments = attachments;
    return this;
  }

  public Msgsent addAttachmentsItem(Msgsent attachmentsItem) {
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * přílohy; kolekce bo vzkaz [nepersistentní položka]
   * @return attachments
  **/
  @ApiModelProperty(example = "null", value = "přílohy; kolekce bo vzkaz [nepersistentní položka]")
  public List<Msgsent> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<Msgsent> attachments) {
    this.attachments = attachments;
  }

  public Msgsent links(List<Msglink> links) {
    this.links = links;
    return this;
  }

  public Msgsent addLinksItem(Msglink linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * odkazy; kolekce bo odkaz [nepersistentní položka]
   * @return links
  **/
  @ApiModelProperty(example = "null", value = "odkazy; kolekce bo odkaz [nepersistentní položka]")
  public List<Msglink> getLinks() {
    return links;
  }

  public void setLinks(List<Msglink> links) {
    this.links = links;
  }

  public Msgsent recipients(List<Msgrecipient> recipients) {
    this.recipients = recipients;
    return this;
  }

  public Msgsent addRecipientsItem(Msgrecipient recipientsItem) {
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * adresáti; kolekce bo adresát vzkazu [nepersistentní položka]
   * @return recipients
  **/
  @ApiModelProperty(example = "null", value = "adresáti; kolekce bo adresát vzkazu [nepersistentní položka]")
  public List<Msgrecipient> getRecipients() {
    return recipients;
  }

  public void setRecipients(List<Msgrecipient> recipients) {
    this.recipients = recipients;
  }

  public Msgsent recipientsinoneline(String recipientsinoneline) {
    this.recipientsinoneline = recipientsinoneline;
    return this;
  }

   /**
   * souhrn adresátů
   * @return recipientsinoneline
  **/
  @ApiModelProperty(example = "null", value = "souhrn adresátů")
  public String getRecipientsinoneline() {
    return recipientsinoneline;
  }

  public void setRecipientsinoneline(String recipientsinoneline) {
    this.recipientsinoneline = recipientsinoneline;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Msgsent msgsent = (Msgsent) o;
    return Objects.equals(this.displayname, msgsent.displayname) &&
        Objects.equals(this.id, msgsent.id) &&
        Objects.equals(this.classid, msgsent.classid) &&
        Objects.equals(this.objversion, msgsent.objversion) &&
        Objects.equals(this.sentdatedate, msgsent.sentdatedate) &&
        Objects.equals(this.senderuserId, msgsent.senderuserId) &&
        Objects.equals(this.msgsubject, msgsent.msgsubject) &&
        Objects.equals(this.msgbody, msgsent.msgbody) &&
        Objects.equals(this.validtodatedate, msgsent.validtodatedate) &&
        Objects.equals(this.deleteafterdeletingbyall, msgsent.deleteafterdeletingbyall) &&
        Objects.equals(this.confirmreading, msgsent.confirmreading) &&
        Objects.equals(this.attachments, msgsent.attachments) &&
        Objects.equals(this.links, msgsent.links) &&
        Objects.equals(this.recipients, msgsent.recipients) &&
        Objects.equals(this.recipientsinoneline, msgsent.recipientsinoneline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, sentdatedate, senderuserId, msgsubject, msgbody, validtodatedate, deleteafterdeletingbyall, confirmreading, attachments, links, recipients, recipientsinoneline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Msgsent {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    sentdatedate: ").append(toIndentedString(sentdatedate)).append("\n");
    sb.append("    senderuserId: ").append(toIndentedString(senderuserId)).append("\n");
    sb.append("    msgsubject: ").append(toIndentedString(msgsubject)).append("\n");
    sb.append("    msgbody: ").append(toIndentedString(msgbody)).append("\n");
    sb.append("    validtodatedate: ").append(toIndentedString(validtodatedate)).append("\n");
    sb.append("    deleteafterdeletingbyall: ").append(toIndentedString(deleteafterdeletingbyall)).append("\n");
    sb.append("    confirmreading: ").append(toIndentedString(confirmreading)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    recipientsinoneline: ").append(toIndentedString(recipientsinoneline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

