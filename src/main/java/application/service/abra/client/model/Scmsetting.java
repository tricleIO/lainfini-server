/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Scmsetting
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Scmsetting   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("System")
  private Boolean system = null;

  @SerializedName("Hidden")
  private Boolean hidden = null;

  @SerializedName("DisplayFormat")
  private String displayFormat = null;

  @SerializedName("CrisisColor")
  private Integer crisisColor = null;

  @SerializedName("TempCrisisColor")
  private Integer tempCrisisColor = null;

  @SerializedName("CrisisFontColor")
  private Integer crisisFontColor = null;

  @SerializedName("TempCrisisFontColor")
  private Integer tempCrisisFontColor = null;

  @SerializedName("StoreCardsSource_ID")
  private String storeCardsSourceID = null;

  @SerializedName("StoresSource_ID")
  private String storesSourceID = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Scmsetting code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Scmsetting name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Název [persistentní položka]
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Název [persistentní položka]")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Scmsetting system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Systémové [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "Systémové [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Scmsetting hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Skryté [persistentní položka]
   * @return hidden
  **/
  @ApiModelProperty(example = "null", value = "Skryté [persistentní položka]")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Scmsetting displayFormat(String displayFormat) {
    this.displayFormat = displayFormat;
    return this;
  }

   /**
   * Zobrazovací maska [persistentní položka]
   * @return displayFormat
  **/
  @ApiModelProperty(example = "null", value = "Zobrazovací maska [persistentní položka]")
  public String getDisplayFormat() {
    return displayFormat;
  }

  public void setDisplayFormat(String displayFormat) {
    this.displayFormat = displayFormat;
  }

  public Scmsetting crisisColor(Integer crisisColor) {
    this.crisisColor = crisisColor;
    return this;
  }

   /**
   * Barva krize [persistentní položka]
   * @return crisisColor
  **/
  @ApiModelProperty(example = "null", value = "Barva krize [persistentní položka]")
  public Integer getCrisisColor() {
    return crisisColor;
  }

  public void setCrisisColor(Integer crisisColor) {
    this.crisisColor = crisisColor;
  }

  public Scmsetting tempCrisisColor(Integer tempCrisisColor) {
    this.tempCrisisColor = tempCrisisColor;
    return this;
  }

   /**
   * Barva dočasné krize [persistentní položka]
   * @return tempCrisisColor
  **/
  @ApiModelProperty(example = "null", value = "Barva dočasné krize [persistentní položka]")
  public Integer getTempCrisisColor() {
    return tempCrisisColor;
  }

  public void setTempCrisisColor(Integer tempCrisisColor) {
    this.tempCrisisColor = tempCrisisColor;
  }

  public Scmsetting crisisFontColor(Integer crisisFontColor) {
    this.crisisFontColor = crisisFontColor;
    return this;
  }

   /**
   * Barva písma krize [persistentní položka]
   * @return crisisFontColor
  **/
  @ApiModelProperty(example = "null", value = "Barva písma krize [persistentní položka]")
  public Integer getCrisisFontColor() {
    return crisisFontColor;
  }

  public void setCrisisFontColor(Integer crisisFontColor) {
    this.crisisFontColor = crisisFontColor;
  }

  public Scmsetting tempCrisisFontColor(Integer tempCrisisFontColor) {
    this.tempCrisisFontColor = tempCrisisFontColor;
    return this;
  }

   /**
   * Barva písma dočasné krize [persistentní položka]
   * @return tempCrisisFontColor
  **/
  @ApiModelProperty(example = "null", value = "Barva písma dočasné krize [persistentní položka]")
  public Integer getTempCrisisFontColor() {
    return tempCrisisFontColor;
  }

  public void setTempCrisisFontColor(Integer tempCrisisFontColor) {
    this.tempCrisisFontColor = tempCrisisFontColor;
  }

  public Scmsetting storeCardsSourceID(String storeCardsSourceID) {
    this.storeCardsSourceID = storeCardsSourceID;
    return this;
  }

   /**
   * Zdroj skl. karet; ID objektu Datový zdroj [persistentní položka]
   * @return storeCardsSourceID
  **/
  @ApiModelProperty(example = "null", value = "Zdroj skl. karet; ID objektu Datový zdroj [persistentní položka]")
  public String getStoreCardsSourceID() {
    return storeCardsSourceID;
  }

  public void setStoreCardsSourceID(String storeCardsSourceID) {
    this.storeCardsSourceID = storeCardsSourceID;
  }

  public Scmsetting storesSourceID(String storesSourceID) {
    this.storesSourceID = storesSourceID;
    return this;
  }

   /**
   * Zdroj skladů; ID objektu Datový zdroj [persistentní položka]
   * @return storesSourceID
  **/
  @ApiModelProperty(example = "null", value = "Zdroj skladů; ID objektu Datový zdroj [persistentní položka]")
  public String getStoresSourceID() {
    return storesSourceID;
  }

  public void setStoresSourceID(String storesSourceID) {
    this.storesSourceID = storesSourceID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scmsetting scmsetting = (Scmsetting) o;
    return Objects.equals(this.displayName, scmsetting.displayName) &&
        Objects.equals(this.ID, scmsetting.ID) &&
        Objects.equals(this.classID, scmsetting.classID) &&
        Objects.equals(this.objVersion, scmsetting.objVersion) &&
        Objects.equals(this.code, scmsetting.code) &&
        Objects.equals(this.name, scmsetting.name) &&
        Objects.equals(this.system, scmsetting.system) &&
        Objects.equals(this.hidden, scmsetting.hidden) &&
        Objects.equals(this.displayFormat, scmsetting.displayFormat) &&
        Objects.equals(this.crisisColor, scmsetting.crisisColor) &&
        Objects.equals(this.tempCrisisColor, scmsetting.tempCrisisColor) &&
        Objects.equals(this.crisisFontColor, scmsetting.crisisFontColor) &&
        Objects.equals(this.tempCrisisFontColor, scmsetting.tempCrisisFontColor) &&
        Objects.equals(this.storeCardsSourceID, scmsetting.storeCardsSourceID) &&
        Objects.equals(this.storesSourceID, scmsetting.storesSourceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, code, name, system, hidden, displayFormat, crisisColor, tempCrisisColor, crisisFontColor, tempCrisisFontColor, storeCardsSourceID, storesSourceID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scmsetting {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    displayFormat: ").append(toIndentedString(displayFormat)).append("\n");
    sb.append("    crisisColor: ").append(toIndentedString(crisisColor)).append("\n");
    sb.append("    tempCrisisColor: ").append(toIndentedString(tempCrisisColor)).append("\n");
    sb.append("    crisisFontColor: ").append(toIndentedString(crisisFontColor)).append("\n");
    sb.append("    tempCrisisFontColor: ").append(toIndentedString(tempCrisisFontColor)).append("\n");
    sb.append("    storeCardsSourceID: ").append(toIndentedString(storeCardsSourceID)).append("\n");
    sb.append("    storesSourceID: ").append(toIndentedString(storesSourceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

