/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Logstorepositiondemand
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Logstorepositiondemand   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("parent_id")
  private String parentId = null;

  @SerializedName("storecard_id")
  private String storecardId = null;

  @SerializedName("qunit")
  private String qunit = null;

  @SerializedName("unitrate")
  private Double unitrate = null;

  @SerializedName("quantity")
  private Double quantity = null;

  @SerializedName("basicspace")
  private Double basicspace = null;

  @SerializedName("basicweight")
  private Double basicweight = null;

  @SerializedName("maxquantity")
  private Integer maxquantity = null;

  @SerializedName("unitquantity")
  private Double unitquantity = null;

  public Logstorepositiondemand displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Logstorepositiondemand id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Logstorepositiondemand classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Logstorepositiondemand objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Logstorepositiondemand parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * vlastník; id objektu skladová pozice [persistentní položka]
   * @return parentId
  **/
  @ApiModelProperty(example = "null", value = "vlastník; id objektu skladová pozice [persistentní položka]")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public Logstorepositiondemand storecardId(String storecardId) {
    this.storecardId = storecardId;
    return this;
  }

   /**
   * skladová karta; id objektu skladová karta [persistentní položka]
   * @return storecardId
  **/
  @ApiModelProperty(example = "null", value = "skladová karta; id objektu skladová karta [persistentní položka]")
  public String getStorecardId() {
    return storecardId;
  }

  public void setStorecardId(String storecardId) {
    this.storecardId = storecardId;
  }

  public Logstorepositiondemand qunit(String qunit) {
    this.qunit = qunit;
    return this;
  }

   /**
   * jednotka [persistentní položka]
   * @return qunit
  **/
  @ApiModelProperty(example = "null", value = "jednotka [persistentní položka]")
  public String getQunit() {
    return qunit;
  }

  public void setQunit(String qunit) {
    this.qunit = qunit;
  }

  public Logstorepositiondemand unitrate(Double unitrate) {
    this.unitrate = unitrate;
    return this;
  }

   /**
   * převodní vztah jedn. [persistentní položka]
   * @return unitrate
  **/
  @ApiModelProperty(example = "null", value = "převodní vztah jedn. [persistentní položka]")
  public Double getUnitrate() {
    return unitrate;
  }

  public void setUnitrate(Double unitrate) {
    this.unitrate = unitrate;
  }

  public Logstorepositiondemand quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * množství [persistentní položka]
   * @return quantity
  **/
  @ApiModelProperty(example = "null", value = "množství [persistentní položka]")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public Logstorepositiondemand basicspace(Double basicspace) {
    this.basicspace = basicspace;
    return this;
  }

   /**
   * objem přednost. naskl.
   * @return basicspace
  **/
  @ApiModelProperty(example = "null", value = "objem přednost. naskl.")
  public Double getBasicspace() {
    return basicspace;
  }

  public void setBasicspace(Double basicspace) {
    this.basicspace = basicspace;
  }

  public Logstorepositiondemand basicweight(Double basicweight) {
    this.basicweight = basicweight;
    return this;
  }

   /**
   * hmotnost přednost. naskl.
   * @return basicweight
  **/
  @ApiModelProperty(example = "null", value = "hmotnost přednost. naskl.")
  public Double getBasicweight() {
    return basicweight;
  }

  public void setBasicweight(Double basicweight) {
    this.basicweight = basicweight;
  }

  public Logstorepositiondemand maxquantity(Integer maxquantity) {
    this.maxquantity = maxquantity;
    return this;
  }

   /**
   * možné maximum
   * @return maxquantity
  **/
  @ApiModelProperty(example = "null", value = "možné maximum")
  public Integer getMaxquantity() {
    return maxquantity;
  }

  public void setMaxquantity(Integer maxquantity) {
    this.maxquantity = maxquantity;
  }

  public Logstorepositiondemand unitquantity(Double unitquantity) {
    this.unitquantity = unitquantity;
    return this;
  }

   /**
   * množství v ev. jedn.
   * @return unitquantity
  **/
  @ApiModelProperty(example = "null", value = "množství v ev. jedn.")
  public Double getUnitquantity() {
    return unitquantity;
  }

  public void setUnitquantity(Double unitquantity) {
    this.unitquantity = unitquantity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Logstorepositiondemand logstorepositiondemand = (Logstorepositiondemand) o;
    return Objects.equals(this.displayname, logstorepositiondemand.displayname) &&
        Objects.equals(this.id, logstorepositiondemand.id) &&
        Objects.equals(this.classid, logstorepositiondemand.classid) &&
        Objects.equals(this.objversion, logstorepositiondemand.objversion) &&
        Objects.equals(this.parentId, logstorepositiondemand.parentId) &&
        Objects.equals(this.storecardId, logstorepositiondemand.storecardId) &&
        Objects.equals(this.qunit, logstorepositiondemand.qunit) &&
        Objects.equals(this.unitrate, logstorepositiondemand.unitrate) &&
        Objects.equals(this.quantity, logstorepositiondemand.quantity) &&
        Objects.equals(this.basicspace, logstorepositiondemand.basicspace) &&
        Objects.equals(this.basicweight, logstorepositiondemand.basicweight) &&
        Objects.equals(this.maxquantity, logstorepositiondemand.maxquantity) &&
        Objects.equals(this.unitquantity, logstorepositiondemand.unitquantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, parentId, storecardId, qunit, unitrate, quantity, basicspace, basicweight, maxquantity, unitquantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Logstorepositiondemand {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    storecardId: ").append(toIndentedString(storecardId)).append("\n");
    sb.append("    qunit: ").append(toIndentedString(qunit)).append("\n");
    sb.append("    unitrate: ").append(toIndentedString(unitrate)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    basicspace: ").append(toIndentedString(basicspace)).append("\n");
    sb.append("    basicweight: ").append(toIndentedString(basicweight)).append("\n");
    sb.append("    maxquantity: ").append(toIndentedString(maxquantity)).append("\n");
    sb.append("    unitquantity: ").append(toIndentedString(unitquantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

