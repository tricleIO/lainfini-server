/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Picture
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Picture   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("BlobData")
  private byte[] blobData = null;

  @SerializedName("PictureTitle")
  private String pictureTitle = null;

  @SerializedName("ExternalFile")
  private Boolean externalFile = null;

  @SerializedName("PathAndFileName")
  private String pathAndFileName = null;

  @SerializedName("RefCount")
  private Integer refCount = null;

  @SerializedName("IsProtected")
  private Boolean isProtected = null;

  @SerializedName("Class_ID")
  private String class_ID = null;

  @SerializedName("Class_Name")
  private String className = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Picture blobData(byte[] blobData) {
    this.blobData = blobData;
    return this;
  }

   /**
   * Data [persistentní položka]
   * @return blobData
  **/
  @ApiModelProperty(example = "null", value = "Data [persistentní položka]")
  public byte[] getBlobData() {
    return blobData;
  }

  public void setBlobData(byte[] blobData) {
    this.blobData = blobData;
  }

  public Picture pictureTitle(String pictureTitle) {
    this.pictureTitle = pictureTitle;
    return this;
  }

   /**
   * Popis [persistentní položka]
   * @return pictureTitle
  **/
  @ApiModelProperty(example = "null", value = "Popis [persistentní položka]")
  public String getPictureTitle() {
    return pictureTitle;
  }

  public void setPictureTitle(String pictureTitle) {
    this.pictureTitle = pictureTitle;
  }

  public Picture externalFile(Boolean externalFile) {
    this.externalFile = externalFile;
    return this;
  }

   /**
   * Externí [persistentní položka]
   * @return externalFile
  **/
  @ApiModelProperty(example = "null", value = "Externí [persistentní položka]")
  public Boolean getExternalFile() {
    return externalFile;
  }

  public void setExternalFile(Boolean externalFile) {
    this.externalFile = externalFile;
  }

  public Picture pathAndFileName(String pathAndFileName) {
    this.pathAndFileName = pathAndFileName;
    return this;
  }

   /**
   * Cesta a soubor [persistentní položka]
   * @return pathAndFileName
  **/
  @ApiModelProperty(example = "null", value = "Cesta a soubor [persistentní položka]")
  public String getPathAndFileName() {
    return pathAndFileName;
  }

  public void setPathAndFileName(String pathAndFileName) {
    this.pathAndFileName = pathAndFileName;
  }

  public Picture refCount(Integer refCount) {
    this.refCount = refCount;
    return this;
  }

   /**
   * Počet referencí [persistentní položka]
   * @return refCount
  **/
  @ApiModelProperty(example = "null", value = "Počet referencí [persistentní položka]")
  public Integer getRefCount() {
    return refCount;
  }

  public void setRefCount(Integer refCount) {
    this.refCount = refCount;
  }

  public Picture isProtected(Boolean isProtected) {
    this.isProtected = isProtected;
    return this;
  }

   /**
   * Chráněn [persistentní položka]
   * @return isProtected
  **/
  @ApiModelProperty(example = "null", value = "Chráněn [persistentní položka]")
  public Boolean getIsProtected() {
    return isProtected;
  }

  public void setIsProtected(Boolean isProtected) {
    this.isProtected = isProtected;
  }

  public Picture classID(String classID) {
    this.classID = classID;
    return this;
  }

   /**
   * Třída vlastníka - GUID [persistentní položka]
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "Třída vlastníka - GUID [persistentní položka]")
  public String getClass_ID() {
    return classID;
  }

  public void setClassID(String classID) {
    this.classID = classID;
  }

  public void setClass_ID(String classID) {
    this.class_ID = classID;
  }

  public Picture className(String className) {
    this.className = className;
    return this;
  }

   /**
   * Třída vlastníka - název
   * @return className
  **/
  @ApiModelProperty(example = "null", value = "Třída vlastníka - název")
  public String getClassName() {
    return className;
  }

  public void setClassName(String className) {
    this.className = className;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Picture picture = (Picture) o;
    return Objects.equals(this.displayName, picture.displayName) &&
        Objects.equals(this.ID, picture.ID) &&
        Objects.equals(this.classID, picture.classID) &&
        Objects.equals(this.objVersion, picture.objVersion) &&
        Objects.equals(this.blobData, picture.blobData) &&
        Objects.equals(this.pictureTitle, picture.pictureTitle) &&
        Objects.equals(this.externalFile, picture.externalFile) &&
        Objects.equals(this.pathAndFileName, picture.pathAndFileName) &&
        Objects.equals(this.refCount, picture.refCount) &&
        Objects.equals(this.isProtected, picture.isProtected) &&
        Objects.equals(this.classID, picture.classID) &&
        Objects.equals(this.className, picture.className);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, blobData, pictureTitle, externalFile, pathAndFileName, refCount, isProtected, classID, className);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Picture {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    blobData: ").append(toIndentedString(blobData)).append("\n");
    sb.append("    pictureTitle: ").append(toIndentedString(pictureTitle)).append("\n");
    sb.append("    externalFile: ").append(toIndentedString(externalFile)).append("\n");
    sb.append("    pathAndFileName: ").append(toIndentedString(pathAndFileName)).append("\n");
    sb.append("    refCount: ").append(toIndentedString(refCount)).append("\n");
    sb.append("    isProtected: ").append(toIndentedString(isProtected)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

