/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Logstoreinput
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Logstoreinput   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("rows")
  private List<Logstoreinputrow> rows = new ArrayList<Logstoreinputrow>();

  @SerializedName("docqueue_id")
  private String docqueueId = null;

  @SerializedName("period_id")
  private String periodId = null;

  @SerializedName("ordnumber")
  private Integer ordnumber = null;

  @SerializedName("docdate$date")
  private DateTime docdatedate = null;

  @SerializedName("createdby_id")
  private String createdbyId = null;

  @SerializedName("correctedby_id")
  private String correctedbyId = null;

  @SerializedName("newrelatedtype")
  private Integer newrelatedtype = null;

  @SerializedName("newrelateddocument_id")
  private String newrelateddocumentId = null;

  @SerializedName("documenttype")
  private String documenttype = null;

  @SerializedName("storedocumenttype")
  private String storedocumenttype = null;

  @SerializedName("storedocument_id")
  private String storedocumentId = null;

  @SerializedName("storegateway_id")
  private String storegatewayId = null;

  @SerializedName("executed")
  private Boolean executed = null;

  @SerializedName("nostoredocument")
  private Boolean nostoredocument = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("externalnumber")
  private String externalnumber = null;

  @SerializedName("firm_id")
  private String firmId = null;

  @SerializedName("storeman_id")
  private String storemanId = null;

  @SerializedName("reservedfordoctype")
  private String reservedfordoctype = null;

  @SerializedName("reservedfordoc_id")
  private String reservedfordocId = null;

  @SerializedName("masterdocclsid")
  private String masterdocclsid = null;

  @SerializedName("masterdocument_id")
  private String masterdocumentId = null;

  public Logstoreinput displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * Číslo dok.
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Logstoreinput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Logstoreinput classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Logstoreinput objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Logstoreinput rows(List<Logstoreinputrow> rows) {
    this.rows = rows;
    return this;
  }

  public Logstoreinput addRowsItem(Logstoreinputrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce bo naskladnění do pozic - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce bo naskladnění do pozic - řádek [nepersistentní položka]")
  public List<Logstoreinputrow> getRows() {
    return rows;
  }

  public void setRows(List<Logstoreinputrow> rows) {
    this.rows = rows;
  }

  public Logstoreinput docqueueId(String docqueueId) {
    this.docqueueId = docqueueId;
    return this;
  }

   /**
   * zdrojová řada; id objektu Řada dokladů [persistentní položka]
   * @return docqueueId
  **/
  @ApiModelProperty(example = "null", value = "zdrojová řada; id objektu Řada dokladů [persistentní položka]")
  public String getDocqueueId() {
    return docqueueId;
  }

  public void setDocqueueId(String docqueueId) {
    this.docqueueId = docqueueId;
  }

  public Logstoreinput periodId(String periodId) {
    this.periodId = periodId;
    return this;
  }

   /**
   * období; id objektu období [persistentní položka]
   * @return periodId
  **/
  @ApiModelProperty(example = "null", value = "období; id objektu období [persistentní položka]")
  public String getPeriodId() {
    return periodId;
  }

  public void setPeriodId(String periodId) {
    this.periodId = periodId;
  }

  public Logstoreinput ordnumber(Integer ordnumber) {
    this.ordnumber = ordnumber;
    return this;
  }

   /**
   * pořadové číslo [persistentní položka]
   * @return ordnumber
  **/
  @ApiModelProperty(example = "null", value = "pořadové číslo [persistentní položka]")
  public Integer getOrdnumber() {
    return ordnumber;
  }

  public void setOrdnumber(Integer ordnumber) {
    this.ordnumber = ordnumber;
  }

  public Logstoreinput docdatedate(DateTime docdatedate) {
    this.docdatedate = docdatedate;
    return this;
  }

   /**
   * datum dok. [persistentní položka]
   * @return docdatedate
  **/
  @ApiModelProperty(example = "null", value = "datum dok. [persistentní položka]")
  public DateTime getDocdatedate() {
    return docdatedate;
  }

  public void setDocdatedate(DateTime docdatedate) {
    this.docdatedate = docdatedate;
  }

  public Logstoreinput createdbyId(String createdbyId) {
    this.createdbyId = createdbyId;
    return this;
  }

   /**
   * vytvořil; id objektu uživatel [persistentní položka]
   * @return createdbyId
  **/
  @ApiModelProperty(example = "null", value = "vytvořil; id objektu uživatel [persistentní položka]")
  public String getCreatedbyId() {
    return createdbyId;
  }

  public void setCreatedbyId(String createdbyId) {
    this.createdbyId = createdbyId;
  }

  public Logstoreinput correctedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
    return this;
  }

   /**
   * opravil; id objektu uživatel [persistentní položka]
   * @return correctedbyId
  **/
  @ApiModelProperty(example = "null", value = "opravil; id objektu uživatel [persistentní položka]")
  public String getCorrectedbyId() {
    return correctedbyId;
  }

  public void setCorrectedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
  }

  public Logstoreinput newrelatedtype(Integer newrelatedtype) {
    this.newrelatedtype = newrelatedtype;
    return this;
  }

   /**
   * typ relace
   * @return newrelatedtype
  **/
  @ApiModelProperty(example = "null", value = "typ relace")
  public Integer getNewrelatedtype() {
    return newrelatedtype;
  }

  public void setNewrelatedtype(Integer newrelatedtype) {
    this.newrelatedtype = newrelatedtype;
  }

  public Logstoreinput newrelateddocumentId(String newrelateddocumentId) {
    this.newrelateddocumentId = newrelateddocumentId;
    return this;
  }

   /**
   * id dokladu pro připojení
   * @return newrelateddocumentId
  **/
  @ApiModelProperty(example = "null", value = "id dokladu pro připojení")
  public String getNewrelateddocumentId() {
    return newrelateddocumentId;
  }

  public void setNewrelateddocumentId(String newrelateddocumentId) {
    this.newrelateddocumentId = newrelateddocumentId;
  }

  public Logstoreinput documenttype(String documenttype) {
    this.documenttype = documenttype;
    return this;
  }

   /**
   * typ dokladu [persistentní položka]
   * @return documenttype
  **/
  @ApiModelProperty(example = "null", value = "typ dokladu [persistentní položka]")
  public String getDocumenttype() {
    return documenttype;
  }

  public void setDocumenttype(String documenttype) {
    this.documenttype = documenttype;
  }

  public Logstoreinput storedocumenttype(String storedocumenttype) {
    this.storedocumenttype = storedocumenttype;
    return this;
  }

   /**
   * typ skl.dokladu [persistentní položka]
   * @return storedocumenttype
  **/
  @ApiModelProperty(example = "null", value = "typ skl.dokladu [persistentní položka]")
  public String getStoredocumenttype() {
    return storedocumenttype;
  }

  public void setStoredocumenttype(String storedocumenttype) {
    this.storedocumenttype = storedocumenttype;
  }

  public Logstoreinput storedocumentId(String storedocumentId) {
    this.storedocumentId = storedocumentId;
    return this;
  }

   /**
   * skl.doklad; id objektu dokument [persistentní položka]
   * @return storedocumentId
  **/
  @ApiModelProperty(example = "null", value = "skl.doklad; id objektu dokument [persistentní položka]")
  public String getStoredocumentId() {
    return storedocumentId;
  }

  public void setStoredocumentId(String storedocumentId) {
    this.storedocumentId = storedocumentId;
  }

  public Logstoreinput storegatewayId(String storegatewayId) {
    this.storegatewayId = storegatewayId;
    return this;
  }

   /**
   * místo naskladnění/vyskladnění; id objektu nasklad. a vysklad. místo [persistentní položka]
   * @return storegatewayId
  **/
  @ApiModelProperty(example = "null", value = "místo naskladnění/vyskladnění; id objektu nasklad. a vysklad. místo [persistentní položka]")
  public String getStoregatewayId() {
    return storegatewayId;
  }

  public void setStoregatewayId(String storegatewayId) {
    this.storegatewayId = storegatewayId;
  }

  public Logstoreinput executed(Boolean executed) {
    this.executed = executed;
    return this;
  }

   /**
   * provedeno [persistentní položka]
   * @return executed
  **/
  @ApiModelProperty(example = "null", value = "provedeno [persistentní položka]")
  public Boolean getExecuted() {
    return executed;
  }

  public void setExecuted(Boolean executed) {
    this.executed = executed;
  }

  public Logstoreinput nostoredocument(Boolean nostoredocument) {
    this.nostoredocument = nostoredocument;
    return this;
  }

   /**
   * jen polohovací [persistentní položka]
   * @return nostoredocument
  **/
  @ApiModelProperty(example = "null", value = "jen polohovací [persistentní položka]")
  public Boolean getNostoredocument() {
    return nostoredocument;
  }

  public void setNostoredocument(Boolean nostoredocument) {
    this.nostoredocument = nostoredocument;
  }

  public Logstoreinput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * poznámka [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "poznámka [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Logstoreinput externalnumber(String externalnumber) {
    this.externalnumber = externalnumber;
    return this;
  }

   /**
   * externí číslo [persistentní položka]
   * @return externalnumber
  **/
  @ApiModelProperty(example = "null", value = "externí číslo [persistentní položka]")
  public String getExternalnumber() {
    return externalnumber;
  }

  public void setExternalnumber(String externalnumber) {
    this.externalnumber = externalnumber;
  }

  public Logstoreinput firmId(String firmId) {
    this.firmId = firmId;
    return this;
  }

   /**
   * firma; id objektu firma [persistentní položka]
   * @return firmId
  **/
  @ApiModelProperty(example = "null", value = "firma; id objektu firma [persistentní položka]")
  public String getFirmId() {
    return firmId;
  }

  public void setFirmId(String firmId) {
    this.firmId = firmId;
  }

  public Logstoreinput storemanId(String storemanId) {
    this.storemanId = storemanId;
    return this;
  }

   /**
   * skladník; id objektu osoba [persistentní položka]
   * @return storemanId
  **/
  @ApiModelProperty(example = "null", value = "skladník; id objektu osoba [persistentní položka]")
  public String getStoremanId() {
    return storemanId;
  }

  public void setStoremanId(String storemanId) {
    this.storemanId = storemanId;
  }

  public Logstoreinput reservedfordoctype(String reservedfordoctype) {
    this.reservedfordoctype = reservedfordoctype;
    return this;
  }

   /**
   * typ svázaného dokladu [persistentní položka]
   * @return reservedfordoctype
  **/
  @ApiModelProperty(example = "null", value = "typ svázaného dokladu [persistentní položka]")
  public String getReservedfordoctype() {
    return reservedfordoctype;
  }

  public void setReservedfordoctype(String reservedfordoctype) {
    this.reservedfordoctype = reservedfordoctype;
  }

  public Logstoreinput reservedfordocId(String reservedfordocId) {
    this.reservedfordocId = reservedfordocId;
    return this;
  }

   /**
   * vazba na vychystávaný doklad; id objektu dokument [persistentní položka]
   * @return reservedfordocId
  **/
  @ApiModelProperty(example = "null", value = "vazba na vychystávaný doklad; id objektu dokument [persistentní položka]")
  public String getReservedfordocId() {
    return reservedfordocId;
  }

  public void setReservedfordocId(String reservedfordocId) {
    this.reservedfordocId = reservedfordocId;
  }

  public Logstoreinput masterdocclsid(String masterdocclsid) {
    this.masterdocclsid = masterdocclsid;
    return this;
  }

   /**
   * třída nadřízeného dokladu [persistentní položka]
   * @return masterdocclsid
  **/
  @ApiModelProperty(example = "null", value = "třída nadřízeného dokladu [persistentní položka]")
  public String getMasterdocclsid() {
    return masterdocclsid;
  }

  public void setMasterdocclsid(String masterdocclsid) {
    this.masterdocclsid = masterdocclsid;
  }

  public Logstoreinput masterdocumentId(String masterdocumentId) {
    this.masterdocumentId = masterdocumentId;
    return this;
  }

   /**
   * nadřízený doklad; id objektu dokument [persistentní položka]
   * @return masterdocumentId
  **/
  @ApiModelProperty(example = "null", value = "nadřízený doklad; id objektu dokument [persistentní položka]")
  public String getMasterdocumentId() {
    return masterdocumentId;
  }

  public void setMasterdocumentId(String masterdocumentId) {
    this.masterdocumentId = masterdocumentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Logstoreinput logstoreinput = (Logstoreinput) o;
    return Objects.equals(this.displayname, logstoreinput.displayname) &&
        Objects.equals(this.id, logstoreinput.id) &&
        Objects.equals(this.classid, logstoreinput.classid) &&
        Objects.equals(this.objversion, logstoreinput.objversion) &&
        Objects.equals(this.rows, logstoreinput.rows) &&
        Objects.equals(this.docqueueId, logstoreinput.docqueueId) &&
        Objects.equals(this.periodId, logstoreinput.periodId) &&
        Objects.equals(this.ordnumber, logstoreinput.ordnumber) &&
        Objects.equals(this.docdatedate, logstoreinput.docdatedate) &&
        Objects.equals(this.createdbyId, logstoreinput.createdbyId) &&
        Objects.equals(this.correctedbyId, logstoreinput.correctedbyId) &&
        Objects.equals(this.newrelatedtype, logstoreinput.newrelatedtype) &&
        Objects.equals(this.newrelateddocumentId, logstoreinput.newrelateddocumentId) &&
        Objects.equals(this.documenttype, logstoreinput.documenttype) &&
        Objects.equals(this.storedocumenttype, logstoreinput.storedocumenttype) &&
        Objects.equals(this.storedocumentId, logstoreinput.storedocumentId) &&
        Objects.equals(this.storegatewayId, logstoreinput.storegatewayId) &&
        Objects.equals(this.executed, logstoreinput.executed) &&
        Objects.equals(this.nostoredocument, logstoreinput.nostoredocument) &&
        Objects.equals(this.description, logstoreinput.description) &&
        Objects.equals(this.externalnumber, logstoreinput.externalnumber) &&
        Objects.equals(this.firmId, logstoreinput.firmId) &&
        Objects.equals(this.storemanId, logstoreinput.storemanId) &&
        Objects.equals(this.reservedfordoctype, logstoreinput.reservedfordoctype) &&
        Objects.equals(this.reservedfordocId, logstoreinput.reservedfordocId) &&
        Objects.equals(this.masterdocclsid, logstoreinput.masterdocclsid) &&
        Objects.equals(this.masterdocumentId, logstoreinput.masterdocumentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, rows, docqueueId, periodId, ordnumber, docdatedate, createdbyId, correctedbyId, newrelatedtype, newrelateddocumentId, documenttype, storedocumenttype, storedocumentId, storegatewayId, executed, nostoredocument, description, externalnumber, firmId, storemanId, reservedfordoctype, reservedfordocId, masterdocclsid, masterdocumentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Logstoreinput {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docqueueId: ").append(toIndentedString(docqueueId)).append("\n");
    sb.append("    periodId: ").append(toIndentedString(periodId)).append("\n");
    sb.append("    ordnumber: ").append(toIndentedString(ordnumber)).append("\n");
    sb.append("    docdatedate: ").append(toIndentedString(docdatedate)).append("\n");
    sb.append("    createdbyId: ").append(toIndentedString(createdbyId)).append("\n");
    sb.append("    correctedbyId: ").append(toIndentedString(correctedbyId)).append("\n");
    sb.append("    newrelatedtype: ").append(toIndentedString(newrelatedtype)).append("\n");
    sb.append("    newrelateddocumentId: ").append(toIndentedString(newrelateddocumentId)).append("\n");
    sb.append("    documenttype: ").append(toIndentedString(documenttype)).append("\n");
    sb.append("    storedocumenttype: ").append(toIndentedString(storedocumenttype)).append("\n");
    sb.append("    storedocumentId: ").append(toIndentedString(storedocumentId)).append("\n");
    sb.append("    storegatewayId: ").append(toIndentedString(storegatewayId)).append("\n");
    sb.append("    executed: ").append(toIndentedString(executed)).append("\n");
    sb.append("    nostoredocument: ").append(toIndentedString(nostoredocument)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    externalnumber: ").append(toIndentedString(externalnumber)).append("\n");
    sb.append("    firmId: ").append(toIndentedString(firmId)).append("\n");
    sb.append("    storemanId: ").append(toIndentedString(storemanId)).append("\n");
    sb.append("    reservedfordoctype: ").append(toIndentedString(reservedfordoctype)).append("\n");
    sb.append("    reservedfordocId: ").append(toIndentedString(reservedfordocId)).append("\n");
    sb.append("    masterdocclsid: ").append(toIndentedString(masterdocclsid)).append("\n");
    sb.append("    masterdocumentId: ").append(toIndentedString(masterdocumentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

