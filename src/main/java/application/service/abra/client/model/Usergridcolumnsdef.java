/**
 * abra gen web api (spojení testapi)
 * webové api systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Usergridcolumnsdef
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-29T11:52:08.096+02:00")
public class Usergridcolumnsdef   {
  @SerializedName("displayname")
  private String displayname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("classid")
  private String classid = null;

  @SerializedName("objversion")
  private Integer objversion = null;

  @SerializedName("siteid")
  private String siteid = null;

  @SerializedName("gridid")
  private String gridid = null;

  @SerializedName("createdby_id")
  private String createdbyId = null;

  @SerializedName("correctedby_id")
  private String correctedbyId = null;

  @SerializedName("system")
  private Boolean system = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("defaultsize")
  private Integer defaultsize = null;

  @SerializedName("columntype")
  private Integer columntype = null;

  @SerializedName("fieldname")
  private String fieldname = null;

  @SerializedName("expression")
  private String expression = null;

  @SerializedName("displaytype")
  private Integer displaytype = null;

  @SerializedName("displaylinkedfield")
  private String displaylinkedfield = null;

  @SerializedName("conditionalformat")
  private Boolean conditionalformat = null;

  @SerializedName("condition")
  private String condition = null;

  @SerializedName("iscondforecolor")
  private Boolean iscondforecolor = null;

  @SerializedName("condforecolor")
  private Integer condforecolor = null;

  @SerializedName("iscondbackcolor")
  private Boolean iscondbackcolor = null;

  @SerializedName("condbackcolor")
  private Integer condbackcolor = null;

  @SerializedName("condbold")
  private Boolean condbold = null;

  @SerializedName("conditalic")
  private Boolean conditalic = null;

  @SerializedName("alignment")
  private Integer alignment = null;

  @SerializedName("isforecolor")
  private Boolean isforecolor = null;

  @SerializedName("forecolor")
  private Integer forecolor = null;

  @SerializedName("isbackcolor")
  private Boolean isbackcolor = null;

  @SerializedName("backcolor")
  private Integer backcolor = null;

  @SerializedName("bold")
  private Boolean bold = null;

  @SerializedName("italic")
  private Boolean italic = null;

  @SerializedName("displaymask")
  private String displaymask = null;

  @SerializedName("displaypercent")
  private Boolean displaypercent = null;

  @SerializedName("isover100color")
  private Boolean isover100color = null;

  @SerializedName("over100color")
  private Integer over100color = null;

  @SerializedName("columnid")
  private String columnid = null;

  @SerializedName("protectviaviewpurchaseprices")
  private Boolean protectviaviewpurchaseprices = null;

  @SerializedName("businessobjectclsid")
  private String businessobjectclsid = null;

  @SerializedName("businessobjectclsidtext")
  private String businessobjectclsidtext = null;

  public Usergridcolumnsdef displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * název
   * @return displayname
  **/
  @ApiModelProperty(example = "null", value = "název")
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }

  public Usergridcolumnsdef id(String id) {
    this.id = id;
    return this;
  }

   /**
   * vlastní id [persistentní položka]
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "vlastní id [persistentní položka]")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Usergridcolumnsdef classid(String classid) {
    this.classid = classid;
    return this;
  }

   /**
   * id třídy
   * @return classid
  **/
  @ApiModelProperty(example = "null", value = "id třídy")
  public String getClassid() {
    return classid;
  }

  public void setClassid(String classid) {
    this.classid = classid;
  }

  public Usergridcolumnsdef objversion(Integer objversion) {
    this.objversion = objversion;
    return this;
  }

   /**
   * verze objektu [persistentní položka]
   * @return objversion
  **/
  @ApiModelProperty(example = "null", value = "verze objektu [persistentní položka]")
  public Integer getObjversion() {
    return objversion;
  }

  public void setObjversion(Integer objversion) {
    this.objversion = objversion;
  }

  public Usergridcolumnsdef siteid(String siteid) {
    this.siteid = siteid;
    return this;
  }

   /**
   * siteid [persistentní položka]
   * @return siteid
  **/
  @ApiModelProperty(example = "null", value = "siteid [persistentní položka]")
  public String getSiteid() {
    return siteid;
  }

  public void setSiteid(String siteid) {
    this.siteid = siteid;
  }

  public Usergridcolumnsdef gridid(String gridid) {
    this.gridid = gridid;
    return this;
  }

   /**
   * gridid [persistentní položka]
   * @return gridid
  **/
  @ApiModelProperty(example = "null", value = "gridid [persistentní položka]")
  public String getGridid() {
    return gridid;
  }

  public void setGridid(String gridid) {
    this.gridid = gridid;
  }

  public Usergridcolumnsdef createdbyId(String createdbyId) {
    this.createdbyId = createdbyId;
    return this;
  }

   /**
   * vytvořil; id objektu uživatel [persistentní položka]
   * @return createdbyId
  **/
  @ApiModelProperty(example = "null", value = "vytvořil; id objektu uživatel [persistentní položka]")
  public String getCreatedbyId() {
    return createdbyId;
  }

  public void setCreatedbyId(String createdbyId) {
    this.createdbyId = createdbyId;
  }

  public Usergridcolumnsdef correctedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
    return this;
  }

   /**
   * opravil; id objektu uživatel [persistentní položka]
   * @return correctedbyId
  **/
  @ApiModelProperty(example = "null", value = "opravil; id objektu uživatel [persistentní položka]")
  public String getCorrectedbyId() {
    return correctedbyId;
  }

  public void setCorrectedbyId(String correctedbyId) {
    this.correctedbyId = correctedbyId;
  }

  public Usergridcolumnsdef system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * systémový sloupec [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "systémový sloupec [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Usergridcolumnsdef title(String title) {
    this.title = title;
    return this;
  }

   /**
   * nadpis sloupce [persistentní položka]
   * @return title
  **/
  @ApiModelProperty(example = "null", value = "nadpis sloupce [persistentní položka]")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Usergridcolumnsdef defaultsize(Integer defaultsize) {
    this.defaultsize = defaultsize;
    return this;
  }

   /**
   * výchozí šířka sloupce: [persistentní položka]
   * @return defaultsize
  **/
  @ApiModelProperty(example = "null", value = "výchozí šířka sloupce: [persistentní položka]")
  public Integer getDefaultsize() {
    return defaultsize;
  }

  public void setDefaultsize(Integer defaultsize) {
    this.defaultsize = defaultsize;
  }

  public Usergridcolumnsdef columntype(Integer columntype) {
    this.columntype = columntype;
    return this;
  }

   /**
   * typ [persistentní položka]
   * @return columntype
  **/
  @ApiModelProperty(example = "null", value = "typ [persistentní položka]")
  public Integer getColumntype() {
    return columntype;
  }

  public void setColumntype(Integer columntype) {
    this.columntype = columntype;
  }

  public Usergridcolumnsdef fieldname(String fieldname) {
    this.fieldname = fieldname;
    return this;
  }

   /**
   * jméno položky [persistentní položka]
   * @return fieldname
  **/
  @ApiModelProperty(example = "null", value = "jméno položky [persistentní položka]")
  public String getFieldname() {
    return fieldname;
  }

  public void setFieldname(String fieldname) {
    this.fieldname = fieldname;
  }

  public Usergridcolumnsdef expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * výraz [persistentní položka]
   * @return expression
  **/
  @ApiModelProperty(example = "null", value = "výraz [persistentní položka]")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public Usergridcolumnsdef displaytype(Integer displaytype) {
    this.displaytype = displaytype;
    return this;
  }

   /**
   * způsob zobrazení [persistentní položka]
   * @return displaytype
  **/
  @ApiModelProperty(example = "null", value = "způsob zobrazení [persistentní položka]")
  public Integer getDisplaytype() {
    return displaytype;
  }

  public void setDisplaytype(Integer displaytype) {
    this.displaytype = displaytype;
  }

  public Usergridcolumnsdef displaylinkedfield(String displaylinkedfield) {
    this.displaylinkedfield = displaylinkedfield;
    return this;
  }

   /**
   * položka číselníku k zobrazení [persistentní položka]
   * @return displaylinkedfield
  **/
  @ApiModelProperty(example = "null", value = "položka číselníku k zobrazení [persistentní položka]")
  public String getDisplaylinkedfield() {
    return displaylinkedfield;
  }

  public void setDisplaylinkedfield(String displaylinkedfield) {
    this.displaylinkedfield = displaylinkedfield;
  }

  public Usergridcolumnsdef conditionalformat(Boolean conditionalformat) {
    this.conditionalformat = conditionalformat;
    return this;
  }

   /**
   * podmíněné formátování [persistentní položka]
   * @return conditionalformat
  **/
  @ApiModelProperty(example = "null", value = "podmíněné formátování [persistentní položka]")
  public Boolean getConditionalformat() {
    return conditionalformat;
  }

  public void setConditionalformat(Boolean conditionalformat) {
    this.conditionalformat = conditionalformat;
  }

  public Usergridcolumnsdef condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * podmínka [persistentní položka]
   * @return condition
  **/
  @ApiModelProperty(example = "null", value = "podmínka [persistentní položka]")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public Usergridcolumnsdef iscondforecolor(Boolean iscondforecolor) {
    this.iscondforecolor = iscondforecolor;
    return this;
  }

   /**
   * podmíněná barva písma zapnuta [persistentní položka]
   * @return iscondforecolor
  **/
  @ApiModelProperty(example = "null", value = "podmíněná barva písma zapnuta [persistentní položka]")
  public Boolean getIscondforecolor() {
    return iscondforecolor;
  }

  public void setIscondforecolor(Boolean iscondforecolor) {
    this.iscondforecolor = iscondforecolor;
  }

  public Usergridcolumnsdef condforecolor(Integer condforecolor) {
    this.condforecolor = condforecolor;
    return this;
  }

   /**
   * podmíněná barva písma [persistentní položka]
   * @return condforecolor
  **/
  @ApiModelProperty(example = "null", value = "podmíněná barva písma [persistentní položka]")
  public Integer getCondforecolor() {
    return condforecolor;
  }

  public void setCondforecolor(Integer condforecolor) {
    this.condforecolor = condforecolor;
  }

  public Usergridcolumnsdef iscondbackcolor(Boolean iscondbackcolor) {
    this.iscondbackcolor = iscondbackcolor;
    return this;
  }

   /**
   * podmíněná barva podkladu zapnuta [persistentní položka]
   * @return iscondbackcolor
  **/
  @ApiModelProperty(example = "null", value = "podmíněná barva podkladu zapnuta [persistentní položka]")
  public Boolean getIscondbackcolor() {
    return iscondbackcolor;
  }

  public void setIscondbackcolor(Boolean iscondbackcolor) {
    this.iscondbackcolor = iscondbackcolor;
  }

  public Usergridcolumnsdef condbackcolor(Integer condbackcolor) {
    this.condbackcolor = condbackcolor;
    return this;
  }

   /**
   * podmíněná barva podkladu [persistentní položka]
   * @return condbackcolor
  **/
  @ApiModelProperty(example = "null", value = "podmíněná barva podkladu [persistentní položka]")
  public Integer getCondbackcolor() {
    return condbackcolor;
  }

  public void setCondbackcolor(Integer condbackcolor) {
    this.condbackcolor = condbackcolor;
  }

  public Usergridcolumnsdef condbold(Boolean condbold) {
    this.condbold = condbold;
    return this;
  }

   /**
   * podmíněné tučné písmo [persistentní položka]
   * @return condbold
  **/
  @ApiModelProperty(example = "null", value = "podmíněné tučné písmo [persistentní položka]")
  public Boolean getCondbold() {
    return condbold;
  }

  public void setCondbold(Boolean condbold) {
    this.condbold = condbold;
  }

  public Usergridcolumnsdef conditalic(Boolean conditalic) {
    this.conditalic = conditalic;
    return this;
  }

   /**
   * podmíněné kurzíva písmo [persistentní položka]
   * @return conditalic
  **/
  @ApiModelProperty(example = "null", value = "podmíněné kurzíva písmo [persistentní položka]")
  public Boolean getConditalic() {
    return conditalic;
  }

  public void setConditalic(Boolean conditalic) {
    this.conditalic = conditalic;
  }

  public Usergridcolumnsdef alignment(Integer alignment) {
    this.alignment = alignment;
    return this;
  }

   /**
   * zarovnání [persistentní položka]
   * @return alignment
  **/
  @ApiModelProperty(example = "null", value = "zarovnání [persistentní položka]")
  public Integer getAlignment() {
    return alignment;
  }

  public void setAlignment(Integer alignment) {
    this.alignment = alignment;
  }

  public Usergridcolumnsdef isforecolor(Boolean isforecolor) {
    this.isforecolor = isforecolor;
    return this;
  }

   /**
   * barva písma zapnuta [persistentní položka]
   * @return isforecolor
  **/
  @ApiModelProperty(example = "null", value = "barva písma zapnuta [persistentní položka]")
  public Boolean getIsforecolor() {
    return isforecolor;
  }

  public void setIsforecolor(Boolean isforecolor) {
    this.isforecolor = isforecolor;
  }

  public Usergridcolumnsdef forecolor(Integer forecolor) {
    this.forecolor = forecolor;
    return this;
  }

   /**
   * barva písma [persistentní položka]
   * @return forecolor
  **/
  @ApiModelProperty(example = "null", value = "barva písma [persistentní položka]")
  public Integer getForecolor() {
    return forecolor;
  }

  public void setForecolor(Integer forecolor) {
    this.forecolor = forecolor;
  }

  public Usergridcolumnsdef isbackcolor(Boolean isbackcolor) {
    this.isbackcolor = isbackcolor;
    return this;
  }

   /**
   * barva podkladu zapnuta [persistentní položka]
   * @return isbackcolor
  **/
  @ApiModelProperty(example = "null", value = "barva podkladu zapnuta [persistentní položka]")
  public Boolean getIsbackcolor() {
    return isbackcolor;
  }

  public void setIsbackcolor(Boolean isbackcolor) {
    this.isbackcolor = isbackcolor;
  }

  public Usergridcolumnsdef backcolor(Integer backcolor) {
    this.backcolor = backcolor;
    return this;
  }

   /**
   * barva podkladu [persistentní položka]
   * @return backcolor
  **/
  @ApiModelProperty(example = "null", value = "barva podkladu [persistentní položka]")
  public Integer getBackcolor() {
    return backcolor;
  }

  public void setBackcolor(Integer backcolor) {
    this.backcolor = backcolor;
  }

  public Usergridcolumnsdef bold(Boolean bold) {
    this.bold = bold;
    return this;
  }

   /**
   * tučné písmo [persistentní položka]
   * @return bold
  **/
  @ApiModelProperty(example = "null", value = "tučné písmo [persistentní položka]")
  public Boolean getBold() {
    return bold;
  }

  public void setBold(Boolean bold) {
    this.bold = bold;
  }

  public Usergridcolumnsdef italic(Boolean italic) {
    this.italic = italic;
    return this;
  }

   /**
   * kurzíva písmo [persistentní položka]
   * @return italic
  **/
  @ApiModelProperty(example = "null", value = "kurzíva písmo [persistentní položka]")
  public Boolean getItalic() {
    return italic;
  }

  public void setItalic(Boolean italic) {
    this.italic = italic;
  }

  public Usergridcolumnsdef displaymask(String displaymask) {
    this.displaymask = displaymask;
    return this;
  }

   /**
   * maska [persistentní položka]
   * @return displaymask
  **/
  @ApiModelProperty(example = "null", value = "maska [persistentní položka]")
  public String getDisplaymask() {
    return displaymask;
  }

  public void setDisplaymask(String displaymask) {
    this.displaymask = displaymask;
  }

  public Usergridcolumnsdef displaypercent(Boolean displaypercent) {
    this.displaypercent = displaypercent;
    return this;
  }

   /**
   * zobrazit číselně procento [persistentní položka]
   * @return displaypercent
  **/
  @ApiModelProperty(example = "null", value = "zobrazit číselně procento [persistentní položka]")
  public Boolean getDisplaypercent() {
    return displaypercent;
  }

  public void setDisplaypercent(Boolean displaypercent) {
    this.displaypercent = displaypercent;
  }

  public Usergridcolumnsdef isover100color(Boolean isover100color) {
    this.isover100color = isover100color;
    return this;
  }

   /**
   * barva sloupce nad 100% - zapnout [persistentní položka]
   * @return isover100color
  **/
  @ApiModelProperty(example = "null", value = "barva sloupce nad 100% - zapnout [persistentní položka]")
  public Boolean getIsover100color() {
    return isover100color;
  }

  public void setIsover100color(Boolean isover100color) {
    this.isover100color = isover100color;
  }

  public Usergridcolumnsdef over100color(Integer over100color) {
    this.over100color = over100color;
    return this;
  }

   /**
   * barva sloupce nad 100% [persistentní položka]
   * @return over100color
  **/
  @ApiModelProperty(example = "null", value = "barva sloupce nad 100% [persistentní položka]")
  public Integer getOver100color() {
    return over100color;
  }

  public void setOver100color(Integer over100color) {
    this.over100color = over100color;
  }

  public Usergridcolumnsdef columnid(String columnid) {
    this.columnid = columnid;
    return this;
  }

   /**
   * columnid [persistentní položka]
   * @return columnid
  **/
  @ApiModelProperty(example = "null", value = "columnid [persistentní položka]")
  public String getColumnid() {
    return columnid;
  }

  public void setColumnid(String columnid) {
    this.columnid = columnid;
  }

  public Usergridcolumnsdef protectviaviewpurchaseprices(Boolean protectviaviewpurchaseprices) {
    this.protectviaviewpurchaseprices = protectviaviewpurchaseprices;
    return this;
  }

   /**
   * chránit právem vidět nákupní ceny [persistentní položka]
   * @return protectviaviewpurchaseprices
  **/
  @ApiModelProperty(example = "null", value = "chránit právem vidět nákupní ceny [persistentní položka]")
  public Boolean getProtectviaviewpurchaseprices() {
    return protectviaviewpurchaseprices;
  }

  public void setProtectviaviewpurchaseprices(Boolean protectviaviewpurchaseprices) {
    this.protectviaviewpurchaseprices = protectviaviewpurchaseprices;
  }

  public Usergridcolumnsdef businessobjectclsid(String businessobjectclsid) {
    this.businessobjectclsid = businessobjectclsid;
    return this;
  }

   /**
   * třída objektu použitého ve výrazu [persistentní položka]
   * @return businessobjectclsid
  **/
  @ApiModelProperty(example = "null", value = "třída objektu použitého ve výrazu [persistentní položka]")
  public String getBusinessobjectclsid() {
    return businessobjectclsid;
  }

  public void setBusinessobjectclsid(String businessobjectclsid) {
    this.businessobjectclsid = businessobjectclsid;
  }

  public Usergridcolumnsdef businessobjectclsidtext(String businessobjectclsidtext) {
    this.businessobjectclsidtext = businessobjectclsidtext;
    return this;
  }

   /**
   * třída objektu textově
   * @return businessobjectclsidtext
  **/
  @ApiModelProperty(example = "null", value = "třída objektu textově")
  public String getBusinessobjectclsidtext() {
    return businessobjectclsidtext;
  }

  public void setBusinessobjectclsidtext(String businessobjectclsidtext) {
    this.businessobjectclsidtext = businessobjectclsidtext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Usergridcolumnsdef usergridcolumnsdef = (Usergridcolumnsdef) o;
    return Objects.equals(this.displayname, usergridcolumnsdef.displayname) &&
        Objects.equals(this.id, usergridcolumnsdef.id) &&
        Objects.equals(this.classid, usergridcolumnsdef.classid) &&
        Objects.equals(this.objversion, usergridcolumnsdef.objversion) &&
        Objects.equals(this.siteid, usergridcolumnsdef.siteid) &&
        Objects.equals(this.gridid, usergridcolumnsdef.gridid) &&
        Objects.equals(this.createdbyId, usergridcolumnsdef.createdbyId) &&
        Objects.equals(this.correctedbyId, usergridcolumnsdef.correctedbyId) &&
        Objects.equals(this.system, usergridcolumnsdef.system) &&
        Objects.equals(this.title, usergridcolumnsdef.title) &&
        Objects.equals(this.defaultsize, usergridcolumnsdef.defaultsize) &&
        Objects.equals(this.columntype, usergridcolumnsdef.columntype) &&
        Objects.equals(this.fieldname, usergridcolumnsdef.fieldname) &&
        Objects.equals(this.expression, usergridcolumnsdef.expression) &&
        Objects.equals(this.displaytype, usergridcolumnsdef.displaytype) &&
        Objects.equals(this.displaylinkedfield, usergridcolumnsdef.displaylinkedfield) &&
        Objects.equals(this.conditionalformat, usergridcolumnsdef.conditionalformat) &&
        Objects.equals(this.condition, usergridcolumnsdef.condition) &&
        Objects.equals(this.iscondforecolor, usergridcolumnsdef.iscondforecolor) &&
        Objects.equals(this.condforecolor, usergridcolumnsdef.condforecolor) &&
        Objects.equals(this.iscondbackcolor, usergridcolumnsdef.iscondbackcolor) &&
        Objects.equals(this.condbackcolor, usergridcolumnsdef.condbackcolor) &&
        Objects.equals(this.condbold, usergridcolumnsdef.condbold) &&
        Objects.equals(this.conditalic, usergridcolumnsdef.conditalic) &&
        Objects.equals(this.alignment, usergridcolumnsdef.alignment) &&
        Objects.equals(this.isforecolor, usergridcolumnsdef.isforecolor) &&
        Objects.equals(this.forecolor, usergridcolumnsdef.forecolor) &&
        Objects.equals(this.isbackcolor, usergridcolumnsdef.isbackcolor) &&
        Objects.equals(this.backcolor, usergridcolumnsdef.backcolor) &&
        Objects.equals(this.bold, usergridcolumnsdef.bold) &&
        Objects.equals(this.italic, usergridcolumnsdef.italic) &&
        Objects.equals(this.displaymask, usergridcolumnsdef.displaymask) &&
        Objects.equals(this.displaypercent, usergridcolumnsdef.displaypercent) &&
        Objects.equals(this.isover100color, usergridcolumnsdef.isover100color) &&
        Objects.equals(this.over100color, usergridcolumnsdef.over100color) &&
        Objects.equals(this.columnid, usergridcolumnsdef.columnid) &&
        Objects.equals(this.protectviaviewpurchaseprices, usergridcolumnsdef.protectviaviewpurchaseprices) &&
        Objects.equals(this.businessobjectclsid, usergridcolumnsdef.businessobjectclsid) &&
        Objects.equals(this.businessobjectclsidtext, usergridcolumnsdef.businessobjectclsidtext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayname, id, classid, objversion, siteid, gridid, createdbyId, correctedbyId, system, title, defaultsize, columntype, fieldname, expression, displaytype, displaylinkedfield, conditionalformat, condition, iscondforecolor, condforecolor, iscondbackcolor, condbackcolor, condbold, conditalic, alignment, isforecolor, forecolor, isbackcolor, backcolor, bold, italic, displaymask, displaypercent, isover100color, over100color, columnid, protectviaviewpurchaseprices, businessobjectclsid, businessobjectclsidtext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Usergridcolumnsdef {\n");
    
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classid: ").append(toIndentedString(classid)).append("\n");
    sb.append("    objversion: ").append(toIndentedString(objversion)).append("\n");
    sb.append("    siteid: ").append(toIndentedString(siteid)).append("\n");
    sb.append("    gridid: ").append(toIndentedString(gridid)).append("\n");
    sb.append("    createdbyId: ").append(toIndentedString(createdbyId)).append("\n");
    sb.append("    correctedbyId: ").append(toIndentedString(correctedbyId)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    defaultsize: ").append(toIndentedString(defaultsize)).append("\n");
    sb.append("    columntype: ").append(toIndentedString(columntype)).append("\n");
    sb.append("    fieldname: ").append(toIndentedString(fieldname)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    displaytype: ").append(toIndentedString(displaytype)).append("\n");
    sb.append("    displaylinkedfield: ").append(toIndentedString(displaylinkedfield)).append("\n");
    sb.append("    conditionalformat: ").append(toIndentedString(conditionalformat)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    iscondforecolor: ").append(toIndentedString(iscondforecolor)).append("\n");
    sb.append("    condforecolor: ").append(toIndentedString(condforecolor)).append("\n");
    sb.append("    iscondbackcolor: ").append(toIndentedString(iscondbackcolor)).append("\n");
    sb.append("    condbackcolor: ").append(toIndentedString(condbackcolor)).append("\n");
    sb.append("    condbold: ").append(toIndentedString(condbold)).append("\n");
    sb.append("    conditalic: ").append(toIndentedString(conditalic)).append("\n");
    sb.append("    alignment: ").append(toIndentedString(alignment)).append("\n");
    sb.append("    isforecolor: ").append(toIndentedString(isforecolor)).append("\n");
    sb.append("    forecolor: ").append(toIndentedString(forecolor)).append("\n");
    sb.append("    isbackcolor: ").append(toIndentedString(isbackcolor)).append("\n");
    sb.append("    backcolor: ").append(toIndentedString(backcolor)).append("\n");
    sb.append("    bold: ").append(toIndentedString(bold)).append("\n");
    sb.append("    italic: ").append(toIndentedString(italic)).append("\n");
    sb.append("    displaymask: ").append(toIndentedString(displaymask)).append("\n");
    sb.append("    displaypercent: ").append(toIndentedString(displaypercent)).append("\n");
    sb.append("    isover100color: ").append(toIndentedString(isover100color)).append("\n");
    sb.append("    over100color: ").append(toIndentedString(over100color)).append("\n");
    sb.append("    columnid: ").append(toIndentedString(columnid)).append("\n");
    sb.append("    protectviaviewpurchaseprices: ").append(toIndentedString(protectviaviewpurchaseprices)).append("\n");
    sb.append("    businessobjectclsid: ").append(toIndentedString(businessobjectclsid)).append("\n");
    sb.append("    businessobjectclsidtext: ").append(toIndentedString(businessobjectclsidtext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

