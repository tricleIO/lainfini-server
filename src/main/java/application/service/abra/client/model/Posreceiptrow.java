/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Posreceiptrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Posreceiptrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("PaymentType_ID")
  private String paymentTypeID = null;

  @SerializedName("InitiativeAmount")
  private Double initiativeAmount = null;

  @SerializedName("AmountTenancy")
  private Double amountTenancy = null;

  @SerializedName("IssuedInvoice")
  private Double issuedInvoice = null;

  @SerializedName("IssuedDInvoice")
  private Double issuedDInvoice = null;

  @SerializedName("AmountDeposit")
  private Double amountDeposit = null;

  @SerializedName("AmountCollection")
  private Double amountCollection = null;

  @SerializedName("IssuedAdvance")
  private Double issuedAdvance = null;

  @SerializedName("FinalAmount")
  private Double finalAmount = null;

  @SerializedName("RealAmount")
  private Double realAmount = null;

  @SerializedName("AmountDifference")
  private Double amountDifference = null;

  @SerializedName("AmountLeft")
  private Double amountLeft = null;

  @SerializedName("Cheques")
  private List<Posreceiptcheque> cheques = new ArrayList<Posreceiptcheque>();

  @SerializedName("Days")
  private List<Posreceiptday> days = new ArrayList<Posreceiptday>();

  @SerializedName("AmountGived")
  private Double amountGived = null;

  @SerializedName("ActualAmount")
  private Double actualAmount = null;

  @SerializedName("RemainAmount")
  private Double remainAmount = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Tržba [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Tržba [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Posreceiptrow currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Posreceiptrow paymentTypeID(String paymentTypeID) {
    this.paymentTypeID = paymentTypeID;
    return this;
  }

   /**
   * Typ úhrady; ID objektu Způsob úhrady [persistentní položka]
   * @return paymentTypeID
  **/
  @ApiModelProperty(example = "null", value = "Typ úhrady; ID objektu Způsob úhrady [persistentní položka]")
  public String getPaymentTypeID() {
    return paymentTypeID;
  }

  public void setPaymentTypeID(String paymentTypeID) {
    this.paymentTypeID = paymentTypeID;
  }

  public Posreceiptrow initiativeAmount(Double initiativeAmount) {
    this.initiativeAmount = initiativeAmount;
    return this;
  }

   /**
   * Počátek [persistentní položka]
   * @return initiativeAmount
  **/
  @ApiModelProperty(example = "null", value = "Počátek [persistentní položka]")
  public Double getInitiativeAmount() {
    return initiativeAmount;
  }

  public void setInitiativeAmount(Double initiativeAmount) {
    this.initiativeAmount = initiativeAmount;
  }

  public Posreceiptrow amountTenancy(Double amountTenancy) {
    this.amountTenancy = amountTenancy;
    return this;
  }

   /**
   * Tržba [persistentní položka]
   * @return amountTenancy
  **/
  @ApiModelProperty(example = "null", value = "Tržba [persistentní položka]")
  public Double getAmountTenancy() {
    return amountTenancy;
  }

  public void setAmountTenancy(Double amountTenancy) {
    this.amountTenancy = amountTenancy;
  }

  public Posreceiptrow issuedInvoice(Double issuedInvoice) {
    this.issuedInvoice = issuedInvoice;
    return this;
  }

   /**
   * Faktury [persistentní položka]
   * @return issuedInvoice
  **/
  @ApiModelProperty(example = "null", value = "Faktury [persistentní položka]")
  public Double getIssuedInvoice() {
    return issuedInvoice;
  }

  public void setIssuedInvoice(Double issuedInvoice) {
    this.issuedInvoice = issuedInvoice;
  }

  public Posreceiptrow issuedDInvoice(Double issuedDInvoice) {
    this.issuedDInvoice = issuedDInvoice;
    return this;
  }

   /**
   * Zálohy [persistentní položka]
   * @return issuedDInvoice
  **/
  @ApiModelProperty(example = "null", value = "Zálohy [persistentní položka]")
  public Double getIssuedDInvoice() {
    return issuedDInvoice;
  }

  public void setIssuedDInvoice(Double issuedDInvoice) {
    this.issuedDInvoice = issuedDInvoice;
  }

  public Posreceiptrow amountDeposit(Double amountDeposit) {
    this.amountDeposit = amountDeposit;
    return this;
  }

   /**
   * Vloženo [persistentní položka]
   * @return amountDeposit
  **/
  @ApiModelProperty(example = "null", value = "Vloženo [persistentní položka]")
  public Double getAmountDeposit() {
    return amountDeposit;
  }

  public void setAmountDeposit(Double amountDeposit) {
    this.amountDeposit = amountDeposit;
  }

  public Posreceiptrow amountCollection(Double amountCollection) {
    this.amountCollection = amountCollection;
    return this;
  }

   /**
   * Vybráno [persistentní položka]
   * @return amountCollection
  **/
  @ApiModelProperty(example = "null", value = "Vybráno [persistentní položka]")
  public Double getAmountCollection() {
    return amountCollection;
  }

  public void setAmountCollection(Double amountCollection) {
    this.amountCollection = amountCollection;
  }

  public Posreceiptrow issuedAdvance(Double issuedAdvance) {
    this.issuedAdvance = issuedAdvance;
    return this;
  }

   /**
   * Vydané zálohy [persistentní položka]
   * @return issuedAdvance
  **/
  @ApiModelProperty(example = "null", value = "Vydané zálohy [persistentní položka]")
  public Double getIssuedAdvance() {
    return issuedAdvance;
  }

  public void setIssuedAdvance(Double issuedAdvance) {
    this.issuedAdvance = issuedAdvance;
  }

  public Posreceiptrow finalAmount(Double finalAmount) {
    this.finalAmount = finalAmount;
    return this;
  }

   /**
   * Stav při uzávěrce [persistentní položka]
   * @return finalAmount
  **/
  @ApiModelProperty(example = "null", value = "Stav při uzávěrce [persistentní položka]")
  public Double getFinalAmount() {
    return finalAmount;
  }

  public void setFinalAmount(Double finalAmount) {
    this.finalAmount = finalAmount;
  }

  public Posreceiptrow realAmount(Double realAmount) {
    this.realAmount = realAmount;
    return this;
  }

   /**
   * Zjištěno [persistentní položka]
   * @return realAmount
  **/
  @ApiModelProperty(example = "null", value = "Zjištěno [persistentní položka]")
  public Double getRealAmount() {
    return realAmount;
  }

  public void setRealAmount(Double realAmount) {
    this.realAmount = realAmount;
  }

  public Posreceiptrow amountDifference(Double amountDifference) {
    this.amountDifference = amountDifference;
    return this;
  }

   /**
   * Rozdíl [persistentní položka]
   * @return amountDifference
  **/
  @ApiModelProperty(example = "null", value = "Rozdíl [persistentní položka]")
  public Double getAmountDifference() {
    return amountDifference;
  }

  public void setAmountDifference(Double amountDifference) {
    this.amountDifference = amountDifference;
  }

  public Posreceiptrow amountLeft(Double amountLeft) {
    this.amountLeft = amountLeft;
    return this;
  }

   /**
   * Ponecháno [persistentní položka]
   * @return amountLeft
  **/
  @ApiModelProperty(example = "null", value = "Ponecháno [persistentní položka]")
  public Double getAmountLeft() {
    return amountLeft;
  }

  public void setAmountLeft(Double amountLeft) {
    this.amountLeft = amountLeft;
  }

  public Posreceiptrow cheques(List<Posreceiptcheque> cheques) {
    this.cheques = cheques;
    return this;
  }

  public Posreceiptrow addChequesItem(Posreceiptcheque chequesItem) {
    this.cheques.add(chequesItem);
    return this;
  }

   /**
   * Šeky; kolekce BO Tržba - šek [nepersistentní položka]
   * @return cheques
  **/
  @ApiModelProperty(example = "null", value = "Šeky; kolekce BO Tržba - šek [nepersistentní položka]")
  public List<Posreceiptcheque> getCheques() {
    return cheques;
  }

  public void setCheques(List<Posreceiptcheque> cheques) {
    this.cheques = cheques;
  }

  public Posreceiptrow days(List<Posreceiptday> days) {
    this.days = days;
    return this;
  }

  public Posreceiptrow addDaysItem(Posreceiptday daysItem) {
    this.days.add(daysItem);
    return this;
  }

   /**
   * Datumy; kolekce BO Tržba - den [nepersistentní položka]
   * @return days
  **/
  @ApiModelProperty(example = "null", value = "Datumy; kolekce BO Tržba - den [nepersistentní položka]")
  public List<Posreceiptday> getDays() {
    return days;
  }

  public void setDays(List<Posreceiptday> days) {
    this.days = days;
  }

  public Posreceiptrow amountGived(Double amountGived) {
    this.amountGived = amountGived;
    return this;
  }

   /**
   * Odvedeno [persistentní položka]
   * @return amountGived
  **/
  @ApiModelProperty(example = "null", value = "Odvedeno [persistentní položka]")
  public Double getAmountGived() {
    return amountGived;
  }

  public void setAmountGived(Double amountGived) {
    this.amountGived = amountGived;
  }

  public Posreceiptrow actualAmount(Double actualAmount) {
    this.actualAmount = actualAmount;
    return this;
  }

   /**
   * Stav
   * @return actualAmount
  **/
  @ApiModelProperty(example = "null", value = "Stav")
  public Double getActualAmount() {
    return actualAmount;
  }

  public void setActualAmount(Double actualAmount) {
    this.actualAmount = actualAmount;
  }

  public Posreceiptrow remainAmount(Double remainAmount) {
    this.remainAmount = remainAmount;
    return this;
  }

   /**
   * Zbývá
   * @return remainAmount
  **/
  @ApiModelProperty(example = "null", value = "Zbývá")
  public Double getRemainAmount() {
    return remainAmount;
  }

  public void setRemainAmount(Double remainAmount) {
    this.remainAmount = remainAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Posreceiptrow posreceiptrow = (Posreceiptrow) o;
    return Objects.equals(this.displayName, posreceiptrow.displayName) &&
        Objects.equals(this.ID, posreceiptrow.ID) &&
        Objects.equals(this.classID, posreceiptrow.classID) &&
        Objects.equals(this.objVersion, posreceiptrow.objVersion) &&
        Objects.equals(this.parentID, posreceiptrow.parentID) &&
        Objects.equals(this.currencyID, posreceiptrow.currencyID) &&
        Objects.equals(this.paymentTypeID, posreceiptrow.paymentTypeID) &&
        Objects.equals(this.initiativeAmount, posreceiptrow.initiativeAmount) &&
        Objects.equals(this.amountTenancy, posreceiptrow.amountTenancy) &&
        Objects.equals(this.issuedInvoice, posreceiptrow.issuedInvoice) &&
        Objects.equals(this.issuedDInvoice, posreceiptrow.issuedDInvoice) &&
        Objects.equals(this.amountDeposit, posreceiptrow.amountDeposit) &&
        Objects.equals(this.amountCollection, posreceiptrow.amountCollection) &&
        Objects.equals(this.issuedAdvance, posreceiptrow.issuedAdvance) &&
        Objects.equals(this.finalAmount, posreceiptrow.finalAmount) &&
        Objects.equals(this.realAmount, posreceiptrow.realAmount) &&
        Objects.equals(this.amountDifference, posreceiptrow.amountDifference) &&
        Objects.equals(this.amountLeft, posreceiptrow.amountLeft) &&
        Objects.equals(this.cheques, posreceiptrow.cheques) &&
        Objects.equals(this.days, posreceiptrow.days) &&
        Objects.equals(this.amountGived, posreceiptrow.amountGived) &&
        Objects.equals(this.actualAmount, posreceiptrow.actualAmount) &&
        Objects.equals(this.remainAmount, posreceiptrow.remainAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, currencyID, paymentTypeID, initiativeAmount, amountTenancy, issuedInvoice, issuedDInvoice, amountDeposit, amountCollection, issuedAdvance, finalAmount, realAmount, amountDifference, amountLeft, cheques, days, amountGived, actualAmount, remainAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Posreceiptrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    paymentTypeID: ").append(toIndentedString(paymentTypeID)).append("\n");
    sb.append("    initiativeAmount: ").append(toIndentedString(initiativeAmount)).append("\n");
    sb.append("    amountTenancy: ").append(toIndentedString(amountTenancy)).append("\n");
    sb.append("    issuedInvoice: ").append(toIndentedString(issuedInvoice)).append("\n");
    sb.append("    issuedDInvoice: ").append(toIndentedString(issuedDInvoice)).append("\n");
    sb.append("    amountDeposit: ").append(toIndentedString(amountDeposit)).append("\n");
    sb.append("    amountCollection: ").append(toIndentedString(amountCollection)).append("\n");
    sb.append("    issuedAdvance: ").append(toIndentedString(issuedAdvance)).append("\n");
    sb.append("    finalAmount: ").append(toIndentedString(finalAmount)).append("\n");
    sb.append("    realAmount: ").append(toIndentedString(realAmount)).append("\n");
    sb.append("    amountDifference: ").append(toIndentedString(amountDifference)).append("\n");
    sb.append("    amountLeft: ").append(toIndentedString(amountLeft)).append("\n");
    sb.append("    cheques: ").append(toIndentedString(cheques)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("    amountGived: ").append(toIndentedString(amountGived)).append("\n");
    sb.append("    actualAmount: ").append(toIndentedString(actualAmount)).append("\n");
    sb.append("    remainAmount: ").append(toIndentedString(remainAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

