/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Demandsheet
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Demandsheet   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Rows")
  private List<Demandsheetrow> rows = new ArrayList<Demandsheetrow>();

  @SerializedName("DocQueue_ID")
  private String docQueueID = null;

  @SerializedName("Period_ID")
  private String periodID = null;

  @SerializedName("OrdNumber")
  private Integer ordNumber = null;

  @SerializedName("DocDate$DATE")
  private DateTime docDateDATE = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("NewRelatedType")
  private Integer newRelatedType = null;

  @SerializedName("NewRelatedDocument_ID")
  private String newRelatedDocumentID = null;

  @SerializedName("RequestedClosingDate$DATE")
  private DateTime requestedClosingDateDATE = null;

  @SerializedName("RealClosingDate$DATE")
  private DateTime realClosingDateDATE = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("DemandingDocTxt")
  private String demandingDocTxt = null;

  @SerializedName("Closed")
  private Boolean closed = null;

  @SerializedName("Address_ID")
  private String addressID = null;

  @SerializedName("PricePrecision")
  private Integer pricePrecision = null;

  @SerializedName("AutoAddSuppliers")
  private Integer autoAddSuppliers = null;

  @SerializedName("AutoAddOnlyDoDemand")
  private Boolean autoAddOnlyDoDemand = null;

  @SerializedName("CloneDemandAnswers")
  private Boolean cloneDemandAnswers = null;

   /**
   * Číslo dok.
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Číslo dok.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Demandsheet rows(List<Demandsheetrow> rows) {
    this.rows = rows;
    return this;
  }

  public Demandsheet addRowsItem(Demandsheetrow rowsItem) {
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Řádky; kolekce BO Poptávkový list - řádek [nepersistentní položka]
   * @return rows
  **/
  @ApiModelProperty(example = "null", value = "Řádky; kolekce BO Poptávkový list - řádek [nepersistentní položka]")
  public List<Demandsheetrow> getRows() {
    return rows;
  }

  public void setRows(List<Demandsheetrow> rows) {
    this.rows = rows;
  }

  public Demandsheet docQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
    return this;
  }

   /**
   * Zdrojová řada; ID objektu Řada dokladů [persistentní položka]
   * @return docQueueID
  **/
  @ApiModelProperty(example = "null", value = "Zdrojová řada; ID objektu Řada dokladů [persistentní položka]")
  public String getDocQueueID() {
    return docQueueID;
  }

  public void setDocQueueID(String docQueueID) {
    this.docQueueID = docQueueID;
  }

  public Demandsheet periodID(String periodID) {
    this.periodID = periodID;
    return this;
  }

   /**
   * Období; ID objektu Období [persistentní položka]
   * @return periodID
  **/
  @ApiModelProperty(example = "null", value = "Období; ID objektu Období [persistentní položka]")
  public String getPeriodID() {
    return periodID;
  }

  public void setPeriodID(String periodID) {
    this.periodID = periodID;
  }

  public Demandsheet ordNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
    return this;
  }

   /**
   * Pořadové číslo [persistentní položka]
   * @return ordNumber
  **/
  @ApiModelProperty(example = "null", value = "Pořadové číslo [persistentní položka]")
  public Integer getOrdNumber() {
    return ordNumber;
  }

  public void setOrdNumber(Integer ordNumber) {
    this.ordNumber = ordNumber;
  }

  public Demandsheet docDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
    return this;
  }

   /**
   * Datum dok. [persistentní položka]
   * @return docDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum dok. [persistentní položka]")
  public DateTime getDocDateDATE() {
    return docDateDATE;
  }

  public void setDocDateDATE(DateTime docDateDATE) {
    this.docDateDATE = docDateDATE;
  }

  public Demandsheet createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Demandsheet correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Demandsheet newRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
    return this;
  }

   /**
   * Typ relace
   * @return newRelatedType
  **/
  @ApiModelProperty(example = "null", value = "Typ relace")
  public Integer getNewRelatedType() {
    return newRelatedType;
  }

  public void setNewRelatedType(Integer newRelatedType) {
    this.newRelatedType = newRelatedType;
  }

  public Demandsheet newRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
    return this;
  }

   /**
   * ID dokladu pro připojení
   * @return newRelatedDocumentID
  **/
  @ApiModelProperty(example = "null", value = "ID dokladu pro připojení")
  public String getNewRelatedDocumentID() {
    return newRelatedDocumentID;
  }

  public void setNewRelatedDocumentID(String newRelatedDocumentID) {
    this.newRelatedDocumentID = newRelatedDocumentID;
  }

  public Demandsheet requestedClosingDateDATE(DateTime requestedClosingDateDATE) {
    this.requestedClosingDateDATE = requestedClosingDateDATE;
    return this;
  }

   /**
   * Požadovaný termín uzavření [persistentní položka]
   * @return requestedClosingDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Požadovaný termín uzavření [persistentní položka]")
  public DateTime getRequestedClosingDateDATE() {
    return requestedClosingDateDATE;
  }

  public void setRequestedClosingDateDATE(DateTime requestedClosingDateDATE) {
    this.requestedClosingDateDATE = requestedClosingDateDATE;
  }

  public Demandsheet realClosingDateDATE(DateTime realClosingDateDATE) {
    this.realClosingDateDATE = realClosingDateDATE;
    return this;
  }

   /**
   * Skutečný termín uzavření [persistentní položka]
   * @return realClosingDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Skutečný termín uzavření [persistentní položka]")
  public DateTime getRealClosingDateDATE() {
    return realClosingDateDATE;
  }

  public void setRealClosingDateDATE(DateTime realClosingDateDATE) {
    this.realClosingDateDATE = realClosingDateDATE;
  }

  public Demandsheet note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Demandsheet demandingDocTxt(String demandingDocTxt) {
    this.demandingDocTxt = demandingDocTxt;
    return this;
  }

   /**
   * Zdrojový doklad
   * @return demandingDocTxt
  **/
  @ApiModelProperty(example = "null", value = "Zdrojový doklad")
  public String getDemandingDocTxt() {
    return demandingDocTxt;
  }

  public void setDemandingDocTxt(String demandingDocTxt) {
    this.demandingDocTxt = demandingDocTxt;
  }

  public Demandsheet closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

   /**
   * Příznak uzavření [persistentní položka]
   * @return closed
  **/
  @ApiModelProperty(example = "null", value = "Příznak uzavření [persistentní položka]")
  public Boolean getClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }

  public Demandsheet addressID(String addressID) {
    this.addressID = addressID;
    return this;
  }

   /**
   * Vlastní adresa; ID objektu Adresa [persistentní položka]
   * @return addressID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní adresa; ID objektu Adresa [persistentní položka]")
  public String getAddressID() {
    return addressID;
  }

  public void setAddressID(String addressID) {
    this.addressID = addressID;
  }

  public Demandsheet pricePrecision(Integer pricePrecision) {
    this.pricePrecision = pricePrecision;
    return this;
  }

   /**
   * Zobrazení desetinných míst pro zadávací částky [persistentní položka]
   * @return pricePrecision
  **/
  @ApiModelProperty(example = "null", value = "Zobrazení desetinných míst pro zadávací částky [persistentní položka]")
  public Integer getPricePrecision() {
    return pricePrecision;
  }

  public void setPricePrecision(Integer pricePrecision) {
    this.pricePrecision = pricePrecision;
  }

  public Demandsheet autoAddSuppliers(Integer autoAddSuppliers) {
    this.autoAddSuppliers = autoAddSuppliers;
    return this;
  }

   /**
   * Doplňovat oslovené dodavatele [persistentní položka]
   * @return autoAddSuppliers
  **/
  @ApiModelProperty(example = "null", value = "Doplňovat oslovené dodavatele [persistentní položka]")
  public Integer getAutoAddSuppliers() {
    return autoAddSuppliers;
  }

  public void setAutoAddSuppliers(Integer autoAddSuppliers) {
    this.autoAddSuppliers = autoAddSuppliers;
  }

  public Demandsheet autoAddOnlyDoDemand(Boolean autoAddOnlyDoDemand) {
    this.autoAddOnlyDoDemand = autoAddOnlyDoDemand;
    return this;
  }

   /**
   * Omezení automatického plnění oslovených dodavatelů. [persistentní položka]
   * @return autoAddOnlyDoDemand
  **/
  @ApiModelProperty(example = "null", value = "Omezení automatického plnění oslovených dodavatelů. [persistentní položka]")
  public Boolean getAutoAddOnlyDoDemand() {
    return autoAddOnlyDoDemand;
  }

  public void setAutoAddOnlyDoDemand(Boolean autoAddOnlyDoDemand) {
    this.autoAddOnlyDoDemand = autoAddOnlyDoDemand;
  }

  public Demandsheet cloneDemandAnswers(Boolean cloneDemandAnswers) {
    this.cloneDemandAnswers = cloneDemandAnswers;
    return this;
  }

   /**
   * Zkopírovat i oslovené dodavatele
   * @return cloneDemandAnswers
  **/
  @ApiModelProperty(example = "null", value = "Zkopírovat i oslovené dodavatele")
  public Boolean getCloneDemandAnswers() {
    return cloneDemandAnswers;
  }

  public void setCloneDemandAnswers(Boolean cloneDemandAnswers) {
    this.cloneDemandAnswers = cloneDemandAnswers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Demandsheet demandsheet = (Demandsheet) o;
    return Objects.equals(this.displayName, demandsheet.displayName) &&
        Objects.equals(this.ID, demandsheet.ID) &&
        Objects.equals(this.classID, demandsheet.classID) &&
        Objects.equals(this.objVersion, demandsheet.objVersion) &&
        Objects.equals(this.rows, demandsheet.rows) &&
        Objects.equals(this.docQueueID, demandsheet.docQueueID) &&
        Objects.equals(this.periodID, demandsheet.periodID) &&
        Objects.equals(this.ordNumber, demandsheet.ordNumber) &&
        Objects.equals(this.docDateDATE, demandsheet.docDateDATE) &&
        Objects.equals(this.createdByID, demandsheet.createdByID) &&
        Objects.equals(this.correctedByID, demandsheet.correctedByID) &&
        Objects.equals(this.newRelatedType, demandsheet.newRelatedType) &&
        Objects.equals(this.newRelatedDocumentID, demandsheet.newRelatedDocumentID) &&
        Objects.equals(this.requestedClosingDateDATE, demandsheet.requestedClosingDateDATE) &&
        Objects.equals(this.realClosingDateDATE, demandsheet.realClosingDateDATE) &&
        Objects.equals(this.note, demandsheet.note) &&
        Objects.equals(this.demandingDocTxt, demandsheet.demandingDocTxt) &&
        Objects.equals(this.closed, demandsheet.closed) &&
        Objects.equals(this.addressID, demandsheet.addressID) &&
        Objects.equals(this.pricePrecision, demandsheet.pricePrecision) &&
        Objects.equals(this.autoAddSuppliers, demandsheet.autoAddSuppliers) &&
        Objects.equals(this.autoAddOnlyDoDemand, demandsheet.autoAddOnlyDoDemand) &&
        Objects.equals(this.cloneDemandAnswers, demandsheet.cloneDemandAnswers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, rows, docQueueID, periodID, ordNumber, docDateDATE, createdByID, correctedByID, newRelatedType, newRelatedDocumentID, requestedClosingDateDATE, realClosingDateDATE, note, demandingDocTxt, closed, addressID, pricePrecision, autoAddSuppliers, autoAddOnlyDoDemand, cloneDemandAnswers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Demandsheet {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    docQueueID: ").append(toIndentedString(docQueueID)).append("\n");
    sb.append("    periodID: ").append(toIndentedString(periodID)).append("\n");
    sb.append("    ordNumber: ").append(toIndentedString(ordNumber)).append("\n");
    sb.append("    docDateDATE: ").append(toIndentedString(docDateDATE)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    newRelatedType: ").append(toIndentedString(newRelatedType)).append("\n");
    sb.append("    newRelatedDocumentID: ").append(toIndentedString(newRelatedDocumentID)).append("\n");
    sb.append("    requestedClosingDateDATE: ").append(toIndentedString(requestedClosingDateDATE)).append("\n");
    sb.append("    realClosingDateDATE: ").append(toIndentedString(realClosingDateDATE)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    demandingDocTxt: ").append(toIndentedString(demandingDocTxt)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    addressID: ").append(toIndentedString(addressID)).append("\n");
    sb.append("    pricePrecision: ").append(toIndentedString(pricePrecision)).append("\n");
    sb.append("    autoAddSuppliers: ").append(toIndentedString(autoAddSuppliers)).append("\n");
    sb.append("    autoAddOnlyDoDemand: ").append(toIndentedString(autoAddOnlyDoDemand)).append("\n");
    sb.append("    cloneDemandAnswers: ").append(toIndentedString(cloneDemandAnswers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

