/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Calcexpression
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Calcexpression   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("FieldCode")
  private Integer fieldCode = null;

  @SerializedName("TypeOfSum")
  private Integer typeOfSum = null;

  @SerializedName("Expression")
  private String expression = null;

  @SerializedName("Condition")
  private String condition = null;

  @SerializedName("Rounding")
  private Integer rounding = null;

  @SerializedName("StdActionCode")
  private Integer stdActionCode = null;

  @SerializedName("StdActionExecute")
  private Integer stdActionExecute = null;

  @SerializedName("CheckExpression")
  private String checkExpression = null;

  @SerializedName("ErrorSeverity")
  private Integer errorSeverity = null;

  @SerializedName("ValidFrom$DATE")
  private DateTime validFromDATE = null;

  @SerializedName("UserExpression")
  private String userExpression = null;

  @SerializedName("UserCondition")
  private String userCondition = null;

  @SerializedName("UserExplanation")
  private String userExplanation = null;

  @SerializedName("UserCheckExpression")
  private String userCheckExpression = null;

  @SerializedName("SupressExpression")
  private Integer supressExpression = null;

  @SerializedName("FieldName")
  private String fieldName = null;

  @SerializedName("FieldLabel")
  private String fieldLabel = null;

  @SerializedName("TypeOfSumText")
  private String typeOfSumText = null;

  @SerializedName("StdActionExecuteText")
  private String stdActionExecuteText = null;

  @SerializedName("ErrorSeverityText")
  private String errorSeverityText = null;

  @SerializedName("SupressExpressionText")
  private String supressExpressionText = null;

  @SerializedName("StdActionName")
  private String stdActionName = null;

  @SerializedName("RoundingText")
  private String roundingText = null;

  @SerializedName("ErrorMessage")
  private String errorMessage = null;

  @SerializedName("StdActionParams")
  private String stdActionParams = null;

  @SerializedName("System")
  private Boolean system = null;

  @SerializedName("Explanation")
  private String explanation = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Výpočtové schéma [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Výpočtové schéma [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Calcexpression fieldCode(Integer fieldCode) {
    this.fieldCode = fieldCode;
    return this;
  }

   /**
   * Kód [persistentní položka]
   * @return fieldCode
  **/
  @ApiModelProperty(example = "null", value = "Kód [persistentní položka]")
  public Integer getFieldCode() {
    return fieldCode;
  }

  public void setFieldCode(Integer fieldCode) {
    this.fieldCode = fieldCode;
  }

  public Calcexpression typeOfSum(Integer typeOfSum) {
    this.typeOfSum = typeOfSum;
    return this;
  }

   /**
   * Součet [persistentní položka]
   * @return typeOfSum
  **/
  @ApiModelProperty(example = "null", value = "Součet [persistentní položka]")
  public Integer getTypeOfSum() {
    return typeOfSum;
  }

  public void setTypeOfSum(Integer typeOfSum) {
    this.typeOfSum = typeOfSum;
  }

  public Calcexpression expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Výraz [persistentní položka]
   * @return expression
  **/
  @ApiModelProperty(example = "null", value = "Výraz [persistentní položka]")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public Calcexpression condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Podmínka [persistentní položka]
   * @return condition
  **/
  @ApiModelProperty(example = "null", value = "Podmínka [persistentní položka]")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public Calcexpression rounding(Integer rounding) {
    this.rounding = rounding;
    return this;
  }

   /**
   * Zaokrouhlení [persistentní položka]
   * @return rounding
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlení [persistentní položka]")
  public Integer getRounding() {
    return rounding;
  }

  public void setRounding(Integer rounding) {
    this.rounding = rounding;
  }

  public Calcexpression stdActionCode(Integer stdActionCode) {
    this.stdActionCode = stdActionCode;
    return this;
  }

   /**
   * Std. akce [persistentní položka]
   * @return stdActionCode
  **/
  @ApiModelProperty(example = "null", value = "Std. akce [persistentní položka]")
  public Integer getStdActionCode() {
    return stdActionCode;
  }

  public void setStdActionCode(Integer stdActionCode) {
    this.stdActionCode = stdActionCode;
  }

  public Calcexpression stdActionExecute(Integer stdActionExecute) {
    this.stdActionExecute = stdActionExecute;
    return this;
  }

   /**
   * Kde provést [persistentní položka]
   * @return stdActionExecute
  **/
  @ApiModelProperty(example = "null", value = "Kde provést [persistentní položka]")
  public Integer getStdActionExecute() {
    return stdActionExecute;
  }

  public void setStdActionExecute(Integer stdActionExecute) {
    this.stdActionExecute = stdActionExecute;
  }

  public Calcexpression checkExpression(String checkExpression) {
    this.checkExpression = checkExpression;
    return this;
  }

   /**
   * Kontrola [persistentní položka]
   * @return checkExpression
  **/
  @ApiModelProperty(example = "null", value = "Kontrola [persistentní položka]")
  public String getCheckExpression() {
    return checkExpression;
  }

  public void setCheckExpression(String checkExpression) {
    this.checkExpression = checkExpression;
  }

  public Calcexpression errorSeverity(Integer errorSeverity) {
    this.errorSeverity = errorSeverity;
    return this;
  }

   /**
   * Typ chyby [persistentní položka]
   * @return errorSeverity
  **/
  @ApiModelProperty(example = "null", value = "Typ chyby [persistentní položka]")
  public Integer getErrorSeverity() {
    return errorSeverity;
  }

  public void setErrorSeverity(Integer errorSeverity) {
    this.errorSeverity = errorSeverity;
  }

  public Calcexpression validFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
    return this;
  }

   /**
   * Platí od [persistentní položka]
   * @return validFromDATE
  **/
  @ApiModelProperty(example = "null", value = "Platí od [persistentní položka]")
  public DateTime getValidFromDATE() {
    return validFromDATE;
  }

  public void setValidFromDATE(DateTime validFromDATE) {
    this.validFromDATE = validFromDATE;
  }

  public Calcexpression userExpression(String userExpression) {
    this.userExpression = userExpression;
    return this;
  }

   /**
   * Uživ. výraz
   * @return userExpression
  **/
  @ApiModelProperty(example = "null", value = "Uživ. výraz")
  public String getUserExpression() {
    return userExpression;
  }

  public void setUserExpression(String userExpression) {
    this.userExpression = userExpression;
  }

  public Calcexpression userCondition(String userCondition) {
    this.userCondition = userCondition;
    return this;
  }

   /**
   * Uživ. podmínka
   * @return userCondition
  **/
  @ApiModelProperty(example = "null", value = "Uživ. podmínka")
  public String getUserCondition() {
    return userCondition;
  }

  public void setUserCondition(String userCondition) {
    this.userCondition = userCondition;
  }

  public Calcexpression userExplanation(String userExplanation) {
    this.userExplanation = userExplanation;
    return this;
  }

   /**
   * Vysvětlení uživ. výrazu
   * @return userExplanation
  **/
  @ApiModelProperty(example = "null", value = "Vysvětlení uživ. výrazu")
  public String getUserExplanation() {
    return userExplanation;
  }

  public void setUserExplanation(String userExplanation) {
    this.userExplanation = userExplanation;
  }

  public Calcexpression userCheckExpression(String userCheckExpression) {
    this.userCheckExpression = userCheckExpression;
    return this;
  }

   /**
   * Uživ. kontrola
   * @return userCheckExpression
  **/
  @ApiModelProperty(example = "null", value = "Uživ. kontrola")
  public String getUserCheckExpression() {
    return userCheckExpression;
  }

  public void setUserCheckExpression(String userCheckExpression) {
    this.userCheckExpression = userCheckExpression;
  }

  public Calcexpression supressExpression(Integer supressExpression) {
    this.supressExpression = supressExpression;
    return this;
  }

   /**
   * Použít výraz
   * @return supressExpression
  **/
  @ApiModelProperty(example = "null", value = "Použít výraz")
  public Integer getSupressExpression() {
    return supressExpression;
  }

  public void setSupressExpression(Integer supressExpression) {
    this.supressExpression = supressExpression;
  }

  public Calcexpression fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Název položky
   * @return fieldName
  **/
  @ApiModelProperty(example = "null", value = "Název položky")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public Calcexpression fieldLabel(String fieldLabel) {
    this.fieldLabel = fieldLabel;
    return this;
  }

   /**
   * Popis položky
   * @return fieldLabel
  **/
  @ApiModelProperty(example = "null", value = "Popis položky")
  public String getFieldLabel() {
    return fieldLabel;
  }

  public void setFieldLabel(String fieldLabel) {
    this.fieldLabel = fieldLabel;
  }

  public Calcexpression typeOfSumText(String typeOfSumText) {
    this.typeOfSumText = typeOfSumText;
    return this;
  }

   /**
   * Součet
   * @return typeOfSumText
  **/
  @ApiModelProperty(example = "null", value = "Součet")
  public String getTypeOfSumText() {
    return typeOfSumText;
  }

  public void setTypeOfSumText(String typeOfSumText) {
    this.typeOfSumText = typeOfSumText;
  }

  public Calcexpression stdActionExecuteText(String stdActionExecuteText) {
    this.stdActionExecuteText = stdActionExecuteText;
    return this;
  }

   /**
   * Kde provést
   * @return stdActionExecuteText
  **/
  @ApiModelProperty(example = "null", value = "Kde provést")
  public String getStdActionExecuteText() {
    return stdActionExecuteText;
  }

  public void setStdActionExecuteText(String stdActionExecuteText) {
    this.stdActionExecuteText = stdActionExecuteText;
  }

  public Calcexpression errorSeverityText(String errorSeverityText) {
    this.errorSeverityText = errorSeverityText;
    return this;
  }

   /**
   * Typ chyby
   * @return errorSeverityText
  **/
  @ApiModelProperty(example = "null", value = "Typ chyby")
  public String getErrorSeverityText() {
    return errorSeverityText;
  }

  public void setErrorSeverityText(String errorSeverityText) {
    this.errorSeverityText = errorSeverityText;
  }

  public Calcexpression supressExpressionText(String supressExpressionText) {
    this.supressExpressionText = supressExpressionText;
    return this;
  }

   /**
   * Použít výraz
   * @return supressExpressionText
  **/
  @ApiModelProperty(example = "null", value = "Použít výraz")
  public String getSupressExpressionText() {
    return supressExpressionText;
  }

  public void setSupressExpressionText(String supressExpressionText) {
    this.supressExpressionText = supressExpressionText;
  }

  public Calcexpression stdActionName(String stdActionName) {
    this.stdActionName = stdActionName;
    return this;
  }

   /**
   * Std. akce
   * @return stdActionName
  **/
  @ApiModelProperty(example = "null", value = "Std. akce")
  public String getStdActionName() {
    return stdActionName;
  }

  public void setStdActionName(String stdActionName) {
    this.stdActionName = stdActionName;
  }

  public Calcexpression roundingText(String roundingText) {
    this.roundingText = roundingText;
    return this;
  }

   /**
   * Zaokrouhlení
   * @return roundingText
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlení")
  public String getRoundingText() {
    return roundingText;
  }

  public void setRoundingText(String roundingText) {
    this.roundingText = roundingText;
  }

  public Calcexpression errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Zpráva [persistentní položka]
   * @return errorMessage
  **/
  @ApiModelProperty(example = "null", value = "Zpráva [persistentní položka]")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public Calcexpression stdActionParams(String stdActionParams) {
    this.stdActionParams = stdActionParams;
    return this;
  }

   /**
   * Parametry std. akce [persistentní položka]
   * @return stdActionParams
  **/
  @ApiModelProperty(example = "null", value = "Parametry std. akce [persistentní položka]")
  public String getStdActionParams() {
    return stdActionParams;
  }

  public void setStdActionParams(String stdActionParams) {
    this.stdActionParams = stdActionParams;
  }

  public Calcexpression system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Syst. definice [persistentní položka]
   * @return system
  **/
  @ApiModelProperty(example = "null", value = "Syst. definice [persistentní položka]")
  public Boolean getSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public Calcexpression explanation(String explanation) {
    this.explanation = explanation;
    return this;
  }

   /**
   * Vysvětlení [persistentní položka]
   * @return explanation
  **/
  @ApiModelProperty(example = "null", value = "Vysvětlení [persistentní položka]")
  public String getExplanation() {
    return explanation;
  }

  public void setExplanation(String explanation) {
    this.explanation = explanation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Calcexpression calcexpression = (Calcexpression) o;
    return Objects.equals(this.displayName, calcexpression.displayName) &&
        Objects.equals(this.ID, calcexpression.ID) &&
        Objects.equals(this.classID, calcexpression.classID) &&
        Objects.equals(this.objVersion, calcexpression.objVersion) &&
        Objects.equals(this.parentID, calcexpression.parentID) &&
        Objects.equals(this.fieldCode, calcexpression.fieldCode) &&
        Objects.equals(this.typeOfSum, calcexpression.typeOfSum) &&
        Objects.equals(this.expression, calcexpression.expression) &&
        Objects.equals(this.condition, calcexpression.condition) &&
        Objects.equals(this.rounding, calcexpression.rounding) &&
        Objects.equals(this.stdActionCode, calcexpression.stdActionCode) &&
        Objects.equals(this.stdActionExecute, calcexpression.stdActionExecute) &&
        Objects.equals(this.checkExpression, calcexpression.checkExpression) &&
        Objects.equals(this.errorSeverity, calcexpression.errorSeverity) &&
        Objects.equals(this.validFromDATE, calcexpression.validFromDATE) &&
        Objects.equals(this.userExpression, calcexpression.userExpression) &&
        Objects.equals(this.userCondition, calcexpression.userCondition) &&
        Objects.equals(this.userExplanation, calcexpression.userExplanation) &&
        Objects.equals(this.userCheckExpression, calcexpression.userCheckExpression) &&
        Objects.equals(this.supressExpression, calcexpression.supressExpression) &&
        Objects.equals(this.fieldName, calcexpression.fieldName) &&
        Objects.equals(this.fieldLabel, calcexpression.fieldLabel) &&
        Objects.equals(this.typeOfSumText, calcexpression.typeOfSumText) &&
        Objects.equals(this.stdActionExecuteText, calcexpression.stdActionExecuteText) &&
        Objects.equals(this.errorSeverityText, calcexpression.errorSeverityText) &&
        Objects.equals(this.supressExpressionText, calcexpression.supressExpressionText) &&
        Objects.equals(this.stdActionName, calcexpression.stdActionName) &&
        Objects.equals(this.roundingText, calcexpression.roundingText) &&
        Objects.equals(this.errorMessage, calcexpression.errorMessage) &&
        Objects.equals(this.stdActionParams, calcexpression.stdActionParams) &&
        Objects.equals(this.system, calcexpression.system) &&
        Objects.equals(this.explanation, calcexpression.explanation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, fieldCode, typeOfSum, expression, condition, rounding, stdActionCode, stdActionExecute, checkExpression, errorSeverity, validFromDATE, userExpression, userCondition, userExplanation, userCheckExpression, supressExpression, fieldName, fieldLabel, typeOfSumText, stdActionExecuteText, errorSeverityText, supressExpressionText, stdActionName, roundingText, errorMessage, stdActionParams, system, explanation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Calcexpression {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    fieldCode: ").append(toIndentedString(fieldCode)).append("\n");
    sb.append("    typeOfSum: ").append(toIndentedString(typeOfSum)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    rounding: ").append(toIndentedString(rounding)).append("\n");
    sb.append("    stdActionCode: ").append(toIndentedString(stdActionCode)).append("\n");
    sb.append("    stdActionExecute: ").append(toIndentedString(stdActionExecute)).append("\n");
    sb.append("    checkExpression: ").append(toIndentedString(checkExpression)).append("\n");
    sb.append("    errorSeverity: ").append(toIndentedString(errorSeverity)).append("\n");
    sb.append("    validFromDATE: ").append(toIndentedString(validFromDATE)).append("\n");
    sb.append("    userExpression: ").append(toIndentedString(userExpression)).append("\n");
    sb.append("    userCondition: ").append(toIndentedString(userCondition)).append("\n");
    sb.append("    userExplanation: ").append(toIndentedString(userExplanation)).append("\n");
    sb.append("    userCheckExpression: ").append(toIndentedString(userCheckExpression)).append("\n");
    sb.append("    supressExpression: ").append(toIndentedString(supressExpression)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    fieldLabel: ").append(toIndentedString(fieldLabel)).append("\n");
    sb.append("    typeOfSumText: ").append(toIndentedString(typeOfSumText)).append("\n");
    sb.append("    stdActionExecuteText: ").append(toIndentedString(stdActionExecuteText)).append("\n");
    sb.append("    errorSeverityText: ").append(toIndentedString(errorSeverityText)).append("\n");
    sb.append("    supressExpressionText: ").append(toIndentedString(supressExpressionText)).append("\n");
    sb.append("    stdActionName: ").append(toIndentedString(stdActionName)).append("\n");
    sb.append("    roundingText: ").append(toIndentedString(roundingText)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    stdActionParams: ").append(toIndentedString(stdActionParams)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    explanation: ").append(toIndentedString(explanation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

