/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Pricelistrounding
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Pricelistrounding   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("PosIndex")
  private Integer posIndex = null;

  @SerializedName("Currency_ID")
  private String currencyID = null;

  @SerializedName("AmountTo")
  private Double amountTo = null;

  @SerializedName("PriceRounding")
  private Integer priceRounding = null;

  @SerializedName("ConstantToAdd")
  private Double constantToAdd = null;

  @SerializedName("RoundingType")
  private Integer roundingType = null;

  @SerializedName("RoundingBase")
  private Double roundingBase = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Ceník [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Ceník [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

  public Pricelistrounding posIndex(Integer posIndex) {
    this.posIndex = posIndex;
    return this;
  }

   /**
   * Pořadí [persistentní položka]
   * @return posIndex
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getPosIndex() {
    return posIndex;
  }

  public void setPosIndex(Integer posIndex) {
    this.posIndex = posIndex;
  }

  public Pricelistrounding currencyID(String currencyID) {
    this.currencyID = currencyID;
    return this;
  }

   /**
   * Měna; ID objektu Měna [persistentní položka]
   * @return currencyID
  **/
  @ApiModelProperty(example = "null", value = "Měna; ID objektu Měna [persistentní položka]")
  public String getCurrencyID() {
    return currencyID;
  }

  public void setCurrencyID(String currencyID) {
    this.currencyID = currencyID;
  }

  public Pricelistrounding amountTo(Double amountTo) {
    this.amountTo = amountTo;
    return this;
  }

   /**
   * Hraniční částka [persistentní položka]
   * @return amountTo
  **/
  @ApiModelProperty(example = "null", value = "Hraniční částka [persistentní položka]")
  public Double getAmountTo() {
    return amountTo;
  }

  public void setAmountTo(Double amountTo) {
    this.amountTo = amountTo;
  }

  public Pricelistrounding priceRounding(Integer priceRounding) {
    this.priceRounding = priceRounding;
    return this;
  }

   /**
   * Zp. zaokrouhlení [persistentní položka]
   * @return priceRounding
  **/
  @ApiModelProperty(example = "null", value = "Zp. zaokrouhlení [persistentní položka]")
  public Integer getPriceRounding() {
    return priceRounding;
  }

  public void setPriceRounding(Integer priceRounding) {
    this.priceRounding = priceRounding;
  }

  public Pricelistrounding constantToAdd(Double constantToAdd) {
    this.constantToAdd = constantToAdd;
    return this;
  }

   /**
   * Konstanta k přičtení [persistentní položka]
   * @return constantToAdd
  **/
  @ApiModelProperty(example = "null", value = "Konstanta k přičtení [persistentní položka]")
  public Double getConstantToAdd() {
    return constantToAdd;
  }

  public void setConstantToAdd(Double constantToAdd) {
    this.constantToAdd = constantToAdd;
  }

  public Pricelistrounding roundingType(Integer roundingType) {
    this.roundingType = roundingType;
    return this;
  }

   /**
   * Typ zaokrouhlení
   * @return roundingType
  **/
  @ApiModelProperty(example = "null", value = "Typ zaokrouhlení")
  public Integer getRoundingType() {
    return roundingType;
  }

  public void setRoundingType(Integer roundingType) {
    this.roundingType = roundingType;
  }

  public Pricelistrounding roundingBase(Double roundingBase) {
    this.roundingBase = roundingBase;
    return this;
  }

   /**
   * Zaokrouhlit na
   * @return roundingBase
  **/
  @ApiModelProperty(example = "null", value = "Zaokrouhlit na")
  public Double getRoundingBase() {
    return roundingBase;
  }

  public void setRoundingBase(Double roundingBase) {
    this.roundingBase = roundingBase;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pricelistrounding pricelistrounding = (Pricelistrounding) o;
    return Objects.equals(this.displayName, pricelistrounding.displayName) &&
        Objects.equals(this.ID, pricelistrounding.ID) &&
        Objects.equals(this.classID, pricelistrounding.classID) &&
        Objects.equals(this.objVersion, pricelistrounding.objVersion) &&
        Objects.equals(this.parentID, pricelistrounding.parentID) &&
        Objects.equals(this.posIndex, pricelistrounding.posIndex) &&
        Objects.equals(this.currencyID, pricelistrounding.currencyID) &&
        Objects.equals(this.amountTo, pricelistrounding.amountTo) &&
        Objects.equals(this.priceRounding, pricelistrounding.priceRounding) &&
        Objects.equals(this.constantToAdd, pricelistrounding.constantToAdd) &&
        Objects.equals(this.roundingType, pricelistrounding.roundingType) &&
        Objects.equals(this.roundingBase, pricelistrounding.roundingBase);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, posIndex, currencyID, amountTo, priceRounding, constantToAdd, roundingType, roundingBase);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pricelistrounding {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    posIndex: ").append(toIndentedString(posIndex)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    amountTo: ").append(toIndentedString(amountTo)).append("\n");
    sb.append("    priceRounding: ").append(toIndentedString(priceRounding)).append("\n");
    sb.append("    constantToAdd: ").append(toIndentedString(constantToAdd)).append("\n");
    sb.append("    roundingType: ").append(toIndentedString(roundingType)).append("\n");
    sb.append("    roundingBase: ").append(toIndentedString(roundingBase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

