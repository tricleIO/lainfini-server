/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Devtimerecord
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Devtimerecord   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("DevDocument_ID")
  private String devDocumentID = null;

  @SerializedName("DevDocumentType")
  private String devDocumentType = null;

  @SerializedName("DateOfRecord$DATE")
  private DateTime dateOfRecordDATE = null;

  @SerializedName("Worker_ID")
  private String workerID = null;

  @SerializedName("TimeOfWork")
  private Double timeOfWork = null;

  @SerializedName("CreatedBy_ID")
  private String createdByID = null;

  @SerializedName("CorrectedBy_ID")
  private String correctedByID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("RemainingTime")
  private Double remainingTime = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

  public Devtimerecord devDocumentID(String devDocumentID) {
    this.devDocumentID = devDocumentID;
    return this;
  }

   /**
   * Projektová dokumentace; ID objektu Dokument [persistentní položka]
   * @return devDocumentID
  **/
  @ApiModelProperty(example = "null", value = "Projektová dokumentace; ID objektu Dokument [persistentní položka]")
  public String getDevDocumentID() {
    return devDocumentID;
  }

  public void setDevDocumentID(String devDocumentID) {
    this.devDocumentID = devDocumentID;
  }

  public Devtimerecord devDocumentType(String devDocumentType) {
    this.devDocumentType = devDocumentType;
    return this;
  }

   /**
   * Typ projektové dokumentace [persistentní položka]
   * @return devDocumentType
  **/
  @ApiModelProperty(example = "null", value = "Typ projektové dokumentace [persistentní položka]")
  public String getDevDocumentType() {
    return devDocumentType;
  }

  public void setDevDocumentType(String devDocumentType) {
    this.devDocumentType = devDocumentType;
  }

  public Devtimerecord dateOfRecordDATE(DateTime dateOfRecordDATE) {
    this.dateOfRecordDATE = dateOfRecordDATE;
    return this;
  }

   /**
   * Ve dni [persistentní položka]
   * @return dateOfRecordDATE
  **/
  @ApiModelProperty(example = "null", value = "Ve dni [persistentní položka]")
  public DateTime getDateOfRecordDATE() {
    return dateOfRecordDATE;
  }

  public void setDateOfRecordDATE(DateTime dateOfRecordDATE) {
    this.dateOfRecordDATE = dateOfRecordDATE;
  }

  public Devtimerecord workerID(String workerID) {
    this.workerID = workerID;
    return this;
  }

   /**
   * Pracovník; ID objektu Uživatel [persistentní položka]
   * @return workerID
  **/
  @ApiModelProperty(example = "null", value = "Pracovník; ID objektu Uživatel [persistentní položka]")
  public String getWorkerID() {
    return workerID;
  }

  public void setWorkerID(String workerID) {
    this.workerID = workerID;
  }

  public Devtimerecord timeOfWork(Double timeOfWork) {
    this.timeOfWork = timeOfWork;
    return this;
  }

   /**
   * Strávený čas [persistentní položka]
   * @return timeOfWork
  **/
  @ApiModelProperty(example = "null", value = "Strávený čas [persistentní položka]")
  public Double getTimeOfWork() {
    return timeOfWork;
  }

  public void setTimeOfWork(Double timeOfWork) {
    this.timeOfWork = timeOfWork;
  }

  public Devtimerecord createdByID(String createdByID) {
    this.createdByID = createdByID;
    return this;
  }

   /**
   * Vytvořil; ID objektu Uživatel [persistentní položka]
   * @return createdByID
  **/
  @ApiModelProperty(example = "null", value = "Vytvořil; ID objektu Uživatel [persistentní položka]")
  public String getCreatedByID() {
    return createdByID;
  }

  public void setCreatedByID(String createdByID) {
    this.createdByID = createdByID;
  }

  public Devtimerecord correctedByID(String correctedByID) {
    this.correctedByID = correctedByID;
    return this;
  }

   /**
   * Opravil; ID objektu Uživatel [persistentní položka]
   * @return correctedByID
  **/
  @ApiModelProperty(example = "null", value = "Opravil; ID objektu Uživatel [persistentní položka]")
  public String getCorrectedByID() {
    return correctedByID;
  }

  public void setCorrectedByID(String correctedByID) {
    this.correctedByID = correctedByID;
  }

  public Devtimerecord description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Poznámka [persistentní položka]
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * Zbývající čas
   * @return remainingTime
  **/
  @ApiModelProperty(example = "null", value = "Zbývající čas")
  public Double getRemainingTime() {
    return remainingTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Devtimerecord devtimerecord = (Devtimerecord) o;
    return Objects.equals(this.displayName, devtimerecord.displayName) &&
        Objects.equals(this.ID, devtimerecord.ID) &&
        Objects.equals(this.classID, devtimerecord.classID) &&
        Objects.equals(this.objVersion, devtimerecord.objVersion) &&
        Objects.equals(this.devDocumentID, devtimerecord.devDocumentID) &&
        Objects.equals(this.devDocumentType, devtimerecord.devDocumentType) &&
        Objects.equals(this.dateOfRecordDATE, devtimerecord.dateOfRecordDATE) &&
        Objects.equals(this.workerID, devtimerecord.workerID) &&
        Objects.equals(this.timeOfWork, devtimerecord.timeOfWork) &&
        Objects.equals(this.createdByID, devtimerecord.createdByID) &&
        Objects.equals(this.correctedByID, devtimerecord.correctedByID) &&
        Objects.equals(this.description, devtimerecord.description) &&
        Objects.equals(this.remainingTime, devtimerecord.remainingTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, devDocumentID, devDocumentType, dateOfRecordDATE, workerID, timeOfWork, createdByID, correctedByID, description, remainingTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Devtimerecord {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    devDocumentID: ").append(toIndentedString(devDocumentID)).append("\n");
    sb.append("    devDocumentType: ").append(toIndentedString(devDocumentType)).append("\n");
    sb.append("    dateOfRecordDATE: ").append(toIndentedString(dateOfRecordDATE)).append("\n");
    sb.append("    workerID: ").append(toIndentedString(workerID)).append("\n");
    sb.append("    timeOfWork: ").append(toIndentedString(timeOfWork)).append("\n");
    sb.append("    createdByID: ").append(toIndentedString(createdByID)).append("\n");
    sb.append("    correctedByID: ").append(toIndentedString(correctedByID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    remainingTime: ").append(toIndentedString(remainingTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

