/**
 * ABRA Gen Web API (spojení testapi)
 * Webové API systému 17.03.03
 *
 * OpenAPI spec version: 17.03.03
 * Contact: abragen@abra.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package application.service.abra.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.util.Objects;


/**
 * Docconfirmationrow
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-26T20:30:15.152+02:00")
public class Docconfirmationrow   {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ClassID")
  private String classID = null;

  @SerializedName("ObjVersion")
  private Integer objVersion = null;

  @SerializedName("Parent_ID")
  private String parentID = null;

  @SerializedName("ConfirmationRound")
  private Integer confirmationRound = null;

  @SerializedName("RequestCreatedDate$DATE")
  private DateTime requestCreatedDateDATE = null;

  @SerializedName("ConfirmatorRole_ID")
  private String confirmatorRoleID = null;

  @SerializedName("ConfirmatorUser_ID")
  private String confirmatorUserID = null;

  @SerializedName("ConfirmatorOrder")
  private Integer confirmatorOrder = null;

  @SerializedName("ConfirmedBy_ID")
  private String confirmedByID = null;

  @SerializedName("ConfirmationState")
  private Integer confirmationState = null;

  @SerializedName("LastStateChangeDate$DATE")
  private DateTime lastStateChangeDateDATE = null;

  @SerializedName("Note")
  private String note = null;

  @SerializedName("Canceled")
  private Boolean canceled = null;

  @SerializedName("CanceledBy_ID")
  private String canceledByID = null;

  @SerializedName("CanceledDate$DATE")
  private DateTime canceledDateDATE = null;

  @SerializedName("ConfirmationStateDesc")
  private String confirmationStateDesc = null;

   /**
   * Název
   * @return displayName
  **/
  @ApiModelProperty(example = "null", value = "Název")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Vlastní ID [persistentní položka]
   * @return ID
  **/
  @ApiModelProperty(example = "null", value = "Vlastní ID [persistentní položka]")
  public String getID() {
    return ID;
  }

   /**
   * ID třídy
   * @return classID
  **/
  @ApiModelProperty(example = "null", value = "ID třídy")
  public String getClassID() {
    return classID;
  }

   /**
   * Verze objektu [persistentní položka]
   * @return objVersion
  **/
  @ApiModelProperty(example = "null", value = "Verze objektu [persistentní položka]")
  public Integer getObjVersion() {
    return objVersion;
  }

   /**
   * Vlastník; ID objektu Schvalování dokladu [persistentní položka]
   * @return parentID
  **/
  @ApiModelProperty(example = "null", value = "Vlastník; ID objektu Schvalování dokladu [persistentní položka]")
  public String getParentID() {
    return parentID;
  }

   /**
   * Kolo schvalování [persistentní položka]
   * @return confirmationRound
  **/
  @ApiModelProperty(example = "null", value = "Kolo schvalování [persistentní položka]")
  public Integer getConfirmationRound() {
    return confirmationRound;
  }

   /**
   * Vytvořeno [persistentní položka]
   * @return requestCreatedDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Vytvořeno [persistentní položka]")
  public DateTime getRequestCreatedDateDATE() {
    return requestCreatedDateDATE;
  }

   /**
   * Role schvalovatele; ID objektu Role [persistentní položka]
   * @return confirmatorRoleID
  **/
  @ApiModelProperty(example = "null", value = "Role schvalovatele; ID objektu Role [persistentní položka]")
  public String getConfirmatorRoleID() {
    return confirmatorRoleID;
  }

   /**
   * Schvalovatel; ID objektu Uživatel [persistentní položka]
   * @return confirmatorUserID
  **/
  @ApiModelProperty(example = "null", value = "Schvalovatel; ID objektu Uživatel [persistentní položka]")
  public String getConfirmatorUserID() {
    return confirmatorUserID;
  }

   /**
   * Pořadí [persistentní položka]
   * @return confirmatorOrder
  **/
  @ApiModelProperty(example = "null", value = "Pořadí [persistentní položka]")
  public Integer getConfirmatorOrder() {
    return confirmatorOrder;
  }

   /**
   * Schválil; ID objektu Uživatel [persistentní položka]
   * @return confirmedByID
  **/
  @ApiModelProperty(example = "null", value = "Schválil; ID objektu Uživatel [persistentní položka]")
  public String getConfirmedByID() {
    return confirmedByID;
  }

   /**
   * Stav schválení [persistentní položka]
   * @return confirmationState
  **/
  @ApiModelProperty(example = "null", value = "Stav schválení [persistentní položka]")
  public Integer getConfirmationState() {
    return confirmationState;
  }

   /**
   * Posl. změna [persistentní položka]
   * @return lastStateChangeDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Posl. změna [persistentní položka]")
  public DateTime getLastStateChangeDateDATE() {
    return lastStateChangeDateDATE;
  }

   /**
   * Poznámka [persistentní položka]
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "Poznámka [persistentní položka]")
  public String getNote() {
    return note;
  }

   /**
   * Storno [persistentní položka]
   * @return canceled
  **/
  @ApiModelProperty(example = "null", value = "Storno [persistentní položka]")
  public Boolean getCanceled() {
    return canceled;
  }

   /**
   * Stornoval; ID objektu Uživatel [persistentní položka]
   * @return canceledByID
  **/
  @ApiModelProperty(example = "null", value = "Stornoval; ID objektu Uživatel [persistentní položka]")
  public String getCanceledByID() {
    return canceledByID;
  }

   /**
   * Datum storna [persistentní položka]
   * @return canceledDateDATE
  **/
  @ApiModelProperty(example = "null", value = "Datum storna [persistentní položka]")
  public DateTime getCanceledDateDATE() {
    return canceledDateDATE;
  }

  public Docconfirmationrow confirmationStateDesc(String confirmationStateDesc) {
    this.confirmationStateDesc = confirmationStateDesc;
    return this;
  }

   /**
   * Popis stavu schválení
   * @return confirmationStateDesc
  **/
  @ApiModelProperty(example = "null", value = "Popis stavu schválení")
  public String getConfirmationStateDesc() {
    return confirmationStateDesc;
  }

  public void setConfirmationStateDesc(String confirmationStateDesc) {
    this.confirmationStateDesc = confirmationStateDesc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Docconfirmationrow docconfirmationrow = (Docconfirmationrow) o;
    return Objects.equals(this.displayName, docconfirmationrow.displayName) &&
        Objects.equals(this.ID, docconfirmationrow.ID) &&
        Objects.equals(this.classID, docconfirmationrow.classID) &&
        Objects.equals(this.objVersion, docconfirmationrow.objVersion) &&
        Objects.equals(this.parentID, docconfirmationrow.parentID) &&
        Objects.equals(this.confirmationRound, docconfirmationrow.confirmationRound) &&
        Objects.equals(this.requestCreatedDateDATE, docconfirmationrow.requestCreatedDateDATE) &&
        Objects.equals(this.confirmatorRoleID, docconfirmationrow.confirmatorRoleID) &&
        Objects.equals(this.confirmatorUserID, docconfirmationrow.confirmatorUserID) &&
        Objects.equals(this.confirmatorOrder, docconfirmationrow.confirmatorOrder) &&
        Objects.equals(this.confirmedByID, docconfirmationrow.confirmedByID) &&
        Objects.equals(this.confirmationState, docconfirmationrow.confirmationState) &&
        Objects.equals(this.lastStateChangeDateDATE, docconfirmationrow.lastStateChangeDateDATE) &&
        Objects.equals(this.note, docconfirmationrow.note) &&
        Objects.equals(this.canceled, docconfirmationrow.canceled) &&
        Objects.equals(this.canceledByID, docconfirmationrow.canceledByID) &&
        Objects.equals(this.canceledDateDATE, docconfirmationrow.canceledDateDATE) &&
        Objects.equals(this.confirmationStateDesc, docconfirmationrow.confirmationStateDesc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, ID, classID, objVersion, parentID, confirmationRound, requestCreatedDateDATE, confirmatorRoleID, confirmatorUserID, confirmatorOrder, confirmedByID, confirmationState, lastStateChangeDateDATE, note, canceled, canceledByID, canceledDateDATE, confirmationStateDesc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Docconfirmationrow {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    objVersion: ").append(toIndentedString(objVersion)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    confirmationRound: ").append(toIndentedString(confirmationRound)).append("\n");
    sb.append("    requestCreatedDateDATE: ").append(toIndentedString(requestCreatedDateDATE)).append("\n");
    sb.append("    confirmatorRoleID: ").append(toIndentedString(confirmatorRoleID)).append("\n");
    sb.append("    confirmatorUserID: ").append(toIndentedString(confirmatorUserID)).append("\n");
    sb.append("    confirmatorOrder: ").append(toIndentedString(confirmatorOrder)).append("\n");
    sb.append("    confirmedByID: ").append(toIndentedString(confirmedByID)).append("\n");
    sb.append("    confirmationState: ").append(toIndentedString(confirmationState)).append("\n");
    sb.append("    lastStateChangeDateDATE: ").append(toIndentedString(lastStateChangeDateDATE)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    canceled: ").append(toIndentedString(canceled)).append("\n");
    sb.append("    canceledByID: ").append(toIndentedString(canceledByID)).append("\n");
    sb.append("    canceledDateDATE: ").append(toIndentedString(canceledDateDATE)).append("\n");
    sb.append("    confirmationStateDesc: ").append(toIndentedString(confirmationStateDesc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

